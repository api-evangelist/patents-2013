---

title: Renewing registrations for a plurality of client applications that are associated with the same host server via an implicit piggybacking scheme
abstract: In an embodiment, a server registers each of the plurality of client applications on the same client device. The server receives a given registration request message from the client device that includes a request for renewing a registration for a first of the plurality of client applications with the server, and the server renews the first client application's registration in response to the given registration request message. The server also determines, in response to the given registration request message, whether to preemptively renew registrations for one or more other client applications from the plurality of client applications. The server selectively renews the registrations for the one or more other client applications based on the determination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09219758&OS=09219758&RS=09219758
owner: QUALCOMM INCORPORATED
number: 09219758
owner_city: San Diego
owner_country: US
publication_date: 20130305
---
Embodiments of the invention relate to renewing registrations for a plurality of client applications that are associated with the same host server via an implicit piggybacking scheme.

Wireless communication systems have developed through various generations including a first generation analog wireless phone service 1G a second generation 2G digital wireless phone service including interim 2.5G and 2.75G networks and a third generation 3G high speed data Internet capable wireless service. There are presently many different types of wireless communication systems in use including Cellular and Personal Communications Service PCS systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System AMPS and digital cellular systems based on Code Division Multiple Access CDMA Frequency Division Multiple Access FDMA Time Division Multiple Access TDMA the Global System for Mobile access GSM variation of TDMA and newer hybrid digital communication systems using both TDMA and CDMA technologies.

It is typical for client devices e.g. mobile devices such as cell phones that use the above noted communication systems or other types of access networks e.g. WiFi etc. to maintain registrations for client applications with one or more host servers. For example a user may be logged into his her Facebook account with a Facebook host server via a Facebook client application on his her cellular phone a user may be logged onto his her email account with an email host server via an email client application on his her cellular phone etc. These client application registrations are typically temporary and require periodic renewals or else the client applications will be deregistered by their respective host servers. It is also possible that two or more client applications maintain active registrations with the same host server. In this case the two or more client applications will typically be required to transmit independent registration renewal requests for extending or renewing the registrations of the respective client applications.

In an embodiment a server registers each of the plurality of client applications on the same client device. The server receives a given registration request message from the client device that includes a request for renewing a registration for a first of the plurality of client applications with the server and the server renews the first client application s registration in response to the given registration request message. The server also determines in response to the given registration request message whether to preemptively renew registrations for one or more other client applications from the plurality of client applications. The server selectively renews the registrations for the one or more other client applications based on the determination.

Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally well known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.

The words exemplary and or example are used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary and or example is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise the term embodiments of the invention does not require that all embodiments of the invention include the discussed feature advantage or mode of operation.

Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both. Additionally these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus the various aspects of the invention may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform the described action.

A client device referred to herein as a user equipment UE may be mobile or stationary and may communicate with a radio access network RAN . As used herein the term UE may be referred to interchangeably as an access terminal or AT a wireless device a subscriber device a subscriber terminal a subscriber station a user terminal or UT a mobile terminal a mobile station and variations thereof. Generally UEs can communicate with a core network via the RAN and through the core network the UEs can be connected with external networks such as the Internet. Of course other mechanisms of connecting to the core network and or the Internet are also possible for the UEs such as over wired access networks WiFi networks e.g. based on IEEE 802.11 etc. and so on. UEs can be embodied by any of a number of types of devices including but not limited to PC cards compact flash devices external or internal modems wireless or wireline phones and so on. A communication link through which UEs can send signals to the RAN is called an uplink channel e.g. a reverse traffic channel a reverse control channel an access channel etc. . A communication link through which the RAN can send signals to UEs is called a downlink or forward link channel e.g. a paging channel a control channel a broadcast channel a forward traffic channel etc. . As used herein the term traffic channel TCH can refer to either an uplink reverse or downlink forward traffic channel.

Referring to UEs 1 . . . N are configured to communicate with an access network e.g. the RAN an access point etc. over a physical communications interface or layer shown in as air interfaces and or a direct wired connection. The air interfaces and can comply with a given cellular communications protocol e.g. CDMA EVDO eHRPD GSM EDGE W CDMA LTE etc. while the air interface can comply with a wireless IP protocol e.g. IEEE 802.11 . The RAN includes a plurality of access points that serve UEs over air interfaces such as the air interfaces and . The access points in the RAN can be referred to as access nodes or ANs access points or APs base stations or BSs Node Bs eNode Bs and so on. These access points can be terrestrial access points or ground stations or satellite access points. The RAN is configured to connect to a core network that can perform a variety of functions including bridging circuit switched CS calls between UEs served by the RAN and other UEs served by the RAN or a different RAN altogether and can also mediate an exchange of packet switched PS data with external networks such as Internet . The Internet includes a number of routing agents and processing agents not shown in for the sake of convenience . In UE N is shown as connecting to the Internet directly i.e. separate from the core network such as over an Ethernet connection of WiFi or 802.11 based network . The Internet can thereby function to bridge packet switched data communications between UE N and UEs 1 . . . N via the core network . Also shown in is the access point that is separate from the RAN . The access point may be connected to the Internet independent of the core network e.g. via an optical communication system such as FiOS a cable modem etc. . The air interface may serve UE 4 or UE 5 over a local wireless connection such as IEEE 802.11 in an example. UE N is shown as a desktop computer with a wired connection to the Internet such as a direct connection to a modem or router which can correspond to the access point itself in an example e.g. for a WiFi router with both wired and wireless connectivity .

Referring to an application server is shown as connected to the Internet the core network or both. The application server can be implemented as a plurality of structurally separate servers or alternately may correspond to a single server. As will be described below in more detail the application server is configured to support one or more communication services e.g. Voice over Internet Protocol VoIP sessions Push to Talk PTT sessions group communication sessions social networking services etc. for UEs that can connect to the application server via the core network and or the Internet and or to provide content e.g. web page downloads to the UEs.

While internal components of UEs such as the UEs A and B can be embodied with different hardware configurations a basic high level UE configuration for internal hardware components is shown as platform in . The platform can receive and execute software applications data and or commands transmitted from the RAN that may ultimately come from the core network the Internet and or other remote servers and networks e.g. application server web URLs etc. . The platform can also independently execute locally stored applications without RAN interaction. The platform can include a transceiver operably coupled to an application specific integrated circuit ASIC or other processor microprocessor logic circuit or other data processing device. The ASIC or other processor executes the application programming interface API layer that interfaces with any resident programs in the memory of the wireless device. The memory can be comprised of read only or random access memory RAM and ROM EEPROM flash cards or any memory common to computer platforms. The platform also can include a local database that can store applications not actively used in memory as well as other data. The local database is typically a flash memory cell but can be any secondary storage device as known in the art such as magnetic media EEPROM optical media tape soft or hard disk or the like.

Accordingly an embodiment of the invention can include a UE e.g. UE A B etc. including the ability to perform the functions described herein. As will be appreciated by those skilled in the art the various logic elements can be embodied in discrete elements software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example ASIC memory API and local database may all be used cooperatively to load store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively the functionality could be incorporated into one discrete component. Therefore the features of the UEs A and B in are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.

The wireless communication between the UEs A and or B and the RAN can be based on different technologies such as CDMA W CDMA time division multiple access TDMA frequency division multiple access FDMA Orthogonal Frequency Division Multiplexing OFDM GSM or other protocols that may be used in a wireless communications network or a data communications network. As discussed in the foregoing and known in the art voice transmission and or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.

Referring to the communication device includes logic configured to receive and or transmit information . In an example if the communication device corresponds to a wireless communications device e.g. UE A or B AP a BS Node B or eNodeB in the RAN etc. the logic configured to receive and or transmit information can include a wireless communications interface e.g. Bluetooth WiFi 2G CDMA W CDMA 3G 4G LTE etc. such as a wireless transceiver and associated hardware e.g. an RF antenna a MODEM a modulator and or demodulator etc. . In another example the logic configured to receive and or transmit information can correspond to a wired communications interface e.g. a serial connection a USB or Firewire connection an Ethernet connection through which the Internet can be accessed etc. . Thus if the communication device corresponds to some type of network based server e.g. the application server etc. the logic configured to receive and or transmit information can correspond to an Ethernet card in an example that connects the network based server to other communication entities via an Ethernet protocol. In a further example the logic configured to receive and or transmit information can include sensory or measurement hardware by which the communication device can monitor its local environment e.g. an accelerometer a temperature sensor a light sensor an antenna for monitoring local RF signals etc. . The logic configured to receive and or transmit information can also include software that when executed permits the associated hardware of the logic configured to receive and or transmit information to perform its reception and or transmission function s . However the logic configured to receive and or transmit information does not correspond to software alone and the logic configured to receive and or transmit information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to process information . In an example the logic configured to process information can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information includes but is not limited to performing determinations establishing connections making selections between different information options performing evaluations related to data interacting with sensors coupled to the communication device to perform measurement operations converting information from one format to another e.g. between different protocols such as .wmv to .avi etc. and so on. For example the processor included in the logic configured to process information can correspond to a general purpose processor a digital signal processor DSP an ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. The logic configured to process information can also include software that when executed permits the associated hardware of the logic configured to process information to perform its processing function s . However the logic configured to process information does not correspond to software alone and the logic configured to process information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to store information . In an example the logic configured to store information can include at least a non transitory memory and associated hardware e.g. a memory controller etc. . For example the non transitory memory included in the logic configured to store information can correspond to RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. The logic configured to store information can also include software that when executed permits the associated hardware of the logic configured to store information to perform its storage function s . However the logic configured to store information does not correspond to software alone and the logic configured to store information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to present information . In an example the logic configured to present information can include at least an output device and associated hardware. For example the output device can include a video output device e.g. a display screen a port that can carry video information such as USB HDMI etc. an audio output device e.g. speakers a port that can carry audio information such as a microphone jack USB HDMI etc. a vibration device and or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to present information can include the display A of UE A or the touchscreen display B of UE B. In a further example the logic configured to present information can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers such as the application server etc. . The logic configured to present information can also include software that when executed permits the associated hardware of the logic configured to present information to perform its presentation function s . However the logic configured to present information does not correspond to software alone and the logic configured to present information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to receive local user input . In an example the logic configured to receive local user input can include at least a user input device and associated hardware. For example the user input device can include buttons a touchscreen display a keyboard a camera an audio input device e.g. a microphone or a port that can carry audio information such as a microphone jack etc. and or any other device by which information can be received from a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to receive local user input can include the keypad A any of the buttons A or B through B the touchscreen display B etc. In a further example the logic configured to receive local user input can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers such as the application server etc. . The logic configured to receive local user input can also include software that when executed permits the associated hardware of the logic configured to receive local user input to perform its input reception function s . However the logic configured to receive local user input does not correspond to software alone and the logic configured to receive local user input relies at least in part upon hardware to achieve its functionality.

Referring to while the configured logics of through are shown as separate or distinct blocks in it will be appreciated that the hardware and or software by which the respective configured logic performs its functionality can overlap in part. For example any software used to facilitate the functionality of the configured logics of through can be stored in the non transitory memory associated with the logic configured to store information such that the configured logics of through each performs their functionality i.e. in this case software execution based in part upon the operation of software stored by the logic configured to store information . Likewise hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example the processor of the logic configured to process information can format data into an appropriate format before being transmitted by the logic configured to receive and or transmit information such that the logic configured to receive and or transmit information performs its functionality i.e. in this case transmission of data based in part upon the operation of hardware i.e. the processor associated with the logic configured to process information .

Generally unless stated otherwise explicitly the phrase logic configured to as used throughout this disclosure is intended to invoke an embodiment that is at least partially implemented with hardware and is not intended to map to software only implementations that are independent of hardware. Also it will be appreciated that the configured logic or logic configured to in the various blocks are not limited to specific logic gates or elements but generally refer to the ability to perform the functionality described herein either via hardware or a combination of hardware and software . Thus the configured logics or logic configured to as illustrated in the various blocks are not necessarily implemented as logic gates or logic elements despite sharing the word logic. Other interactions or cooperation between the logic in the various blocks will become clear to one of ordinary skill in the art from a review of the embodiments described below in more detail.

It is typical for client devices to maintain registrations for client applications with one or more host servers. For example a user may be logged into his her Facebook account with a Facebook host server via a Facebook client application on his her UE a user may be logged onto his her email account with an email host server via an email client application on his her UE etc. These client application registrations are typically temporary and require periodic renewals or else the client applications will be deregistered by their respective host servers. It is also possible that two or more client applications running on the same device maintain active registrations with the same host server. In this case the two or more client applications will typically be required to transmit independent registration renewal requests from the same device for extending or renewing the registrations of the respective client applications.

Referring to App1 transmits a registration message to the application server . In the registration message of is shown as implemented via a Session Initiation Protocol SIP REGISTER message that includes an App1 identifier ID an IP address and port number used by App1 on the client device A a device identifier ID of the client device A. In an example the port number used by App1 may be unique to App1 while the IP address used by App1 can also be shared with other client applications so that the client applications can be distinguished by their port number. The application server can thereby use the IP address in conjunction with App1 s port number to route messages from external devices to App1 on the client device A. Also the App1 ID may be implemented as a globally unique ID that distinguishes App1 from other client applications. Thus any other client device with App1 can use the same App1 ID for App1. Also the device ID can correspond to a globally unique identifier for the client device A that distinguishes client device A from any other client device such as a MAC address. For convenience of explanation the registration messages described throughout this application will refer to SIP REGISTER messages in accordance with SIP but it will be appreciated that other embodiments can be directed to non SIP implementations.

Referring to at the application server acknowledges ACKs the SIP REGISTER message from by sending a 200 OK message to App1 on the client device A based on the IP address of the client device A and App1 s port number from the SIP REGISTER message of . Also in response to the SIP REGISTER message from the application server optionally authenticates App1 s SIP REGISTER message . If the SIP REGISTER message from is properly authenticated at or if authentication is skipped the application server registers App1 by establishing a record for App1 that includes i App1 s ID ii the IP address and port number associated with App1 and iii the device ID associated with the client device A . The application server also starts an expiration timer for the registration of App1 whereby the application server is configured to de register App1 upon expiration of App1 s expiration timer.

The application server sends a message to App1 on the client device A that indicates service is available for App1 and App1 sends an ACK in response to the service available message . At App1 starts a time to live TTL timer that is configured to expire before the expiration timer for App1 that is running at the application server . Expiration of App1 s TTL timer will trigger App1 to transmit another SIP REGISTER message for renewing or extending App1 s registration with the application server by resetting App1 s expiration timer.

At some later point in time App2 transmits a SIP REGISTER message to the application server which includes an App2 ID the IP address and port number used by App2 on the client device A and the device ID of the client device A. As noted above the IP address for App2 can be the same IP address used by App1 while the respective port numbers for App1 and App2 are different.

Referring to at the application server ACKs the SIP REGISTER message from by sending a 200 OK message to App2 on the client device A based on the IP address of the client device A and App2 s port number from the SIP REGISTER message of . Also in response to the SIP REGISTER message from the application server optionally authenticates App2 s SIP REGISTER message . If the SIP REGISTER message from is properly authenticated at or if authentication is skipped the application server registers App2 by establishing a record for App2 that includes i App2 s ID ii the IP address and port number associated with App2 and iii the device ID associated with the client device A . The application server also starts an expiration timer for the registration of App2 whereby the application server is configured to de register App2 upon expiration of App2 s expiration timer.

The application server sends a message to App2 on the client device A that indicates service is available for App2 and App2 sends an ACK in response to the service available message . At App2 starts a TTL timer that is configured to expire before the expiration timer for App2 that is running at the application server . Expiration of App2 s TTL timer will trigger App2 to transmit another SIP REGISTER message for renewing or extending App2 s registration with the application server by resetting App2 s expiration timer.

Referring to the client device A determines that App2 s TTL timer has expired . This triggers App2 to transmit another SIP REGISTER message at that functions to request the application server to extend or renew App2 s registration with the application server . The application server ACKs the SIP REGISTER message from with a 200 OK message and the application server also renews the registration for App2 by resetting or extending App2 s expiration timer . As will be appreciated the operation of pushes back the point in time at which App2 s registration would otherwise expire. The application server notifies App2 that its registration has been renewed by sending a service available message and App2 ACKs the service available message . App2 resets or restarts the App2 TTL timer at such that App2 will send another SIP REGISTER message for renewing App2 s registration with the application server the next time the App2 TTL timer expires and so on.

While different client applications usually register themselves with different host servers e.g. a Facebook client application registers with a Facebook server an email client application registers with an email server etc. it is becoming more common for different client applications to maintain separate registrations with the same host server as shown in . However the conventional approach shown in whereby each client application independently engages in its own registration renewal procedure can be wasteful in terms of resource usage when multiple client applications maintain their registrations with the same host server e.g. the client device is required to acquire a traffic channel and transmit a registration renewal request each time any of its TTL timers expire for any of its client applications even if two or more of the client applications expire in close proximity . Accordingly embodiments of the invention relate to reducing the amount of messaging used to renew registrations for multiple client applications that are registered with the same host server by consolidating or aggregating registration renewal requests for different client applications into a single transmission.

As will be appreciated Table 1 can also include client applications associated with other client devices and Table 1 can include additional client applications and or can be updated to remove App1 or App2 as Table 1 is kept up to date with current application registrations on a device by device basis.

Referring to the application server receives a given registration request message from App1 that includes a request for renewing App1 s registration with the application server . In response to the given registration request message the application server extends or renews registrations for App1 e.g. by resetting its registration expiration timer .

The given registration request message from App1 that is received by the application server at does not explicitly include a separate request for renewing App2 s registration with the application server . However the application server on its own initiative determines whether to preemptively renew registrations for one or more other client applications that are registered to the same client device as App1 . As an example the application server can use the application table e.g. see Table 1 above to identify any client applications other than App1 that are also registered to the same device e.g. John s Phone and if any such client applications are detected the application server determines to preemptively renew the detected client application s . As a further example the application server can use the application table e.g. see Table 1 above to identify any client applications other than App1 that are registered to the same device e.g. John s Phone as App1 and are also due to expire within a threshold period of time e.g. based on their respective expiration timers and if any such client applications are detected the application server determines to preemptively renew the detected client application s . Accordingly each incoming registration renewal request can trigger automatic renewals for all other client applications registered to the same device or each incoming registration renewal request can instead more selectively trigger automatic renewals for each other client application that is registered to the same device and is also nearing expiration.

In yet another example an activity level of the client applications can affect whether the client applications are selected for preemptive renewal. For example if the given registration request message is received for App1 and App2 is registered to the same client device but App2 has not interacted with the server in more than a threshold period of time e.g. a day a week etc. App2 s inactivity may cause the application server to refrain from preemptively renewing its registration in response to App1 s registration renewal request. On the other hand if App2 is being used by the client device A frequently and or recently App2 s high activity level may cause the application server to preemptively renew its registration in response to App1 s registration renewal request.

In yet another example instead of automatically attempting to preemptively renew each other client application associated with the same client device from which a registration renewal request is received a subset of these client applications may be considered for preemptive renewal. For example assume that App2 is configured to permit preemptive registration renewals and that App3 is not configured to permit registration renewals e.g. based on a user preference an application developer preference a carrier or network preference etc. . In this case App1 s registration renewal request will not trigger preemptive renewal for App3 irrespective of other preemptive renewal criteria e.g. whether App3 is nearing its expiration or is used frequently etc. .

As will be appreciated from the examples provided above the preemptive renewal criteria that can be evaluated by the application server at includes but is not limited to i whether one or more other client applications currently have active registrations with the application server in association with the same client device as the client device associated with the given registration request message from ii whether the one or more other client applications are configured to permit preemptive registration renewals based on registration requests associated with a different client application on the client device iii whether the one or more other client applications have interacted with the application server within a first threshold period of time and or iv whether the active registrations for the one or more other client applications are scheduled to expire within a second threshold period of time.

Referring to at the application server selectively renews the registrations for one or more client applications other than App1 based on the determination from . For example the application server may determine to renew registrations for App2 for App2 and App3 for Apps 2 . . . N etc. based on any of the registration renewal criteria discussed above with respect to .

Referring to in conjunction with registering App1 at the application server establishes an application table for the client device A based on the App1 registration . For example under the assumption that App1 is the only actively registered client application associated with the client device A after the application table may be established as shown in Table 2 below at 

Still referring to in conjunction with registering App2 at the application server updates the application table for the client device A based on the App2 registration . At this point under the assumption that App1 and App2 are the only actively registered client application associated with the client device A after the application table may be established as shown in Table 1 above at .

Referring to in response to the SIP REGISTER message from the application server identifies one or more other client applications registered to the client device A based on the application table . In of it is assumed that at least one other client application is registered to the client device A with the application server although in an alternative scenario it is also possible that no other client applications are registered to the device A with the application server . At the application server evaluates one or more preemptive registration renewal criteria with respect to the identified client application s from . Based on the evaluation of the application server determines whether to preemptively renew registrations for any of the identified client application s . As will be appreciated correspond to an example implementation of the determination from .

Referring to if the application server determines not to preemptively renew registrations for any other client applications the process of terminates. Otherwise if the application server determines to preemptively renew registrations for one or more other client applications the process advances to . At it is assumed that the application server determines to preemptively renew App2 s registrations. Accordingly the application server renews the registration for App2 by resetting or extending App2 s expiration timer . The application server also notifies App2 that its registration has been renewed by sending a service available message and App2 ACKs the service available message . App2 resets or restarts the App2 TTL timer at such that App2 will send a SIP REGISTER message for renewing App2 s registration with the application server the next time the App2 TTL timer expires and so on.

While illustrates two independent service available messages being transmitted from the application server to App1 and App2 on the client device A at and in an alternative embodiment one service available message can be piggybacked on the other so that only a single service available message transmission needs to occur to convey to both App1 and App2 that their respective registrations have been renewed. For example the messaging of and can be moved after the decision logic of can be omitted and the service available message that is sent to App1 can be configured to indicate to App1 that App2 s registration has also been renewed e.g. by including an identification of App2 in addition to App1 in the service available message . App1 can then notify App2 using the application to application communicative information. In this scenario additional security and authentication protocols may be implemented for App2 to accept App1 s indication of registration renewal e.g. because App1 may be less trusted by App2 than the application server itself . In yet another alternative embodiment the ACKs transmitted at and can instead be consolidated or piggybacked. For example if App1 notifies App2 of App2 s registration renewal based on a piggybacked service available message and App1 is able to verify that App2 accepts the registration renewal notification for App2 App1 s ACK can function to ACK the service available message notifications for both App1 and App2 e.g. because the application server can be configured to interpret App1 s ACK as an implicit ACK for App2 similar to the SIP REGISTER message at .

Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Further those of skill in the art will appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The methods sequences and or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal e.g. UE . In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

In one or more exemplary embodiments the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

While the foregoing disclosure shows illustrative embodiments of the invention it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions steps and or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore although elements of the invention may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

