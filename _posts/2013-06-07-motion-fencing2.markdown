---

title: Motion fencing
abstract: In some implementations, a mobile device can be configured with virtual motion fences that delineate domains of motion detectable by the mobile device. In some implementations, the mobile device can be configured to invoke an application or function when the mobile device enters or exits a motion domain (by crossing a motion fence). In some implementations, entering or exiting a motion domain can cause components of the mobile device to power on or off (or awaken or sleep) in an incremental manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600049&OS=09600049&RS=09600049
owner: Apple Inc.
number: 09600049
owner_city: Cupertino
owner_country: US
publication_date: 20130607
---
Modern mobile devices often include sensors for detecting motion of the mobile device. For example mobile devices can include accelerometers and or gyroscopes for detecting motion and determining orientation of the mobile device. Some mobile devices can be configured to dynamically adjust functionality features user interfaces and or operations of the mobile device based on detected motion.

In some implementations a mobile device can be configured with virtual motion fences that delineate domains of motion detectable by the mobile device. In some implementations the mobile device can be configured to invoke an application or function when the mobile device has entered or exited a motion domain by crossing a motion fence . In some implementations entering or exiting a motion domain can cause components of the mobile device to power on or off or awaken or sleep in an incremental manner.

Particular implementations provide at least the following advantages Motion fencing provides an easy way to classify motion detected by the mobile device and trigger applications functions alerts and or other operations of the mobile device based on the class. Using motion fences to gradually start stop or wake up components sensors microcontrollers and other processors of the mobile device allows the mobile device to conserve energy while enabling the functionality needed to process motion measurements.

Details of one or more implementations are set forth in the accompanying drawings and the description below. Other features aspects and potential advantages will be apparent from the description and drawings and from the claims.

For mobile devices motion can be a key predictor of a user s desire for interaction. Motion can also be an indicator of activities that are of interest to the user. Motion fences provide a mechanism to anticipate and realize user needs with minimal power impact. In some implementations motion fences establish envelopes around distinct motion domains that are characterized by features of a motion signal or motion measurements. Motion domains as delineated by motion fences can correspond to qualitatively different motion profiles. The motion of the mobile device can cause the mobile device to cross over a motion fence. Crossing a motion fence can cause the mobile device to trigger motion based alerts service wakes invocations of applications and or functions and or a request for additional motion analysis.

In some implementations each motion fence can be used to delineate motion domains. For example in each dashed line can represent a motion fence. The area between each dotted line or outside the dotted lines represents a motion domain. For example motion domain can be a static domain. A mobile device can be in the static domain when the device is motionless or near motionless. Motion domain can be a sparse motion domain. A mobile device can be in the sparse motion domain when the mobile device detects a small motion. The dashed line between motion domain and motion domain is the motion fence between the static domain and the sparse motion domain. Motion fence can be associated with motion criteria that define when the mobile device has crossed from static domain into sparse domain . For example the motion criteria for motion fence can define that any motion above a threshold value e.g. magnitude will cause the mobile device to cross motion fence from the static domain into the sparse domain .

In some implementations motion fence can be associated with motion criteria that define when the mobile device crosses from sparse domain into sustained motion domain . For example the motion criteria for motion fence can define that motion that has been sustained for a period of time can cause the mobile device to cross motion fence from the sparse domain into the sustained motion domain . For example an increase in the magnitude and or frequency of motion for longer than a threshold period of time can cause the mobile device to transition from sparse domain into the sustained domain .

In some implementations motion fence can be associated with motion criteria that define when the mobile device crosses from sustained motion domain into rich motion domain . For example the motion criteria for motion fence can define that motion that exceeds a threshold magnitude and or a threshold frequency for longer than a threshold period of time can cause the mobile device to cross motion fence from the sustained motion domain into the rich motion domain. Thus the sustained motion domain can correspond to a short duration high magnitude motion or a long duration high frequency motion while the rich motion domain can correspond to high magnitude high frequency motion for a long duration.

In some implementations entering or exiting a motion domain or crossing a motion fence can trigger an operation of the mobile device. In some implementations motion fences and motion domains can be used to trigger start up of system services when the device is picked up to minimize user perceived latency. Motion fences can trigger modulation of cellular and WiFi scanning frequencies based on patterns of motion to optimize power versus performance. For example if the device is static not moving the frequency of cellular and WiFi scanning can be reduced to conserve battery power because the cellular and or WiFi environment is unlikely to change. Motion fences can be used to start counting steps as a user begins walking or running Motion fences can be used to provide context e.g. is the user walking driving running biking etc. for map routing or map search results.

In some implementations crossing a particular motion fence in a particular direction can trigger an operation of the mobile device. For example a transition from motion domain to motion domain can trigger a particular operation of the mobile device while a transition from motion domain to motion domain can trigger a different operation of the mobile device even though both transitions crossed the same motion fence . For example transitioning from sparse motion domain to sustained motion domain can indicate that the user has picked up and is looking at the mobile device and that the mobile device should start up system services or frequently used applications on the mobile device. Transitioning from sustained motion domain to sparse motion domain can indicate that the user has placed the mobile device in a pocket or on the user s lap and that the mobile device should shut down or reduce the power to some components of the mobile device.

In some implementations client can send a request to motion fencing system indicating a type of activity that the client is interested in. For example the activity could be that the user has picked up the mobile device. The activity could be that the user is walking driving or running. The activity can be any type of activity that can be identified based on one or more patterns of motion detected by the mobile device.

In some implementations motion fencing system can add a client identifier and the specified activity of interest to a registry . For example motion fencing system can be a system or subsystem of the mobile device. Motion fencing system can maintain a lookup table in registry that maps client identifiers to activities of interest received from clients on the mobile device. The registry can be used to determine which clients are interested in different activities or types of motion observed or measured by the mobile device.

In some implementations motion fencing system can determine a motion domain that corresponds to the activity that the client is interested in. For example if the activity is running the motion fencing system can categorize running as a rich motion activity and map the running activity to the rich motion domain e.g. rich motion domain of . If the requested activity is picked up the motion fencing system can categorize picked up as sustained motion activity and map the running activity to the sustained motion domain e.g. sustained motion domain of . If the requested activity is viewing the motion fencing system can categorize viewing as a transition e.g. crossing a motion fence in a specific direction from the sustained motion domain to the rich motion domain.

In some implementations motion fencing system can measure the motion of the mobile device . For example the mobile device can be configured with one or more motion sensors e.g. accelerometer gyroscope etc. that can measure the motion of the mobile device. The motion sensors can generate motion signals e.g. measurements that can be analyzed to determine for example changes in the magnitude and frequency of the signals generated by the motion sensors. The motion signals can be analyzed over time to determine patterns of motion that correspond to different activities.

In some implementations the motion fencing system can determine a motion domain based on the motion signals . For example motion fencing system can be configured with motion fences that bound motion domains. The motion fences can be defined in terms of thresholds of motion and or motion criteria that separates each motion domain. For example a motion fence that bounds the static motion domain and separates the static motion domain from the sparse motion domain can be defined by any detected motion that exceeds a threshold magnitude and or threshold frequency. The threshold magnitude and or threshold frequency can be very small so that any motion of the device from a stationary position will cross the motion fence. This threshold comparison can be based on raw or unprocessed motion data e.g. unprocessed motion signal . In some implementations the motion fences can be defined in terms of more complex motion data that is derived from a motion signal. For example motion fences can be defined in terms of transformations e.g. Fourier transformations signal filtering etc. performed on motion signals and or patterns of motion observed in motion signals.

In some implementations the motion fences can be defined to create motion domains that cover a variety of different activities that have similar motion characteristics. For example walking and running are different activities that have similar motion signal characteristics and that might fall within the same motion domain e.g. rich motion domain . Thus a single motion domain as delineated or constrained by the motion fences can correspond to many different types of activities.

In some implementations once a motion domain is determined based on the motion signals the motion fencing system can identify an activity that corresponds to the motion signals . For example the motion signal can include patterns of motion that can be correlated to various activities. For example the motion signals can include a pattern of motion that correlates to a user walking with the mobile device. The motion signal can include a combination of patterns of motion. For example the motion signals can include a pattern of motion that correlates to the mobile device being picked up by the user and another pattern of motion that correlates to the mobile device being held in front of the user e.g. high frequency low magnitude motion . In some implementations the combination of patterns of motion can correspond to a transition from one motion domain to another motion domain e.g. sustained motion domain to rich motion domain . The motion signals can be analyzed to determine patterns of motion that indicate that the mobile device is stationary e.g. on a table that the mobile device is being carried while a user is running driving or biking for example.

In some implementations once the motion fencing system has identified the activity based on the motion signals the motion fencing system can determine if any client is interested in the identified activity. For example motion fencing system can reference the aforementioned lookup table in registry to determine which clients are interested in the identified activity. The motion fencing system can then send a notification to the interested client s indicating that the client s activity of interest has occurred .

In some implementations motion fencing system can be used to conserve energy on the mobile device. For example the mobile device can be placed into a low power mode when the mobile device is not being operated by a user. The user may put the mobile device in the user s pocket on a table or at some other location that indicates that the mobile device should operate in a low power mode. When the mobile device is in low power mode some components e.g. sensors microcontrollers memory processors etc. can be turned off or placed in a low power operating mode. When the mobile device is in low power mode some sensors can remain turned on so that a sensor can invoke or turn on other components of the mobile device based on events detected by the powered on sensor.

In some implementations motion sensor can be turned on or woke up when the mobile device is in a low power operating mode. For example motion sensor can be an accelerometer gyroscope or other type of motion sensor. Motion sensor can be configured to detect motion of the mobile device and compare the detected motion to threshold motion value s . For example motion sensor can compare the magnitude and or frequency of the detected motion e.g. motion signal to the threshold motion value s to determine whether the detected motion exceeds the threshold motion value e.g. associated with sparse motion fence . If the detected motion exceeds the threshold motion value s then the motion fencing system can transition from static motion domain to sparse motion domain for example.

In some implementations when motion sensor determines that the detected motion exceeds the threshold motion value motion sensor can turn on or wake up low power micro controller . For example the motion fencing system can be configured to turn on or make available additional computing resources as the mobile device transitions from a lower motion domain e.g. static domain to a higher motion domain e.g. sparse motion domain to perform more complex processing of the motion signal. For example in addition to the low power micro controller additional memory resources can be made available to the low power micro controller when the mobile device enters the sparse motion domain .

In some implementations low power micro controller can be configured to derive a subset of motion features and compare the motion features to motion criteria to determine if the mobile device should move into the sustained motion domain . For example the low power micro controller can be configured to process the motion signal received from the motion sensor to integrate the motion signal e.g. integrate the accelerometer signal to determine speed and or determine the amplitude variance of the motion signal. The result of this processing can be compared to sparse motion criteria e.g. integral and or variance threshold values to determine whether the mobile device should move into the sustained motion domain . For example if the calculated integral value and or variance value exceeds threshold values for the integral and or variance as defined by the sparse motion criteria then the mobile device can be moved into the sustained motion domain .

In some implementations when low power micro controller determines that the derived subset of motion features exceeds the sparse motion criteria e.g. associated with the sparse motion fence low power micro controller can turn on or wake up high power micro controller . For example low power micro controller can turn on or trigger additional computing resources needed to process motion signals in the sustained motion domain as part of the transition from the sparse motion domain to sustained motion domain . These additional computing resources can include high power micro controller and or memory and or other processors.

In some implementations high power micro controller can process the motion signal received from motion sensor to derive a full set of motion features . For example high power micro controller can transform the motion signal e.g. using a Fast Fourier Transform collect statistics describing the motion signal over time e.g. 20 or 30 seconds and or apply filters to the signal to generate a full set of motion features .

In some implementations high power microcontroller can analyze the full set of motion features to identify specific motions of the mobile device. For example the full set of motion features can be compared to patterns of motion associated with known motions e.g. a flick tap bump etc. performed by a user with the mobile device. In some implementations a client application or function can register to be notified when a specific motion of the mobile device has occurred. For example a client application can register to be notified when a flick motion e.g. a quick directional motion of the mobile device by the user has been detected or identified by high power micro controller . High power micro controller can analyze the motion signal to determine when the flick motion has occurred and can cause the registered client application to be notified of the detected motion.

In some implementations high power micro controller can compare the full set of motion features with sustained motion criteria to determine if the mobile device should transition into the rich motion domain . For example sustained motion criteria can be used to define sustained motion fence and can include frequency patterns that can be compared to a motion signal that has been transformed using a Fast Fourier transform or other suitable transform. Sustained motion criteria can include recurring patterns of motion over time. In some implementations if a frequency pattern is observed in the motion signal or recurring pattern of motion is observed in the motion signal then the mobile device can be moved into rich motion domain .

In some implementations when high power micro controller determines that the full set of motion features exceeds the sustained motion criteria e.g. associated with the sustained motion fence high power micro controller can turn on main processor . For example high power micro controller can turn on or trigger additional computing resources needed to process motion signals in the rich motion domain as part of the transition from the sustained motion domain to the rich motion domain . These additional computing resources can include main processor and or memory and or other processors.

In some implementations main processor can analyze the motion signal received from motion sensor the subset of motion features generated by low power micro controller and or the full set of motion features generated by high power micro controller to classify the motion detected by the mobile device into specific activities . For example main processor can analyze the patterns of motion frequency domain characteristics and or other signal features to determine the current activity of a user who is operating or holding e.g. in hand pocket in car etc. the mobile device. For example main processor can analyze the motion signal to determine whether the user associated with the mobile device is walking running driving or biking for example. If the main processor determines that the user is driving the main processor can turn on positioning system to provide a location of the mobile device for example. If the user is walking the main processor can invoke algorithms or functions to count the steps of the user for example. If a client application has registered with motion fencing system to be notified when the user is running the main processor can notify the registered client that the user is currently running with the mobile device.

At step the motion of the mobile device can be measured. For example the mobile device can be configured with one or more motion sensors that can measure the motion of the mobile device. The motion sensors can include an accelerometer gyroscope and or other types of motion sensors. The measured motion can generate a motion signal over time that indicates the magnitude of the motion at various points in time.

At step the measured motion can be compared to the motion criteria associated with a first motion fence. For example the motion signal can be compared to motion criteria such as threshold values for frequency magnitude etc. The motion criteria can include thresholds on other motion measurements derived from the motion signal. The motion criteria can include patterns of motion e.g. repeated frequency and or magnitude patterns to determine if the motion of the mobile device falls within or is outside the first motion fence. For example the existence of a pattern of motion e.g. any pattern of motion within the motion signal can be a criterion by which a motion fence is defined. For example if there is no pattern within the motion signal the mobile device can remain within the current motion fence. If there is a pattern of motion within the motion signal the mobile device has crossed the motion fence into another motion domain.

At step the mobile device can transition from a first motion domain to a second motion domain based on the comparison. For example if the motion criteria for the first motion fence has been exceeded e.g. threshold values exceeded types of motion observed then the mobile device can move from the current motion domain across the first motion fence and into a second motion domain.

At step device components for the second motion domain can be turned on or woken from a sleep state. For example the mobile device can start in a low power mode. As the mobile device transitions from the first motion domain to the second motion domain components of the mobile device can be turned on or awakened from a sleep state to analyze the motion signals generated by the motion sensor of the mobile device. For example when in the first motion domain the mobile device can be in a low power mode with only the motion sensor turned on. When the mobile device transitions from the first motion domain to the second motion domain the motion sensor can turn on a micro controller to perform additional analysis of the motion signal as described above.

At step the measured motion can be compared to the motion criteria associated with a second motion fence. For example the second motion fence can be associated with motion criteria that are different than the first motion fence. The motion criteria for the second motion fence can describe more complex types of motion than the first motion fence for example. The second motion fence criteria can include patterns of motion values generated from transformations of the motion signal data generated from analysis of the motion signal over time and or other types of motion characteristics.

At step the device can be determined to be within the second motion domain based on the motion criteria. For example if the motion signal does not meet or exceed the motion criteria for the second motion fence the mobile device will not cross the second motion fence into another motion domain. Thus the mobile device can be determined to be within the second motion domain.

At step an application or function that registered interest in the second motion domain or transition can be determined. For example the motion fencing system can maintain a lookup table that identifies applications and or functions of the mobile device that are interested in an activity associated with a type of motion and or motion domain. When it is determined that a mobile device is within a particular motion domain the motion fencing system can reference the lookup table to determine which applications or functions e.g. motion fencing clients are interested in the particular motion domain. In some implementations the motion fencing system can identify particular activities associated with the motion domain based on the pattern of motion observed in the motion signal. When an activity is identified based on the motion signal the motion fencing system can use the lookup table to determine which applications and or functions are interested in the occurrence of the observed activity.

At step the registered application or function can be invoked. For example when the motion fencing system finds an application or function associated with the particular motion domain that the mobile device is currently within or an identified activity the application or function can be notified that the mobile device is within the motion domain or that the particular activity is occurring. In some implementations the notifying the application or function can include invoking an application or function of the mobile device.

One or more Application Programming Interfaces APIs may be used in implementations described herein. An API is an interface implemented by a program code component or hardware component hereinafter API implementing component that allows a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that are passed between the API calling component and the API implementing component.

An API allows a developer of an API calling component which may be a third party developer to leverage specified features provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service such as a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some implementations the API implementing component may provide more than one API that provide access to different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden not exposed and provide a subset of the first set of functions and also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other implementations the API implementing component may itself call one or more other components via an underlying API and thus be both an API calling component and an API implementing component.

An API defines the language and parameters that API calling components use when accessing and using specified features of the API implementing component. For example an API calling component accesses the specified features of the API implementing component through one or more API calls or invocations embodied for example by function or method calls exposed by the API and passes data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls are transferred via the one or more application programming interfaces between the calling API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages in other words transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module e.g. the API implementing component and the API calling component may be the same or different type of module from each other . API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic.

In some implementations an API may allow a client program to use the services provided by a Software Development Kit SDK library. In other embodiments an application or other client program may use an API provided by an Application Framework. In these implementations the application or client program may incorporate calls to functions or methods provided by the SDK and or provided by the API or use data types or objects defined in the SDK and provided by the API. An Application Framework may in these implementations provide a main event loop for a program that responds to various events defined by the Framework. The API allows the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability etc. and the API may be implemented in part by firmware microcode or other low level logic that executes in part on the hardware component.

The API calling component may be a local component e.g. on the same data processing system as the API implementing component or a remote component e.g. on a different data processing system from the API implementing component that communicates with the API implementing component through the API over a network. An API implementing component may also act as an API calling component e.g. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that is exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component thus the API may include features for translating calls and returns between the API implementing component and the API calling component. However the API may be implemented in terms of a specific programming language. An API calling component can in one embedment call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

For example the API implementing component can include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling component . The API calling component may be on the same system as the API implementing component or may be located remotely and accesses the API implementing component using the API over a network. While illustrates a single API calling component interacting with the API other API calling components which may be written in different languages or the same language than the API calling component may use the API .

The API implementing component the API and the API calling component may be stored in a machine readable medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

Note that the Service B has two APIs and one of which Service B API 1 receives calls from and returns values to Application 1 and the other Service B API 2 receives calls from and returns values to Application 2 . Service A which can be for example a software library makes calls to and receives returned values from OS API 1 and Service B which can be for example a software library makes calls to and receives returned values from both OS API 1 and OS API 2 . Application 2 makes calls to and receives returned values from OS API 2 .

Sensors devices and subsystems can be coupled to the peripherals interface to facilitate multiple functionalities. For example a motion sensor a light sensor and a proximity sensor can be coupled to the peripherals interface to facilitate orientation lighting and proximity functions. Other sensors can also be connected to the peripherals interface such as a global navigation satellite system GNSS e.g. GPS receiver a temperature sensor a biometric sensor magnetometer or other sensing device to facilitate related functionalities.

A camera subsystem and an optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS optical sensor can be utilized to facilitate camera functions such as recording photographs and video clips. The camera subsystem and the optical sensor can be used to collect images of a user to be used during authentication of a user e.g. by performing facial recognition analysis.

Communication functions can be facilitated through one or more wireless communication subsystems which can include radio frequency receivers and transmitters and or optical e.g. infrared receivers and transmitters. The specific design and implementation of the communication subsystem can depend on the communication network s over which the computing device is intended to operate. For example the computing device can include communication subsystems designed to operate over a GSM network a GPRS network an EDGE network a Wi Fi or WiMax network and a Bluetooth network. In particular the wireless communication subsystems can include hosting protocols such that the device can be configured as a base station for other wireless devices.

An audio subsystem can be coupled to a speaker and a microphone to facilitate voice enabled functions such as speaker recognition voice replication digital recording and telephony functions. The audio subsystem can be configured to facilitate processing voice commands voiceprinting and voice authentication for example.

The I O subsystem can include a touch surface controller and or other input controller s . The touch surface controller can be coupled to a touch surface . The touch surface and touch surface controller can for example detect contact and motion or break thereof using any of a plurality of touch sensitivity technologies including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with the touch surface .

The other input controller s can be coupled to other input control devices such as one or more buttons rocker switches thumb wheel infrared port USB port and or a pointer device such as a stylus. The one or more buttons not shown can include an up down button for volume control of the speaker and or the microphone .

In one implementation a pressing of the button for a first duration can disengage a lock of the touch surface and a pressing of the button for a second duration that is longer than the first duration can turn power to the computing device on or off. Pressing the button for a third duration can activate a voice control or voice command module that enables the user to speak commands into the microphone to cause the device to execute the spoken command. The user can customize a functionality of one or more of the buttons. The touch surface can for example also be used to implement virtual or soft buttons and or a keyboard.

In some implementations the computing device can present recorded audio and or video files such as MP3 AAC and MPEG files. In some implementations the computing device can include the functionality of an MP3 player such as an iPod . Other input output and control devices can also be used.

The memory interface can be coupled to memory . The memory can include high speed random access memory and or non volatile memory such as one or more magnetic disk storage devices one or more optical storage devices and or flash memory e.g. NAND NOR . The memory can store an operating system such as Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks.

The operating system can include instructions for handling basic system services and for performing hardware dependent tasks. In some implementations the operating system can be a kernel e.g. UNIX kernel . In some implementations the operating system can include instructions for performing motion fencing. For example operating system can implement the motion fencing features as described with reference to .

The memory can also store communication instructions to facilitate communicating with one or more additional devices one or more computers and or one or more servers. The memory can include graphical user interface instructions to facilitate graphic user interface processing sensor processing instructions to facilitate sensor related processing and functions phone instructions to facilitate phone related processes and functions electronic messaging instructions to facilitate electronic messaging related processes and functions web browsing instructions to facilitate web browsing related processes and functions media processing instructions to facilitate media processing related processes and functions GNSS Navigation instructions to facilitate GNSS and navigation related processes and instructions and or camera instructions to facilitate camera related processes and functions.

The memory can store software instructions to facilitate other processes and functions such as the motion fencing processes and functions as described with reference to . For example software instructions can include instructions for determining the current motion domain of the mobile device and notifying or invoking applications based on the current motion domain.

The memory can also store other software instructions such as web video instructions to facilitate web video related processes and functions and or web shopping instructions to facilitate web shopping related processes and functions. In some implementations the media processing instructions are divided into audio processing instructions and video processing instructions to facilitate audio processing related processes and functions and video processing related processes and functions respectively.

Each of the above identified instructions and applications can correspond to a set of instructions for performing one or more functions described above. These instructions need not be implemented as separate software programs procedures or modules. The memory can include additional instructions or fewer instructions. Furthermore various functions of the computing device can be implemented in hardware and or in software including in one or more signal processing and or application specific integrated circuits.

