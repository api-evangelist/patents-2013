---

title: Managing communications between computing nodes
abstract: Techniques are described for managing communications between multiple intercommunicating computing nodes, such as multiple virtual machine nodes hosted on one or more physical computing machines or systems. In some situations, users may specify groups of computing nodes and optionally associated access policies for use in the managing of the communications for those groups, such as by specifying which source nodes are allowed to transmit data to particular destinations nodes. In addition, determinations of whether initiated data transmissions from source nodes to destination nodes are authorized may be dynamically negotiated for and recorded for later use in automatically authorizing future such data transmissions without negotiation. This abstract is provided to comply with rules requiring an abstract, and it is submitted with the intention that it will not be used to interpret or limit the scope or meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09426181&OS=09426181&RS=09426181
owner: Amazon Technologies, Inc.
number: 09426181
owner_city: Incline Village
owner_country: US
publication_date: 20130708
---
This application is a continuation of U.S. application Ser. No. 12 859 098 filed Aug. 18 2010 and entitled Managing Communications Between Computing Nodes which is hereby incorporated by reference in its entirety. U.S. application Ser. No. 12 859 098 is a continuation of U.S. application Ser. No. 11 394 595 filed Mar. 31 2006 now U.S. Pat. No. 7 801 128 which is hereby incorporated by reference in its entirety. U.S. application Ser. No. 11 394 595 is related to U.S. patent application Ser. No. 11 395 463 filed Mar. 31 2006 now U.S. Pat. No. 8 190 682 and entitled Managing Execution Of Programs By Multiple Computing Systems which is hereby incorporated by reference in its entirety.

The following disclosure relates generally to managing communications between computing nodes such as to control outgoing transmissions of data to remote destination nodes so as to reflect dynamically determined authorizations for the transmissions.

Data centers housing significant numbers of interconnected computing systems have become commonplace such as private data centers that are operated by and on behalf of a single organization and public data centers that are operated by entities as businesses that provide access to computing resources to customers under various business models. For example some public data center operators provide network access power and secure installation facilities for hardware owned by various customers while other public data center operators provide full service facilities that also include the actual hardware resources used by their customers. However as the scale and scope of typical data centers has increased the task of provisioning administering and managing the physical computing resources has become increasingly complicated.

The advent of virtualization technologies for commodity hardware has provided a partial solution to the problem of managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMWare XEN or User Mode Linux may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. Furthermore some virtualization technologies are capable of providing virtual resources that span one or more physical resources such as a single virtual machine with multiple virtual processors that actually spans multiple distinct physical computing systems.

However one problem that arises in the context of data centers that virtually or physically host large numbers of applications or systems for a set of diverse customers involves providing network isolation for the systems operated by or on behalf of each customer such as to allow communications between those systems if desired by the customer while restricting undesired communications to those systems from other systems. Traditional firewall technologies may be employed to provide limited benefits but problems persist. For example firewalls are typically configured to filter incoming network traffic at or near the destination of the traffic but this allows malicious applications to cause resource outages by flooding a given network with traffic even if the firewalls were able to perfectly block all such incoming network traffic. In addition firewalls do not typically include facilities for dynamically modifying filtering rules to reflect the types of highly dynamic resource provisioning that may occur in the context of a large scale data center hosting many thousands of virtual machines. Thus as new applications and systems come online and others go offline for example traditional firewalls lack the ability to dynamically determine appropriate filtering rules required to operate correctly instead necessitating time consuming and error prone manual configuration of such filtering rules.

Thus given such problems it would be beneficial to provide techniques that allow users to efficiently specify communications policies that are automatically enforced via management of data transmissions for multiple computing nodes such as for multiple hosted virtual machines operating in one or more data centers or other computing resource facilities.

Techniques are described for managing communications between multiple intercommunicating computing nodes. In some embodiments the computing nodes include virtual machine nodes that are hosted on one or more physical computing machines or systems and the communications include transmissions of data e.g. messages data packets or frames etc. between nodes hosted on distinct physical machines over one or more networks. In addition in some embodiments the management of a data transmission or other communication between a source node and a destination node is provided by one or more intermediary computing nodes that are capable of identifying and manipulating the communications between the source and destination nodes. For example in embodiments in which a source node and a destination node are each virtual machines hosted on two distinct physical computing machines the intermediary computing nodes may include one or more other virtual machines hosted on one or both of the two physical computing machines.

In addition in at least some embodiments the management of data transmissions includes analyzing outgoing data transmissions that are requested or otherwise initiated from a source node to one or more destination nodes in order to determine whether the data transmissions are authorized such as under control of an intermediary computing node associated with the source node and with the data transmissions being allowed to continue over one or more networks to the destination node s only if authorization is determined to exist. The determination of authorization by a intermediary computing node may for example be based at least in part on defined data transmission policies that specify groups of one or more source nodes that are authorized to communicate with groups of one or more destination nodes such as when a source node and destination node both belong to a common group of nodes. In addition an intermediary computing node associated with a source node may communicate with a distinct intermediary computing node associated with an intended destination node in order to negotiate for authorization for a data transmission and may further store a rule or other indication that reflects the results of the negotiation for use with future data transmissions from the source node to the destination node such as a transmission management rule that indicates that future such data transmissions are authorized if the negotiation indicates that authorization is provided for the current data transmission.

In some embodiments an application execution service executes third party customers applications using multiple physical machines e.g. in one or more data centers that each host multiple virtual machines which are each able to execute one or more applications for a customer and the described techniques may be used by one or more data transmission management systems executing as part of the application execution service to control communications to and from the applications of each customer. Customers may provide applications for execution to the execution service as discussed in greater detail below and may reserve execution time and other resources on physical or virtual hardware facilities provided by the execution service. In addition customers may create new groups of computing nodes e.g. multiple computing nodes that are currently each executing one of multiple instances of a program of the customer specify access policies for the groups and have the membership of the groups and or the specified access policies be updated whether automatically or manually to reflect changing conditions such as to reflect new application instances that are executed previously executing application instances that are no longer executing and or new or adjusted access policies e.g. to reflect new security requirements such as by changing whether access to other computing nodes groups and or applications is allowed or denied .

In some embodiments access policies describe source nodes also referred to as sending nodes or senders that are allowed to transmit data to a particular destination node or group of nodes such as by describing such source nodes individually e.g. via network address or other identifier via ranges of network addresses or other identifiers as one or more groups of related source nodes etc. while in other embodiments access policies may instead in a similar manner describe destination nodes that are allowed to receive data transmissions from one or more particular source nodes or groups of nodes. In the absence of specified access policies and or the ability to determine that a particular initiated data transmission is authorized some embodiments may provide default access policies and or authorization polices such as to deny all data transmissions unless determined to be authorized or instead to allow all data transmissions unless determined to not be authorized.

In one example embodiment multiple data transmission manager components of a Data Transmission Management DTM system work together to manage the data transmissions of a number of intercommunicating participant computing nodes. Initially when a participant computing node comes online a data transmission manager component associated with the participant node determines the node s network address e.g. IP address or other network location any groups to which the node belongs and indications of source nodes that are authorized to transmit data to the node. Later when the participant node attempts to initiate communication with a remote destination node the associated data transmission manager component detects the initiated communication and determines whether authorization for the communication already exists based on obtained authorization for a prior communication from the participant source node to the destination node. If existing authorization is not available the associated data transmission manager component attempts to negotiate authorization to communicate with the remote destination node such as by communicating with a remote data transmission manager component associated with the remote destination node e.g. by sending a negotiation request that triggers the negotiation a negotiation request for a data transmission from a participant source node to a destination node may contain information related to the network identity and group membership of the participant source node.

After the remote data transmission manager component associated with the remote destination node receives a negotiation request on behalf of a source node the component determines whether the source node is authorized to communicate with the remote destination node based on any access and or transmission policies of the remote destination node e.g. based on the groups of which the remote destination node is a member . If it is determined that authorization exists the remote data transmission manager component responds to the negotiation request with a reply indicating that authorization to communicate is provided. The data transmission manager component associated with the participant source node receives this reply and proceeds to allow data to be transmitted to the remote destination node whether by transmitting the data on behalf of the participant source node allowing a data transmission by the participant source node to proceed etc. . If the reply instead indicates that authorization to communicate has not been obtained the data transmission manager associated with the participant source node proceeds to prevent the data transmission to the destination node from occurring whether by dropping or otherwise discarding an intercepted data transmission by indicating to the participant source node and or others not to perform any data transmissions to the destination node etc. . In addition the data transmission manager component associated with the participant source node may cache or otherwise store the result of the negotiation so that future transmissions do not require the additional step of negotiation and the data transmission manager component associated with the destination node may similarly cache or otherwise store the result of the negotiation. In this manner data transmission manager systems dynamically determine whether the associated computing nodes that they manage are authorized to transmit data to various remote destination nodes.

For illustrative purposes some embodiments are described below in which specific types of management of communications are performed in specific types of situations. These examples are provided for illustrative purposes and are simplified for the sake of brevity and the inventive techniques can be used in a wide variety of other situations some of which are discussed below and the techniques are not limited to use with virtual nodes with outgoing data transmissions within one or more data centers etc.

In addition the example data center further comprises additional computing systems and that are not located on a rack but share a common network interconnect to a TM component associated with those additional computing systems although in other embodiments such additional non rack computing systems may not be present. In this example computing system also hosts a number of virtual machine nodes while computing systems instead act as a single physical machine node. The TM component similarly manages incoming and outgoing data transmissions for the associated virtual machine nodes hosted on computing system and for computing system nodes . An optional computing system is also illustrated at the interconnect between the data center local network and the external network such as may be employed to provide a number of services e.g. network proxies the filtering or other management of incoming and or outgoing data transmissions etc. including to manage outgoing data transmissions from some or all nodes internal to the data center to nodes located in additional data centers or other systems external to the data center and or to manage incoming data transmissions to some or all internal nodes from external nodes. An optional DTM Group Manager component is also illustrated and may provide a number of services to TM components local to the data center such as to maintain global state information for the TM components e.g. group membership information access policies etc. .

The example data center is connected to a number of other computing systems via a network e.g. the Internet including additional computing systems that may be operated by the operator of the data center or third parties additional data centers that also may be operated by the operator of the data center or third parties and an optional DTM System Manager system . In this example the DTM System Manager may maintain global state information for TM components in a number of data centers such as the illustrated data center and additional data centers . The information maintained and provided by the DTM System Manager may for example include group membership information access policies etc. Although the example DTM System Manager is depicted as being external to data center in this example embodiment in other embodiments it may instead be located within data center .

In the illustrated embodiment an example TM component is executing in memory in order to manage the data transmissions between associated nodes that are being managed and other nodes such as those represented by the illustrated other computing systems connected via a network . In the present example the managed nodes are resident on independent computing systems and are connected to the computing system and TM via a physical network although in other embodiments one or more of the managed nodes may alternatively be hosted on computing system as virtual machine nodes. further illustrates a DTM System Manager system connected to the computing system such as to maintain and provide information related to the operation of one or more TM components such as access policies and group membership as discussed in greater detail elsewhere.

It will be appreciated that computing systems and are merely illustrative and are not intended to limit the scope of the present invention. For example computing system may be connected to other devices that are not illustrated including through one or more networks such as the Internet or via the World Wide Web Web . More generally a node or other computing system may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate inter communication capabilities. In addition the functionality provided by the illustrated components and systems may in some embodiments be combined in fewer components or distributed in additional components. Similarly in some embodiments the functionality of some of the illustrated components may not be provided and or other additional functionality may be available.

It will also be appreciated that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software components and or systems may execute in memory on another device and communicate with the illustrated computing system via inter computer communication. Some or all of the components systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems components and data structures can also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission mediums including wireless based and wired cable based mediums and can take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

In the example shown in access policies may be specified on a per transmission protocol basis. In the present example when a source is granted access via a particular protocol such as HTTP this may be taken to mean that the sender may send Transmission Control Protocol TCP packets to nodes in the specified group at the default port for HTTP port . Other embodiments may allow access rights to be specified at other levels of details such as to not indicate particular protocols or to further specify particular ports for use with particular protocols. For example some embodiments may allow access rights to more generally be specified with respect to any transmission properties of particular network transmissions such as types of packets within particular protocols e.g. TCP SYN packets broadcast packets multicast packets TCP flags generally etc. connection limits e.g. maximum number of concurrent connections permitted packet size packet arrival or departure time packet time to live packet payload contents e.g. packets containing particular strings etc. In addition other embodiments may specify access policies in various manners. For example some embodiments may provide for the specification of negative access policies such as ones that specify that all nodes except for the specified senders have certain access rights. Also different embodiments may provide varying semantics for default unlisted access policies. For example some embodiments may provide a default policy that no sender may communicate with nodes of a given group unless authorized by a particular other policy with other embodiments may provide a default policy that senders operated by a given user may by default communicate with any other nodes operated by the same user or that nodes in a given group may by default communicate with other nodes in the same group. Finally various embodiments may specify groups and group membership in various ways such as by providing for hierarchies of groups or to allow for groups to be members of other groups such that a policy would apply to any node below an indicated point in the hierarchy or to any node that is a member of a indicated group or of any sub groups of the indicated group.

In the example illustrated in two example TM components DTM and DTM dynamically generate and modify transmission management rules over time based on initiated data transmissions with DTM managing two associated nodes A and B and with DTM managing associated node D. Both example DTMs also maintain information related to the group memberships of nodes being managed as well as to associated access policies for the groups. In the present example node A belongs to Group1 node B belongs to Group2 and node D belongs to Group3 and Group4 as shown in rows in . The DTMs may obtain information about group membership and access policies in various ways. For example when a new node to be managed by a particular DTM comes online the DTM may be notified of this new node and its network address e.g. IP address and the DTM may be able to access the group membership and access policy information for the new node e.g. by querying and or being notified by the DTM Group Manager component or the DTM System Manager system by retrieving the information from a network accessible data store etc. . In addition changes related to group membership e.g. a particular existing node is added to or removed from a group and access policies e.g. the access policies related to a particular group are modified such as to now allow data transmissions from another group that previously did not have such authorization may be communicated to DTMs in a variety of ways. In some embodiments only the DTMs that are managing nodes affected by a particular change will be notified such as via information sent from for example a DTM Group Manager component and or a DTM System Manager system. In other embodiments such changes may be broadcast to all DTMs or instead all DTMs may be configured to periodically poll an appropriate component in order to obtain updates related to such state changes.

In some embodiments any data destined for node D that was received from node B by DTM before the negotiation completed would have been queued by DTM until it was determined whether or not node B was authorized to transmit data to node D. In such embodiments after having received an indication of authorization to communicate with node B DTM would then transmit any queued data to node D as well as any data that arrived subsequent to the negotiation. In other embodiments any data destined for node D that was received from node B by DTM prior to the completion of the negotiation would instead be discarded by DTM. Such techniques may be appropriate in situations in which some data transmission loss is acceptable or in which a sending node will resend any data transmissions that are not received and acknowledged by the intended recipient. For example many transmission protocols will retransmit any lost packets e.g. based on the timeout and retransmission mechanisms of TCP and while such a discard based approach may result in the initial loss of some packets that should ultimately have been delivered e.g. in the case of a successful negotiation in this situation the retransmission will ensure that those initial packets will be resent. Alternatively in some embodiments before a negotiation is completed or authorization is otherwise obtained for node B to transmit data to node D the data transmissions could be sent toward node D and be queued at DTM e.g. after being intercepted by DTM until authorization is obtained or DTM otherwise determines to forward the queued data transmissions to node D or to discard the data transmission if authorization is ultimately not obtained .

Thus in the manner indicated the transmission manager components may dynamically create transmission management rules based on managing initiated data transmissions. While not illustrated here in other embodiments the rule sets for a transmission manager component and or for a particular node may be modified in other manners such as to remove all rules corresponding to a node after its associated group membership or other relevant information changes e.g. after a program being executed on behalf of a first customer on a virtual machine node is terminated so that the node or another node that is later allocated the same relevant information such as the same network address as was previously used by the node will need to re negotiate to determine appropriate authorizations or instead to remove only rules that are affected by a particular change. For example if the access policies for group3 are dynamically changed at the current time so that group2 no longer is authorized to sent HTTP communications to group3 node B of group2 will no longer be authorized to send HTTP transmissions to node D of group3 . Accordingly rule for DTM and rule for DTM are no longer valid and the change to the access policy will prompt those two rules to be removed but other rules involving nodes B and D e.g. rules and for DTM and DTM respectively may be maintained in at least some embodiments.

Next shows an example of messages passed between nodes and DTMs during a successful negotiation as described with reference to . Initially node D attempts to transmit data to node B via HTTP by way of the Send message . If the data transmission is related to the prior authorized data transmissions from node B to node D using HTTP e.g. is a reply to received Send message or otherwise is part of the same session DTM and DTM will in some embodiments automatically have authorized such reply data transmissions as part of the prior negotiation process as discussed in greater detail elsewhere this ability to automatic authorize such replies may provide various benefits such as to enable some types of transmission protocols e.g. TCP to function effectively. In this example however DTM instead initiates a separate authorization negotiation for the data transmission with the Is Allowed message . DTM determines by inspection of the appropriate data that node B has authorized such transmissions and therefore responds with an Allowed message . Finally DTM forwards the queued data from Send message by way of a new Send message which DTM forwards to its ultimate destination by way of Send message . Finally shows an example of messages passed between nodes and DTMs during a negotiation that results in a denial of authorization as described with reference to . Initially node B attempts to transmit data to node D via FTP by way of the Send message . DTM initiates negotiation with DTM via the Is Allowed message . DTM determines by inspection of the appropriate data that node D has not authorized such transmissions and therefore responds with a Not Allowed message . In response DTM drops the data received by way of the Send message .

The routine begins in step where it receives data sent from another node or an indication to transmit data to a remote node e.g. from another part of the actions of the node . In step the routine determines whether data was received from another node. If so it proceeds to step and processes the received data. If it was instead determined in step that an indication to transmit data was received the routine proceeds to step and transmits data to the appropriate destination. After step or the routine proceeds to step to determine whether to continue. If so the routine returns to step and if not continues to step and ends.

The routine begins in step and receives an outgoing transmission an incoming transmission a negotiation request or a management message. The routine then proceeds to step and determines the type of message or request received in step . If it is determined in step that the routine has received an indication of an outgoing transmission the routine proceeds to step to determine whether it has an applicable rule indicating a prior negotiation for authorization. An applicable rule may be one that either allows or denies the transmission from the source node to the destination node indicated by the outgoing transmission. If it is determined that no such rule exists the routine proceeds to step and initiates a negotiation for authorization by sending a request to the destination node. In the example embodiment while the request is sent to the destination node it is intercepted by a remote DTM that manages the destination node thus allowing the DTM to initiate negotiation without specific knowledge of the network address of the remote DTM although in other embodiments the negotiation request message may instead be send directly to an appropriate DTM e.g. via a mapping of destination nodes to the remote DTMs that manage them or in another manner. Next the routine proceeds to step to receive either a response or a timeout. A timeout may be received if for some reason the remote DTM has gone offline or is otherwise unreachable. If no response from the remote DTM is received within a pre determined timeout the lack of response is treated as a response that denies authorization to communicate in this embodiment although in other embodiments the lack of a response could be treated as an authorization or could trigger additional attempts to negotiate for authorization. The routine then proceeds to step to determine whether authorization has been granted to transmit data from the source to the destination node. If an explicit allowance of authorization was received e.g. a message containing an indication of authorization the routine proceeds to step and adds an allowance transmission management rule that authorizes future data transmissions from the source to the destination node. If instead the routine receives an explicit denial of authorization or a timeout the routine proceeds to step to add a rule indicating a denial of authorization and drops any data that is received from the source node and bound for the given destination node. In this example the added denial of authorization rule includes expiration criteria such as a timeout or expiration date such as to force renegotiation of data transmission rules on a periodic basis in order to assure that dynamic changes to group memberships access policies and or node network identities will be correctly reflected in the rule sets maintained by various DTMs.

If it is instead determined in step that a rule governing data transmissions from the source node to the destination node does exist the routine proceeds to step to determine whether the rule authorizes such transmissions. If so or after step the routine proceeds to step and transmits the data from the source node to the destination node. If it is instead determined in step that the rule denies authorization for data transmissions from the source node to the destination node the routine proceeds to step and drops any data from the source node that is bound for the given destination node. Note that in embodiments that do not queue and instead discard data received during pending negotiations for authorization steps such as and may be somewhat simplified. For example an embodiment that does not queue data while awaiting a response to a negotiation request may not wait to receive a timeout as described with reference to step above because there will be no accumulation of queued data to either discard or transmit depending on the outcome of the pending negotiation. In addition in such cases the routine may proceed directly from step to step bypassing step because there will be no data to transmit since any data that initiated an authorization negotiation would have been discarded rather than queued .

If it is instead determined in step that the routine has received a negotiation request from a remote DTM that is attempting to obtain permission for a source node to communicate with one of the destination nodes managed by the DTM the routine proceeds to step to determine the source node address and the groups to which the source node belongs. In some embodiments some or all of information will be provided to the DTM as part of the received negotiation request from the remote DTM. Alternatively the DTM may acquire some or all of this information in other manners such as from another system component e.g. the DTM Group Manager or DTM System Manager of . Next the routine proceeds to step to determine whether the network address of the source node has been granted authorization to communicate with the destination node. If not the routine continues to step to determine whether at least one of the source node s groups has been granted permission to communicate with the destination node. If not the routine continues to step and adds a rule that denies authorization for transmissions from the source node to the destination node which may include expiration criteria to force renegotiation of data transmission rules on a periodic basis. Next the routine continues to step and sends a response to the remote DTM denying authorization to communicate. If it is instead determined in step or step that the source node has been granted authorization to communicate with the destination node however the routine proceeds to step and adds a rule that authorizes communication from the source node to the destination node. Next the routine proceeds to step where it sends a response to the remote DTM indicating the authorization for the source node to communicate with the destination node.

If it is instead determined in step that the routine has received incoming data the routine proceeds to step . In step the routine determines whether a rule exists in the rule set that authorizes communication from the source node of the incoming data to the destination node of the incoming data. If it is so determined in step the routine continues to step and forwards the data onwards to the final destination node. If no rule exists that denies authorization for such communication or a rule exists that explicitly denies authorization for such communication the routine proceeds to step and drops the incoming data. In addition in some embodiments the DTM may in this case send a message to the remote DTM that originally sent the data that such communication was not permitted thereby informing the remote DTM that it should invalidate some or all of the rules related to this particular destination node.

If it is instead determined in step that the routine has received a management message the routine proceeds to step . Management messages may include notifications that one or more of the nodes managed by the DTM have gone offline notifications that a new node to be managed by the DTM has come online etc. In some embodiments when a new node comes online the DTM that manages the new node may determine network location e.g. network address of the new node the groups to which the new node belongs the source nodes or other senders individual nodes or groups that have been granted authorization to communicate with the new node the particular protocols that senders may use to communicate with the new node etc. In other embodiments the DTM may alternatively delay the acquisition of such information until a later time such as when the new node first sends outbound communication or when the first inbound communication destined for the new node arrives. Such information may be obtained by the DTM by communicating with other system components such as the DTM Group Manager or the DTM System Manager of or by reference to network accessible data stores. Similarly when a node managed by the DTM goes offline the DTM may flush any rules from its rule set that reference the node as either a source or a destination node. The DTM may also flush any information related to the network identity group membership and or access policies of the node.

After steps or the routine continues to step to optionally perform housekeeping tasks e.g. checking the expiration criteria associated with rules stored in a TM component s rule set . In some embodiments rules may be set to expire automatically after a specified time interval. In other embodiments the DTM periodically examines the rules in the rule set and flushes or deletes those that have reached a certain age. Other housekeeping tasks may include operations such as updating or rotating logs or handling additional messages or requests not illustrated in the above flowchart. For example in some cases the above example embodiment of a DTM will have an authorization rule that has gone stale that is the authorization rule will make reference to a destination node that has at some point after the initial negotiation of permission gone offline. In such a case the DTM may not be aware that the destination node has gone offline until one of the source nodes under the management of the DTM attempts to transmit data to that node. Because the DTM has a rule that allows such transmission the DTM will transmit the data to the destination node. However the remote DTM will reject the transmission and reply with a message informing the DTM to invalidate the rule that allowed such a transmission or alternatively all rules that reference the node as a destination node . In response the DTM will flush some or all stored rules related to the given destination node as appropriate.

After step the routine proceeds to step to determine whether to continue. If so the routine returns to step and if not continues to step and ends.

Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways such as being split among more routines or consolidated into fewer routines. Similarly in some embodiments illustrated routines may provide more or less functionality than is described such as when other illustrated routines instead lack or include such functionality respectively or when the amount of functionality that is provided is altered. In addition while various operations may be illustrated as being performed in a particular manner e.g. in serial or in parallel and or in a particular order those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly in some embodiments illustrated data structures may store more or less information than is described such as when other illustrated data structures instead lack or include such information respectively or when the amount or types of information that is stored is altered.

As previously noted in some embodiments the initiation of a data transmission or other communication by a computing node may occur and may be identified by an associated data transmission manager component in a variety of ways. In some embodiments the computing node may send an explicit message to the TM component that manages it requesting permission to communicate with a remote node while in other embodiments the existence of the TM and the authorization negotiation that it performs may be entirely transparent to the computing node if so the computing node simply attempts to send data to the remote node while the TM component monitors and processes all outgoing transmissions from the computing node. When the TM component identifies an initiated data transmission from the computing node whether by receiving an explicit request message from the computing node by detecting an outbound transmission for which it has not already negotiated permission such as by inspecting the source and destination network addresses of TCP or UDP packets as they flow across a network interface etc. the TM components initiates an authorization negotiation if the existence of authorization or an authorization denial does not already exist. While the TM component negotiates authorization it may queue the outgoing data from the computing node that is bound for the remote destination node and process the data according to the authorization negotiation results e.g. by allowing or preventing the data transmission to proceed to the destination node as well as optionally manipulate data before it is forwarded on to the destination node e.g. to include indications of obtained authorization for use by the destination computing node and or destination transmission component in verifying authorization and or authenticity of the data transmissions to modify the manner in which the data is transmitted such as to change the data format and or transmission protocol to reflect preferences of the destination computing node or for other reasons to modify the data that is transmitted such as by adding and or removing data etc. .

In addition various embodiments may provide mechanisms for customer users and other users to interact with an embodiment of the DTM system. For example some embodiments may provide an interactive console e.g. a client application program providing an interactive user interface a Web browser based interface etc. from which users can manage the creation or deletion of groups and the specification of communication access policies or group membership as well as more general administrative functions related to the operation and management of hosted applications e.g. the creation or modification of user accounts the provision of new applications the initiation termination or monitoring of hosted applications the assignment of applications to groups the reservation of time or other system resources etc. . In addition some embodiments may provide an API application programming interface that allows other computing systems and programs to programmatically invoke such functionality. Such APIs may be provided by libraries or class interfaces e.g. to be invoked by programs written in C C or Java and or network service protocols such as via Web services.

In addition various implementation architectures are possible for embodiments of the DTM system. In some embodiments multiple TM components may act in a distributed manner to each manage the data transmissions of one or more associated nodes whether by each operating as an independent autonomous program or by cooperating with other TM components and may possibly be hosted virtual machines on the same computing system as the nodes being managed or may instead operate on computing systems remote from the nodes that they manage. While authorization negotiations have been described in which TM components interact directly with each other in other embodiments such TM components may instead negotiate authorizations in other manners such as by communicating with a central component that manages communication policies for the entire system or by referencing configuration files or other static information stores that are available locally or over a network. In addition the authorization negotiation performed by TM components may have a variety of forms. For example in some embodiments the actual network address or other identity of a remote TM component may be known to a TM component initiating a negotiation and if so that TM component may interact directly with that remote TM component while in other embodiments the TM component may send information to the network address of the destination computing node with the expectation that the sent information will be intercepted by the appropriate remote TM component. In other embodiments a single central TM component or other component may manage the data transmissions for a large number of computing nodes e.g. an entire data center if the single component has access to data transmissions initiated by those nodes whether due to configuration of the nodes or to a network structure or other mechanism that provides such access . In still other embodiments the functionality of a TM component may be distributed such as by being incorporated into each of the computing nodes being managed e.g. by being built into system libraries used for network communications by all of the nodes or a distinct TM component may operate on behalf of each computing node.

In addition in embodiments in which the functionality of the DTM system is distributed amongst various system components various negotiation schemes and protocols are possible. Negotiation requests and other messages related to data transmission policies and permissions that are passed between TM components or between TM components and other system components may be implemented in various manners such as by sending low level UDP packets containing the relevant information or by way of protocols implemented upon higher level protocols such as HTTP e.g. XML RPC SOAP etc .

As previously noted the described techniques may be employed on behalf of numerous computing nodes to provide various benefits to those computing nodes. In addition such computing nodes may in at least some embodiments further employ additional techniques on their own behalf to provide other capabilities such as by each configuring and providing their own firewalls for incoming communications anti virus protection and protection against other malware etc.

When the described techniques are used with a group of computing nodes internal to some defined boundary e.g. nodes within a data center such as due to an ability to obtain access to the data transmissions initiated by those computing nodes the described techniques may also in some embodiments be extended to the edge of the defined boundary. Thus in addition to managing data transmissions between computing nodes within the defined boundary one or more transmission manager components that may access communications passing through the boundary between internal and external computing nodes may similarly provide at least some of the described techniques for those communications. For example when a data communication is received at the boundary from an external computing node that is intended for an internal computing node a transmission manager component associated with the edge may similarly treat the communication as an outgoing data transmission initiated by a managed computing node such as by queuing the communication and allowing it to be passed into the internal network only if authorization is negotiated and obtained e.g. by negotiating with a transmission manager component associated with the destination computing node or instead with a component acting on behalf of all internal computing nodes .

Those skilled in the art will also realize that although in some embodiments the described techniques are employed in the context of a data center housing multiple intercommunicating nodes other implementation scenarios are also possible. For example the described techniques may be employed in the context an organization wide intranet operated by a business or other institution e.g. university for the benefit of its employees and or members. Alternatively the described techniques could be employed by a network service provider to improve network security availability and isolation. In addition example embodiments may be employed within a data center or other context for a variety of purposes. For example data center operators or users that sell access to hosted applications to customers may in some embodiments use the described techniques to provide network isolation between their customers applications and data software development teams may in some embodiments use the described techniques to provide network isolation between various environments that they use e.g. development build test deployment production etc. organizations may in some embodiments use the described techniques to isolate the computing resources utilized by one personnel group or department e.g. human resources from the computing resources utilized by another personnel group or department e.g. accounting or data center operators or users that are deploying a multi component application e.g. a multi tiered business application may in some embodiments use the described techniques to provide functional decomposition and or isolation for the various component types e.g. Web front ends database servers business rules engines etc. . More generally the described techniques may be used to partition virtual machines to reflect almost any situation that would conventionally necessitate physical partitioning of distinct computing systems.

From the foregoing it will be appreciated that although specific embodiments have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention. Accordingly the invention is not limited except as by the appended claims and the elements recited therein. In addition while certain aspects of the invention are presented below in certain claim forms the inventors contemplate the various aspects of the invention in any available claim form. For example while only some aspects of the invention may currently be recited as being embodied in a computer readable medium other aspects may likewise be so embodied.

