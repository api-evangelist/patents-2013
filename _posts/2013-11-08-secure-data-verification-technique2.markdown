---

title: Secure data verification technique
abstract: A technique for the secure exchange and verification of data between multiple entities that use compatible business management systems utilizes serializable data transfer objects to transfer business data over a secure communication path. A conversion algorithm transforms a subset of the business data contained within the transfer objects, and the resulting data string is compared to data strings from other objects that are related to the transaction and which were transformed by the same conversion algorithm. If the data strings are not identical, a discrepancy exists. Serializable objects link all data objects relating to a given business transaction. An interface allows users to view and manage data contained in data objects, including discrepancies between compared objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577986&OS=09577986&RS=09577986
owner: 
number: 09577986
owner_city: 
owner_country: 
publication_date: 20131108
---
This is a utility patent application being filed in the United States Patent and Trademark Office as a non provisional application for patent under Title 35 U.S.C. 100 et seq. and 37 C.F.R. 1.53 b and is a continuation in part of the U.S. patent application Ser. No. 13 751 320 that was filed on Jan. 28 2013 and is a continuation in part of the U.S. patent application Ser. No. 13 874 476 that was filed on Apr. 30 2013 both of which are continuation in parts of the U.S. patent application Ser. No. 13 560 528 that was filed on Jul. 27 2012. Each of these applications re incorporated herein by reference in their entirety.

Since small businesses often manually enter data into their business management systems the potential for inaccurate information in transaction records is always present. Small errors like mistakes in keying in a quantity or transposing two characters of an item number can quickly become expensive problems if left undetected. Companies that use the same business management platform are by no means immune from inaccuracies especially if they have to manually enter data into their respective systems.

The ability to verify that a customer or supplier has ordered the correct items sent all or part of a shipment or has paid an invoice on time can help small businesses reduce errors and run more profitably.

There is a need to facilitate the secure exchange and verification of electronic data between businesses that have compatible business management systems.

The present disclosure presents a novel technique for securely exchanging and verifying electronic data between multiple entities that share a common accounting link and that utilize the same business management system without compromising access to confidential or otherwise unauthorized data of any of the entities. In general the technique utilizes serializable data transfer objects conversion algorithms and comparison functions. The serializable data transfer objects are used to share business data over a secure communication path eliminating the need for an active user connection between entities wishing to exchange and verify data. A conversion algorithm transforms a subset of the business data contained within the transfer objects into a data string that is compared to data strings from other objects related to the transaction that were transformed by the same conversion algorithm. If the data strings are not identical a discrepancy exists. The transfer objects relating to a given business transaction are linked by a serializable data transfer object dedicated to the transaction. Security of business data between the participating entities is maintained both because there is no remote user connection between any of the participating entities and because the participating entities have the option of accepting or not accepting the data being exchanged into their business management systems. In addition a comprehensive audit trail of records relating to the transaction is created.

The secure data verification technique can be utilized in a variety of business settings and computing environments. As a non limiting example it can be part of a web based or web centric accounting and general ledger system in a client server configuration. One implementation of the technique contains a user interface in the client module that sends information to the server and receives information requests from the server and a server module that receives information requests from the client and sends information to the client. A portion of the data relating to a business transaction to be verified is captured from the transaction record which remains intact and in its original state. A subset of the captured data is copied and transformed into a fixed size string of data via a conversion algorithm. The captured data and the data string created by the conversion algorithm are then encapsulated into a serializable data transfer object. The transfer object is then linked to another serializable transfer object that links all the transfer objects relating to the transaction. These objects are then transmitted over a secure communication path to the other participating entity or entities. The data strings contained in the transfer objects can be compared to data strings from other transfer objects that are related to the transaction and transformed by the same conversion algorithm. If the data strings are not identical a discrepancy exists between the transaction records associated with the transfer objects being compared. Transfer objects can be accessed by any of the entities participating in the transaction regardless of which entity created them but associated transaction records can only be accessed by their originating entities.

It will be appreciated that the method captures values from a predetermined set of fields that are common to transaction records corresponding to business activity between participating entities. Non limiting examples of such common fields can be those that contain information regarding items or services vendors customers dates quantities amounts or other fields agreed upon by the participating entities. Similarly it will be appreciated that the subset of captured data transformed by the conversion algorithm can comprise values from a predetermined set of fields that can indicate meaningful differences between transaction records if those fields in said records contain values that are not identical. Non limiting examples of such fields can be those specifying amounts quantities or other fields agreed upon by the participating entities.

In general embodiments of the secure data verification technique operate to exchange business data related to a given transaction between participating entities by using data transfer objects conversion algorithms and comparison functions to exchange and verify the data contained in the business records of each participating entity.

These embodiments features and aspects are further described in the following detailed description and the figures.

This description is related to and is directed towards a technique to provide for the secure exchange and verification of electronic data between multiple entities that use the same business management system and that have a common accounting link. The various embodiments of the secure data verification technique described herein utilize the non limiting example of a business transaction conducted between two participating entities Company A and Company B. Company A orders widgets from Company B which establishes their common accounting link. Both companies use the same business management system and have agreed to use the technique to exchange and verify data with each other relevant to their business transactions. It should be understood that the reference of the same business management system may include a single shared system however the term is not limited to such a configuration and in fact may include multiple and distributed systems that are running or implementing a compatible business management system. The compatibility may include running identical software applications containing identical hardware including capabilities to communicate over a common protocol sharing file databases and or the like as a few non limiting examples. In general each such business management system is capable of establishing a secure communication path such as by utilizing HTTPS and a public private encryption key system as a non limiting example which will provide encrypted communication and secure identification of a network web server.

The exemplary platform is illustrated as including a processor and a memory element . In some embodiments the processor and the memory element may be communicatively coupled over a bus or similar interface . In other embodiments the processor and the memory element may be fully or partially integrated with each other. The processor can be a variety of processor types including microprocessors micro controllers programmable arrays custom IC s etc. and may also include single or multiple processors with or without accelerators or the like. The memory element of may include a variety of structures including but not limited to RAM ROM magnetic media optical media bubble memory FLASH memory EPROM EEPROM etc. In addition rather than being internal to the platform the memory element may be external to the platform and accessed through a device interface or network interface . The processor or other components may also provide sub components or functionality such as a real time clock analog to digital convertor digital to analog convertor sensors etc. The processor also interfaces to a variety of elements including a control device interface a display adapter audio adapter and a network device interface . The control device interface provides an interface to external devices systems equipment sensor actuators or the like. As non limiting examples the control device interface can be used to interface with devices or systems such as a keyboard a mouse a pin pad and audio activate device a PS3 or other game controller as well as a variety of the many other available input and output devices or another computer or processing device. The display adapter can be used to drive a variety of visually oriented elements such as display devices including an LED display LCD display one or more LEDs or other display devices printers etc. The audio adapter interfaces to and drives a variety of audible or other alert elements such as a speaker a speaker system buzzer bell vibrator etc. The network device interface can also be used to interface the computing platform to other devices or systems through a network . The network may be a local network a wide area network wireless network WIFI Bluetooth cellular 3G etc. a global network such as the Internet or any of a variety of other configurations including hybrids etc. The network device interface may be a wired interface or a wireless interface. The computing platform is shown as interfacing to a server and a third party system through the network . Thus the computing platform can function independently in connection with one or more systems or even as a distributed system. A battery or power source provides power for the computing platform .

It will be appreciated that the computing platform illustrated in may then provide an environment on which an application program system etc. can run and that such application program system etc. may incorporate aspects of the technique or access an external function or system that houses an embodiment of the secure data verification technique. Likewise the computing platform may also illustrate a platform in which a standalone embodiment of the technique may reside such as a smart phone tablet computer lap top computer desktop computer etc. In addition the computing platform may illustrate a platform in which various components of the system may be implemented. For example the client the server and the database may each be implemented on a single platform or multiple platforms . is a block diagram illustrating the use of a secure communication path between participating entities implementing an exemplary embodiment of the secure data verification technique. A protocol such as HTTPS can be utilized as a non limiting example of a secure communication path. HTTPS which is an acronym for Hypertext Transfer Protocol over SSL is a protocol utilizing TCP to transfer hypertext requests and information between servers and other servers and between servers and browsers. The use of this protocol provides encrypted communication and secure identification of a network web server. HTTPS connections are used in many situations in which sensitive information is being communicated. For instance HTTPS is frequently used for payment transactions on the World Wide Web as well as other connections in which sensitive information may be communicated. The detailed operation of HTTPS and the involvement between the various communication network layers is not addressed in detail in this description as those of ordinary skill in the relevant art will be familiar with the technical aspects of HTTPS. As such only a high level overview of the technology is presented. HTTPS provides data privacy for information that is communicated between entities utilizing the application being described. For purposes of this description illustrates a secure communication path between the Server A of participating entity Company A and the Server B of participating entity Company B.

Use of SSL server authentication allows a user to confirm a server s identity. An application that incorporates SSL enabled software can use standard techniques of public key cryptography to check that a server s certificate and public ID are valid and have been issued by a trusted certificate authority. Such confirmation is important if the servers will be transmitting confidential information over the connection the identity of the receiver should be validated prior to the transmission of the information.

It should be appreciated that the communication path between the server and client of a given entity i.e. Server A and Client A may be secured using HTTPS or other techniques and that may or may not involve accessing the internet.

It should be appreciated that other techniques can be used to provide the secured transmission of data and client server communication and authentication and that the use of HTTPS is only one non limiting example. For instance closed networks closed communication channels static signing manual encryption VPNs etc. could also be utilized.

Objects can refer to other objects. As another non limiting example transfer object references objects and . In turn object refers to objects and . It should be appreciated that objects can reference other objects regardless of whether or not any of the objects involved are transfer objects. Any or all of the objects and can be a data transfer object. In an exemplary embodiment of the secure data verification technique data relating to a given business transaction is encapsulated into a transfer object that can be transmitted from the business management system of one participating entity to those of other participating entities.

It should be appreciated that a transfer object is not a remote user connection between participating entities nor does a transfer object require a remote user connection to be transmitted between participating entities.

The descriptions of exemplary embodiments of the secure data verification technique utilize the non limiting example of a business transaction conducted between two participating entities Company A and Company B. Company A orders widgets from Company B which establishes their common accounting link. Both companies use the same business management system and have agreed to use the secure data verification technique to exchange and verify data with each other relevant to their business transactions. As such each has established a secure communication path utilizing HTTPS and a public private encryption key system which provides encrypted communication and secure identification of a network web server.

From transaction record data is captured comprising values from predetermined set of fields . From the set of copied data the client then copies a subset of the data and transforms it into fixed size string of data via conversion algorithm . The client then encapsulates data string and the set of copied data into serializable data transfer object .

Company A initiates a business transaction by creating a record for example a Purchase Order for ten steel widgets in a client module associated with Client A and transmits it to Server A which saves the record in Database A . Client A then captures data comprising values from predetermined fields corresponding to the transaction record. Client A then copies a subset of the captured data and transforms it into a fixed size string of data via a conversion algorithm. Client A then encapsulates both the data string created by the conversion algorithm and the set of data originally captured from the transaction record into a serializable data transfer object. The transfer object is then linked to another serializable transfer object that links all the transfer objects relating to the transaction. Client A transmits these objects to server A which saves them in Database A . The objects are encrypted then transmitted over secure communication path to Company B s Server B where it is decrypted and saved in Database B .

When Company B creates a record relating to the same business transaction for example a Sales Order for ten steel widgets it does so in a client module associated with Client B and transmits it to Server B which saves the record in Database B . Client B then captures data comprising values from predetermined fields corresponding to the transaction record. Client B then copies a subset of the captured data and transforms it into a fixed size string of data via a conversion algorithm. It will be appreciated that the conversion algorithm used by Company B is also used by Company A and all other participating entities. Client B then encapsulates both the data string created by the conversion algorithm and the set of data originally captured from the transaction record into a serializable data transfer object. Client B transmits these objects to server B which saves them in Database B . The transfer object is then linked to the serializable transfer object received from Company A that links all the transfer objects relating to the transaction. The objects are encrypted then transmitted over secure communication path to Company A s Server A where it is decrypted and saved in Database A .

When more than one transfer object relating to a given business transaction exists the two most recent objects are compared to determine if a discrepancy exists between them. Server B compares the transfer object from Company B to the transfer object from Company A by comparing the data streams each object contains. Server A also compares the transfer object from Company B to the transfer object from Company A by comparing the data streams each object contains. It will be appreciated that the comparison function used to compare the data strings from transfer objects is used by all participating entities. If the data streams are identical the values contained in the records they represent are the same as well regardless of which participating entity is doing the comparison.

The user selects the desired company via Company Name search dialog and the desired transfer object via transaction search dialog . Alternatively the user can utilize transfer object search dialog without using a Company Name search dialog since each transaction will typically have a unique identifier.

Once a transaction is selected a list of the records comprising it displays in Linked Records table . Each row contains information for one record along with the record s discrepancy status. A record can be selected by clicking on its corresponding row in the table. The contents of the selected record s item table display in Item Table . The discrepancy flag for a selected record can be cleared by clicking Clear Selected Flag button . All discrepancy flags for the transaction can be cleared by clicking Clear All Flags button .

