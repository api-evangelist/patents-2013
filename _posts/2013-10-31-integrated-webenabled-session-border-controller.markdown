---

title: Integrated web-enabled session border controller
abstract: The present invention provides a system and method for real-time communication signaling between HTML5 endpoints and between HTML5 endpoints and the IMS Core of a telecommunications network. The method adapts complex signaling on the server-side into simple operations towards the Web. In an embodiment the system includes an integrated web-enable session border controller (WSBC) including a network-side controller/a signaling engine, a media gateway and a client-side controller. The client-side controller provides a JavaScript API to encapsulate the signaling layer. The WSBC also includes session border control functionality, terminates Internet domain communications with the client-side, parses, and normalizes the Internet domain communications into an internal protocol suitable for communication with telecommunications network systems. The system thereby provides a dedicated signaling channel with the network-side controller for applications on the client to interact with telecommunications network services.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09473581&OS=09473581&RS=09473581
owner: ORACLE INTERNATIONAL CORPORATION
number: 09473581
owner_city: Redwood Shores
owner_country: US
publication_date: 20131031
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

This patent application is a continuation in part continuation of U.S. patent application Ser. No. 13 758 768 entitled Real Time Communication Signaling Gateway filed Feb. 4 2013 Inventors Honggang frank Zhu Boris Selitser and Karthic Loganathan which application is incorporated herein by reference in its entirety.

This patent application is related to the following patent applications which are hereby incorporated by reference in their entirety 

U.S. Patent Application titled SYSTEM AND METHOD FOR EXTENDING IP MULTIMEDIA SUBSYSTEM TO HTML5 ENVIRONMENTS application Ser. No. 14 069 214 filed Oct. 31 2013 

U.S. Patent Application titled JAVASCRIPT API FOR WEBRTC application Ser. No. 14 069 236 filed Oct. 31 2013 

U.S. Patent Application titled BROWSER HTML FRIENDLY PROTOCOL FOR REAL TIME COMMUNICATION SIGNALING application Ser. No. 14 069 308 filed Oct. 31 2013 

U.S. Patent Application titled GENERIC MODEL FOR CUSTOMIZING PROTOCOL BEHAVIOR THROUGH JAVASCRIPT application Ser. No. 14 069 297 filed Oct. 31 2013 and

U.S. Patent Application titled JAVA API FOR PROGRAMMING WEB REAL TIME COMMUNICATION APPLICATIONS application Ser. No. 14 069 263 filed Oct. 31 2013.

The present invention relates to a system and method for extending telecommunications networks to the Web environment. In particular the present invention relates to extending IP Multimedia Subsystem as utilized by telecommunications networks to the web environment.

With the explosive proliferation of IP enabled mobile and fixed devices capable of offering Web telecom and entertainment services such as 3G 4G enabled smart phones TVs home appliances gaming consoles and automobiles among others operators of mobile broadband and fixed networks are faced with the operational and business challenges of delivering innovative IP based communication services with maximum profitability. In order to achieve this goal customers are increasingly migrating away from expensive closed proprietary and application specific legacy platforms and towards low cost open standards based unified converged application platforms which dramatically lower the time and cost of adding new features and extensions to existing IP based communication services.

Session Initiation Protocol SIP is a control signaling protocol developed to manage interactive multimedia IP sessions including IP telephony presence and instant messaging. SIP is widely used in telecommunication networks. SIP and other communications centric protocols are complex and their implementation requires significant domain expertise. However SIP is not readily compatible with HTTP and use in the Internet domain.

The IP Multimedia Subsystem IMS is an architecture for an integrated network of telecommunications carriers that would facilitate the use of IP Internet Protocol for packet communications in all known forms over wireless or landline. Examples of such packet communications include traditional telephony fax e mail Voice over IP VoIP instant messaging IM videoconference sessions and video on demand VoD . IMS uses a Voice over IP VoIP and runs over the standard Internet Protocol IP . IMS gives network operators and service providers the ability to control and charge for each service. IMS architecture has the capability to support existing phone systems both packet switched and circuit switched . Thus IMS provides the interoperability security session management and QoS capabilities that telecommunications providers lack and desire. IMS is the de facto standard for next generation networks.

HyperText Markup Language HTML is the main markup language for creating web pages and other information that can be displayed in a web browser. HTML is written in the form of HTML elements consisting of tags. HTML elements form the building blocks of all websites. HTML allows images and objects to be embedded and can be used to create interactive forms. It provides a means to create structured documents by denoting structural semantics for text such as headings paragraphs lists links quotes and other items. It can embed scripts written in languages such as JavaScript which affect the behavior of HTML web pages. The purpose of a web browser is to read HTML documents and compose them into visible or audible web pages. The HTML environment has a well known behavior according to standards established by the World Wide Web Consortium W3C which is the main international standards organization for the World Wide Web abbreviated WWW or W3 .

HTML5 introduced WebRTC application programming interfaces APIs that make it possible for applications that use JavaScript in an HTML5 environment to take part in real time communications. To make use of this capability applications that reside in the browser environment of one user need to exchange messages with another application to establish media connections. However the signaling process of exchanging and negotiating session information is not specified by W3C and is left to the application to implement. The problem is more complicated if it is desired to make a connection with a non browser media endpoint like a traditional telephony equipment.

It would be desirable provide access to the network services made available in the IP Multimedia Subsystem IMS from the HTML environment and in particular the HTML environments capable of real time communication environment for example HTML5. However extending IMS architecture to the HTML environment is difficult owing to incompatibility of SIP with HTTP over TCP IP and the requirement for domain expertise to overcome such incompatibility. There is presently no simple way to extend the network services of the IP Multimedia Subsystem IMS to HTML5 applications without radical changes to the IMS model and custom extensions to the HTML platform to permit a browser to be used as an endpoint for IMS services. Thus despite the desire to extend the enhanced capabilities that IMS provides to the HTML environment such integration has not been readily feasible.

It would therefore be desirable to provide a system and method for extending IMS architecture to the HTML environment which is effective and simple to implement.

It would further be desirable to provide a system and method for extending IMS architecture to the HTML environment without radical changes to the IMS model or custom extensions to the HTML platform.

It would further be desirable to provide a system and method for extending IMS architecture to the HTML environment which can be implemented without domain expertise.

It would still further be desirable to provide a system and method for extending IMS architecture to the HTML environment while also providing border gateway functionality at the edge of the IMS architecture network.

The present invention provides a system and method for extending IMS architecture to the HTML environment which overcomes the limitations of the state of the art.

The present invention provides a system and method for extending IMS architecture to the HTML environment which is effective and simple to implement.

The present invention provides a system and method for extending IMS architecture to the HTML environment without radical changes to the IMS model or custom extensions to the HTML platform.

The present invention provides a system and method for extending IMS architecture to the HTML environment which can be implemented without domain expertise.

The present invention provides a system and method for extending IMS architecture to the HTML environment utilizing an integrated web enabled session border controller SBC at the edge of the IMS architecture network.

In an embodiment the system and method of the present invention provide a communication channel between an HTML capable application or operating system and the IMS core of a telecommunications network utilizing an integrated web enabled session border controller WSBC for example ORACLE WebRTC Session Controller WSC at the edge of the IMS architecture network. The system and method overcome the need for domain expertise of complex SIP and other communications centric protocols. The system and method provides a mechanism to combine complex signaling in the IMS telecommunications network into simple operations towards the Web. The present invention thereby provides a platform which enables telecommunications providers to provide a better end to end customer experience accessible from a wide variety of HTML capable consumer devices.

In an embodiment the system and method of the present invention comprise a client side controller integrated web enabled session border controller WSBC including a network side controller and a communications protocol for communicating between the client side controller and the network side controller. The client side controller provides client side JavaScript APIs to interface with the HTML capable application or operating system and encapsulate the HTTP signaling layer. The network side controller component of the WSBC terminates the communications with the client side and parses and normalizes the communications into an internal protocol suitable for communication with IMS within legacy telecommunications network systems for example XMPP SIP and the like . The communications protocol provides a communication channel which is compatible with transmission over the Internet domain. The WSBC provides session border control functionality with integrated web enabled communication provided by the network side controller. In combination the system and method provides session border control and border gateway function at the edge of the IMS network while simultaneously providing a dedicated signaling channel for all the applications on an HTML client to interact with the IMS of telecommunications network services.

Other objects and advantages of the present invention will become apparent to those skilled in the art from the following detailed description of the various embodiments when read in light of the accompanying drawings.

In the following description the invention will be illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. References to various embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations are discussed it is understood that this is provided for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the invention.

Furthermore in certain instances numerous specific details will be set forth to provide a thorough description of the invention. However it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in as much detail so as not to obscure the invention.

Common reference numerals are used to indicate like elements throughout the drawings and detailed description therefore reference numerals used in a figure may or may not be referenced in the detailed description specific to such figure if the element is described elsewhere. The first digit in a three digit reference numeral indicates the series of figures in which the element first appears.

A session border controller SBC is a system used in networks to exert control over the signaling and media streams. It is involved in setting up conducting and tearing down telephone calls or other interactive media communications. An SBC by exerting influence of the data streams traversing the border of the network can perform functions including Security e.g. protecting the network and devices from malicious attacks fraud and malformed packets topology hiding and encryption Connectivity e.g. facilitate network communication by NAT traversal SIP normalization and VPN connectivity Quality of Service QoS policy can be implemented in an SBC including traffic policing resource allocation rate limiting call admission control measurement of call statistics and quality regulatory like lawful interception media trans coding P CSCF functionality etc. For example in order to hide the network topology and protect the service provider or enterprise packet network an SBC can terminate a received call leg and initiate a second call leg to the destination party. In technical terms when used within the SIP protocol this is defined as being a back to back user agent B2BUA . The effect of this behavior is that not only the signaling traffic but also the media traffic voice video can be controlled by the SBC. SBCs are inserted into the signaling and or media paths between calling and called parties in a VoIP call predominantly those using the Session Initiation Protocol SIP H.323 and MGCP call signaling protocols. For example a conventional SBC not shown may be associated with P CSCF of which is the entry point for the SIP endpoints.

From an IMS network perspective network side controller sits in the edge of IMS core and is architecturally parallel to a P CSCF. While P CSCF is the entry point many times along with a Session Border Controller for the SIP endpoints network side controller serves as the entry point for HTML5 endpoints. It is advantageous to integrate border control and border gateway functionality and web enabled network side controller into an integrated Web enabled Session Border Controller WSBC to provide session border control functionality at the entry point for HTML5 endpoints. WSBC can provide conventional functionality of an SBC including Security Connectivity Quality of Service and regulatory functions and in addition new functions including 1 handling HTTP WebSocket signaling traffic and potentially relaying it to a telecom protocol 2 interoperating with media technologies used by WebRTC like TURN when some participants in the communication may not be using WebRTC and 3 handling the media security and operating as a gateway between WebRTC HTML5 clients and non HTML5 clients.

In an embodiment of the invention WSBC can allow network operators to manage WebRTC communications that are made on their networks fix or change protocols and protocol syntax to achieve interoperability and also overcome some of the problems that firewalls and network address translators NATs present for WebRTC communications. As a centralized network element WSBC can act as a STUN TURN server or provide other techniques for media communication from the HTML5 applications to help them traverse NAT and firewall per the ICE procedure and also act an interactive connection establishment ICE gateway to SIP user agents that communicate with HTML applications terminating the ICE negotiation and Secure Real time Transport Protocol SRTP communication from HTML5 applications as appropriate.

Referring again to IMS Core IP Multimedia Subsystem or IP Multimedia Core Network Subsystem is an architectural framework for delivering IP multimedia services. As shown in IMS Core comprises S CSCF P CSCF Media gateway controller function MGCF HSS Application Server and Media Server . These elements are shown as an example of conventional IMS architecture. IMS Core may contain additional and or different elements depending upon the implementation of a particular network. The present invention is not limited to any particular implementation of IMS Core . Indeed it is a feature of the present invention that it extends whatever features are present in IMS Core to the Internet domain.

To ease the integration with the Internet IMS uses IETF protocols wherever possible e.g. Session Initiation Protocol SIP . IMS Core includes network elements designed to interact with SIP User Agents and PSTN . As used herein a user agent is an SIP endpoint that can be considered anything that either originates or terminates a SIP session e.g. SIP Phones Soft Phones and the like. Typically such devices must be specifically designed to implement SIP in order to function as SIP User Agents . In addition the IMS Core can exchange signaling and media messages with a public switched telephone network PSTN . IMS Core facilitates access to multimedia and voice applications from wireless and wireline terminals to create a form of fixed mobile convergence FMC . This is done by having a horizontal control layer that isolates the access network from the service layer. From a logical architecture perspective services need not have their own control functions as the control layer is a common horizontal layer.

Referring again to the IMS Core shown in P CSCF represents the proxy call session control function which is an entry point for a SIP user agent and authenticates users and establishes IP security integration with the SIP user agent . Media gateway controller function MGCF is the entry point for signaling and media messages transmitted via public switched telephone network PSTN . MGCF and P CSCF are used to process ingoing and outgoing SIP signaling packets in the IMS Core . On the network side MGCF and P CSCF interact with S CSCF using Session Initiation Protocol SIP .

S CSCF is the central node of the signaling plane. It is a SIP server but also performs session control. S CSCF is located in the home network. It uses Diameter Cx and Dx interfaces to the Home Subscriber Server HSS to download user profiles and upload user to S CSCF associations. All necessary subscriber profile information is loaded from the HSS . S CSCF inspects every message from the SIP user agent and or other network elements and decides where the SIP message should be forwarded for service provision. An Application Server hosts and executes services and interfaces with the S CSCF using SIP. Additionally a media server provides media related functions such as media manipulation e.g. voice stream mixing and interfaces with the S CSCF using SIP. S CSCF may also allow for provisioning of services and or media services from an external server .

As described above the elements of IMS Core communicate with the central node of the signaling plane S CSCF using Session Initiation Protocol SIP alternative session oriented protocols may also be used including for example XMPP . However SIP is not easily compatible with conventional protocols for transmission over the Web . Integration of IMS Core is therefore difficult owing to incompatibility of protocols used in the two different environments and the requirement for domain expertise to overcome such incompatibility. The present invention provides a solution to such problems and therefore allows for extending the IMS Core to the Web .

Network side controller is an entry point for HTTP traffic from Web . Network side controller . According to an embodiment of the present invention network side controller is and integrated part of WSBC which implements session border controller border gateway functionality at the edge of IMS Core . Network side controller terminates Internet domain communications with the client side and parses and normalizes the Internet domain communications into an internal protocol suitable for communicating with elements of the IMS Core e.g. S CSCF within legacy telecommunications network systems for example XMPP SIP and the like . Network side controller has the ability to leverage applications in the IMS application server instead of hosting a separate custom business application on its own thus greatly simplifying integration with IMS Core . Network side controller communicates with client side controller using a protocol adapted to meet the real time signaling requirements of SIP while remaining compatible with transmission over Web .

The client side controller operating on User equipment provides a client side JavaScript API to interface with HTML capable applications operating systems and encapsulate the HTTP signaling layer. The system and method thereby provides a dedicated signaling channel for all the HTML capable applications OS on the User Equipment to interact with the IMS Core of the telecommunications network.

User equipment represents any HTML capable device including for example computing devices such as personal computers laptops desktops notebooks netbooks tablets mobile phones and e book readers. Moreover HTML capabilities are being added to consumer devices such as appliances automobiles set top boxes amplifiers audio visual components televisions projectors and the like. HTML capabilities may be provided by a browser for example Safari Firefox Chrome Browser and Internet Explorer. Alternatively HTML capabilities may be a core component of the operating system for example Chrome OS.

Network Side Controller of WSBC can be implemented as a signaling engine which acts as a signaling server to support communications between browser clients and communications between the browser clients and a non browser client e.g. SIP User Agent . The Network Side Controller can handle web signaling messages that come from the browser clients e.g. browser clients and the non web signaling messages that come from the non browser clients e.g. SIP User Agent . Network Side Controller can also act as a cross protocol gateway that translates between the web signaling messages and the non web signaling messages.

As shown in NAT Firewalls are deployed to provide private addresses combinations of IP and ports of applications behind the NAT Firewalls and to keep out malicious attackers. In order for applications in the two browser clients to establish a connection traffic needs to be passed between public addresses exposed by the NAT Firewalls and the private addresses of the browser clients NAT traversal .

Interactive Connectivity Establishment ICE defines a mechanism for NAT traversal by providing a set of candidate transport addresses for each media stream which are then validated with peer to peer connectivity checks using Session Traversal Utilities for NAT STUN and or Traversal Using Relays around NAT TURN . STUN is a standardized set of methods and a protocol which allows a client behind a network address translator NAT firewall to ask a STUN server on the public internet about its IP address and port which may be used by a remote peer. However addresses obtained by STUN may not be usable by all peers depending on the topological conditions of the network. TURN is a protocol that allows a client to obtain a transport address from which it can receive media from any remote peer.

In an embodiment of the invention the WSBC can provide STUN TURN server function to the browser clients helping them traverse NAT Firewall per the ICE procedure. For example STUN TURN Server Function of WSBC can provide a transport address using TURN. Additionally STUN TURN Server Function can be configured to modify the signaling messages between the browser clients to remove non TURN candidates from the session description SDP information and force media streams of certain calls to go through the Network side Controller instead of taking a pure browser to browser route. This assists in enforcing lawful interception in certain deployments.

In an embodiment of the invention before sending out a START message to initiate a request for a call to the browser client the browser client needs to discover candidate IP addresses and ports that the browser can use to send data to the browser client . The candidates can include local candidates host candidates reflexive candidates from a STUN TURN Server Function and relay candidates from STUN TURN Server Function . The START message can then be sent with the candidates in the body SDP block of the message. The browser client can come up with its own candidates for the browser client to send data to. After receiving the candidates from the browser client the browser client can start testing and building a matrix with possible media channels. After both browser clients agree on the IP protocol and port combinations they can create a media channel to transfer media information between them using e.g. a Real time Transport Protocol RTP or Secure Real time Transport Protocol SRTP .

In an embodiment of the invention the communication between the browser client and the SIP user agent can take similar steps except that the web protocol message from the browser client would be converted into a legacy protocol e.g. SIP at the edge of IMS Core and that the media engine can terminate SRTP communication from the browser client as needed. For example a service provider may have rules and policies to terminate SRTP communication and convert the communication into RTP by manipulating the parameters of the SDP using an API provided by WSBC so that the communication can be integrated with non SRTP capable PSTN gateways or endpoints. For example the communication from the browser may be encrypted using SRTP and the SIP user agent may not be SRTP capable. In this situation the Network Side Controller can terminate the communication decrypt it translate it into SIP messages and send the SIP messages to the SIP user agent using RTP. In an embodiment of the invention a control protocol e.g. JsonRTC is implemented within WSBC to enable STRP termination.

In an embodiment of the invention the Media Gateway can act as an ICE gateway between the SIP user agent and the browser client B. It can terminate the ICE negotiation from the browser client B. For example some SIP user agents within an IMS network domain e.g. the SIP user agent do not support ICE which requires support for ICE for the protocol to work. Acting as an ICE gateway the Media engine can determine that the SIP user agent does not support ICE and terminate the ICE negotiation from the browser client . However alternatively the Media Gateway can act as an ICE agent for the browser on one side and a non ICE agent for the SIP user agent on the other side thus enabling a call from the browser to the SIP user agent to make use of ICE.

WSBC can be configured to register an application with an external SIP registrar. WSBC is also configurable to act as a registrar for SIP clients. On the web side it is very common for browsers UA to be behind NAT Network Address Translation devices . NATs allow a number of devices to share an IP address. ICE is a standard protocol for establish connection between endpoints behind NAT. For example Browser Client behind NAT Firewall trying to connect with SIP User Agent behind WSBC will gather potential address candidates local address reflexive address and relay address from STUN TURN Server these candidates are prioritized and encoded in a candidate lines in the SDP.

Registration Scenario 1. Browser Client logs in The HTTP GET request sent by the web browser for the WebSocket handshake includes a Cookie RFC6265 header with the value previously retrieved after the successful web login procedure. The Cookie value is then inspected by the WebSocket server for authorizing the connection. Once the WebSocket connection is established the Client sends in a C ONNECT request. WSBC acts as a SIP outbound proxy RFC 5626 and the SIP Registrar is behind the outbound proxy. WSBC adds the header and contact header to the request it sends to the SIP Registrar.

Registration Scenario 2. In case the user is associated with multiple devices all the devices are referenced by the same AOR in this context it is desirable to have an identifier which addresses a single device UA rather than a group of UAs with an AOR Address of Record . A device identifier URI as mentioned in RFC 5626 section 4.1 shall be generated by the client web app running in the browser the first time it loads the JavaScript API and then it is stored as a Cookie within the browser this can also be the websocket connection identifier . This instance specific URI is mapped as GRUU RFC 5627 by the WSBC identifies a specific user agent where the user is signed on. The following is an example of a Registration Message.

Registration Scenario 3. In case of SIP clients WSBC acts as an outbound edge proxy and includes a path header RFC3327 so that when the proxy registrar later forwards a request to this UA the request is routed through the edge proxy of WSBC .

The SDP information contains the description of what to transmit to the remote side as well as how to handle the media received. For example the list of codecs sent to a remote party indicates what the local side is willing to decode and what the remote party should send. In an embodiment of the invention WSBC can modify the Session Description Protocol SDP information of signaling messages. WSBC provides SDP API which enables SDP information to be updated at WSBC layer on the way to from Browser Client if needed. WSBC is operative to allow configuration of SDP information at the application level. For example all the traffic from a specific application can have a selected media parameter added to the SDP information. Modification of SDP information by WSBC is useful for lawful interception ICE termination security conversion optimizing ICE candidate selection forcing codec choice and compatibility based on destination capabilities and optimal cost updating desired bandwidth attributes for each stream and media trans coding.

In an embodiment of the invention the WSBC provides Application Programming Interfaces SDP API for manipulating individual lines as well as entire media descriptions in a SDP. The session description consists of a session level description details that apply to the whole session and all media streams and optionally several media level descriptions details that apply to a single media stream . SDP API provides the capability to modify both the session level description as well as the media level descriptions. For example SDP API allows the operator to add modify remove and insert an SDP parameter at both the session level and the media level. For example of SDP modification at the media level SDP API allows a operator to remove lines a ptime 20 from the audio media description only at the specified media level. The following is a sample list of SDP parameters configurable using SDP API of WSBC .

SDP API enables the functionality to modify both the session level description as well as the media level descriptions. However the SDP API SDK is designed such that knowledge of the structure of SDP for the purposes of normalization is minimized. SDP API allows the operator to modify the SDP by 

In an embodiment of the invention the SDP definition can also be modified on the client e.g. Browser Client using a JavaScript API provided in a client SDK.

Further details of one possible implementation of the system and method of the present invention are described below with respect to in which Network side controller is implemented as the signaling engine component of WSBC Client side controller is implemented as RTC Client Signaling Controller and protocol is implemented in JavaScript Object Notation JSON .

RTC Controller provides scalable signaling over HTTP web centric protocols for communicating over Web with RTC Client Signaling Controller . RTC Controller communicates with RTC Client Signaling Controller via WebSocket interface . RTC Controller provides a highly available encapsulated front end interface to the web developer. The RTC Controller terminates the Internet domain communications with the client side by managing the WebSocket connections. The RTC Controller also parses and processes the Internet domain communications. The RTC Controller normalizes the Internet domain communications into an internal SIP for communication within Gateway . Thus RTC Controller communicates internally with Service Composition Controller using a binary SIP.

Service Composition Controller provides for service composition and orchestration across domains and different providers. The Service Composition Controller also provides a unified layer to inject charging and policy control for differentiated service offerings. In an embodiment the functionality of Service Composition Controller can be integrated in to a converged application server for example ORACLE Communications Converged Application Server OCCAS . Alternatively the functionality of Service Composition Controller can be integrated in to a service controller for example ORACLE Communications Service Controller OCSC .

Service Composition Controller adopts and reuses existing internal communication services with support for different signaling protocols. Thus for example Service Composition Controller can mediate Internal Services providing network telephony signaling using the SS7 protocol and Internal Services providing services using internet protocol .

Service Composition Controller can also mediate the provision of external services provided by an external service provider . Communication with external provider can be conducted using a selected signaling protocol SIP XMPP etc as required by the external provider . Services provided by external provider can include web services provided over Web to a browser client on user equipment . Service Composition Controller thus enables external providers of over the top OTT services to provide OTT services to users clients. The gateway system enables the external providers to make use of the real time communication signaling over IMS. The users clients can then access web applications provided by external providers from a browser on the user equipment.

The gateway system acts as the IMS proxy for both HTML5 and external providers by taking advantage of WebSocket technology to enable and expedite the IMS deployment. The WebSocket Protocol defines a mechanism for fast secure two way communication between a client and a server over the Web. Data is transferred over a full duplex single socket connection allowing messages to be sent and received from both endpoints in real time. To establish a WebSocket connection a specific HTTP based handshake is exchanged between the client and the server. If successful the application layer protocol is upgraded from HTTP to WebSocket using the previously established TCP transport layer connection. After the handshake HTTP is no longer used and data can be sent or received using the WebSocket protocol by both endpoints until the WebSocket connection is closed.

RTC Client Signaling Controller is resident on user equipment and manages multiplexing of signaling request response for all client side applications mediating communication with RTC Controller over HTTP web centric protocols. The particular HTTP protocol used can be defined as required by the particular native or external service for example JSON XML XMPP Skype protocol etc. A client side library of available protocols is provided as part of an SDK in order to extend the services to the client.

For telephony applications low power consumption by user equipment is desirable. Accordingly RTC Client Signaling Controller can be placed in standby operation when not involved in signaling. Moreover WebSocket protocol must be initiated from the client side and is also responsible for keeping the connection alive. Thus the RTC Client Signaling Controller will shut down the WebSocket Connection when there is no traffic. RTC Push Notification Controller can be used by RTC Controller to wake up RTC Client Signaling Controller from the standby state in order to resume communication. The RTC Push Notification Controller may in some embodiments also be used for other notifications such as call notifications message notifications and the like. In an alternative embodiment the keepalive and pingpong capabilities of the WebSocket protocol may be used to maintain WebSocket connection.

RTC Push Notification Controller includes a server side HTTP connection based Push Notification to wake up the client side signaling process. RTC Client Signaling Controller can utilize any push notification mechanism and protocol effective for user equipment . For example RTC Push Notification Controller can utilize the SMS message system to activate RTC Client Signaling Controller thereby causing RTC Client Signaling Controller to reactivate the WebSocket connection with the RTC Controller .

WSBC SE including a runtime module supports multiple signaling protocols and ensures correct mapping of the signaling message using parameter transformation module and correct routing of the messages based on routing profiles using routing manager . Parameter transformation routing and JSON templating are all configurable using a configuration file .

WSBC SE performs protocol mapping between the selected client side protocol and the network side protocol SIP . For example WSBC SE is adapted to receive a JSON message parse the SDP information and map it to other supported protocols SIP XMPP . WSBC SE maintains a data definition for the format to parse to. When the JSON request is received at WSBC SE the transformation between the data definition and the JSON message structure must be implemented.

WSBC SE acts as a cross protocol signaling engine and handles the protocol associated state as demanded by the protocol. When WSBC SE is acting as a cross protocol gateway for example JSON WebSocket to SIP the SIP side of WSBC SE maintains the transaction and dialog state. WSBC SE includes a protocol state management module which manages the protocol state and ensures state replication for reliability of message exchange. WSBC SE has the ability to manage enormous amounts of concurrent client connections in order to be able to scale to the applications and users on the web.

For developers the key is to leverage existing knowledge and skill sets to minimize additional time and resources required by security features implementation. WSBC SE comes with APIs that support multiple platforms running under multiple protocols and a set of client libraries to facilitate smooth development process. WSBC SE thus additionally provides an extensibility framework to extend the capabilities via protocol adaptors and APIs for the web developers to call the WSBC SE functions from their applications.

WSBC SE provides signaling adaption such that WSBC SE handles all the signaling between the browser client and the network end point SIP Proxy PSTN Gateway for example . WSBC SE is adapted to handle the message exchange using several protocols over WebSocket RFC 6455 including for example JSON based protocol via JSON Stack XMPP sub protocol via XMPP Stack SIP sub via SIP Stack BOSH XEP 0124 and COMET Bayeux protocol not shown . On the network carrier side the web signaling engine supports translation into a suitable communication protocol or protocols e.g. XMPP SIP and the like . Thus for example on the network carrier side WSBC SE supports SIP RFC 3261 .

Security for real time communication over the Web requires that the communicating endpoints be able to authenticate each other. While these end points are making calls through the signaling services their identities are authenticated via an Identity Provider Management Module IDP that supports OAuth Facebook Connect FBC and other Identity Protocols using extensions e.g. OpenID connect . IDP Management modules interact with internal and or external user database and identity servers .

WSBC SE thereby acts as an identity service that can attest the identity of the caller of the received request and map it to the from identity of the outbound call. For example WSBC SE includes OAUTH module which introduces security functions that authenticate and authorize the browser based applications to interact with the network services. WSBC SE thereby provides service providers with the ability to control any third party partner s access and usage of its network capabilities.

Establishing real time communication over the Web also utilizes verification of service level agreements SLA for the user and application. SLA Management module includes an authentication module as well as an application SLA module and network SLA module which communicate with internal and or external databases to verify that the communications are provided in conformance with the relevant service level agreements for the user and application.

In a particular embodiment WSBC SE defines a JavaScript Object Notation JSON protocol that is used for exchanging information and to control the set up of media between a browser client and WSBC SE . JSON is a lightweight data interchange format however other data interchange formats may be used in alternative embodiments. The JSON protocol can be used on multiple transports COMET BOSH and WebSocket . When used on WebSocket transport the protocol is defined as a sub protocol of the WebSocket protocol.

The JSON protocol or alternative data interchange format defines the basic structure for the information transfer between the browser client and WSBC SE . The JSON protocol defines the minimum set of messages and state machinery necessary to implement the offer answer model. The JSON protocol defines the message structure that accounts for the reliability reconnect retransmissions timeouts etc of the message. The JSON protocol also handles the necessary headers to function in multilevel secure environment security headers .

WSBC SE also provides an internal routing manager for the routing of the requests to the appropriate end nodes based on variety of parameters. There are multiple WSBC SE instances see and each instance is connected to the network node serving the functionality. The incoming requests JSON messages for example have to be routed to the right application and instance. WSBC SE uses routing manger to route incoming requests based on their origination and destination. WSBC SE provides functionality including performing look ups and route requests for JSON to SIP JSON to XMPP SIP to XMPP XMPP to SIP. Each route in the routing manager has a routing profile. WSBC SE provides a default routing profile and additional routing profiles are configurable as needed or desired.

WSBC SE ensures reconnection of clients due to failover or loss of connectivity. Clients and servers use an implicit sequence numbering protocol for the message transported by the connection. Clients and the servers each maintain their own sequence number. Both client and server acknowledge their receipt of messages by sending acknowledgement ack messages. As per the protocol an ack message indicates that the message has reached the destination as well as all the messages lower than that sequence . Similarly an error message shall be defined as in the JSON protocol section to indicate that the message with a sequence number has met with an error. Retransmission Queue A B allows for retransmission of messages for which there is an error or lack of acknowledgement.

One way in which WSBC SE maintains reliability is to keep the relevant conversation state redundant across different servers A B having instances of WSBC SE . WSBC SE provides for state maintenance and session state mapping across protocols. The relevant conversation state includes a Web Side State Machine and SIP Side State Machine for each In Flight Transaction . WSBC SE maintains the session states both client and server side state in the cache. In order to ensure reliability the cached copy of the state machines is duplicated on several servers. Additionally retransmission queue A B is duplicated across servers A B. WSBC SE uses coherence for state storage and management. If a server for example server A cannot be contacted due to a network failure WSBC SE ensures that the state is retrieved from another active server B as shown by the dashed arrows .

In an embodiment application is a JavaScript Application. Application operates at a high level without having to deal with peer connection directly. The browser client is stateless and contains as little of the implementation of the transport establishment code as possible. Browser client identifies the capabilities of the browser client and user equipment for streaming media. The capabilities are provided to the SDP adapter of the application . SDP adapter provides a description of streaming media initialization parameters a session profile suitable for streaming media to the browser client running on user equipment .

A client side library of available protocols is provided as part of a Client SDK in order to extend the services to the browser client . The particular HTTP protocol used can be defined as required by the particular native or external service for example JSON XML XMPP Skype protocol etc. In a preferred embodiment a JSON protocol is used for communication between client side RTC signaling controller and WSBC SE as described above.

Protocol serialization interacts with protocol state view and connection manger to communicate with WSBC SE over Web . Session Control establishes reliable connection with WSBC SE . This session can be used by the application to create or invoke other objects.

RTC signaling controller comprises a JavaScript SDK which provides the functions necessary for application to manage server connections connection establishment teardown via WebSocket . The JavaScript SDK provides functions necessary to handle the state machine and functions to deal with interoperability issues. For example the JavaScript SDK of application provides functions to create messages or insert messages into the state machine. The JavaScript SDK also provides functions for the client to monitor connection health including the ability to reconnect in case of stale connections and the ability to synchronize state from the server and add modified state back to the server.

JavaScript SDK also provides an application programming interface API which can modify and optimize media parameters session description protocol SDP etc. The API abstracts out complex functionality and provides API to deal with the real time communication session Call etc. The API provides the ability to handle call states media states subscriptions and notifications.

In operation HTML5 applications access the JavaScript APIs to get access to various communication objects as defined in the API . An HTML5 application will create a session object . The session object acts as browser side representation of the communication. From session object application can create different communication objects like Call Subscription etc. The HTML5 application can listen on the callbacks from the objects to receive incoming calls notifications media in the call state changes etc.

The Interactive Connectivity Establishment ICE draft developed by the IETF s MMUSIC working group provides a framework to unify the various NAT traversal techniques. ICE defines a standardized method for clients to determine what type of firewall s exist between clients and determine a set of IP addresses by which clients can establish contact. When an ICE enabled client the initiator wishes to communicate with another device the responder it first collects information on addresses where the client can receive IP traffic. A key benefit that ICE provides is the ability to unify the information provided by these various sources of IP address information to create as many paths as possible by which the endpoints can be reached.

For real time communication over the Web the ICE state machine is maintained by the browser client . When the browser client reloads the application has no knowledge of the ICE Candidates and is forced to perform ICE restart. In order to avoid this application can save this information in WSBC SE . When the initial ICE negotiation finishes the browser client sends the nominated ICE candidate pair of IP addresses to the application which saves this information in WSBC SE . When the browser client reloads the application will fetch the nominated ICE candidate information from the server and then send it to the browser client . This will tell the browser client to use these candidates for media transfer. Since the browser client has kept the local nominated ICE candidate alive all the time as long as the remote side has not released the call the transfer will succeed.

Although the invention has been described above with respect to communication services in a telecommunications network the invention also finds application in any situation where it is necessary or desirable to provide real time communication signaling.

The present invention may be conveniently implemented using one or more conventional general purpose or specialized digital computer computing device machine or microprocessor and or network of same programmed according to the teachings of the present disclosure.

Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be readily apparent to those skilled in the art.

The various embodiments include a computer program product which is a storage medium media having instructions stored thereon in which can be used to program a general purpose or specialized computing processor s device s to perform any of the features presented herein. The storage medium can include but is not limited to one or more of the following any type of physical media including floppy disks optical discs DVDs CD ROMs microdrives magneto optical disks holographic storage ROMs RAMs PRAMS EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs paper or paper based media and any type of media or device suitable for storing instructions and or information. The computer program product can be transmitted in whole or in parts and over one or more public and or private networks wherein the transmission includes instructions which can be used by one or more processors to perform any of the features presented herein. The transmission may include a plurality of separate transmissions. In accordance with certain embodiments however the computer storage medium containing the instructions is non transitory i.e. not in the process of being transmitted but rather is persisted on a physical device.

The foregoing description of the preferred embodiments of the present invention has been provided for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations can be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the relevant art to understand the invention. It is intended that the scope of the invention be defined by the following claims and their equivalents.

