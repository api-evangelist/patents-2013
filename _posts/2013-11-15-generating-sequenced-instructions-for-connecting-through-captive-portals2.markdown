---

title: Generating sequenced instructions for connecting through captive portals
abstract: Embodiments produce a set of instructions for connecting to a network through a network access point based on data crowdsourced from mobile computing devices. The crowdsourced data describes interactions between the mobile computing devices and the network access point when establishing a connection to the network. A cloud service analyzes the crowdsourced data to identify a set of instructions for association with the network access point. The mobile computing devices replay the set of instructions when subsequently attempting to connect to the network access point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09554323&OS=09554323&RS=09554323
owner: Microsoft Technology Licensing, LLC
number: 09554323
owner_city: Redmond
owner_country: US
publication_date: 20131115
---
This application is related to a U.S. Patent Application entitled Applying Sequenced Instructions to Connect Through Captive Portals which is incorporated by reference herein in its entirety.

The availability of network access points such as wireless fidelity Wi Fi hotspots has increased significantly. Many of these access points are gated and require user intervention for connection to the Internet or other networks. For example the user may be required to accept terms and conditions provide an email address or hotel room number etc. Some existing solutions attempt to help the users connect to networks such as by managing multiple passwords with a single authentication personal identification number PIN . Some other existing solutions attempt to locate Wi Fi hotspots near the user. However these solutions lack a seamless auto connect experience and fail to leverage understanding gained from connection attempts by other users.

Embodiments of the disclosure produce a set of instructions for connecting to a network through a captive portal based on data crowdsourced from mobile computing devices. A first computing device receives from each of a plurality of second computing devices data describing an interaction between the second computing device and a network access point when establishing a connection to a network. The received data is analyzed to identify a set of instructions for association with the network access point. The identified set of instructions is distributed to one or more of the plurality of second computing devices. The one or more of the plurality of second computing devices applies the distributed set of instructions when attempting to connect to the network access point.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring to the figures embodiments of the disclosure generate sequenced instruction sets for replay by mobile computing devices to connect to networks through network access points NAPs . In some embodiments a cloud service crowdsources data sessions e.g. logs to learn how users typically navigate through each of the NAPs . For example the cloud service reconstructs a series of events that occurred to connect the mobile computing devices through the gated NAPs . The cloud service distributes the sequenced instruction sets to one or more of the mobile computing devices for replay by the mobile computing devices on behalf of the users during subsequent connection attempts through the NAPs . Aspects of the disclosure thus eliminate the challenges friction and tediousness encountered when attempting to connect to the networks by enabling connections in an automated and seamless manner.

The gated NAPs may be described as captive portals with click through user interfaces. For example when the user of the mobile computing device accesses the Internet at a hotel the mobile computing device is redirected to a captive portal web page. The captive portal web page may present advertisements receive acceptance of terms and or conditions of use present confirmation screens accept text input e.g. shared keywords for gaining access to the networks and the like. The crowdsourced data sessions include as an example user actions over the air OTA data such as hypertext transfer protocol HTTP requests and responses device hardware context device software context any enterprise context and data describing the NAPs .

Aspects of the disclosure adapt to changing NAPs by detecting the changes updating the instruction sets and pushing the updated instruction sets to the mobile computing devices all without explicit user intervention. Aspects of the disclosure further enable automatic connection to NAPs without user intervention by automatically replaying the appropriate instruction set when connecting to one of the NAPs . While some embodiments may be described as implemented by a wireless fidelity Wi Fi assist module aspects of the disclosure are operable with any communications protocol. For example the mobile computing device may automatically connect to a free network through a Wi Fi hotspot by accepting default terms of service ToS by accepting ToS with values inserted by scripts executing on the mobile computing device by accepting ToS with text input values e.g. electronic mail address telephone number name etc. and or by providing a shared key e.g. password .

Referring next to an exemplary block diagram illustrates the cloud service communicating with one or more of the mobile computing devices . In the example of the user interacts with the mobile computing device or any other computing device of the user to access content via the network . The mobile computing device connects to one or more of the networks through one or more NAPs such as a Wi Fi beacon and a cellular tower. For each NAP the mobile computing device may perform a series of actions to gain access via the NAP to the network associated with the NAP . After gaining access to the network through the NAP the mobile computing device is able to transmit and receive the content . In this manner the NAP acts as a captive portal.

Communication between the mobile computing device and other devices may occur using any protocol or mechanism over any wired or wireless connection. For example the mobile computing device may attempt to transmit and or receive data over a Wi Fi network a cellular network a satellite network a whitespace network or any network . In some embodiments a NAP is defined to include all NAPs that share the same SSID within a particular geographic area e.g. 100 meter radius . For example a plurality of NAPs within an airport may share the same SSID.

As described further herein the cloud service collects information from the mobile computing devices describing the series of actions performed by the mobile computing devices when connecting to the networks through the NAPs . Such interaction data is processed by the cloud service to generate sequenced instructions for use by the mobile computing devices when subsequently connecting to the networks .

Referring next to an exemplary block diagram illustrates the mobile computing device storing computer executable components for capturing the interaction data between the mobile computing device and NAPs . The components maintained in storage include a sandbox component a parser component and a communications interface component . In some embodiments the communications interface component includes a network interface card and or computer executable instructions e.g. a driver for operating the network interface card. Operation of these components when executed is described below with reference to .

The storage also includes one or more applications and the interaction data . The applications operate to perform functionality on the mobile computing device . Exemplary applications include mail application programs web browsers calendar application programs address book application programs messaging programs media applications location based services search programs and the like. The applications may communicate with counterpart applications or services such as web services accessible via the networks . For example the applications may represent downloaded client side applications that correspond to server side services executing in a cloud.

The interaction data in the storage of the mobile computing device represents the interactions captured by the mobile computing device when connecting to the networks . The interaction data may also represent interactions captured by other mobile computing devices and received from those mobile computing devices and or received from the cloud service .

Referring next to an exemplary block diagram illustrates a computing device associated with the cloud service storing sets of sequenced instructions for connecting to captive portals. Such a cloud computing device represents a system for producing a set of instructions for connecting to the networks through captive portals based on data crowdsourced from the mobile computing devices . The cloud computing device represents any device executing instructions e.g. as application programs operating system functionality or both to implement the operations and functionality associated with the cloud service . Such a device may also be a peer device to the mobile computing devices . The cloud computing device may also represent a group of processing units or other computing devices. In another example the cloud computing device may include a mobile computing device or any other portable device such as a mobile telephone laptop tablet computing pad netbook gaming device and or portable media player. Alternatively or in addition the cloud computing device may include less portable devices such as desktop personal computers kiosks tabletop devices industrial control devices wireless charging stations and electric automobile charging stations.

In some embodiments the cloud computing device has at least one processor and a memory area . The cloud computing device may further have one or more communications interfaces not shown including at least one network interface card and or computer executable instructions e.g. a driver for operating the network interface card. The processor includes any quantity of processing units and is programmed to execute computer executable instructions for implementing aspects of the disclosure. The instructions may be performed by the processor or by multiple processors executing within the cloud computing device or performed by a processor external to the cloud computing device . In some embodiments the processor is programmed to execute instructions such as those illustrated in the figures e.g. .

In some embodiments the processor represents an implementation of analog techniques to perform the operations described herein. For example the operations may be performed by an analog computing device and or a digital computing device.

The cloud computing device further has one or more computer readable media such as the memory area . The memory area includes any quantity of media associated with or accessible by the cloud computing device . The memory area may be internal to the cloud computing device as shown in external to the cloud computing device not shown or both not shown . In some embodiments the memory area includes read only memory and or memory wired into an analog computing device.

The memory area further stores the interaction data such as manual portal assist data describing actions performed by the users when connecting to the networks . The interaction data stored by the cloud service is crowdsourced or otherwise received from a plurality of the mobile computing devices . In some embodiments the interaction data includes request and response data from a web browser such as HTTP request and HTTP response data. However the interaction data may represent data in any form or protocol.

In the example of the memory area stores the interaction data for a plurality of the captive portals such as for captive portal through captive portal N. As illustrated and described with reference to the cloud computing device generates sequenced instructions from the interaction data for the captive portals. As a result the memory area stores correlations associations and or correspondences between the interaction data for each of the captive portals and the sequenced instructions for that captive portal.

Referring next to an exemplary flow chart illustrates operation of the cloud service to crowdsource interaction data to produce a sequenced instruction set. The operations illustrated in are described with reference to execution by the cloud computing device . However aspects of the disclosure contemplate execution of the operations by other devices or processors such as by one or more of the mobile computing devices . Further while an exemplary instruction set schema is described in Appendix A aspects of the disclosure are operable with any instruction set schema.

At the cloud computing device e.g. a first computing device receives from each of a plurality of the mobile computing devices e.g. second computing devices the interaction data describing an interaction between the mobile computing device and at least one of the NAPs when establishing a connection to at least one of the networks . The interaction data represents any set of actions operations procedures or other steps undertaken when attempting to establish the connection. In some embodiments the interaction data is described as manual portal assist data.

Receiving the interaction data includes for example receiving a history of request and response data from a browser or other client executing on each of the mobile computing devices . Each received history represents a successful or unsuccessful attempt by the mobile computing device to connect to one of the networks through one of the NAPs . The history may include data indicating whether or not connection to the NAP was successful. In other embodiments such data is separate from the history. An example of the data indicating whether or not connection to the NAP was successful is described in Appendix B.

At the cloud computing device analyzes the received interaction data from the plurality of mobile computing devices to identify a set of sequenced instructions for association with the NAP . In some embodiments identifying the set of sequenced instructions for the NAP occurs only after the cloud computing device has received interaction data for that NAP from a threshold quantity of users e.g. etc. .

Analyzing the interaction data includes for example grouping the interaction data per NAP e.g. captive portal and analyzing each web page separately. The cloud computing device looks at the differences in the interaction data for that captive portal across each of the users .

Identifying the set of sequenced instructions includes for example enumerating the instructions e.g. step by step for connecting through the captive portal by iteratively processing the interaction data with machine learning algorithms. For example the cloud computing device creates a chain of actions from a first request to a last request to identify the user interactions performed to connect through the captive portal. The cloud computing device enumerates the actions performed by the user such as clicking on a hyperlink executing scripts completing a form etc.

In some embodiments analyzing the received interaction data includes comparing the received interaction data to pre defined set of actions to recognize a pattern. In such embodiments the cloud computing device stores a plurality of pre defined user actions. The pre defined actions may be accumulated over time from the mobile computing devices and or input by an administrator or other operator of the cloud computing device . In some embodiments the cloud computing device stores pre defined sets of user actions such as those received from the NAPs . For example one of the NAPs may publish data describing how to connect through the NAP to one of the networks and the cloud computing device may retrieve the published data.

If the cloud computing device is able to link all the web pages from first to last in the interaction data e.g. by identifying page transitions determining how one page led to another page and or matching or recognizing at least one of the patterns of pre defined user actions the cloud computing device creates the sequenced instruction set from the interaction data . Creating the sequenced instruction set includes as an example assigning at least one verb to each action. Verbs are described below. If the cloud computing device cannot link the web pages from the interaction data the cloud computing device discards the interaction data in some embodiments.

Analyzing the received interaction data may include in some embodiments constructing one or more sign on signatures for the NAP and then analyzing at least one of the sign on signatures. The sign on signatures represent patterns where the user went through the same steps to connect through the same captive portal. Based on the constructed sign on signatures the cloud computing device identifies one or more paths. The paths represent different methods for connecting through the same NAP . The cloud computing device creates the instruction set for one or more of the paths. In some embodiments the cloud computing device creates the instruction set for the path taken by a majority or some threshold quantity of the mobile computing devices .

Exemplary paths includes a free path and a paid path. The free path represents a set of actions for obtaining access to the network without paying a fee. The paid path represents a different set of action for obtaining access to the network through the same NAP as the free path but by paying a fee. For example the paid path may be taken by the users who pay a monthly fee to a service provider or who have purchased a particular amount of time on the network e.g. hourly pass daily pass etc. .

In some embodiments the sequenced instruction set includes a set of extensible markup language XML instructions . The XML instructions include a sequence of verbs for execution to connect through the NAP . An example structure of a sequenced instruction set is shown below 

At the cloud computing device distributes the identified set of sequenced instructions to one or more of the plurality of mobile computing devices . For example the cloud computing device receives the interaction data from a first set of the mobile computing devices and distributes the identified set of sequenced instructions to a second set of the mobile computing devices . Some of the mobile computing devices may be in both the first set and the second set. The first set and the second set may be different or identical.

In some embodiments the cloud computing device provides the identified set of sequenced instructions to a distribution service that communicates with the mobile computing devices . In an example the NAP provides network access to a geographic area e.g. to the mobile computing devices within range of the NAP . In this example the cloud computing device distributes the identified set of instructions only to one or more of the mobile computing devices located within the geographic area. The cloud computing device is able to identify the mobile computing devices located within a geographic area by using location services available on the mobile computing devices . In another example the cloud computing device receives location information from a plurality of the mobile computing devices . Exemplary location information includes a street address zip code global positioning system GPS coordinates landmark information and or other location or position information. The cloud computing device selects based on the received location information the mobile computing devices to receive the identified set of instructions . For example the cloud computing device selects the mobile computing devices that have provided the location information corresponding to a location associated with the NAP corresponding to the identified set of instructions .

In some embodiments the cloud computing device distributes the sequenced instruction sets to the mobile computing devices via one or more geospatial tile data structures e.g. tiles . Each tile stores the sequenced instruction sets for the NAPs within a particular geographic area e.g. within one square mile . As an example each tile stores information such as a service set identifier SSID and basic service set identifier BSSID of the NAPs the locations of the NAPs and the sequenced instruction sets for connecting to the networks through the NAPs . As a further example the tiles may store connection quality data for each of the networks describing the anticipated expected and or predicted experience of the applications executing on the mobile computing devices when transmitting and or receiving data over that network . One or more of the tiles may be downloaded e.g. once a day by the mobile computing devices for caching.

Alternatively or in addition the cloud computing device distributes the sequenced instruction sets to the mobile computing devices via network specific queries. For example the mobile computing devices may request the sequenced instruction sets corresponding to particular networks .

The mobile computing devices store the sequenced instructions provided by the cloud computing device and apply the sequenced instructions when subsequently attempting to connect to the NAP corresponding to the sequenced instructions . In some embodiments the mobile computing devices report back to the cloud computing device after applying the sequenced instructions to attempt to connect to the NAP . The connection report identifies as an example whether or not the connection was successful. If the connection was unsuccessful the connection report may further indicate at which instruction the connection attempt failed.

Upon receiving the connection report for the NAP from the mobile computing device the cloud computing device may update adjust modify or otherwise change the sequenced instructions for the NAP based on the received connection report. For example the cloud computing device may remove the sequenced instructions for the NAP if a success rate from the mobile computing devices falls below a pre defined threshold. As another example the cloud computing device may throttle data collection e.g. crowdsource more or less of the interaction data from the mobile computing devices . For example if a success rate for one or more of the instructions falls below a pre defined threshold e.g. 95 the cloud computing device may send a command to one or more of the mobile computing devices to increase data collection for one or more of the NAPs to accommodate for changes at those NAPs . The cloud computing device may also send a command to decrease data collection if the cloud computing device has enough data for a particular NAP . In some embodiments the cloud computing device sends the command by updating a flag in a geospatial tile to implement the throttling.

In still another example the cloud computing device may modify a particular instruction in the set of sequenced instructions to reduce the likelihood of failure at that particular instruction for subsequent attempts and then distribute the modified set of sequenced instructions to one or more of the mobile computing devices . Distributing the modified set of sequenced instructions to one of the mobile computing devices may occur on demand by the mobile computing device and or without first receiving a request from that mobile computing device . For example the cloud computing device may push the modified set of sequenced instructions to the mobile computing devices .

In some embodiments operations for processing the interaction data by the cloud computing device are organized into categories including pre processing hotspot aggregation business aggregation refining computation and opt out. Exemplary pre processing operations include but are not limited to extracting and validating a log of the interaction data filtering personally identifiable information and obscuring device identifiers. Exemplary hotspot aggregation operations include but are not limited to identifying a signature associated with the interaction data and joining the interaction data to a hotspot identifier for aggregation. Identifying the signature is based on for example the quantity of steps in the session key names in the POST and GET requests and the HTML schema. Exemplary business aggregation operations include but are not limited to aggregating based on hotspot signature and SSID as the hotspots associated with a single entity may carry the same captive portal. Exemplary refining operations include but are not limited to filtering based on unique user identifier count e.g. above a minimum threshold to achieve reliability. Exemplary computation operations include but are not limited to generating the instructions such as described with reference to and . Exemplary opt out operations include but are not limited to filtering the instructions that that relate to captive portals that have opted out of participation.

Capture of the interaction data by the mobile computing devices to formulate the sequenced instruction sets is next described.

Referring next to an exemplary flow chart illustrates operation of the mobile computing device to capture interaction data when connecting to one of the NAPs . The operations illustrated in are described with reference to execution by the mobile computing devices . However aspects of the disclosure contemplate execution of the operations by other devices or processors such as by less portable computing devices including kiosks desktop computers and gaming consoles. Further while some operations are described with reference to execution of the computer executable components embodied or otherwise stored in the storage of the mobile computing device one or more of the operations may be performed by other components or modules of the mobile computing device .

At the mobile computing device receives or detects a request to connect to one of the NAPs . For example one of the applications executing on the mobile computing device may request to send and or receive data over one of the networks . An operating system executing on the mobile computing device receives the request such as via an application programming interface API . At the mobile computing device searches the storage to find the sequenced instruction set corresponding to the NAP . If the storage contains the sequenced instruction set for the NAP at the mobile computing device retrieves and applies the set of instructions to connect to the NAP at .

If the storage does not contain the sequenced instruction set for the NAP at the mobile computing device executes a sandboxed web browser at . The sandboxed web browser represents a mule browser or other browser with limited functionality. In some examples the sandboxed web browser only allows the user to enter data to attempt to connect to the NAP e.g. accept terms and conditions enter a user name enter a hotel room number enter a password etc. .

At the sandbox component when executed by the mobile computing device causes the mobile computing device to capture the user interaction with the NAP using the sandboxed web browser. In some embodiments the sandbox component prevents the user from performing any action other than connecting through the NAP . The sandbox component continues to capture the interaction data until the connection is established or the connection attempt has been deemed unsuccessful. For example the sandbox component periodically or intermittently tests for the connection for a pre defined duration e.g. in seconds until the connection is established. In another example the sandbox component tests for connectivity after each HTTP request and or HTTP response operation.

At the parser component when executed by the mobile computing device causes the mobile computing device to selectively filter the captured interaction data . For example the parser component identifies and obfuscates personally identifiable information such as user names passwords security questions answers to security questions and other sensitive or confidential information within the interaction data captured by the sandbox component . As another example the parser component may filter images videos and or resources e.g. cascading style sheet files from the captured interaction data . In some embodiments the parser component scrubs text between HTML tags creates a one way hash of values contained in visible fields annotates the one way hashed values in the visible controls with the type of value and uses the same annotation e.g. type and one way hash for values entered in the visible control throughout the captured session . Exemplary types includes email telephone number and name e.g. first name last name full name etc. . In some examples the parser component filters the captured interaction data based on one or more rules e.g. set by the user operator of the cloud computing device operating system on the mobile computing device NAP administrator etc. .

At the communications interface component when executed by the mobile computing devices causes the mobile computing device to transmit the filtered interaction data to the cloud service . For example the transmission may occur immediately after the interaction data is captured or may be sent at some later time e.g. as part of a nightly batch upon request etc. .

Referring next to an exemplary block diagram illustrates data collection on the mobile computing device with device side filtering of personally identifiable information. While a particular sequence of operations is illustrated in other sequences are within the scope of the disclosure.

In the example of the mobile computing device includes a sandboxed browser a filter and a data collection . The mobile computing device attempts to connect to one of the NAPs such as a Wi Fi portal gated hotspot. The Wi Fi portal gated hotspot checks a login database or other repository to determine whether the mobile computing device has been authenticated. If the mobile computing device has been authenticated the Wi Fi portal gated hotspot allows the mobile computing device to access the Internet.

If the mobile computing device has not been authenticated the Wi Fi portal gated hotspot redirects the sandboxed browser executing on the mobile computing device to a captive portal web page. The user interacts with the executing sandboxed browser to connect to the Internet or other network via the Wi Fi portal gated hotspot by gaining access through the captive portal web page. For example the user traverses web pages of the captive portal to accept terms of service or complete other tasks. During this process the sandboxed browser captures HTTP data and secure HTTP data e.g. HTTPS . The captured HTTPS data is passed through the filter to selectively remove data such as personally identifiable information. The HTTP data and the filtered HTTPS data is stored by the data collection and uploaded or otherwise transmitted to the cloud service for processing.

Selectively removing the personally identifiable information from the HTTPS data includes as an example removing data entered into fields by the user . Some embodiments strip the field data from the HTTPS data and replace such data with a hash of the field data. A tag may also be added to indicate the type of field data that was stripped e.g. telephone number email password etc. .

After connecting through the captive portal the Wi Fi portal gated hotspot submits device information and or user information to the login database.

Filtering the HTTPS data may occur on the mobile computing device as illustrated in and or on the cloud computing device as illustrated in .

Referring next to an exemplary block diagram illustrates distribution of a sequenced instruction set after cloud based filtering of personally identifiable information. While a particular sequence of operations is illustrated in other sequences are within the scope of the disclosure.

In the example of the HTTPS data crowdsourced by the cloud computing device is processed by the filter to selectively remove data such as personally identifiable information. The HTTP data and the filtered HTTPS data are processed by an instruction set generator to produce at least one of the sequenced instruction sets. For example the instruction set generator parses the HTTP data and the filtered HTTPS data to order the requests and responses in the order they were observed by the mobile computing device . The sequenced instruction set is distributed to the mobile computing devices by for example a tile module .

The mobile computing device replays the sequenced instruction set from the tile when connecting to the Wi Fi portal gated hotspot to connect to the Internet or other network .

An example language set for the sequenced instruction set is next described. Aspects of the disclosure however are operable with any set of verbs operands parameters etc. Exemplary verbs include Probe for Connectivity PC Follow Redirect FR Follow Anchor FA Submit Form SF Navigate To NT and Submit Post String SPS .

The PC verb may be the first verb in the instruction set and probes for network connectivity by attempting to connect to a network location e.g. a HTTP address . The FR verb follows the redirect from a previous browser page and retrieves a redirected browser page. Exemplary parameters to this verb include delay e.g. a time delay before executing this verb a redirect type e.g. HttpRedirect HtmlMetaRefresh JavaScriptRefresh etc. and a timeout e.g. a timeout for receiving a response from the web server . In XML the FR verb may appear as shown below 

The FA verb follows an anchor from a previous page and retrieves a target page identified by the anchor. Exemplary parameters to this verb include delay e.g. a time delay before executing this verb an anchor identifier e.g. a zero based index to the anchor on the previous page and a timeout e.g. a timeout for receiving a response from the web server . In XML the FA verb may appear as shown below 

The SF verb submits a form on a previous page and retrieves the response. The SF verb looks at the action attribute in the form to identify the post uniform resource location URL . Exemplary parameters to this verb include delay e.g. a time delay before executing this verb a form identifier e.g. a zero based index to the forms on the previous page a submit option e.g. a flag to indicate how to obtain contents for the post request one or more key value pairs e.g. a set of key value pairs to include in the post request and a timeout e.g. a timeout for receiving a response from the web server . The submit option parameter may appear as shown below 

Exemplary key value pairs include one or more of the following predefined expressions which are replaced by the mobile computing device WPEmail replaced with an email address of the user WPPhone replaced with a telephone number of the user WPFirstName replaced with a first name of the user WPLastName replaced with a last name of the user WPName replaced with a complete name of the user WPIPAddress replaced with an Internet Protocol IP address of the mobile computing device and WPMacAddress replaced with media access control MAC address of the mobile computing device .

The NT verb retrieves the contents of the target page. Exemplary parameters to this verb include delay e.g. a time delay before executing this verb address e.g. the destination URL and timeout e.g. a timeout for receiving a response from the web server . The address parameter may contain one or more predefined expressions in the query string which are replaced by the mobile computing device with the respective values. In XML the NT verb may appear as shown below 

The SPS verb is used to submit the specified post string to the specified address. Exemplary parameters to this verb include delay e.g. a time delay before executing this verb address e.g. the destination URL one or more key value pairs e.g. a set of key value pairs to include in the post request and a timeout e.g. a timeout for receiving a response from the web server . The address parameter may contain one or more predefined expressions in the query string which are replaced by the mobile computing device with the respective values. In XML the SPS verb may appear as shown below 

Referring next to an exemplary flow chart illustrates operation of the cloud service to process interaction data into instruction set verbs. The operations illustrated in are described with reference to execution by the cloud computing device . However aspects of the disclosure contemplate execution of the operations by other devices or processors such as by one or more of the mobile computing devices .

The interaction data include request response data such as HTML data. An HTML header field such as HTTP referrer identifies the address of the webpage e.g. the uniform resource identifier that linked to the resource e.g. destination webpage being requested. By checking this header field the destination webpage may see from where the request originated. For example when the user clicks a hyperlink in the browser the browser sends a request to the server holding the destination webpage. The request includes the header field which indicates the last page the user was on e.g. where the user clicked the link .

The request response data is traversed in reverse order to create a referred and redirect chain. This process filters out requests that are insignificant to portal assistance such as requests for asynchronous JAVASCRIPT brand code requests for images and the like. The remaining request response data pairs are traversed one by one starting from the first data pair to find links between successive requests. An exemplary link finding algorithm is next described.

At the cloud computing device determines whether the request being examined is the first request in the chain. If so the PC verb is added to the sequenced instructions for this chain at . If not the cloud computing device determines whether the request is a result of a redirect operation at . If so the FR verb is added to the sequenced instructions for this chain at . If not the cloud computing device determines whether the request is a result of an anchor click at . If so the FA verb is added to the sequenced instructions for this chain at . If not the cloud computing device determines whether the request is a form submission at . If so processing continues as described in below. If not the cloud computing device determines whether the request is a constant request across different samples at . If so the NT verb is added to the sequenced instructions for this chain at . If not the cloud computing device determines whether there are additional requests for processing at and processing either continues at with another request or finishes.

Referring next to an exemplary flow chart illustrates operation of the cloud service to process interaction data from a form submission. The operations illustrated in are described with reference to execution by the cloud computing device . However aspects of the disclosure contemplate execution of the operations by other devices or processors such as by one or more of the mobile computing devices .

An HTML form on a web page allows the user to enter data that is sent to a server for processing. Forms are enclosed in the HTML form tag. This tag specifies the communication endpoint that the data entered into the form should be submitted to along with the method of submitting it e.g. GET or POST operations . In some embodiments forms include graphical UI elements e.g. text input checkbox radio button submit button etc. .

The user interacts with forms through named control. The control name of a control is given by the name attribute. Each control has both an initial value and a current value both of which are character strings in some embodiments. In general the initial value of the control may be specified with the value attribute of the control element. The current value of the control is first set to the initial value. Thereafter the current value of the control may be modified through user interaction and scripts.

When the cloud computing device detects a form submission such as described with reference to the submitted values are compared to the initial values as next described with reference to .

At the cloud computing device determines whether the initial values equal the submit value. If so the cloud computing device adds the SF verb to the sequenced instructions at with the command to apply default values. If not the cloud computing device determines whether the submit values are empty at . If so the cloud computing device adds the SF verb to the sequenced instructions at with the command to apply empty values and specify the values during application of the sequenced instructions. If not the cloud computing device determines whether the values are constant across different samples at . If so the cloud computing device adds the SF verb to the sequenced instructions at with the command to override values and specify the values during application of the sequenced instructions. If not the cloud computing device determines whether the value contains predefined expressions e.g. email telephone number name IP address MAC address etc. at . If so the cloud computing device adds the SF verb to the sequenced instructions at with the command to override values and replace the predefined expressions during application of the sequenced instructions. If not the cloud computing device finishes and notes that processing of the form submission was a failure.

At least a portion of the functionality of the various elements in the figures may be performed by other elements in the figures or an entity e.g. processor web service server application program computing device etc. not shown in the figures.

In some embodiments the operations illustrated in the figures may be implemented as software instructions encoded on a computer readable medium in hardware programmed or designed to perform the operations or both. For example aspects of the disclosure may be implemented as a system on a chip or other circuitry including a plurality of interconnected electrically conductive elements.

The term Wi Fi as used herein refers in some embodiments to a wireless local area network using high frequency radio signals for the transmission of data. The term BLUETOOTH as used herein refers in some embodiments to a wireless technology standard for exchanging data over short distances using short wavelength radio transmission. The term NFC as used herein refers in some embodiments to a short range high frequency wireless communication technology for the exchange of data over short distances.

Embodiments have been described with reference to data monitored and or collected from the users . In some embodiments notice may be provided to the users of the collection of the data e.g. via a dialog box or preference setting and users are given the opportunity to give or deny consent for the monitoring and or collection. The consent may take the form of opt in consent or opt out consent.

In some embodiments owners e.g. venue owners of the captive portals may opt out from having interactions with their captive portals processed into sequenced instructions . In such embodiments the owners send a request to the cloud computing device to opt out and the cloud computing device then does not collect and or analyze the interaction data . In this manner sequenced instruction are not generated and distributed for the captive portals that have opted out.

Exemplary computer readable media include flash memory drives digital versatile discs DVDs compact discs CDs floppy disks and tape cassettes. By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media are tangible and mutually exclusive to communication media. In some embodiments computer storage media are implemented in hardware. Exemplary computer storage media include hard disks flash drives and other solid state memory. In contrast communication media embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media.

Although described in connection with an exemplary computing system environment embodiments of the disclosure are capable of implementation with numerous other general purpose or special purpose computing system environments configurations or devices.

Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to mobile computing devices personal computers server computers hand held or laptop devices multiprocessor systems gaming consoles microprocessor based systems set top boxes programmable consumer electronics mobile telephones mobile computing and or communication devices in wearable or accessory form factors e.g. watches glasses headsets or earphones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like. Such systems or devices may accept input from the user in any way including from input devices such as a keyboard or pointing device via gesture input proximity input such as by hovering and or via voice input.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices in software firmware hardware or a combination thereof. The computer executable instructions may be organized into one or more computer executable components or modules. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

Aspects of the invention transform a general purpose computer into a special purpose computing device when configured to execute the instructions described herein.

The embodiments illustrated and described herein as well as embodiments not specifically described herein but within the scope of aspects of the invention constitute exemplary means for connecting to the network through a captive portal based on data crowdsourced from the mobile computing devices . For example one or more of the embodiments contemplate means for analyzing the manual portal assist data for the captive portal enumerating a set of sequenced instructions for the captive portal based on the analysis and distributing the enumerated set of sequenced instructions to a second set of the mobile computing devices . The second set of the mobile computing devices applies the distributed set of sequenced instructions when attempting to connect through the captive portal.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements. The term exemplary is intended to mean an example of The phrase one or more of the following A B and C means at least one of A and or at least one of B and or at least one of C. 

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

An exemplary instruction set schema is next described. Each instruction set is identified by an instruction identifier ID . To de duplicate common instruction sets for Wi Fi portal networks a tile contains networks with associated instruction IDs. In some embodiments a mapping table is included in the tile that contains the actual instruction sets with all the instruction IDs tagged to at least one of the networks.

Two exemplary instruction sets are shown in the example tile below one with instruction ID 10000 and the other with instruction ID 10001.

An example of a telemetry event collected by the cloud service from the mobile computing devices is next described. The telemetry event indicates whether or not the connection attempt was successful. As shown in the example code below after the connection attempt the mobile computing device sends the telemetry event containing for example the BSSID SSID device identifier instruction identifiers and a flag indicating success e.g. True or failure e.g. False of the connection attempt. If the connection was successful the flag indicates success. If the connection failed yet the instructions were replayed or executed properly the flag indicates failure. If the mobile computing device was unable to replay each of the instructions properly the flag indicates failure and the mobile computing device updates the telemetry event to further identify which operation failed the reason for the failure and a session identifier.

