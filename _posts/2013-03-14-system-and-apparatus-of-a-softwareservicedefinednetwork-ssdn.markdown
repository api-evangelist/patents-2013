---

title: System and apparatus of a software-service-defined-network (SSDN)
abstract: A network apparatus for coupling control plane controllers and data plane switches in a global software service defined network (SSDN), wherein the global SSDN comprises a plurality of local SSDNs, comprising a network software service layer (NSSL) service bus comprising a processor, wherein the NSSL service bus is coupled to a plurality of network controllers and to a plurality of network switches, wherein the NSSL service bus is configured to coordinate the actions of the plurality of network controllers, wherein the NSSL service bus is configured to expose the plurality of controllers as services addressable by service names, wherein the NSSL service bus is configured to extend a local SSDN into a global SSDN network; and wherein the NSSL service bus is configured to provide the network controllers with global network information, such that the network controllers provide end-to-end service routing in the global SSDN network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09106515&OS=09106515&RS=09106515
owner: Futurewei Technologies, Inc.
number: 09106515
owner_city: Plano
owner_country: US
publication_date: 20130314
---
The present application claims the benefit of U.S. Provisional Patent Application No. 61 716 982 filed Oct. 22 2012 by Wu Chou and entitled System and Apparatus of a Software Service Defined Network SSDN and U.S. Provisional Patent Application No. 61 780 347 filed Mar. 13 2013 by Wu Chou et al. and entitled System and Apparatus of a Software Service Defined Network SSDN all of which are incorporated herein by reference as if reproduced in its entirety.

Software defined networking SDN is a next generation data network in which the control plane is separated from the data plane and implemented in a software application. This architecture allows network administrators to have programmable central control of network traffic without requiring physical access to the network s devices. Thus SDN decouples network control e.g. learning and forwarding decisions from the data plane used to forward network traffic. Decoupling the control plane from the data plane of the network enables the network controller to efficiently control the network traffic through globally optimized traffic engineering and routing which departs from locally optimized shortest path forwarding SPF . SDN may also simplify network operations or even have the capabilities to flatten the network with extended data routing vectors. The extended data routing vectors in SDN can cover network information from multiple Open Systems Interconnection OSI layers e.g. Layer 2 L2 and or Layer L3 for intelligent routing purposes. A basic approach to achieve decoupling of the network control from the network topology and data plane is by applying globally aware and topology decoupled software control at the edges of the network. The assumption is that traditional topology coupled bridging and routing may be re used at the core of the network so that scalability interoperability high availability and extensibility of the conventional networking protocols such as Internet Protocol IP networks can still be maintained.

In one embodiment the disclosure includes a network apparatus for coupling control plane controllers and data plane switches in a global software service defined network SSDN wherein the global SSDN comprises a plurality of local SSDNs comprising a network software service layer NSSL service bus comprising a processor wherein the NSSL service bus is coupled to a plurality of network controllers and to a plurality of network switches wherein the NSSL service bus is configured to coordinate the actions of the plurality of network controllers wherein the NSSL service bus is configured to expose the plurality of controllers as services addressable by service names wherein the NSSL service bus is configured to extend a local SSDN into a global SSDN network and wherein the NSSL service bus is configured to provide the network controllers with global network information such that the network controllers provide end to end service routing in the global SSDN network.

In another embodiment the disclosure includes a system for an SSDN environment comprising a NSSL service bus comprising a processor a service bus utilities node comprising a plurality of service bus utilities used by the NSSL service bus to manage and control interaction between a plurality of network controllers and a plurality of network switches in a plurality of local networks a plurality of adapters coupling the NSSL service bus to the plurality of network controllers and the plurality of network switches wherein the network controllers determine a path for data to traverse at least one of the local networks via at least some of the plurality of switches wherein the network switches are configured to forward data through the SSDN and wherein the NSSL service bus is configured to provide the network controllers with global network information such that the network controllers provide end to end service routing plane in a global SSDN network comprising the plurality of local networks.

In another embodiment the disclosure includes a computer program product executable by a processor in a NSSL service bus in a SSDN the computer program product comprising computer executable instructions stored on a non transitory computer readable medium that when executed by the processor cause the NSSL service bus to perform the following coordinate actions of a plurality of network controllers in the SSDN wherein at least some of the network controllers correspond to different local SSDNs expose the plurality of network controllers as services addressable by service names extend the local SSDNs into a global SSDN network and provide the network controllers with global network information such that the network controllers provide end to end service routing in the global SSDN network.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

SDN has become increasingly important for intelligent network engineering. SDN may become the infrastructure of the next generation data networking. SDN has the potential to make the network intelligent open globally optimized and its routing dynamically adjustable to best fit the application needs. is a schematic diagram of the current SDN paradigm e.g. prior art . The current SDN paradigm may comprise an application layer a network control layer and a data transport layer . The application layer may comprise a plurality of applications that may be utilized by the network control layer and or the data transport layer . The network control layer may determine paths for data packets to travel through a network. The data transport layer may be the layer in which data flows from a source to a destination. The data transport layer may comprise a plurality of forwarding hardware HW that may include switches and or other network devices used for transporting data from a data center through a core network a metro network an access network and the last mile to an end user. The network control layer may comprise a plurality of controllers e.g. OpenFlow OF controllers . The applications in the data transport layer may be coupled to the controllers in the network control layer via a plurality of northbound application programming interfaces APIs . The controllers may be coupled to the forwarding HW via southbound APIs e.g. the OF protocol . The controllers may provide path forwarding instructions to the forwarding HW .

Unfortunately huge technical challenges arise when implementing SDN for large scale development. In particular SDN may result in an unprecedented large scale software based network system. As shown in implementation of the application layer and the network control layer may result in a large complex software based network system. The current SDN paradigm provides a framework for north south connections that provide communication between applications and controllers via the northbound API and between controllers and forwarding hardware via the southbound API. However does not illustrate a framework for east west connections e.g. an eastbound API and or a westbound API to manage the controllers within the network control layer . As a result the current SDN paradigm may not provide a connection framework that provides communication amongst the controllers . Without a solid and sound software architectural foundation SDN may be limited to some point solutions that may prevent its anticipated value from being fully realized. Hence a solution is needed to efficiently implement SDN for a large scale development.

Disclosed herein is a system method and apparatus for a SSDN. Further disclosed is an SSDN framework which may comprise a NSSL that may provide a service plane dedicated for network management and network control services. The NSSL may sit on top of the network layer and may expose network resources e.g. the controller the data forwarding switch and other network functions as services. NSSL may provide a service abstraction layer for SSDN and services deployed on NSSL may be addressed and consumed through service names and corresponding service interfaces to control and manage network resources and provide network services. NSSL may support advanced service computing features such as late binding mobility failover load balancing in a tightly coupled network system.

Also disclosed herein is a distributed service bus on the NSSL for service federation and management. The distributed service bus may provide seamless extension of the local SSDN network into a global SSDN network with the ability to support substantially optimized end to end service routing. Additionally a Network Information Base NIB architecture is disclosed. The federated NIB architecture may dynamically combine and extend the NIB of local networks into a global NIB to support global network management and end to end optimized routing.

The service bus utilities node may comprise data storage and may store various service bus utilities such as utilities facilitating communication and interaction between the OF controllers . The service bus utilities node may facilitate the transfer of various service bus utilities via the NSSL service bus . The NSSL service bus may be a distributed service access layer and a service plane for network control and management. The NSSL service bus may provide a generic network service abstraction layer that may support east west network expansion via service federation. Service federation may be the process through which the NSSL service bus from different autonomous systems AS can share their services. The NSSL service bus may be an architecture that may provide service registration service discovery message addressing message routing and other services for OF controllers OF clients and other service components coupled to the NSSL service bus . In one embodiment the NSSL service bus may be a local NSSL service bus that may be coupled with other local NSSL service buses. In another embodiment the NSSL service bus may represent a global NSSL service bus that comprises one or more local NSSL service buses that spans across multiple networks . The NSSL service bus may comprise a processor or logic unit and storage.

The OF controllers may be configured to implement control plane functions and to control and manage OF clients . Control plane functions may include route or path determination for data packets traversing the network . More specifically OF controllers may be able to produce routing tables and or flow tables that defines how to route data packets within network . In OF controller may provide control services to both OF client1 and OF client2 . Similarly OF controller may also provide control services to both OF client1 and OF client2 . The OF controller may not perform data plane functions such as forwarding data traffic to a selected destination within network . The OF controllers may deploy network resources to the NSSL as services via the corresponding adaptors . In one embodiment the services may be addressed by service names and may support service mobility migration failover and load balancing.

The OF clients may be clients of the OF controllers such as OF switches. The OF clients may provide data forwarding for network . The OF client may comprise a switch data plane configured to route data through the network . OF clients may be any physical and or virtual network device that receives and transmits data through network . OF clients may comprise switches routers bridges or any other devices compatible with the southbound API services. For example OF clients may be configured according to the OpenFlow protocols as defined in Rev. 1.2 for the OpenFlow specification of the OpenFlow Organization published December which is incorporated herein as if reproduced in its entirety. Furthermore OF clients may also include network devices that are compliant with other versions of the OpenFlow protocols e.g. Rev. 1.0 and Rev. 1.1 . In one embodiment OF clients may be incompatible with other versions of the OpenFlow protocols. For example one OF client may support the OpenFlow protocol version 1.0 but not later versions while another OF client may support the OpenFlow protocol version 1.2 but not earlier versions.

The OS services node may be a network OS that provides facilities for addressing the OF controllers . The OS services node may be independent of various programming languages. The OS services node may be configured to manage network resources including physical and virtual networks for network applications. For example the OS services node may be implemented to manage data users groups security applications and other networking functions. In one embodiment the OS services node may operate and perform functions in the OSI layer within one or more network devices such as routers switches and servers.

Local service bus may also be coupled to NOSS component routing services RS component and controller services CS component . The NOSS component may be substantially similar to OS services node discussed in . The RS component may be coupled to network nodes within network . The RS component may implement algorithms to forward packets between network nodes e.g. perform data forwarding plane functions . In one embodiment the RS component may forward data traffic as performed by a SDN OpenFlow switch in the data forwarding plane. In one embodiment network nodes within network may be configured as plug and play network nodes. The CS component may be a plurality of controllers coupled together through the service bus . The CS component may implement strategies to control the flow of data packets in network as performed by a SDN controller in the control plane of SDN.

As shown in the SSDN network may be divided into a SSDN sub network . The SSDN sub network may comprise one or more local SSDN networks. More specifically the SSDN sub network may comprise local service buses and CS components and RS components and NOSS component and service bus utilities node and and global NIB . Local service buses and CS components and RS components and NOSS component and and service bus utilities node and may substantially similar to local service bus CS components RS components NOSS component and service bus utilities node which were discussed above. Global NIB may perform functions substantially similar to the global NIB except that the global NIB may be shared amongst two local service buses and .

Within the SSDN sub network local service bus and may be coupled to a global NIB . Each local service bus and may be coupled to a service bus utilities node respectively. Each local service bus and may comprise a cached NIB and that may be a store some or all of the information held within the global NIB . The cached NIB and may be a local NIB used to monitor and provide network information for local SSDN networks. For example NIB may monitor and provide network information for network while NIB may monitor and provide network information for network . In one embodiment the cached NIB and may store network information most frequently access from the global NIB . Each local service bus and may be coupled to a respective CS component and RS component and and NOSS component and . The RS component and may provide connections to network and respectively.

Each controller may comprise an OpenFlow Controller OFC API control logic a local NIB and a switch management component . The local NIB may cache frequently accessed information or otherwise store a copy of the centralized NIB which may be substantially similar to cached NIB in . The OFC API may be coupled to the NSSL bus and coordinate the actions of the controllers . For example the OFC API may be a Representational State Transfer REST API e.g. Floodlight REST API that provides application interfaces for applications used to control networks . The switch management component may be configured to communicate with control and manage the OF switches within networks . The OF switches may be any network component capable of receiving transmitting and forwarding data through networks .

The control logic may comprise a routing component a device manager a core component a topology component and a link discovery component . The routing component may be configured to consult the local NIB and to determine a path for a data packet traversing one or more of the networks based on information retrieved from the local NIB . The device manager may be configured to manage the OF switches such as booting up the OF switches shutting down the OF switches change routing tables in the OF switches and update software on the OF switches. The topology component may be configured to determine the topology of the network s . The topology may comprise information about which OF switches are connected to each other the type of connections the speed or data capacity of the connections network elements coupled to the OF switches . The link discovery module may determine when a new link between switches is created or a link between switches is deleted or destroyed. The core component may comprise one or more processors or application specific integrated circuits ASICs configured to implement the functionality of the various components in the control logic component . In one embodiment the core component is the platform on which the various components in the control logic component may operate on.

The NSSL bus may provide distributed management of the networks . The NSSL bus may abstract the services provided by the controllers and may direct a request for a particular service to an available controller that is capable of providing the service. The centralized NIB may dynamically combine and extend the local NIBs of local networks into a global NIB to support global network management and end to end optimized routing. In one embodiment NSSL bus may be a federated service bus e.g. global service bus coupled with local and distributed service components e.g. OF controllers . For example OF controllers may register with the NSSL bus and expose their service descriptions. The service descriptions may defines message formats and other service information. A source OF controller may send a message addressed to a destination OF controller according to the destination OF controller s service description. The NSSL bus may forward the message to the destination OF controller according to the service descriptions stored in the registration.

The logic unit may be in communication with memory devices including secondary storage read only memory ROM and random access memory RAM . The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an overflow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs that are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 7 percent . . . 70 percent 71 percent 72 percent . . . 97 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

