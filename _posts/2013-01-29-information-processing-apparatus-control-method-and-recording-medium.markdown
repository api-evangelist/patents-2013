---

title: Information processing apparatus, control method, and recording medium
abstract: Depending on the environment of an operating system, it may be difficult to set print setting information desired by a user, resulting in a decrease in operability for the user. A printer driver activates software that operates in a desktop UI environment, by an additional process which is different from print processing when printing is performed. Accordingly, a print setting screen that can set the print setting information desired by the user is displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122431&OS=09122431&RS=09122431
owner: Canon Kabushiki Kaisha
number: 09122431
owner_city: Tokyo
owner_country: JP
publication_date: 20130129
---
The present invention relates to an information processing apparatus that executes print processing a control method and a recording medium.

To make detailed print setting a printer driver has a dedicated user interface UI . When printing was performed through an application in a conventional print setting processing system a UI of a printer driver was called using a button with which a user made detailed setting. The user used the UI also referred to as setting screen provided by the printer driver and could set print setting information desired by the user.

Japanese Patent Laid Open No. 2001 130082 describes that a UI of a printer driver receives setting of printing with binding in addition to simplex printing or duplex printing.

However a setting screen of the printer driver may not be displayed unlike Japanese Patent Laid Open No. 2001 130082 depending on the environment of an operating system. As the result the user may not set the desirable print setting information.

The present invention in an aspect provides an information processing apparatus including an activating unit in case an application which issued a print instruction operates in a first environment configured to newly activate software that operates in a second environment which is different from the first environment. In case the activating unit newly activates the software the first environment is changed to the second environment and a print setting screen for setting print setting information is displayed in the second environment changed from the first environment.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

Embodiments optimal for implementing the present invention are described below with reference to the drawings.

A central processing unit CPU controls the entire apparatus in accordance with a program stored in a read only memory ROM or a random access memory RAM of a main storage or in an auxiliary storage . The RAM is also used as a work area when the CPU performs various processing. The auxiliary storage stores an operating system an application etc. An input device such as a keyboard a pointing device typified by a mouse or a touch panel is a device with which a user gives various instructions to a computer through an input interface I F . An output I F is an interface for outputting data to the outside. The output I F outputs data to an output device such as a monitor or a printer . Connection to the printer may be made not only through a local input output I O by direct connection but also through a network connected via a communication I F . Also a common data system bus allows transmission and reception of data between I Fs and modules. The CPU executes processing based on the program stored in the auxiliary storage . Hence a configuration of software of a computer shown in and processing of respective steps in flowcharts described later are realized.

According to on the auxiliary storage in the operating system the application and a printer driver are running. A graphics engine and a print manager are additional modules of the operating system . The user uses the input device such as the keyboard or the pointing device such as a mouse accesses to the application displayed on the monitor as an output device which instructs execution of print processing for a generated document . The print processing is executed by successively performing three processing steps including selection of a printer generation of print setting information and conversion of rendering data. In view of the selection of the printer the printer driver corresponding to the printer that executes printing and in more particular the print queue designated to the printer is selected. After that print setting information is generated. A configuration module of the printer driver generates an initial value of the print setting information of the document. The generated print setting information according to can be changed by the user with the application or a user interface of the printer driver so that the print setting information matches a final print result desired by the user. For example the print setting information in is changed to setting in which the sheet size of the print output is changed in combination with a preferred duplex printing and monochrome printing of the print document . The configuration module provides the user interface of the printer driver . The print setting information can be stored in the RAM within different data representation formats such as binary data structure or extensible markup language XML . These formats may vary depending on requirements or settings of the application the printer driver or the operating system . The print setting information is generated every time when a document is printed and therefore former print setting information are lost. In contrast print setting information may be desired to be held such as an optional device configuration of the printer and UI environment setting by each user is saved in a registry database of the operating system . A default value of the print setting information by each user can also be stored by the print manager of the operating system in the registry database . The last step of the print processing is the conversion of the rendering data . After the print setting information is generated the application receives an instruction for execution of print processing from the user and notifies the operating system about the print processing. The operating system performs rendering on the designated printer driver through the graphics engine . If layout processing is designated in the print setting information before processing is shifted to a rendering module of the printer driver the printer driver generates a temporary spool file through the print manager . The printer driver activates a layout module . The layout processing is adapted to change the order or arrangement of pages is changed or a plurality of pages of the temporary spool file . The layout module changes the layout of the temporary spool file and the temporary spool file is rendered by the printer driver again. The printer driver which has received the rendering data causes the rendering module to convert the rendering data into a data language that can be recognized by the printer i.e. a printer control language. At this time in the print processing the print setting information is also converted into the printer control language. In many cases the rendering module and the configuration module may be modules commonly used for a plurality of types of printers . The differences among models may be disclosed in a model dependent data file and in case the rendering module and the configuration module may use the model dependent data file during the print processing respectively. The converted data is successively saved as the temporary spool file . The print manager acquires the temporary spool file and further processes the temporary spool file into a print job file. When the printer may be warmed up and is in a printer ready state the print manager successively transmits print data to the printer through an I O module . In this way the rendering data issued by the application and the print data based on the print setting information are transmitted to the printer and printing is executed.

To generate the print setting information of the document the print setting information is directly rewritten by the application or a UI provided by the configuration module of the printer driver is used. A print setting screen in is displayed when Property button is selected on a screen in provided by an application that operates in a desktop UI environment described later . Also if Edit Preview is selected for the output method in a print setting screen in is displayed described later . The print setting information has a structure in called the DEVMODE structure in the operating system of the Microsoft registered trademark Windows registered trademark . The DEVMODE structure is divided into a standard print setting region publicly defined in the operating system and an extended print setting region extended by the printer driver . The standard print setting region has basic setting values for printing such as switching of the sheet size or the sheet feed cassette and switching between color and monochrome. The extended print setting region has values of for example a sheet output function corresponding to an option of the printer and a fine color adjustment function. The application cannot check the extended setting of each printer driver . Hence the application can only directly re write the print setting in the standard print setting region defined by the system. Owing to this the application typically causes a UI of the printer driver to be displayed simultaneously and the user is allowed to make setting changes in the extended print setting region by assessing directly the UI of the printer driver . The configuration module of the printer driver provides not only the UI of the printer driver but also an application programming interface API for possible communication with other applications. Because of that the extended print setting region may be set also via the API from another application without displaying the UI of the printer driver . However if the API of the configuration module is used the application has to correspond to each printer driver and hence a typical application changes only the standard print setting region which are normally used by all printer drivers .

In recent years because of the advent of mobile devices such as a mobile phone tablets or laptops with touch functionalities these mobile devices merely comprise a touch panel with a small screen. Hence the operating system comprises a conventional UI environment desktop UI environment and an additional UI environment suitable for a touch panel touch panel UI environment . illustrates an example of a UI provided in the conventional UI environment of the operating system . illustrates an example of a UI provided in the UI environment suitable for the touch panel. In other words illustrates a UI environment suitable for operation with a mouse etc. It can be said that the UI environment in is used in combination with older operating systems than the touch panel UI environment in . It is to be noted that a screen provided in the conventional UI environment is hereinafter called desktop UI. In contrast a screen provided in the UI environment suitable for the touch panel is hereinafter called touch panel UI.

The UI environment optimal for the touch panel has a button arrangement available for easy touch operation. A method of providing the UI in the desktop UI environment differs from a method of providing the UI in the touch panel UI environment. For example in the touch panel UI environment even when a plurality of applications are active an application to be displayed is limited to one. The UI of only one application is displayed on the monitor each. Hence the UIs of other active applications are not displayed. If the application to be displayed is changed the UI of the changed application is displayed on the monitor . In contrast in the desktop UI environment when a plurality of applications are active the UIs of the plurality of applications can be simultaneously displayed on the monitor . Also in the desktop UI environment the data configuration can be displayed with a tree structure. In contrast in the touch panel UI environment the data configuration cannot be displayed with a tree structure.

In particular there is an operating system configured such that the UI can be switched between the desktop UI environment and the touch panel UI environment. To generate an application that operates on such an operating system different packages have to be prepared respectively for the UIs. The printer driver installed in the desktop UI environment can be used also in combination with the application for the touch panel UI environment. Accordingly the user can make a print instruction from the application for the touch panel UI environment by using the printer driver also called desktop printer driver generated for the desktop UI environment. For example in the printer driver for the desktop UI environment is selected from the application for the touch panel UI environment and Print button is selected for instructing printing. As the result the printer driver for the desktop UI environment can generate print data by using rendering data issued from the application for the touch panel UI environment. The printer driver is assumed to be a desktop printer driver in the following description unless otherwise noted.

However if the printer driver for the desktop UI environment is instructed to display the UI from the application for the touch panel UI environment the usability is degraded because the UI of the printer driver for the desktop UI environment that presupposes an input with a mouse or a keyboard is excessively detailed for the user who operates the touch panel. Owing to this the usability is increased such that the UI of the printer driver for the desktop UI environment is not directly displayed in the touch panel UI environment the operating system generates a UI in based on metadata in the XML format and the UI receives print setting information.

However with the UI generated based on the metadata in the XML format the print setting information that can be received by the UI is limited to specific information. Owing to this with the UI generated by the operating system information other than the specific print setting information cannot be set. An example in includes setting items and of Copies Orientation and Color Mode. To set the print setting information more in detail a More Settings link is provided. However information that can be set on a screen in generated by the operating system as the result of the instruction for More Settings is also limited to specific information. In the example in only items and including Duplex Printing Collation Media Size and Input Bin can be set in addition to the aforementioned items and .

As described above the print setting screen generated by the operating system with the touch panel UI allows the print setting information to be set but not for all the items. For example setting of printing with binding cannot be received on the screens in and B. If the user insists on setting the print setting information for the item that cannot be set in the touch panel UI environment the setting can be made by using the UI of the printer driver in the conventional desktop UI environment. The method is as follows. First the user switches the UI environment from the touch panel UI environment to the desktop UI environment. The user selects a printer queue to be output on the screen in the desktop UI environment and activates the print setting screen of the conventional printer driver as shown in . The user changes the print setting information for a desired item on the activated print setting screen. The user switches from the desktop UI environment to the touch panel UI environment. The print application instructs generation of print data by using the printer driver . With the above described method the print setting information can be set for all the items included in the printer driver . However this method changes default print setting information of the printer driver . The UI environment has to be switched from the touch panel UI environment to the desktop UI environment and then the print setting information has to be changed every time when printing is performed. This is very troublesome work and the print data may be transmitted to the printer while the final print setting information cannot be checked.

The flowchart in relates to processing in which when the printer driver for the desktop receives a print instruction from the application that operates in the touch panel UI environment a process different from the printer driver is activated and a print setting screen in is displayed in the desktop UI environment. The print setting screen in is provided by an additional process desktop module described later .

This flowchart starts when the printer driver receives an instruction for execution of print processing from the application . More specifically the processing starts when Print button is pressed in a screen in .

When the printer driver receives the instruction for execution of print processing from the application the printer driver determines whether or not the instruction is printing from the application that operates in the touch panel UI environment step S . More specifically the printer driver compares the name of the application requesting the printing with the name of the exe file of that application and if both the names of the applications are the same the printer driver determines that the print instruction is received from the application that operates in the desktop UI environment. In contrast if both names of the applications are different the printer driver determines that the print request is received from the application that operates in the touch panel UI environment. Also processing in S may be performed by determining whether or not the application requesting the printing operates on a specific platform of the operating system . More specifically if it is determined that the application requesting the printing operates on the specific platform of the operating system the application is determined as the application that operates in the touch panel UI environment. In contrast if it is determined that the application does not operate on the specific platform of the operating system i.e. if it is determined that the application is operated on a platform of the operating system different from the specific platform of the operating system the application is determined as the application for the desktop UI environment. Therefore the determined platform of the operating system provides the touch panel UI environment and the platform of the operating system different from the specific platform provides the desktop UI environment. Alternatively the determination may be made by using the Windows API. As the result of the determination if the instruction is from the application that operates in the touch panel UI environment YES in step S the printer driver activates a print setting screen display process that is the additional process step S . The additional process specifically represents a module also referred to as desktop module that displays a UI in the desktop UI environment. That is software that operates in the desktop UI environment may be activated in addition to the process of the print processing. For example the layout module in of this application is the module that operates in the desktop UI environment. Hence the printer driver may activate the layout module in addition to the process of the print processing in step S. When the desktop module is activated the operating system automatically switches the UI environment from the touch panel UI environment to the desktop UI environment to display the print setting screen in of the desktop module. The print setting screen in provided by the desktop module is displayed in the desktop environment switched by the operating system . The print setting screen in can receive print setting information for all items that can be set by using the printer driver . Hence the user can set the print setting information desired by the user by using this print setting screen. Also the contents set in are reflected in . For example the sheet size Media Size is an item common to both . The content of the sheet size set in is reflected in .

Further the printer driver converts rendering data received from the application into a file in an intermediate file format also referred to as intermediate file step S and transmits the intermediate file to the activated desktop module step S . The intermediate file format may be in the EMF file format or the XPS file format. However it is not limited thereto. The purpose is to increase the versatility of processing for a later print job. The method of activating the additional process may be the same as the method by which the printer driver activates the layout module .

If the instruction for execution of print processing from the application is not an instruction from the application that operates in the touch panel UI environment NO in step S the printer driver converts the rendering data into print data printer control language step S and transmits the print data to the output target S .

Described next is the processing of the additional process activated from the printer driver if printing is instructed from the application that operates in the touch panel UI environment with reference to the flowchart in .

After the desktop module is activated from the printer driver the desktop module acquires the intermediate file step S . After the acquiring of the intermediate file the desktop module displays the print setting screen in step S . That is is displayed when Property button in is pressed as described above or is displayed by the processing in . illustrates an example of the print setting screen displayed in step S. As described above the print setting screen in can receive print setting information for all print setting items that can be set through the printer driver . After the print setting screen in is displayed and the desktop module receives the finalization of settings of the print setting information from the user the desktop module reflects the print setting information to the intermediate file received from the printer driver and performs a re spool processing step S . The desktop module executes print processing step S . More specifically the desktop module generates a spool file and notifies the printer driver about the spool file. After that the printer driver generates print data based on the spool file and transmits the print data to the printer . If the print setting screen in is displayed as the result of that the additional process is activated for example when the UI environment is changed from the touch panel UI environment the desktop module may display the print setting screen in in an enlarged manner so that the screen is displayed on the entire monitor for easier reception of a touch operation. That is the print setting screen in displayed as the result of that the additional process is activated when the UI environment is changed from the touch panel UI environment is larger than the print setting screen in displayed in response to the instruction received in the desktop UI environment. With the above described processing even when printing is instructed from the application in the touch panel UI environment there is provided the print setting screen in that allows print setting information equivalent to that of the printer driver to be set. Accordingly the print setting information can be set for all the items without an intention of the user. Also by using this embodiment the problem in which the print data is transmitted to the printer while the final print setting information cannot be checked can be also addressed.

With the method according to the first embodiment when printing is performed from the application that operates in the touch panel UI environment the UI environment is always switched to the desktop UI environment and hence the print setting screen in is displayed. Then for a user who wants to only change setting items for printing displayed in for example an unnecessary print setting screen may be always displayed every printing.

This flowchart adds and displays an option called Detailed Print Settings in a setting item in a print setting screen generated by the operating system if printing is instructed from the application that operates in the touch panel UI environment. The flowchart relates to processing for control to display the print setting screen in in the desktop UI environment if the user selects Detailed Print Settings when the execution of print processing is instructed from the application .

This flowchart starts in response to that the application makes a query for the print setting information to the printer driver when the screen in FIG. A is displayed.

The printer driver determines whether or not the query for the print setting information from the application is a query from the application that operates in the touch panel UI environment step S . The query for the print setting information from the application represents acquisition of information required for generating the print setting screen called from the application . The application typically displays the print setting screen by using the API of the operating system . More specifically the maximum number of Copies and presence of support for Color Mode are used. Also for Media Size and Input Bin all sheet sizes and sheet feeding methods supported by the printer driver are listed and the list is notified to the operating system . Hereinafter Copies Color Mode Media Size Input Bin etc. may be also called categories. As the result of the determination if the query is from the application that operates in the touch panel UI environment YES step S the printer driver responds to the query by adding the option of Detailed Print Settings in a certain category. The certain category represents a list form category such as Media Size or Input Bin however it is not limited thereto. illustrates an example of the print setting screen including the item of Detailed Print Settings generated by the operating system . In this embodiment the option of Detailed Print Settings is added as an option in the optional items of Input Bin at a position after Automatic Manual Cassette 1 Cassette 2 and Paper Type Priority. 

Processing when the print setting information is set from the print setting screen in is described with reference to the flowchart in .

This flowchart relates to processing in which when the option of Detailed Print Settings in any certain category is selected the printer driver activates the additional process and displays the print setting screen in in the desktop UI environment.

This flowchart starts when the printer driver receives the instruction for execution of print processing from the application . More specifically the processing starts when Print button is pressed in the screen in .

When the printer driver receives the instruction for execution of print processing from the application the printer driver determines whether or not the option of Detailed Print Settings in any category is selected step S . If the option of Detailed Print Settings is selected as the result of the determination YES in step S the printer driver activates the print setting screen display process that is the additional process step S . Steps S to S are equivalent to steps S to S described in the first embodiment.

By performing the above described processing the UI environment is switched to the desktop UI environment only when the user selects Detailed Print Settings on the print setting screen activated from the touch panel UI environment. After that since the desktop environment displays the print setting screen in on which the print setting information equivalent to that of the printer driver can be set the problem in which the UI environment is unnecessarily switched to the desktop UI environment can be addressed.

According to the second embodiment the UI environment can be switched to the desktop UI environment only when it is intended by the user. However there may be problems in which the user has difficulty in finding the option and when the option of Detailed Print Settings is selected the optional item of that category is not indicated.

This flowchart relates to processing for switching the touch panel UI environment to the desktop UI environment if More Settings link on the print setting screen which is generated by the operating system in response to the instruction for execution of print setting from the application that operates under the touch panel UI environment is clicked even once.

This flowchart starts when the printer driver receives an instruction for execution of print processing from the application . More specifically the processing starts when Print button is pressed in the screen in .

When the printer driver receives the instruction for execution of print processing from the application the printer driver determines whether or not the More Settings link is clicked even once step S . The following method is an example method of determining whether or not the More Settings link is clicked. This is a determining method by comparing the name of a process to be activated is different compared to the print setting screen in activated by the application . The print setting screen in displayed when the More Settings link is clicked on the screen in . If the printer driver recognizes that the process name of the printer driver is changed as the result of that the More Settings link is clicked the printer driver sets a flag or the like in a specific region of the print setting such as the DEVMODE. When Print button in is pressed the printer driver recognizes the presence of the flag of the DEVMODE and hence the printer driver can determine whether or not the More Settings link is clicked even once. If the More Settings link is clicked even once as the result of the determination YES in step S the printer driver activates the print setting screen display process that is the additional process step S . Steps S to S are equivalent to steps S to S described in the first embodiment. Hence the description is omitted.

With the above described processing performed the UI environment is switched to the desktop UI environment during printing only when the More Settings link on the print setting screen in is clicked. Accordingly the print setting screen in that can set the print setting information equivalent to that of the printer driver is displayed in the desktop UI environment only in case the user desires to set the print setting information in more detail.

Also if the UI environment is switched to the desktop UI environment by the processing of this application while the user performs a touch operation with the touch panel UI environment and if the processing is ended although execution of printing is instructed in the user has to manually restore the desktop UI environment to the former touch panel UI environment. Processing for reducing such troublesome operation of the user is described below.

First as the preposition the printer driver writes information about the application that instructs printing in print setting information of a temporary spool file .

Then the desktop module determines whether or not the application information written in the acquired temporary spool file is included in a current process list. If the application information is included in the current process list the desktop module gives an instruction to display the UI of the application written in the temporary spool file on the most front surface.

Accordingly even when the UI environment is shifted from the touch panel UI environment to the desktop UI environment by the processing of this application the application can be returned to the former touch panel application .

With the present invention the print setting information desired by the user can be set when printing is performed.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device e.g. computer readable medium .

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2012 020064 filed Feb. 1 2012 which is hereby incorporated by reference herein in its entirety.

