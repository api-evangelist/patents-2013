---

title: Efficient online domain adaptation
abstract: Systems and methods for efficient online domain adaptation are provided herein. Methods may include receiving a post-edited machine translated sentence pair, updating a machine translation model by adjusting translation weights for a translation memory and a language model while generating test machine translations of the machine translated sentence pair until one of the test machine translations approximately matches the post-edits for the machine translated sentence pair, and retranslating the remaining machine translation sentence pairs that have yet to be post-edited using the updated machine translation model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09213694&OS=09213694&RS=09213694
owner: Language Weaver, Inc.
number: 09213694
owner_city: Los Angeles
owner_country: US
publication_date: 20131010
---
This Non Provisional patent application is related to U.S. patent application Ser. No. 13 685 372 titled Personalized Machine Translation via Online Adaptation which was filed on Nov. 26 2012 which is hereby incorporated by reference herein in its entirety including all references cited therein.

Embodiments of the disclosure relate to machine translation systems and methods. More specifically but not by way of limitation the present technology includes systems and methods that provide efficient online domain adaptation where updates to a machine translation system occur as soon as post edits to machine translations are received by the machine translation system.

Post edit data such as human translator feedback may be created by human translators in order to correct a machine translation sentence pair. For example a machine translation sentence pair may include a source sentence unit such as a word or phrase as well as a machine translation generated target sentence unit. If the target sentence unit generated by the machine translation system is incorrect a human translator may generate post edits that correct the error. While these post edits are a valuable resource for customizing and adapting statistical machine translation models updating the machine translation system with these post edits remains a difficult endeavor.

According to some embodiments the present technology may be directed to a method of immediately updating a machine translation system with post edits during translation of a document using a machine translation system that comprises a processor and a memory for storing logic that is executed by the processor to perform the method comprising a receiving a post edited machine translated sentence pair wherein the post edited machine translated sentence pair comprises a source sentence unit and a post edited target sentence unit b updating a machine translation model by i performing an alignment of the post edits of the machine translated sentence pair to generate phrases and ii adding the phrases to the machine translation model c adapting a language model from the target sentence unit of the post edits d calculating translation statistics for the post edits e adjusting translation weights using the translation statistics while generating test machine translations of the machine translated sentence pair until one of the test machine translations approximately matches the post edits for the machine translated sentence pair and f retranslating the remaining machine translation sentence pairs that have yet to be post edited using the updated machine translation model and the adjusted translation weights.

According to other embodiments the present technology may be directed to a machine translation system that immediately incorporates post edits into a machine translation model during translation of a document the machine translation system comprising 1 a processor and 2 a memory for storing logic that is executed by the processor to a receiving a post edited machine translated sentence pair wherein the post edited machine translated sentence pair comprises a source sentence unit and a post edited target sentence unit b updating a machine translation model by i performing an alignment of the post edits of the machine translated sentence pair to generate phrases and ii adding the phrases to the machine translation model c adapting a language model from the target sentence unit of the post edits d calculating translation statistics for the post edits e adjusting translation weights using the translation statistics while generating test machine translations of the machine translated sentence pair until one of the test machine translations approximately matches the post edits for the machine translated sentence pair and f retranslating the remaining machine translation sentence pairs that have yet to be post edited using the updated machine translation model.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the disclosure. It will be apparent however to one skilled in the art that the disclosure may be practiced without these specific details. In other instances structures and devices are shown at block diagram form only in order to avoid obscuring the disclosure.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of the phrases in one embodiment or in an embodiment or according to one embodiment or other phrases having similar import at various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments. Furthermore depending on the context of discussion herein a singular term may include its plural forms and a plural term may include its singular form. Similarly a hyphenated term e.g. on demand may be occasionally interchangeably used with its non hyphenated version e.g. on demand a capitalized entry e.g. Software may be interchangeably used with its non capitalized version e.g. software a plural term may be indicated with or without an apostrophe e.g. PE s or PEs and an italicized term e.g. N 1 may be interchangeably used with its non italicized version e.g. N 1 . Such occasional interchangeable uses shall not be considered inconsistent with each other.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

It is noted at the outset that the terms coupled connected connecting electrically connected etc. are used interchangeably herein to generally refer to the condition of being electrically electronically connected. Similarly a first entity is considered to be in communication with a second entity or entities when the first entity electrically sends and or receives whether through wireline or wireless means information signals whether containing data information or non data control information to the second entity regardless of the type analog or digital of those signals. It is further noted that various figures including component diagrams shown and discussed herein are for illustrative purpose only and are not drawn to scale.

The present technology provides for fast online updates to a machine translation system that uses language pairs immediately after the machine translation system receives a new sentence pair. For example the machine translation system may receive a new sentence pair that includes a source sentence unit and a post edited target sentence unit. The post edited target sentence unit includes changes to an original target sentence unit that was provided to a translator.

For context the phrase sentence unit may be understood to include any sub sentential unit that is obtained from a sentence in a document that is to be translated. In general a machine translation system receives a document for translation and uses machine translation techniques to translate the document in a source language into a target language. This machine translation process includes breaking the source document into sentences and further dividing the sentences into sub sentential units. Using methods that would be known to one of ordinary skill in the art the machine translation system outputs sentence pairs for the sentence that include source sentence units and target sentence units that are machine translations of the source sentence units.

These sentence pairs are evaluated by human translators who may edit or change the target sentence unit of a sentence pair to correct errors in the machine translation. These changes are referred to as post edits of target sentence units.

New information obtained from the post edited target sentence unit is incorporated into the statistical models of the language pairs and may be passed to the decoder. With a fast online tuning method the translation model of the present technology may utilize this new information in subsequent translations. This method yields significant bilingual evaluation understudy BLEU improvements over both small scale and strong baselines when translating coherent in domain sentences.

As opposed to adding new data to a static translation memory the present technology may employ a translation model update procedure to modify relevant parts of probabilistic models of the translation model in order to update machine translations of subsequent sentences of a document.

The machine translation system is configured to utilize post edits received from the clients to generate in domain adapted and retuned machine translation models. For example the machine translation system generates both an in domain translation model IDTM A an in domain language model IDLM B and in domain weighting IDW C. In some embodiments each client may have their own IDTM IDLM and IDW due to the machine translation system s ability to re translate remaining sentence pairs for a translator as post edits from the translator are received by the machine translation system .

Thus in some embodiments the IDTM IDLM and IDW are invoked and utilized by the machine translation system during a single translation session for a translator. In other embodiments the IDTM IDLM and IDW may persist and can be utilized for multiple translation projects.

The following description provides an example of the use of the machine translation system by a client such as client A. Initially the post editor associated with client A receives a source language text and automatic translations in the target language generated by a baseline machine translation engine . The source language text and automatic translations are also referred to as a sentence pair. The sentence pair includes a source sentence unit and a target sentence unit that is a machine translation of the source sentence unit.

Changes to the target sentence unit by the client A are referred to as a post edited target sentence unit. As the post editor corrects a target sentence unit the post edits are transmitted to the machine translation system . The machine translation system then automatically learns new sub sentential translation correspondences and enhances the generic MT engine with these correspondences. The machine translation system also adjusts the parameters of the generic MT engine to optimize translation performance on the corrected translations. The result is a generic MT engine that is better equipped to handle the vocabulary and phrasing choices desired by the post editor on his her current workflow.

The translation model A and language model B are typically very large databases where the weights are a vector of numbers. The machine translation system has the ability to instantiate and reset the per user and in domain translation models IDTM A in domain language models IDLM B and in domain weighting IDW C. It will be understood that IDTM A IDLM B and IDW C may belong to client A and are illustrated as a set of personalized machine translation tools D. Indeed each client is provided with their own IDTM IDLM and IDW. Upon instantiation and reset the IDTM A and IDLM B are empty databases and the IDW C is equal to the generic weights C used by the generic MT engine . The IDTM A and IDLM B are typically very small databases compared to the generic TM A and LM B.

In some embodiments the clients A C communicate with the machine translation system via a REST API over a network such as the Internet. The API responds to requests for translation keyed to a user requests to update the IDTM A the IDLM B and the IDW C and requests to reset a per user IDTM A the IDLM B and the IDW C.

When a client A begins to post edit a document the client A requests that the machine translation system instantiate or reset the per user IDTM A IDLM B and IDW C and requests translations for the document segments which are carried out initially by the generic MT engine . The generic MT engine responds to the client request with a set of machine translated sentence pairs.

When a user post edits a translation and specifically a target sentence unit the client A requests that the machine translation system update the IDTM A IDLM B and IDW C for the user with new translational correspondences target language phrases and parameter weights to remember the post edit corrections made by the user. The client A then requests re translation of the remaining sentence pairs by the generic MT engine . The generic MT engine may then re translate the documents consulting the user s IDTM A IDLM B and IDW C via calls to the machine translation system and also using generic models where appropriate. In some embodiments once translation of a document is completed and a new document translation process begins the client A may request a reset of their IDTM A IDLM B and IDW C.

In some embodiments the machine translation system may execute test machine translations of the original sentence pairs and adjust the IDW C until the test machine translations generated by the generic MT engine approximately match the post edit sentence pair received from the client A as determined by BLEU. That is once the machine translation system populates the translation model with words and phrases from forced alignment of the post edit sentence pair and creates the IDLM B the machine translation system may iteratively adjust the components of the IDW C until the translations generated by the generic MT engine approximate the translation quality of the human translator.

While the above embodiments contemplate a separate generic MT engine and machine translation system it will be understood that the functionalities of these systems may be combined into a single machine translation system. Further the functionalities of these systems may be executed on the client device A rather than the client A interacting with the generic MT engine and the machine translation system over a network .

The following description provides details regarding the processes used by the machine translation system to create and utilize the IDTM A IDLM B and IDW C for a client. The machine translation system provides both a machine translation model adaptation process and a retuning of parameter weights. illustrates an exemplary algorithm that includes both the machine translation model adaptation and weight retuning processes. Generally new information obtained from the post edits of machine translated sentence pairs are added to the model by updating vocabularies databases and phrase tables. Next the algorithm adjusts existing translation model weights to encourage usage of new in domain phrases using an online discriminative ridge regression technique.

The following variables are defined for purposes of clarity Vs is a vocabulary of source words Vt is a vocabulary of target words encountered by the machine translation system circumflex over t a post edited machine translated sentence pair that is used to adapt a translation model M e.g. IDTM A and s t is a phrase pair generated from the post edited machine translated sentence pair.

The following steps are performed in sequence with parallelism where possible. First circumflex over t is tokenized and modified into lowercase. Next Vt and Vs are updated with unknown words from circumflex over t . Subsequently the machine translation system uses use existing static alignment models which are pre trained on original training data in both directions to force align circumflex over t and run regular alignment refinement heuristics to produce a word alignment for circumflex over t .

Next the machine translation system builds a small in domain language model IDLM B during adaptation of the machine translation model. For each circumflex over t the machine translation system performs an ngram count to update an existing count file also the machine translation system recompiles the in domain language model IDLM B using a smoothing algorithm such as Witten Bell smoothing. Since the amount of in domain data is fairly small the machine translation system re builds the IDLM B quickly and efficiently.

Next the machine translation system updates a fractional count table by extracting fractional counts from circumflex over t and adds these new counts to the fractional count table. In some embodiments the machine translation system extracts and filters lexicon entries from circumflex over t and its alignments. An exemplary algorithm for building the fractional count table includes but is not limited to the IBM Model 4 Table M4 cf tj si Vs Vt .

After updating the fraction count table the machine translation system then updates a probability distribution table to change the distributions for each source term s circumflex over t . In some embodiments this includes the determination of maximum likelihood word alignments from circumflex over t and its alignments.

To avoid dumping M1 databases to disk in text format or storing counts and re normalizing the machine translation system may perform a heuristic update. Assuming that Vs and Vt were already updated the machine translation system uses the following equation M1 circumflex over p tj si Vs Vt to determine Viterbi alignments extracted from circumflex over t . In some embodiments the machine translation system may utilize IBM Model 1 Tables algorithm M1 p tj si Vs Vt 

Also illustrates an example of a heuristic algorithm that may be utilized to alter the probability distributions for the translation model.

Next the machine translation system may be configured to adapt a phrase table used to generate phrases from sentence pairs. To obtain a set of new phrases P e f the machine translation system executes a phrase extraction pipeline which includes forward inverse phrase extraction and sorting.

The process of adapting the phrase table used by the machine translation system may include the pre computing of various phrase features for the phrases e f that were extracted from the post edited machine translation sentence unit. Various features that are computed by the machine translation system include missing word for which the machine translation system uses the previously updated IBM Model 4 table as described above. Also the machine translation system may use an inverse IBM Model 1 feature which employs the previously heuristically updated IBM Model 1 tables. Another exemplary feature includes inverse phrase probability which is computed using counts of inversely extracted phrases.

The machine translation system is also configured to execute a process of retuning of model weights. The machine translation system is configured to adjust model weights to encourage the inclusion of new phrases and adaptation to the target domain. In some instances the machine translation system may adjust translation model weights using a tuning method such as discriminative ridge regression DRR although other translation model tuning methods known to one of ordinary skill in the art may also likewise be utilized.

The discriminative ridge regression method includes the determination of an nbest list for the re decode of a source sentence ordered by decreasing derivation scores. The machine translation system builds an n m matrix Rthat contains the difference vectors between each feature vector hand h the feature vector for the best hypothesis in terms of BLEU 1 to reference circumflex over t .

The goal of this process is to allow the machine translation system to find a vector w such that R w I where Iis a column vector of n rows containing the difference in BLEU 1 scores for each hfrom h . This may be expressed by the equation

The solution wfor sentence pair circumflex over t at update time t is interpolated with the previous weight vector wand used for re translating of sentence sin the next iteration e.g. remaining sentence pairs that have yet to be post edited by the client A. In accordance with the present technology the machine translation system is configured to initially generate a set of machine translation pairs. After receiving a post edit of one of these machine translation pairs in the set the machine translation system executes the adaptation and tuning methods described herein to update the translation model methodologies used by the machine translation system . Once updated the machine translation system retranslates any remaining machine translations that have yet to be translated from the set. Each time post edits are received the machine translation system updates and retranslates any remaining machine translations. Thus the machine translation system may for each post edit received iteratively update the translation model and retranslate any previous machine translations assuming the machine translations have not been post edited by a human translator.

In some instances the interpolation weight is set to 0.5. This allows the machine translation system to utilize a combination between the generic weights C of the generic MT engine and the IDW C. The machine translation system uses the interpolation weight of 0.5 and multiplies both the generic weights C and the IDW C by 0.5. The machine translation system then utilizes an average of these values. The use of interpolation ensures moderation of large discrepancies between the generic weights C and the IDW C which may lead to poor translations for the client.

Next the method includes updating a machine translation model by performing an alignment of the post edits of the machine translated sentence pair to generate phrases and adding the phrases to the machine translation model.

In some embodiments the method includes adapting a language model from the target sentence unit of the post edits as well as calculating translation statistics for the post edits.

Next the method includes adjusting translation weights using the translation statistics while generating test machine translations of the machine translated sentence pair until one of the test machine translations approximately matches the post edits for the machine translated sentence pair. Finally the method includes retranslating the remaining machine translation sentence pairs that have yet to be post edited using the updated machine translation model. In some embodiments retranslated machine translation sentence pair may be post edited by a human translator. Thus the method may return to step when a poste edit to a retranslated machine translation sentence pair which would result in incremental retranslation of the machine translation sentence pairs even those pairs that have been retranslated one or more times. Advantageously each time remaining sentence pairs are retranslated it is assumed that the retranslations will cause the sentence pairs to require a lesser amount of post editing or no post editing at all.

The components shown in are depicted as being connected via a single bus . The components may be connected through one or more data transport means. Processor and main memory may be connected via a local microprocessor bus and the mass storage device peripherals portable storage device and display system may be connected via one or more input output I O buses.

Mass storage device which may be implemented with a magnetic disk drive or an optical disk drive is a non volatile storage device for storing data and instructions for use by processor . Mass storage device can store the system software for implementing embodiments of the present technology for purposes of loading that software into main memory .

Portable storage device operates in conjunction with a portable non volatile storage medium such as a floppy disk compact disk or digital video disc to input and output data and code to and from the computing system of . The system software for implementing embodiments of the present technology may be stored on such a portable medium and input to the computing system via the portable storage device .

Input devices provide a portion of a user interface. Input devices may include an alphanumeric keypad such as a keyboard for inputting alphanumeric and other information or a pointing device such as a mouse a trackball stylus or cursor direction keys. Additionally the system as shown in includes output devices . Suitable output devices include speakers printers network interfaces and monitors.

Display system may include a liquid crystal display LCD or other suitable display device. Display system receives textual and graphical information and processes the information for output to the display device.

Peripherals may include any type of computer support device to add additional functionality to the computing system. Peripherals may include a modem or a router.

The components contained in the computing system of are those typically found in computing systems that may be suitable for use with embodiments of the present technology and are intended to represent a broad category of such computer components that are well known in the art. Thus the computing system can be a personal computer hand held computing system telephone mobile computing system workstation server minicomputer mainframe computer or any other computing system. The computer can also include different bus configurations networked platforms multi processor platforms etc. Various operating systems can be used including UNIX Linux Windows Macintosh OS Chrome OS and other suitable operating systems.

Some of the above described functions may be composed of instructions that are stored on storage media e.g. computer readable medium . The instructions may be retrieved and executed by the processor. Some examples of storage media are memory devices tapes disks and the like. The instructions are operational when executed by the processor to direct the processor to operate in accord with the technology. Those skilled in the art are familiar with instructions processor s and storage media.

It is noteworthy that any hardware platform suitable for performing the processing described herein is suitable for use with the technology. The terms computer readable storage medium and computer readable storage media as used herein refer to any medium or media that participate in providing instructions to a CPU for execution. Such media can take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as a fixed disk. Volatile media include dynamic memory such as system RAM. Transmission media include coaxial cables copper wire and fiber optics among others including the wires that comprise one embodiment of a bus. Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk a hard disk magnetic tape any other magnetic medium a CD ROM disk digital video disk DVD any other optical medium any other physical medium with patterns of marks or holes a RAM a PROM an EPROM an EEPROM a FLASHEPROM any other memory chip or data exchange adapter a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a CPU for execution. A bus carries the data to system RAM from which a CPU retrieves and executes the instructions. The instructions received by system RAM can optionally be stored on a fixed disk either before or after execution by a CPU.

Computer program code for carrying out operations for aspects of the present technology may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present technology has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. Exemplary embodiments were chosen and described in order to best explain the principles of the present technology and its practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Aspects of the present technology are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present technology. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. The descriptions are not intended to limit the scope of the technology to the particular forms set forth herein. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments. It should be understood that the above description is illustrative and not restrictive. To the contrary the present descriptions are intended to cover such alternatives modifications and equivalents as may be included within the spirit and scope of the technology as defined by the appended claims and otherwise appreciated by one of ordinary skill in the art. The scope of the technology should therefore be determined not with reference to the above description but instead should be determined with reference to the appended claims along with their full scope of equivalents.

