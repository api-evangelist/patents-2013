---

title: Method and system for storing and retrieving data
abstract: A database management system includes a first data storage structure for storing timestamped counter data entries for each of devices in an unordered manner and such that each counter data entry is assigned a uniquely identifiable storage address; a second data storage structure for storing and mapping between: address data identifying the storage addresses of counter data entries, excluding those which are null or empty, timestamps corresponding to the counter data entries, and device identifiers identifying the devices to which the counter data entries correspond; and data access means for, in response to receiving a request for data in respect of a specified time period and at least one of the devices, using the second data storage structure to identify, for the or each specified device, the storage addresses of the temporally first and last counter data entries falling within the specified time period and not null or empty.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08913264&OS=08913264&RS=08913264
owner: Ricoh Company, Ltd.
number: 08913264
owner_city: Tokyo
owner_country: JP
publication_date: 20130304
---
The present application is based upon and claims the benefit of priority of European Patent Application No. 12159337.0 filed on Mar. 13 2012 the entire contents of which are incorporated herein by reference.

Embodiments described herein generally relate to storing and retrieving data particularly but not exclusively data about networked office equipment.

Many modern day electronic devices such as printers copiers scanners and multi function devices MFDs have the ability to generate device usage and other data. Often such devices are provided with network connections so that the data can be periodically transmitted to a central database for subsequent analysis. As the number of devices as well as the number of device parameters to which the data pertains can be large the amount of data collected over time can be vast.

Although many conventional systems in widespread use today such as relational database management systems have the ability to store vast amounts of data collected over time i.e. time varying data the rules governing transactions in relational databases offer very little built in support to adequately analyze it. In other words queries for historical data are difficult in a relational database. To resolve this issue separate analytical structures are often used. Thus the data can be stored in a relational database whereas the analysis is performed by a tightly coupled analytical counterpart. However existing implementations particularly those for enterprise printing systems make use of vendor specific and or complex queries that consume computer resources to a degree that significantly reduces system performance.

It is therefore desirable to provide improved systems and methods for management and analysis of data.

One aspect of the invention provides a database management system comprising a first data storage structure for storing timestamped counter data entries for each of a plurality of devices in an unordered manner and such that each counter data entry is assigned a uniquely identifiable storage address a second data storage structure for storing and mapping between address data that identifies the storage addresses of counter data entries excluding those counter data entries which are null or empty timestamps corresponding to said counter data entries and device identifiers that identify the devices to which said counter data entries correspond and data accessing means for in response to receiving a request for data in respect of a specified time period and at least one of said plurality of devices using the second data storage structure to identify for the or each specified device the storage addresses of the temporally first and last counter data entries that fall within the specified time period and that are not null or empty.

One aspect of the invention provides a method of accessing data in a database management system the method comprising in a first data storage structure storing timestamped counter data entries for each of a plurality of devices in an unordered manner and such that each counter data entry is assigned a uniquely identifiable storage address in a second data storage structure storing and mapping between address data that identifies the storage addresses of counter data entries excluding those counter data entries which are null or empty timestamps corresponding to said counter data entries and device identifiers that identify the devices to which said counter data entries correspond and in response to receiving a request for data in respect of a specified time period and at least one of said plurality of devices using the second data storage structure to identify for the or each specified device the storage addresses of the temporally first and last counter data entries that fall within the specified time period and that are not null or empty.

The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and not restrictive of the invention.

Printing devices may maintain a set of internal digitally controlled gauges also known as counters . These counters may reflect for example the amount of copies being printed and are subject of manufacture s specifications. Polling may be carried out periodically to obtain the counter data normally by utilizing some sort of scheduling mechanism.

Of particular interest here are so called absolute counters . This means that their values reflect a total count value at a specific point in time. Thus in order to obtain the counter value for a printing device for a given time period referred to herein as a reporting time period one can subtract the counter value corresponding to the beginning of that time period from the counter value corresponding to the end of that time period.

However it is typically not possible to obtain counter data for every point in time and every device over an arbitrary reporting time period of interest. For example a printing device may simply not be physically available at a particular counter polling time may be in an offline mode may have a network communications problem or the like. This results in gaps data discontinuity in the device counter data.

Generally speaking there are three types of printing device data discontinuity to be found 1 those occurring at the beginning of a reporting time period 2 those occurring at the end of a reporting time period and 3 those occurring at both the beginning and the end of a reporting time period. A special case exists where there is no counter data for the entire reporting time period.

As noted earlier in order to determine the absolute counter value for a printing device for a given reporting time period one can determine the counter data values corresponding to the earliest and latest timestamps and then subtract one from the other. Typically this requires a linear search operation to skip any missing data. That is because many data structures such as relational tables also known as heap tables store data in an unordered manner. This means the data is not stored in any particular order i.e. not organized by datetime for example . It will also be appreciated that the data represented by the figures may constitute only a fraction of the available data. A search for the counter data values corresponding to the earliest and latest timestamps within a reporting time interval may therefore end up reading all of the counter data for that reporting time interval before it finds these counter data values. Thus as shown in while no search to skip missing data is required in the event that data exists for the entire reporting time period where counter data is missing at the beginning of the reporting time period a search must be performed to identify the counter data value corresponding to the earliest timestamp within the reporting time period. Similarly where data is missing at the end of the reporting time period as shown in a search must be performed to identify the counter data value corresponding to the latest timestamp within the reporting time period. In the case where data is missing at both the beginning and the end of the reporting time period two searches need to be performed to identify the counter data values corresponding to the earliest and latest timestamp respectively within the reporting time period

In practice an end user e.g. an organization is seldom interested in only a single printing device. Within a relatively large printing infrastructure one may consider N printing devices being used in parallel where N can cover hundreds thousands and even several thousands of printing devices. Data discontinuities of one or more of the aforementioned type might be observed simultaneously for a significant proportion of the N printing devices. However the sheer volume of data that may be accumulated presents challenges for efficiently retrieving data. In particular it is difficult if not impossible to make any valuable prediction about data gap distributions. Employing search operations in the case of N printing devices may require N search runs and thus require N search times and is computationally time consuming.

Furthermore the end user may be interested in a subset of the N printing devices for example those at a specific physical or logical location within the organization. As a general rule every installed printing device can be seen as a part of an already existing infrastructure. Thus end users often have their own organizational infrastructure reflecting their internal hierarchy. is a schematic diagram of an organization hierarchy represented as a tree like structure with the top most or root node representing the entire organization and the branches representing in this example different locations facilities departments units and networks . Thus in one embodiment the hierarchy is such that the location corresponding to root the root node includes all other locations within the hierarchy . Similarly a node such as node that is connected to one or more nodes appearing lower in the hierarchy such as nodes and contains all of those lower nodes. Accordingly there may be overlap between the different branches i.e. a node may be part of two or more branches. Typically database management systems do not allow an end user to distinguish between different locations in the customer s infrastructure at any specified moment of time.

The database server comprises network protocols a query engine and a reporting application . The network protocols provide the functions of connection handling authentication security and so forth over network . The network can be a wide area network such as the Internet. The query engine is responsible for query optimization and execution. Its components may comprise a parser a query optimizer and a query executor not shown . In brief the parser primarily functions to check query syntax. The query optimizer determines how to retrieve the data as quickly and efficiently as possible. It may for example choose from among several different ways to execute the query and then creates a plan of execution that can be understood by the query executor. The query executor then interprets the execution plan and based on the information it has received makes requests of the other components of the system such as the storage engine of the data storage system to retrieve the data. Once the data is retrieved it is passed to the reporting application for presentation to the end user.

The data storage system comprises a storage engine which is responsible for the efficient storage and access of data to and from the first and second data storage structures . The database server communicates with the storage engine through a storage engine application programming interface API not shown .

In embodiments the database management system may periodically poll the printing devices . Thus there may also be a polling application for managing the polling process. However this is not shown for reasons of clarity.

In order to generate a report the end user formulates and submits a query to database server . In embodiments the database management system uses the Structured Query Language SQL . In SQL queries refer to a widely available set of SQL commands called clauses. Each clause command performs some sort of function against the database. The query specifies some criteria by which the database server should select data from among all of the data contained in the database system. In one embodiment the query comprises a SQL SELECT clause. The database server receives and executes the query. In executing the query the database server forms a result set and sends the result set to the reporting application for for presentation to the end user. The result set is a selected subset of all of the data in the database system This is described in more detail below . The result set consists only of the data that satisfied the criteria specified in the query.

The database management system may be implemented as a data processing system having at least one processor. In one embodiment the at least one processor is a conventional processing device such as a general purpose microprocessor. The data processing system also includes a memory which includes program instructions or functional units that implement the aforementioned features such as the query engine and the storage engine .

In one embodiment first or primary data storage structure is a relational data structure. This is a logical data structure in which data is stored in relation tables. As shown in table stores data about devices events occurring at those devices and the time at which those events occurred. These are defined by the columns of the table named Printing Device ID Counter Value and Timestamp respectively. Thus in one embodiment each row is a record comprising three fields storing a device identifier a counter data entry and a timestamp. These are generally not temporally ordered as shown in table . Timestamps are indicative of points in time at which counter data was or was expected to be obtained received by database management system or sampled by the printing devices . It will be appreciated that the timestamps are shown in the as ordinal values 1 2 3 . . . N for the sake of clarity only. Where no counter data is available the counter data entry may be a null or simply left empty. Since a null is not a member of any data domain it is strictly speaking not a value but rather a marker or placeholder indicating the absence of value.

In one embodiment the counter data values are absolute counter values meaning that each represents the total number of occurrences of events being counted for example number of pages printed. The counter data therefore comprises numerical data values measured with respect to or bound by time. It will be appreciated that the occurrences of events being counted may not necessarily change over time as shown by the counter data stored at address An03 and An04 . However each still has an associated timestamp. In one embodiment the counter data is collected repeatedly over time at fixed periods. The frequency or granularity of the time periods can be seconds minutes hours days weeks months or years. In one embodiment the frequency is n times a day either at regular or irregular time intervals for example n ranging from 2 to 8 depending on networking infrastructure. This is because polling may often impose substantial loads on networking bandwidth even causing temporary network storms or collapses .

In one embodiment second or auxiliary data storage structure is a multidimensional data storage structure in mathematical terms a hypercube . For convenience however it is shown as a two dimensional table. In one embodiment the data storage structure comprises an index object which is a physical data structure that allows direct vs. sequential access to data. The data stored in the data storage structure is based on the data stored in the table . In embodiments data storage structure stores and maps between printing device identifiers time stamps and address data that identifies the storage location of the corresponding counter data where it is available. In one embodiment data storage structure also stores a hierarchical ID corresponding to the location of the device within the end users organizational infrastructure as described with reference to . For example a hierarchical ID of 1 may correspond to the entire organization. In the embodiment shown with reference to data storage structure stores one hierarchical ID per entry.

At step S a polling application which may be separate from but communicatively connected to the database management system sends polling messages to printing devices . In response those printing devices that are active send a response message that includes a counter data value S . The polling application then maps the received response messages to the device identifiers. The message may also include a location identifier which may ultimately be determined based on input from a user. At step S the data is stored in the first data storage structure e.g. table . At step S the second data storage structure e.g. table is updated.

When database server then receives a request for data in the form of an SQL query for example from the end user via network and network protocols step S the SQL query is passed to the query engine where it is parsed optimized and executed step S . The requested data is retrieved by the storage engine of the data storage system and the results passed back to the reporting application where it is prepared for presentation to the end user .

As noted earlier relational data structures have no understanding that the stored data is part of time varying data collection. This means that a query specifying a particular time point for which there is no counter data value will return a null because no counter data value exists for that particular time point. Furthermore in the case of data discontinuity the database management system has to first find the counter data corresponding to the earliest and or latest timestamp for the reporting time period. This requires N searches in the case of N printing devices. When making use of the second data storage structure such a search becomes obsolete because firstly the database management system knows whether or not a counter data value exists for a given point in time and secondly can directly access it in the first data storage structure using the address information.

Thus with reference to for a reporting time period covering the time stamps 1 through 4 for example no counter data values exist in respect of printing device 2 and time stamps 1 and 2 . Accordingly table does not store address data in respect of these time stamps for this device. Instead address data is only stored in respect of time stamps 3 and 4 for which counter data values do exist. This means that for this reporting time period the database management system immediately proceeds to time stamp 3 finds the address data value A207 and accesses the counter data value at that address the value 10 .

In other words by storing and mapping between address data for which counter data values exist and timestamps the second data storage structure provides an indication of where the storage engine should go .

Although in foregoing embodiments the first data storage structure in which the counter data for each device is stored in a column in other embodiments the counter data for each device can be stored as a dedicated table as a set of rows in a shared table or as a single row in a shared table.

Although in foregoing embodiments the second data storage structure is an index object in other embodiments it is a view or a materialized view . A view can be thought of as the parsed binary language implementation of a query that when executed extracts or derives data from a data storage structure that it references in this case first data storage structure. As it is stored the view i.e. query can be repeatedly used without having to re write the same query many times. Furthermore as the view is based on the first data storage structure it does not take up any storage other than storage for the definition of the view i.e. the query in a data dictionary. A materialized view on the other hand is a physical data structure defined by a result set produced when a query is executed. In other words a materialized view comprises a pre computed query result that may be stored in a persistent manner for quick access later. This may be implemented in the form of the second data storage structure described above with additional record logging mechanism i.e. also storing the counter data. The materialized view is synchronized with the source of its data structure i.e. the first data structure. If it is not then the materialized view is rendered stale and the database query execution plan executor will not make use of it.

Although in foregoing embodiments the database system is implemented in the context of networked office devices such as printers copiers and facsimile devices or devices providing a combination thereof it will be appreciated that the database system is relevant to other kinds of devices. Broadly speaking these kinds of devices provide or rather posses different kinds of information in a machine readable digital format as well as digitally aware devices which represent the kinds of devices that possess information content that can be digitized. For example these sorts of devices can contain for example optical mechanical and other data which can be measured evaluated and converted into a machine readable electronic format.

Although in foregoing embodiments the second data storage structure stores one hierarchical ID per entry in other embodiments the second data storage structure may store a plurality of hierarchical IDs for each entry. An additional structure providing drill down functionality may be provided for example mapping the Hierarchy IDs to the sort of a tree structure corresponding to the hierarchy.

Although in foregoing embodiments the data arrives from devices on a regular basis the data may also arrive at an irregular basis or a combination of both. Whereas regular data arrives at predictable predefined periods irregular data arrives at unspecified points in time or timestamps cannot be characterized by a repeating pattern.

Although in foregoing embodiments the timestamps are associated with time points i.e. a specific instant in time based on the precision of the data type in other embodiments the timestamp may be associated with time periods.

Although in foregoing embodiments SQL queries are used to specify information to be retrieved in other embodiments the queries can be formulated in other query languages.

It will be understood that a storage location address may not describe a physical location instead it used as a means to request information from a controller. The controller converts the request from a logical to a physical address that is able to retrieve the data from an actual physical location on the storage device.

In the foregoing detailed description of embodiments references to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

Embodiments can be in the form of a hardware implementation a software implementation or a mixture of both. Thus any of the means components and parts defined herein can be implemented as code modules in different combination in a computer.

Embodiments encompass a computer program provided as a computer program product on a storage medium. The computer program can be stored on a storage medium such as a solid state memory an optical disc a magnetic disc or tape device. The computer program product can be involved in the implementation of an embodiment either as a complete set of computer executable instructions capable of configuring on its own the performance of one or more of the embodiments or as a set of instructions engaging pre existing operable software components on a computer to cause the configuration of the computer in the desired manner. The computer program product may be directly executable or may require local processing such as decoding decompression or compilation before it is in an executable condition.

All examples and conditional language provided herein are intended for pedagogical purposes of aiding the reader in understanding the invention and the concepts contributed by the inventor to further the art and are not to be construed as limitations to such specifically recited examples and conditions nor does the organization of such examples in the specification relate to a showing of the superiority or inferiority of the invention. Although one or more embodiments of the present invention have been described in detail it should be understood that the various changes substitutions and alterations could be made hereto without departing from the spirit and scope of the invention.

