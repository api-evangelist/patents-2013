---

title: Transient multivariable sensor evaluation
abstract: A method and system for performing transient multivariable sensor evaluation. The method and system includes a computer system for identifying a model form, providing training measurement data, generating a basis vector, monitoring system data from sensor, loading the system data in a non-transient memory, performing an estimation to provide desired data and comparing the system data to the desired data and outputting an alarm for a defective sensor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09574903&OS=09574903&RS=09574903
owner: UChicago Argonne, LLC
number: 09574903
owner_city: Chicago
owner_country: US
publication_date: 20131219
---
The United States Government has certain rights in the invention pursuant to Contract No. W 31 109 ENG 38 between the U.S. Department of Energy and the University of Chicago operating Argonne National Laboratory.

The present invention relates generally to sensor evaluations for failure analysis and quality control. More particularly the invention relates to sensor degradation control systems including performing comprehensive tests by simulations of methods and procedures for detecting sensor degradation.

Improving manufacturing plant performance through the use of advanced digital technologies imposes stringent requirements on the quality of sensor data. Validated sensor data is a prerequisite for any method which seeks to improve operator awareness of plant conditions such as thermal state and equipment condition. The dominant problem among the different data driven sensor validation methods that presently exist relates to the high false alarm rate. The origin of false alarms include the inability of many methods to perform extrapolation the inability of many methods to operate with data where plant dynamics have been excited or otherwise perturbed and the absence of guidelines for how the measurement vector should be composed or what is an appropriate set of training data to ensure the physical behavior of the system is adequately captured. These root causes of false alarms are in need of improvement.

One particularly important example of a commercial plant operation which requires rigid and thorough performance is a nuclear power plant which requires accurate and reliable indications of process variable values to operate at peak performance and under safe conditions. Achieving maximum availability power output and safety requires a high degree of confidence that the outputs from sensors accurately represent the underlying physical process variable values. A faulty reading can lead to inappropriate operator actions that can result in either unnecessary thermal cycling of equipment or inadvertent actuation of safety systems. The extreme operating conditions that sensors operate in can however result in structural deterioration of a sensor with time eventually causing the measurement to become unreliable. From the standpoint of safe and efficient operation there is a need to detect failing sensors so that maintenance can be performed and the quality of sensors readings assured to provide the desired peak performance and safe operating conditions.

The trend toward advanced operator aids places even more stringent requirements on sensor viability and reliability. Situational awareness algorithms for improving operator perception of the plant condition for better managing operation will require validated sensor readings as will semi automated fault recovery procedures. Sensor values will need to be tested for correctness and shown to satisfy a criterion for acceptability possibly quantified with a maximum permissible error.

Current industry practice for detecting failing sensors is ad hoc time consuming and presents a significant mental challenge to the operator. The operator must scan thousands of sensor readings and correlate these with his own mental model for the underlying physical processes. There is a need to automate sensor validation and to do it more reliably than is achievable by an operator.

Sensor degradation manifests itself as a de calibration or response time deterioration of the sensor output signal. The early literature on sensor aging identified environmental stress factors giving rise to age related changes. Heat humidity vibration temperature cycling and mechanical shock are important drivers of age related change for resistance temperature detectors RTD . Over time these environmental variables can induce changes in the resistance of insulation oxidation of the sensing element from long term exposure at high temperatures and ingress of moisture. These changes in material properties give rise to the observed sensor aging related changes. More recently sensor degradation has come to be regarded as a materials problem. From the point of view of materials science environmental driving potentials can cause atoms to diffuse across material interfaces cracks and porosity to develop in the bulk and individual atoms to transmute.

The origin of the false alarms can also include inability of many algorithms to perform extrapolation inability of many algorithms to operate with data where plant dynamics have been excited and absence of guidelines for how the measurement vector should be composed or for what is an appropriate set of training data to ensure the physical behavior of the system is adequately captured. It is therefore important to develop a capability that addresses the above root causes of false alarms and is able to detect sensor degradation and correct the sensor output until such time as the sensor can be either re calibrated or replaced such as during a planned shutdown. The latter point further recognizes that sensors are not readily accessible for maintenance during operation and is another problem source demanding an improved system and method for providing solutions to the various problems set forth hereinbefore.

Various embodiments of the present invention relate to systems and methods for improving sensor performance for various commercial sensor applications including but not limited to quality control failure analysis sensor degradation and failure and dynamic analysis of sensor and system status. The method and system further include for example 1 designing a sensor to minimize the effects of degradation and 2 on line analytically correcting sensor output signal for degradation caused faults using knowledge of the physical processes so as to obtain an adjusted sensor output. One embodiment for the on line correction of sensor value can be an intra sensor derived adjustment obtained at the individual sensor level using a material physics based model. Another embodiment for on line correction of sensor value can be an inter sensor derived adjustment obtained at the ensemble level i.e. among a collection of sensors using physically based correlations which relate outputs of sensors connected through a network of thermal hydraulic circuits. In the former case a material based model can predict sensor degradation as a function of the sensor s environment. In the latter case physically based correlations among sensors derived using either data driven or first principles methods can be used to predict this correction.

The shortcomings of existing methods and system described hereinbefore are treated herein by considering the case of the Multivariate State Estimation Technique MSET a well known methodology that has seen great commercial success. To date MSET has generated sales in excess of 100 million. The MSET method is found in the oil and gas industries aerospace industries and the electric power generation industries. Yet based on open literature descriptions of the methods of MSET the method does not address the issues of extrapolation dynamic data and basis for composing the measurement vector.

An inspection of the methods of MSET suggests that the absence of consideration for the properties of the equations that describe the physical systems monitored accounts for the absence of a direct treatment of extrapolation and dynamic data.

The present invention by contrast begins with a representation of the conservation laws for the physical system written. This includes use of a set of ordinary differential equations and includes representation of the actuators that drive the system and sensors that are used to observe it. This methodology does not need to be known in detail but an understanding of its general structure is needed for developing a robust data driven model. Conditions that the training data must satisfy are identified to ensure a reliable and robust data driven model. Sensor fault detection and identification is based on computing the residual error vector. The correct error vector is found as the residual which produces the best fit of the error free estimate of the observation to the column space of model basis vectors. The residual which localizes errors to the bad sensors is found by a search in the space of all possible error vectors.

In one embodiment of the invention the methodology can be best illustrated by providing a description of a physical system reviewing past methodologies provide example implementations and test data which will illustrate the solutions to the problems of the prior art.

In one preferred embodiment of the invention the method and system includes the illustrated systems and processes shown in . These systems can be controlled and processes implemented by use of a system and accompanying components shown in .

As shown in e.g. a computer accessible medium e.g. as described herein a storage device such as a hard disk floppy disk memory stick CD ROM RAM ROM etc. or a collection thereof can be provided e.g. in communication with the processing arrangement . The computer accessible medium may be a non transitory computer accessible medium. The computer accessible medium can contain executable instructions thereon. In addition or alternatively a storage arrangement can be provided separately from the computer accessible medium which can provide the instructions to the processing arrangement so as to configure the processing arrangement to execute certain exemplary procedures processes and methods as described herein for example.

System may also include a display or output device an input device such as a key board mouse touch screen or other input device and may be connected to additional systems via a logical network. Many of the embodiments described herein may be practiced in a networked environment using logical connections to one or more remote computers having processors. Logical connections may include a local area network LAN and a wide area network WAN that are presented here by way of example and not limitation. Such networking environments are commonplace in office wide or enterprise wide computer networks intranets and the Internet and may use a wide variety of different communication protocols. Those skilled in the art can appreciate that such network computing environments can typically encompass many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination of hardwired or wireless links through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Various embodiments are described in the general context of method steps which may be implemented in one embodiment by a program product including computer executable instructions such as program code executed by computers in networked environments. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Software and web implementations of the present invention could be accomplished with standard programming techniques with rule based logic and other logic to accomplish the various database searching steps correlation steps comparison steps and decision steps. It should also be noted that the words component and module as used herein and in the claims are intended to encompass implementations using one or more lines of software code and or hardware implementations and or equipment for receiving manual inputs.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for the sake of clarity.

Sensor validation algorithms operate on measured data acquired from physical systems. It follows that to understand the properties of a particular algorithm or to develop new algorithms with desired properties one must have a mathematical representation of the physical system.

Most engineered systems typically consist of some collection of physical plant sensors actuators and control systems each of which can usually be described by ordinary differential equations. In the present case the physical system whose identification and representation here is a necessary element of an improvement invention is represented by

This model is transformed into a time discretized form so that input and output variables with the sampled data plant data acquisition system which performs measurement and control functions at periodic points in time. The input vector u can change value only at discrete times twhere k 0 1 2 . . . and t t . Similarly the output vector y is measured or sampled only at times t. Integrating across the sample time interval 2.3a and . 2.3b 

Prior art MSET based methods and systems perform on line sensor fault detection and identification using a data driven approach. The on line data driven approach to sensor fault detection using sensor output data from prior measurements to estimate validity of current measurements in real time. This approach provides advantages compared to either off line inspection or first principles physics models. On line monitoring of sensors offers a timely and cost effective option for sensor fault detection as compared to off line inspection. Although integrity of sensors can be evaluated off line this approach does not result in timely detection of sensor failure because inspection has to wait for scheduled process shut downs. Such shutdowns are scheduled infrequently because of industry loss of revenue during plant down times. Data driven models of complex manufacturing and process systems such as a power plant are more robust compared to first principle numerical models. Numerical methods based on first principles physics require complete a priori model of the industrial process. If the industrial system properties change slightly over time first principles models can no longer accurately describe the industrial system. On the other hand a data driven approach does not rely on the complete a priori analytical knowledge of the physical system. Instead the datadriven method learns about the system from prior measurements.

A large number of data driven methods for sensor fault detection which include Kalman filtering neural networks and state estimation have been proposed. Since there have been very few benchmarking studies relative merits of various methods are difficult to assess. In one benchmarking study conducted by the Department of Energy MSET performance was shown to be far superior compared to that of probabilistic neural network tools of SNL and autoassociative neural network methods of UT. In addition to the best of our knowledge a relatively small number of fault detection methods reported in the prior art have been reduced to practice. On the other hand MSET has been successfully used by a number of industries including power technology nuclear oil gas and aerospace.

MSET is derived from a least squares LS estimation method which is used primarily to fit analytical model to experimental data. Application of conventional LS method to sensor failure detection is hindered because LS is not capable of identifying sensor fault. Since only a small subset of sensors are expected to fail at any given time fault identification amounts to localization of the error to the true bad sensors. The structure of the LS method is such that it attempts to find the best fit to the observation and therefore spreads the error across all sensors in the plant. In order to localize sensor error MSET introduces proprietary methods for warehousing training data in a memory matrix and finding an estimate for the monitoring data using a non linear operator. In the MSET approach an n by 1 state vector X is formed by recording values of n sensors at the same time. During MSET training phase an n by m memory matrix D 3.1 is obtained from m observations of the state vector taken at different times over the course of plant lifetime. Training vectors are ordered in magnitude from the smallest vector Xto the largest Xusing a proprietary vector ordering routine. Next m uniformly spaced samples are computed to populate the n by m memory matrix D. Columns of D represent all normal states of the plant i.e. states corresponding to measurements made when all sensors were good. During the monitoring phase one records a new observation of the state vector X. In general one can decompose Xinto two orthogonal vectors 3.2 where Xis the projection of Xonto column space of D 3.3 and Xis the error vector which appears as the result of failure of one or more sensors. According to the LS theory the norm of the error vector is minimized by appropriately adjusting the coefficients in the vector of weights w via solution of the equation 3.4 so that one can obtain an estimate based on the observation as . 3.5 Equations 3.1 through 3.5 were obtained from the LS theory. MSET is derived from LS by replacing matrix multiplication in Equation 3.5 with a nonlinear operator circle around defined in the theoretical basis of the well known MSET method so that 3.6 

Contrary to LS MSET is based on template matching. The assumption of MSET is that if the state of the system has not been observed in the past it must correspond to a system fault. The nonlinear operator circle around is introduced for two reasons. The first objective of the MSET nonlinear operator is to facilitate calculation of the inverse matrix in Equation 2.6 . The MSET memory matrix D consists of all the prior measurements. In general such D has linearly dependent columns so that DD is not invertible. However as shown in the theoretical basis of MSET the matrix Dcircle around D is invertible. The second objective of the nonlinear operator circle around is to obtain a scaled vector of weights w with entries distributed between 0 and 1. That is MSET attempts to find w in which one element is maximized as close to 1 as possible while the rest of the elements are minimized as close to 0 as possible . The largest element in w indicates the likelihood that the observed state Xwas seen during MSET training. The nonlinear operator finds a column vector in the memory matrix D which matches the observation Xmost closely. Any differences between the entries of Xand Xvectors indicate failure of the corresponding sensors thus localizing the error.

There are a number of shortcomings of MSET. Any sensor has a finite response time which is the time that elapses between the onset of the change in the ambient medium and generation of the corresponding sensor output signal. Pressure and flow measurement sensors are known to have response times that are smaller than while temperature sensors are known to have response times larger than typical fluid transient time scale. Thus pressure and flow meters can be modeled as zero order systems while temperature sensors are modeled as dynamic first order systems. Early signs of dynamic sensor physical degradation manifest themselves in slower sensor response or increase in the time constant. Performance of zero order sensors can be monitored using steady state observations. On the other hand monitoring of first order sensors requires transient observations.

MSET monitoring is based on matching an observation to the column vectors of memory matrix D which contains a finite range of state vectors limited in magnitude from below and above by Xand Xrespectively. According to MSET logic any observation vector X including a normal one with none of the sensors failing which is not in the range between Xand X must correspond to sensor fault. During transient observations one is likely to be presented with an observation which is outside of the range of MSET memory. Thus inability to extrapolate causes MSET to fail during transient monitoring and therefore precludes MSET from detecting fault in first order sensors. In addition either during transient or steady state observations noise may cause the observation to fall outside of the range in MSET memory. This may result in MSET producing a false alarm during either transient or steady state observations. Therefore inability of MSET to generalize to observations outside the range of MSET memory causes the method to fail in monitoring both zero order and first order sensors.

MSET operates by comparing a new measurement against the existing database and has no capacity to generalize. Therefore MSET accuracy depends entirely on the content of the training data. In general the larger the size of the training data the more accurate MSET performance would be. The size of the data which can be used for MSET training aside from the obvious limited volume of recorded data is also limited by sensor s lifetimes. That is NPP data recorded over a timespan larger than the sensor s lifetime may contain readings from failed sensors. The implicit assumption in MSET is that the state vector of NPP sensors has only a finite number of normal states. That is all normal normal states of the NPP cooling system can be learned from a reasonably small amount of training data. This assumption might be justified if MSET is to be used for monitoring of steady state observations. During normal NPP operation temperature pressure and flow rate of the cooling fluid do not change frequently. Thus it is very likely that all normal steady states of the state vector can be learned from several years worth of training data. On the other hand transitions between steady states can occur via a variety of transients. In general the plant is seldom at steady state since it is either purposefully undergoing a normal operational transient or undergoing an unexpected upset transient. Even when the plant is nominally at steady state control system dead band may result in small transients as controlled variables alternately drift between dead band limits. In order to learn all possible transients of NPP cooling system MSET may need to be trained on an excessively large database of prior measurements. Even if such database becomes available this places a computational burden of inverting the memory matrix consisting of possibly millions of elements.

An MSET template matching approach is inadequate for estimation of monitoring transients. The solution to unknown transient estimation is to use the basis vectors of the system and adopt a framework which allows forming linear combinations of basis vectors. MSET has been shown to produce correct estimation of the transient if the memory matrix D is populated with pre computed linear combinations of the basis vectors of the training transient. The deficiency of this method is that it requires generating exhaustive databases of training vectors and inverting very large matrices. Therefore using MSET in the basis vectors mode becomes computationally infeasible.

In view of the importance of the basic MSET method and system a new data driven Algorithm for Transient Multivariable Sensor Estimation AFTR MSET is developed to address the limitations of existing methods and systems described hereinbefore. The approach of the present invention starts with a representation of the conservation laws for the physical system as described hereinbefore. This model provides a guide to the mathematical structure needed for performing sensor estimation. Conditions that the training data must satisfy are derived to ensure a reliable and robust data driven model. This model provides a basis for performing state estimation and for detecting failing sensors.

In order to carry out the method and system of the invention one begins by identifying the mathematical form to represent the physical system and that underlies the development of methods and systems. Then the conditions are derived that the training data must satisfy to ensure a reliable estimation capability serving as a basis for performing state estimation and for detecting failing sensors. It also makes evident how the reliability of a data driven approach is inherently limited when it is obtained without regard to the properties of the physical system.

The new method and system is derived for the case where the physical system of Eq. 2.1 is assumed to be a linear time invariant LTI set of ordinary differential equations ODE . When the physical system is non linear a set of LTI ODES valid about a set of contiguous operating points is assumed to provide a good approximation to the more general Eq. 2.1 .

Necessary conditions that the measurement vectors must satisfy are derived and these conditions provide guidance on how to assemble the vector.

Basis Vectors It is clear that the set of all possible measurement vectors Zof the linear discrete system of Eq. 4.5 occupy the null space of the matrix E. In turn the null space of E denoted by N E is spanned by a set of basis vectors P. One such basis is a subset of measurement vectors. In turn all other measurement vectors can be written as a linear combination of these basis vectors. This property is important in a preferred embodiment to the extrapolation property of the estimator developed below.

A requirement of the memory matrix is that it reflects the coupling between system inputs and outputs. For a sensor to be included in the measurement vector the system must be with respect to the process variable either input controllable or output observable.

Input Controllable First the U vector must contain only elements that affect the system outputs. An element that does not will convey no meaningful information about the system in the sense that its value has no effect on the behavior of the system. To determine if all the elements of U influence the outputs write using Eq. 4.9 as above 4.10 where again the subscript L denotes the left pseudo inverse. All elements of U influence the values of Y only if and only the solution CA exists i.e. can be solved for . Then all the elements of U must be dependent on Y i.e. affect the values of Y. Output Observable Second the Y vector must contain only elements that are driven by system inputs. An element that is not connected to the inputs does not contain meaningful information about the behavior of the system in the sense that its value exists independent of the conditions that are forcing the system. To determine if all the elements of Y have a dependence on the system inputs write using Eq. 4.9 4.11 where L denotes the left pseudo inverse and where for the collection of U Y i 1 . . . K n in the training set 

All elements of Y depend on U if and only if for 4.12 the solution AC exists i.e. can be solved for . Identifiability The degree to which a dataset of measured data U Y represent the system can be assessed by rewriting Eq. 4.9 as 

Sensor estimates obtained using linearized representations of the system are referred to as point estimates. These estimates are local to the point of linearization.

Generalization The dynamic case represented by Eq. 4.4 has the solution given by Eq. 4.5 . Again if is a free parameter then a particular solution satisfies 0. 4.14 By analog with the development in Section x an observation vector can then be written as 4.15 Where and . . . and measurement vectors Z k 1 2 . . . s span the solution space of Eq. 4.15 .

Least Squares Estimator If a matrix M of observation vectors has been assembled and a new observation vector Zarrives then the least squares estimate for Zis given by 4.16 wherein The least squares estimate has the property that it is the vector in the space spanned by M that is closest in the Euclidean sense to the observed vector.

With this background if the columns of M span the null space of E then let a set of basis vectors for these measurement vectors be stored as the columns of the m by n matrix A. A measured vector Zwith possible errors in its elements can be decomposed into orthogonal vectors as 4.17 where p is the projection of Zonto column space of A and is the error vector so that and 4.18 According to the least squares development 4.19 so that the closest true system state to measurement vector Zis p where P is defined as the projection operator.

L Norm Estimator In the case of a degraded sensor the error in the observation vector is isolated to a single element of Z. Or in the case where the initial degraded sensor is not replaced before a second or third sensor degrades then the error in the observation vector is limited to a small subset of elements. The goal is to use the remaining good sensor values to reconstruct values for the degraded sensors. Least squares can potentially return an improved estimate for the actual state but it has no mechanism for righting only the degraded values. Rather it provides the estimate that lies in the space of A that is closest to the observed vector. This estimate lacks the desired feature that only the elements in error are corrected. Elements that are in fact good are perturbed in the process of finding the estimate closest to the observed vector.

An appropriate estimator should have the property that the estimate lies in R A . Thus if p is the estimate then 4.20 In the case of the ielement of the measurement vector then 4.21 will be zero for a good sensor and non zero for a failed sensor.

The estimator should also have the property that the number of its elements that deviate from the observed vector over all possible vectors in R A is a minimum. That is it should penalize assigning deviation to sensors that are good. While in general the number and identity of the faulted sensors is unknown the fraction of sensors failed will be small increasing the likelihood that there is redundancy in the remaining sensors to allow for prediction of the failed values. Thus one should look for an estimator that will allow for a deviation between measured and estimated value for the failed sensors and no deviation for the good sensors. An estimator with these characteristics is the minimum L norm of the residuals 

This estimator has the property that only failed sensors will tend to have estimates that deviate from the measured value. Alternative representations are

Algorithm for L Norm Estimate In practice there is no direct solution to the above minimum L norm. But the problem can be transformed into a least squares problem where a hypothesized subset of failed sensors is evaluated with respect to a minimum norm and then compared to all other such subsets or permutations. The subset that gives the global minimum of all such norms yields the estimate of Eq. 4.24 .

To proceed suppose I is a set of integers whose values correspond to the identity of a subset of the m sensors. Let J be the complement of I. Define an m m matrix selection operator such that for an m 1 vector w 0 4.25 

The x I that satisfies Eq. 4.26 is found using the Matab least squares function lsqlin. The constraint in Eq. 4.26 is first transformed into the form expected by Matlab. Let 4.28 where 4.29 so that the constrain becomes where F is the left inverse of F.

With these definitions the argument of the minimization in Eq. 4.26 becomes 4.30 where . 4.31 With these transformations the problem of Eq. 4.26 is recast as

Minimum Number of Good Sensors to Detect Bad Sensors Of interest are the limits of applicability of the estimator described above. In particular how many sensors must be good in order to be able to detect bad sensors and to then estimate their values. If the measurement system has n basis vectors then a minimum of n 1 good sensors is needed. This creates an over determined system whereby any additional sensor that is bad cannot be simultaneously expressed as a linear combination of its associated row elements in the n basis vectors of length n 1. This is represented by the measurement system 4.34 where A has rank n and the system is over determined since there are more equations than unknowns x. This must be the minimum number of sensors since n sensors i.e. one less no matter what their values good or bad can always be expressed as a linear combination of the n basis vectors.

It is noted that n of the n 1 sensors above must be linearly independent in the sense that the corresponding n rows of A are linearly independent. This is guaranteed since A is composed of n columns of basis vectors by definition linearly independent. Further the n 1sensor cannot be redundant with any of the first n otherwise the n 1 system will not be over determined.

Systems having strong non linearities over an operating range are treated using a sequence of linear models that piecewise straddle the operating range. The approach for training such a sequence of models is described below.

Extrapolation and Errors The estimation method of the preceding subsection is able to extrapolate with zero error for the case where the observed measurement vector lies outside the range of the training data and where the linear system represented by the training data is still valid. But most physical systems are non linear and so error is introduced when the estimator extrapolates significantly outside the range of the training data.

However through an adaptable operating point formalized below the error between the training data and the measurement vector that lies outside the training data can be managed. Essentially as we move away from point of linearization the measurement vector is not expressible as linear combination of basis vectors that represent the linearization at the operating point. This error needs to be quantitatively included in the process for estimating otherwise the estimation algorithm will attempt erroneously assign this error to sensor degradation.

Cluster Analysis A procedure for organizing a collection of data fitted models that each spans a sub region of a larger non linear operating region is described. In this approach an operating point sensor vector that corresponds to the uand yin Eq. 4.2 is defined. In general there will be L such operating points u y . . . u y. A local memory matrix is taken to represent the local functional dependence of nearby sensor vectors about the operating point sensor vector. In the aggregate sufficient such vectors must be generated so that the entire operating region is covered by a sufficient number of vectors so as to yield a near continuously varying representation.

If the modeler can ensure sufficiently uniform and dense coverage by sensor vectors then the assignment of sensor vectors to an operating region can be automated through the use of cluster analysis. Cluster analysis provides a means of agglomerating sensor measurement vectors by operating region in an automated fashion and in a way that reflects the natural order among the vectors.

The training algorithm based on the above approach is 1 identify sensors that belong to inputs u and outputs y and 2 collect sensor measurements corresponding to u and y over the operating range for sampling times k 1 2 . . . K and label these data u u . . . uand y y . . . y

where each vector is of the form of Eq. 4.7 where j 0 . . . K n 1 and where n is of the number of differential equations needed to describe the system.

One then perform a cluster analysis on this collection of K n vectors. Written explicitly the collection appears as

So for example if the above K n vectors formed a single cluster then for the second vector in the cluster as listed above 2 and 2. 4.39 

Bridging Between Clusters With the training data partitioned into a number of clusters a method is needed to obtain an estimate for a measurement vector that is assumed to lie among the training data. Presently the estimate is generated by finding that cluster that lies closest to the measurement vector using the Euclidean norm. Once this cluster is found estimation proceeds according to the linear model development where this cluster is assumed to consist of training data about the operating point referred to above as the operating point sensor vector.

In practice the physical system may be constrained to operate along a path that is defined by some combination of inputs. For example in a nuclear plant the plant control system constrains where the plant will operate during normal operation. This space is relatively small compared to that resulting from all the values the inputs might take if not constrained by normal operating procedures. In the interest of limiting the dimensionality of the estimation process then it is important to characterize the normal operating regime. For the paths normally taken it is important to note how many independent variables q are needed to parameterize this path. While the path is determined by the inputs u it is usually the case that the individual elements are constrained by the control system such that q

For example in an ascension protocol to attain a desired power in a nuclear plant the path traced by u can be parameterized in terms of a single variable power. While u may consist of multiple elements such as primary and secondary mass flow rate and rod position if the ascension is performed quasi statically then all elements of u are specified by the power. If the ascension to power occurs such that dynamics are excited then the individual controllers that deliver the value of u may depart from the quasi static path but in a manner that can be captured by a linearization about the quasi static power operating point.

Implementation of the above described methods and systems can be described for example in the context of a thermal hydraulic nuclear system. The state of the process fluid is manipulated using a variety of components. Sensors measuring fluid state parameters temperature pressure and flow rate are typically placed at the inlets and outlets of a component. In general each component is a nonlinear dynamic system which can be linearized about the quiescent point using the clustering method. Sensor response can be modeled as either linear first order or zero order system so that sensors can be treated as parts of the linearized component. The boundary conditions of the component fluid state variables which are the inputs to the corresponding sensors are correlated by the laws of conservation of mass energy and momentum of the fluid transport. Thus outputs of sensors monitoring a component are correlated as well. Then outputs of n sensors arranged in an n by 1 state vector X define a proper subspace S of the n dimensional space R. Mathematically S R so there exists a non empty subspace F R which contains vectors with failed sensor values which are not in S. This serves as the basis of linear estimation of sensor fault.

Fluid transport in a thermal hydraulic component e.g. heat exchanger can be described by a set of nonlinear ordinary differential equations. In the present embodiment we can consider a linearized dynamic component with m inputs x n and l outputs y n where the values of inputs and outputs are measured in discrete time. The variables x n and y n designate temperature pressure and flow rate at the inlets and outlets of the component. The component can be mathematically described as a multiple input multiple output MIMO system subject to conservation laws. General form of discrete time MIMO system can be written as a system of l equations

Sensors can be integrated into the component matrix in Equation 5.6 using linear system description of sensor dynamics. As an example consider a heat exchanger with two inlets and two outlets. A schematic drawing of such system is shown in . Pressure measurements are usually not made at the heat exchanger inlets and outlets. Thus explicit reference to fluid pressure is omitted from the present discussion.

As shown in available data consists of discrete time temperature measurements n n n n and discrete time flow rate measurements n n n n The data is obtained using temperature and flow meter sensors. It is necessary to establish a mathematical relationship between the measured quantities which constrains the space of all possible data values. Such constraint will be used for estimation of measured data to detect and identify sensor failure. Let us denote the intrinsic fluid temperatures as T n T n T n T n and intrinsic flow rates as w n w n w n w n . A temperature sensor can be modeled as a linear first order discrete time system of the form 1 5.7 where 0

The number of time delays K is not known a priori and needs to be determined from the data. If all measurements were conducted with infinite precision then one could construct matrix A such that Equation 5.28 is satisfied. In reality sensor measurements are valid within sensor measurement accuracy . Then Equation 5.28 becomes 0 5.35 Where is a l by r non zero matrix with norm 5.36 That is no matter how many time delayed terms are included in Equation 5.24 by increasing the value of K because of inherent uncertainty in measurements will never be smaller than some number 0. Formally lim 5.37 We will use Equation 5.37 to estimate the value of K from the data. By construction in Equation 5.27 rank 5.38 From Equation 5.35 it should be clear that col null 5.39 And dim col 5.40 We need to find a q by r matrix B with rank and col null 5.41 which approximates A as close as possible. Such matrix B can be obtained using singular value decomposition SVD of A 5.42 Where U is q by q matrix containing orthonormal basis vectors uspanning col A is q by r matrix containing q singular values on the main diagonal and r q columns of zeros and V is r by r matrix containing orthonormal vectors vspanning row A . We express equation 36 as a sum of q rank one matrices . . . 5.43 Next we construct a q by r matrix B with rank B p as a partial sum of the first p terms . . . 5.44 The difference between A and B is a q by r matrix E with rank E l given as . . . 5.45 With 5.46 If we construct l by q matrix C as

Once the number K of time lags is determined the orthonormal basis of the training data is given as the first p column vectors of the matrix U . 5.51 

The capability to monitor transients i.e. the extrapolation capability is introduced into AFTR MSET by replacing the memory matrix approach of MSET with the basis of training vectors. The basis vectors of the training data are stored as column vectors in a matrix B which is subsequently used for all estimation computations. Estimation method using basis attempts to find the best fit to the observation vector by using a linear combination of basis vectors. Such estimation method is by definition scalable for processing observation vectors of any amplitude. Since column vectors of the basis are linearly independent by definition using the basis instead singular memory matrix D eliminates the need for the nonlinear MSET operator circle around to enable inversion of the singular matrix DD. In fact the need to matrix inversion which is a computational burden when large matrices are used is eliminated altogether in AFTR MSET. This is because the basis could be chosen to be orthonormal so that BB I identity .

Sensor fault detection and identification of AFTR MSET is based on computing the residual error vector. The error vector has zero entries corresponding to good sensors and non zero entries corresponding to failed sensors. The correct error vector is found as the residual which produces the best fit of the error free estimate of the observation to the column space of the basis matrix B. The residual which localizes errors to the bad sensors is found by a search in the space of all possible error vectors.

For an observation a made during the monitoring phase the general case is that among the n sensors an unknown number could be faulty. The error finding algorithm consists of forming a hypothesis that k sensors at specific locations have failed. The algorithm detects fault among n sensors by a majority vote. That is the assumption is that only k

If the observation is composed with K time delays for each input variable fault detection consists of two stages. During the first pass each set of K 1 entries corresponding to each input sensor is treated as a block where entries of the error vector e within the block are not allowed to vary independently. Using the initial guess of Equation 5.56 the algorithm finds the error vector esuch that din Equation 5.56 is minimized. On the second pass the algorithm uses the error vector eas the initial guess and allows the entries within each K 1 long block to vary independently. The two stage approach reduces search time by constraining the search dimension to k sensors when an arbitrary initial guess eof Equation 5.56 is used in the first pass. Time delayed values for the same sensor are expected to have fairly close numerical values. Thus when the constraint on search dimension is relaxed in the second pass and the search dimension is increased up to k K 1 sensors initial guess of eenables fast algorithm convergence.

The algorithm searches through entire hypothesis space to find the best guess i.e. the hypothesis which results in the smallest distance d. Algorithm implementation consists of two nested loops. The outer loop iterates on the total number k of sensors assumed to be faulty where k 0 . . . n 2 1. Since we expect that only a small subset of sensors will fail at any given time in practice the subspace of all possible errors could be limited to the largest k much smaller than n 2. The inner loop iterates on possible combinations of assumed k faulty sensors distributed among all n sensors. For a given k locations of the possible faulty sensors are chosen as combinations permutations without repetitions . For each value of k in the outer loop the number of iterations in the inner loop is

A test platform has been developed for performance testing of the AFTR MSET algorithms. The platform takes as measured data the simulation data generated by the GPASS code for the thermal hydraulic behavior of individual plant components such as heat exchanger and coolant pipes in response to user supplied forcing functions. The AFTR MSET algorithms are accessible through a GUI and the performance of the algorithms can be evaluated by running them on different GPASS transient data sets and injecting signals into sensor models to simulate failure.

The platform provides single cluster and multi cluster development environments. Both environments provide a graphical user interfaces GUIs for communicating with the simulation data and for directing the algorithms or methods and system. There are three main functionalities creation of models of a system based upon training data estimation sensor values for monitoring data that is input and a viewing capability for comparing training monitoring and estimation data. These three capabilities are accessed through the GUI shown in . The single cluster environment uses all data points to create one time lagged data matrix A and its associated vectors B this single linear model is applied to all monitored points. The multi cluster environment groups the data points into clusters. In the monitoring phase data points are sorted into one of the clusters.

The training section of the single cluster development environment allows the user to read in training data from a GPASS output file and can be easily expanded to import other file types. These files can be loaded from any directory location accessible to the user s computer.

The training section allows the user to select those variables in the training file that are to be used to create a model as appears in . The environment has a scatter plot capability to permit comparing variables against each other and to view variables over time prior to variable selection. This capability provides a convenient way to uncover nonlinear relationships between variables or identify quasi static systems. Additionally the GUI provides several methods to predict the number of linearly independent variables and to identify linearly dependent and independent variables. This identification of variables informs the next step where the program requires the user to identify selected variables as either inputs or outputs.

The system basis vectors are prepared in the next step as appears in . The user specifies values of settings used to calculate the number of lags and generate the basis vectors. Feedback after basis vector creation informs user decisions for the above settings Graphs facilitate troubleshooting by illustrating the convergence trend of error residuals with program parameters pop ups display critical values and a specialized View Vectors GUI combines with the MATLAB workspace to allow the user to view any and all information generated during the creation of the basis vectors. The user can view basis vectors at any time in the View Vectors GUI and the MATLAB workspace. Multiple basis vector files can be opened side by side facilitating comparisons between vectors.

After the user is satisfied with the results of the basis vector creation the generated basis vectors and all associated information can be saved in a file for later use. The basis vector file name chosen by the user should reflect the date of creation training data name and basis vector settings to facilitate later use.

The monitoring section of the single cluster environment allows the user to load basis vectors from any file location in the user s computer. After loading the basis vectors the user is shown the variables and settings that were used to create the vectors these settings specified in basis vector creation are also applied to the monitoring data to prevent errors. If the basis vectors are satisfactory the user selects the data file that they would like to monitor the environment can read in training data from a previously generated GPASS output file. The development environment performs a check to ensure that the data sets for training and monitoring are consistent and then proceeds to the next step.

The user can specify a particular subset of the entire monitoring data file to monitor as appears in to inform this decision the environment allows the user to graph variables of the monitoring dataset over all points in time. Next the user is given the option to artificially inject a user specified fault into any and all variables they choose prior to monitoring this allows the user to test the robustness of the system by simulating various degrees of sensor failure.

The development environment provides feedback on the outcome of the monitoring process. During monitoring the program facilitates troubleshooting by informing the user of which data point AFTR MSET is estimating. The View Monitoring Results GUI as appears in allows the user to review the generated monitoring results at any time even during training and monitoring in the View Monitoring Results GUI and the MATLAB workspace. Multiple results files can be opened side by side facilitating comparisons between monitoring test runs.

After the user is satisfied with the monitoring results the development environment allows them to save the generated results and all associated information in a file for later access.

The multi cluster environment has all training functionalities of the single cluster environment. Additionally the user is given the ability to specify what number of clusters the program should create. The View Vectors GUI is upgraded to allow the developer to view the characteristics of each cluster side by side.

The multi cluster environment has all monitoring functionalities of the single cluster environment. Additionally the program sorts each measurement vector i.e. each point in time from the passed in monitoring data into one of the training clusters then the assigned cluster s vectors are applied to the point in order to create the estimated monitoring data. The user can plot the error of each cluster s data points as a function of distance from the cluster s mean value and the View Monitoring Results GUI is upgraded to take the cluster used to generate the point into account.

Currently each estimated data point is created using only one cluster s vectors. In the future vectors from a certain number of nearby clusters might be weighted and included in the calculation for the estimated data point to give an even more accurate estimation.

Future enhancements are planned for the multi cluster training capability. The View Vectors GUI will be updated to allow for more detailed analysis of individual clusters. Currently the program generates a user specified number of clusters in the future the program may automatically detect the number of clusters needed to satisfy a certain set of conditions. In the future the program will perform checks to ensure that the inputs and outputs used to train the system actually influence or drive the system in question. Finally the training algorithm currently only creates one set of clusters at a time future versions of the program may generate models with multiple numbers of clusters and then allow the user to directly compare models before selecting which model to save.

A series of test problems was defined and the performance of the AFTR MSET algorithms for solving them was assessed. These problems represent a progression in estimation problem complexity and involve different combinations of instances of sensor dynamics component dynamics more than one forcing function changing at a time and component nonlinearities. The test problems and results are described below in order of increasing complexity of the phenomena that underlie the physical system on which estimation is performed.

The simplest case of a component is a straight section of a pipe in which the fluid temperature is monitored by several redundant resistance temperature detectors RTDs located next to each other. We consider a case study of fault detection in a cluster of four RTD s. Such a collection of sensors might be found in the reactor outlet pipe of a pressurized water reactor for input to the reactor shutdown system. The RTD s 1 through 4 with respective temperature outputs T t through T t are driven by the same forcing function temperature. The RTD response to changes in pipe coolant temperature was simulated using the dynamic model of Example II.

In the training transient all four RTD s are normal with 3.0 s. In the monitoring transient we introduce a sensor fault by assigning 6.0 s to a failed RTD while a normal RTD still has 3.0 s. shows the result for fault detection during monitoring stage where the first RTD has failed. This figure shows that the failed sensor signal given by the OBS curve i.e. observed is successfully corrected for to yield the EST curve i.e. estimated which overlays the sensor response if the RTD had not failed as it well should . shows the result for fault detection during monitoring stage where the fourth RTD has failed. Similar results were obtained when testing for algorithm fault detection and identification capability of the other sensors.

A typical network of correlated sensors involves plant components inter dispersed among the sensors. For a particular component the sensors that envelope the component are correlated through the physics of the component. In the two cases below a heat exchanger is operated quasi statically about an operating point so that its behavior is essentially linear. In the first case the sensors respond quasi statically. In the second case the response of the temperature sensors is dynamic.

No Dynamic Sensors The case of quasi static sensors and component is considered first. That is the forcing functions driving the component are changing slowly enough that the neither the sensor nor the component dynamics are excited.

The component considered is the tube and shell heat exchanger of Example VIII. This component has two inputs Tand T and two outputs Tand T and constant flow rates. In this study the GPASS code used to generate simulation data for this component had energy storage disabled. The training transient consisted of the first two thirds i.e. 0 66 s of the fault free monitoring transient. The error c primarily small non linearities was estimated to be on the order 10. During monitoring a sinusoidal fault was injected into one of the sensors. Results of fault detection and identification in the first sensor using the system basis learned from the training transient are displayed in . This figure shows that the failed sensor signal given by the OBS curve i.e. observed is successfully corrected for to yield the EST curve i.e. estimated which overlays the sensor response if the RTD had not failed as it well should . Results of fault detection and identification in the second sensor are displayed in .

Dynamic Sensors The case dynamic RTDs and a quasi static component is considered next. In this case the forcing functions driving the component are changing slowly enough that the component dynamics are not excited. The component considered is a printed circuit heat exchanger PCHE . The heat transfer channel dimensions in a PCHE are of the order millimeters giving thermal time constants of the order of tenths of a second. The RTDs response on the other hand is of the order of seconds to coolant temperature change. The RTD response was simulated using the dynamic model of Example VII.

A schematic diagram of a PCHE with four RTD s is shown in . In our labeling scheme RTD s 1 and 2 have temperature inputs u t and u t and corresponding temperature outputs x t and x t . Temperatures u t and u t are also the hot and cold inputs to the PCHE and temperatures u t and u t are the corresponding hot and cold PCHE outputs. In turn temperatures u t and u t are the inputs to RTD s 3 and 4 with temperatures x t and x t as the corresponding RTD outputs. PCHE output temperatures u t and u t are both functions of the input temperatures u t and u t . Correlation between PCHE inputs u t and u t and inputs u t and u t can be very nearly linear if the PCHE is a high temperature recuperator HTR or intermediate heat exchanger IHX types or the correlation could be non linear if the PCHE is precooler PRE type.

Training data consisted of transient observations with all four good RTD s with 3.0 s. In the monitoring transient we introduce sensor fault by assigning 6.0 s to any failed RTD while any good RTD still has 3.0 s. shows the result for fault detection during monitoring stage where the fourth RTD has failed. This figure shows that the failed sensor signal given by the OBS curve i.e. observed is successfully corrected for to yield the EST curve i.e. estimated which overlays the sensor response if the RTD had not failed as it well should . In this estimation we used rank one basis of the training data. Similar results were obtained when testing for algorithm fault detection and identification capability of all other sensors.

The tube and shell heat exchanger of Example VIII with mass and energy storage turned off and an input change that introduces significant non linearities is taken as representative of a dynamic linear component. This component has two temperature inputs hot and cold side inlet temperatures two coolant mass flow rate inputs hot and cold side inlet mass flow rates and two temperature outputs hot and cold side outlet temperatures . Simulation data for this heat exchanger was generated using the GPASS code.

The training data shown in correspond to a ramp flow reduction from 100 to 50 percent on the hot side of the heat exchanger. All other inputs are constant. That this introduces a significant non linearity is apparent in where the hot side coolant mass flow rate is plotted against the cold side outlet temperature. In a linear model there are no non zero appearances of terms that are the products of inputs and outputs. When the model of Example VIII is linearized a term that is the product of hot side flow rate perturbation and cold side outlet temperature perturbation appears. If the model is strictly linear then this term must be zero. Or equivalently simulation data for which this is not the case represents non linear operation of the heat exchanger. One concludes from that the heat exchanger for the range of operation shown in is non linear.

Estimation for this non linear problem was performed using the multi cluster capability described hereinbefore. The monitoring data generated using the GPASS code for presentation to the estimator is for a ramp flow reduction from 100 to 30 percent on the hot side of the heat exchanger. The sensor data presented for monitoring appear with the quiescent operating point subtracted out. The result for a bias error of 2 C. injected into the monitoring data for the cold side outlet temperature is shown in . This figure bottom left plot shows that this simulated failed sensor signal given by the OBS curve i.e. observed is successfully corrected for to yield the EST curve i.e. estimated which overlays the sensor response if the RTD had not failed as it well should .

The tube and shell heat exchanger of Example VIII with mass and energy storage enabled and with small input perturbations about an operating point is taken as representative of a dynamic linear component. This component has two inputs Tand T and two outputs Tand T and constant coolant mass flow rates. Again simulation data for this heat exchanger was generated using the GPASS code. The sensor data presented in the figures below for training and monitoring appear with the quiescent operating point subtracted out. Training and monitoring transients used in this study are shown in . displays the error as a function of the number of time delays K in the training data. Next we injected sinusoidal fault into the first sensor in the monitoring transient and attempt to detect and identify the fault using the system basis learned from the training data. display the results of fault detection and identification using K 0 time delays in the state vector for both training and monitoring data. The system basis consist of two 4 1 vectors. The fault is detected and identified correctly but the estimation is not exact as expected from the magnitude of the error for K 0 in the . Results of fault detection and identification using K 1 delays are shown in . In this case the system basis consists of four 6 1 vectors. As expected from the magnitude of the error for K 1 in accuracy of estimation is improved.

Improving plant performance through the use of advanced digital technologies imposes stringent requirements on the quality of sensor data. Validated sensor data is a prerequisite for any method which seeks to improve operator awareness of plant thermal state and equipment condition. The over arching issue among the different data driven sensor validation algorithms that presently exit relates to the high false alarm rate. The origin of false alarms include the inability of many algorithms to perform extrapolation the inability of many algorithms to operate with data where plant dynamics have been excited and the absence of guidelines for how the measurement vector should be composed or what is an appropriate set of training data to ensure the physical behavior of the system is adequately captured. This report describes the development of methods that address these root causes of false alarms. Results are presented for several applications to important and outstanding sensor validation problems.

Preparations are in place to advance the sensor validation AFTR MSET technology to the next level of performance testing. Whole plant simulator trials will provide for additional conditions not achievable under the existing test stand environment. It will provide for integration of the algorithms across multiple components rather than single components as has been the case to date. It will provide for a human factors assessment of how operators might interact with the technology as the full scale simulator replicates the physical space and data display and communications technologies found in an advanced power plant and thus represents a realistic environment for assessing operator use. Whole plant simulator trials will also provide a forum for demonstration to utilities. All such features of the whole plant simulator environment will serve to guide the development of AFTR MSET for deployment in existing and future plants.

The parameter characterizing any sensor performance is the sensor response time which is completely determined by the sensor physics. Depending on the ratio of sensor response time to the characteristic time scale of the physical system under measurement all sensors can be classified as either zero order or first order dynamic systems. If is much smaller than then sensor dynamics can be ignored. In this case sensor response can be considered as instantaneous and the sensor can be treated as a quasi static zero order system. If is on the order of or larger than then sensor has to be described as a first order dynamic system with time lag. For example changes in macroscopic fluid properties such as temperature pressure or flow rate occur with characteristic time scales of seconds. Pressure transmitters and flow meters have response times smaller than typical fluid transient time scales. Thus pressure and flow meters can be regarded as zero order systems. On the other hand temperature detectors which are based on heat transfer phenomena with response time on the order of seconds must be considered as first order systems.

One of the most common temperature sensors in nuclear energy industry is a resistance temperature detector RTD . System level performance of RTD consists of producing a time lagging output in response to an arbitrary input. Schematics of a linear system which models RTD performance is shown in the schematic below. The time dependent input u t is the ambient fluid temperature and the output x t is the time dependent temperature in the core of the sensor. Delayed response is characterized by a time constant .

In order to gain insight into physical mechanisms of sensor degradation one needs to establish a link between the phenomenological RTD model and the physical properties of the sensor and the ambient fluid. To address this need we develop a physics based model of heat transfer in RTD which enables computing using the information regarding RTD and ambient fluid material properties. Such model can be integrated into plant simulation software to serve as a platform for testing algorithms for sensor failure detection under realistic conditions. Since a large number of independently functioning sensor simulation modules needs to be added to a plant simulator it is important to produce computationally light weight sensor modules. This is accomplished by developing a stand alone 1 D finite element model FEM of heat transfer in RTD which can be implemented in a high level computer language such as MATLAB or FORTRAN.

An RTD is a long and narrow cylindrical metallic structure with a typical diameter in the range from 0.6 cm to 1 cm. An RTD is inserted into a plant cooling system pipe to an immersion depth of 5 cm to 10 cm in the process fluid. RTD heat sensing element is located in the bottom 1 cm to 3 cm long section of the detector. The heat sensing element is a cylindrical layered structure at the core of which there is a thin platinum wire wounded on a grooved cylinder called mandrell. The mandrell which is made of an insulation material such as Alumina AlO is enclosed by a concentric cylinder of insulation material of the same type. The insulation in turn is enclosed by a concentric cylinder of stainless steel called sheath. Depending on the installation mode RTD s are either direct immersion wet type or thermowell mounted well type . A wet type RTD is installed into a transvers hole in the cooling system pipe so that the sheath is in direct contact with the process fluid. A well type RTD is installed into a thermowell which had been previously mounted in the cooling system pipe. A thermowell is a hollow stainless steel cylinder with an average outer diameter of 1 cm to 2 cm which is in direct contact with the process fluid. In this paper we consider the performance of well type RTD. From the point of view of heat transfer in the sensor thermowell is considered as an integral component of RTD. A schematic drawing of transverse cross section of well type RTD is shown in . Note that mandrell is an inner part of the insulation and therefore no material boundary is drawn around mandrell. In the remainder of this paper mandrell will not be treated separately from the rest of the insulation layer.

Radial dimensions and material regions of the RTD in this study are presented in Table 1. Radius of mandrell indicates the location of the sensing wire. Although surfaces of RTD are slightly slanted in this paper we make straight cylinder approximation of the RTD shape.

In our model of heat transfer the thermocouple is subdivided into concentric cylindrical nodes numbered 1 to n. The system of n differential equations governing heat transfer between the nodes of RTD can be written in the matrix form as A.1.2 

Where the vector of temperatures is T T . . . T A is a tri diagonal heat transfer matrix TF is a forcing vector function and Tis the ambient fluid temperature. The details of 1 D FEM model derivation are given in the appendix. One of the principle results of the analytical RTD model is that the response time of an RTD is equal to the sum of the absolute values of the eigenvalues of the tri diagonal heat transfer matrix A

Using 3 D COMSOL simulations of heat transfer in RTD we performed a validation study of 1 D FEM model of RTD with n 5 nodes. In this study the forcing function Tconsisted of a step change in temperature from 20 C to 70 C over 0.1 s. The process fluid was water. Heat transfer coefficient was calculated using

We can estimate the response time of the RTD from the graphs in . From the COMSOL simulations 1.7 s while and 1 D five node model yields 1.9 s. From the spectral analysis developed in the previous section using time averaged material parameters we obtain

Table 2 lists the available design data for the Braidwood CVCS Regenerative Heat Exchanger which has a design heat transfer rate of about 3.22 MW per unit two units total . See the heat exchanger schematic .

From the reported data the LMDT can be calculated and is equal to 49.60 C. Therefore following the LMDT and heat transfer rate relationship the product between the total heat transfer area and the total heat transfer coefficient can be obtained in this case arbitrarily referred to the outer tube heat transfer area 

To find the tube diameter length and number an iterative process shall be initiated. By guessing the tube ID and OD dimensions the P D ratio on the shell side and the number of tubes and applying adequate heat transfer correlations on the tube and on the shell sides the total heat transfer coefficient can be calculated using Equation A.2.2 . At this point also the outer heat transfer area can be uniquely determined through equation 1 and so also the last missing parameter which is the tube length by using Equation A.2.3 . By iterating on the initial guesses reasonable values can be finally obtained for both dependent and independent parameters. The tube thickness was fixed at 1 16 of an inch following the steam generator design criterion which is similar in terms of design pressure to the conditions for the regenerative heat exchanger.

It should be noted that the iterative process was stopped when all the parameters listed in Table 3 were found to be reasonable following engineering judgment such as having turbulent flow both inside and outside the tubes limited flow velocities and a reasonable tube length. Notably the aspect ratio of the regenerative heat exchanger would approximately be 20 1 which is quite large. However such a high aspect ratio was judged to be reasonable by looking at available pictures and images of existing CVCS regenerative heat exchangers. The heat transfer correlations used to calculate the heat transfer coefficients are listed below 

The procedure followed is under determined and can lead to a non uniquely defined configuration. However by playing with the numbers and in particular with the tube dimensions and number it can be realized that not many combinations of tube dimensions and number lead to reasonable flow conditions and tube length. The trends may look counter intuitive at first but being the flow rates fixed the tube length is increased considerably when the tube diameter is increased and the tube number accordingly reduced to preserve turbulent flow. Table 4 shows values when the tube outside diameter is assumed to be inch vs. inch as in the reference case while the tube thickness is kept constant.

To verify and validate the analytic approach above presented the regenerative heat exchanger was modeled in GPASS. The model developed to test the single component is show in below 

The heat transfer correlation implemented in GPASS for the tube side is the Gnielinski correlation more accurate than the Dittus Boelter also because it was corrected by including entrance length effects which increase the local heat transfer coefficient. The regenerative heat exchanger was modeled in GPASS as a shell and tube heat exchanger with ten axial nodes. The imposed boundary conditions were the temperature pressure and flow rates at the two inlets of the heat exchanger points and as indicated in . The calculated values were the outlet conditions on both shell and tube sides points and in . The heat exchanger length was calculated iteratively by imposing the total heat transfer to be equal to the nominal value of 3.22 MWth. Table 5 reports the main results obtained through the numerical model 

By comparing Table 4 with Table 3 it can be noted that the required heat exchanger length calculated through GPASS is smaller than the one calculated analytically by about 34 cm. The reason for this difference is in the inclusion in GPASS of the entrance length effects which improve the local and therefore also the global heat transfer coefficient. With a higher overall heat transfer coefficient a smaller heat transfer area is required for a given heat transfer rate which is in this case fixed at 3.22 MW. By comparing Table 5 with Table 2 a very small difference in the exit temperatures can also be observed 143.6 C. vs. 143 C. and 268.1 C. vs. 269 C. . Such a small discrepancy can be attributed to the property tables used for the conversion from enthalpy to temperature.

The foregoing description of embodiments of the present invention have been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the present invention. The embodiments were chosen and described in order to explain the principles of the present invention and its practical application to enable one skilled in the art to utilize the present invention in various embodiments and with various modifications as are suited to the particular use contemplated.

