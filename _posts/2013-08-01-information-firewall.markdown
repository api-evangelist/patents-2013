---

title: Information firewall
abstract: A data-firewall system blocks sensitive data from becoming available outside a protected space. During operation, the system can obtain an interest from a requesting entity. The requesting entity can include, for example, a software application running on a local computer, a computing device of an Enterprise environment, or a computing node of a computer cluster. Also, the interest can include a location-independent structured name associated one or more data items. When the system obtains the data associated with the location-independent structured name, the system proceeds to obtain a policy associated with the data, and to determine a context for the interest. Then, if the system determines that the requesting entity is within a protected space, as determined based on the policy and the context, the system forwards the data to the requesting entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384359&OS=09384359&RS=09384359
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09384359
owner_city: Palo Alto
owner_country: US
publication_date: 20130801
---
This disclosure is generally related to an information firewall. More specifically this disclosure is related to using contextual information to protect data from being accessed by unintended recipients.

Malicious users typically steal sensitive data by breaking into computer systems either online or locally which gives them access to the sensitive information on these systems. For example a malicious user may impersonate a legitimate user by stealing his credentials and may use these credentials to gain access to the user s computer. Other malicious users may snoop on a secured wireless network over an extended period of time to crack the network s wireless access key. Once the access key has been cracked the malicious user can gain access to devices within the wireless network such as network attached storage devices.

Unfortunately once a malicious user breaks into a computer or storage device the user typically has full access to all data on the hacked device. To safeguard sensitive data against a break in some users employ an additional level of security by encrypting files that are deemed to be sensitive such as financial documents and account information. Doing so prevents a user from accessing the plaintext data if the user does not provide the necessary password for decrypting the file. However encrypting individual files to safeguard data is not a popular solution because it requires the user to enter the password each time the user desires to open an encrypted file.

One embodiment provides a data firewall system that blocks sensitive data from becoming available outside a protected space. During operation the system can obtain an interest from a requesting entity. The requesting entity can include for example a software application running on a local computer a computing device of an Enterprise environment or a computing node of a computer cluster. Also the interest can include a location independent structured name associated one or more data items. When the system obtains the data associated with the location independent structured name the system proceeds to obtain a policy associated with the data and to determine a context for the interest. Then if the system determines that the requesting entity is within a protected space as determined based on the policy and the context the system forwards the data to the requesting entity.

In some embodiments in response to determining that the requesting entity is not within the protected space the system requests for an authorization from the requesting entity.

In some embodiments in response to determining that the interest is associated with a blacklisted namespace the system blocks the data from being forwarded to the requesting entity.

In some embodiments the system can determine that the requesting entity is within a protected space when the requesting entity is a trusted computing device the requesting entity is a trusted software application and or the requesting entity is coupled to a trusted computer network. The system can also determine that the requesting entity is within a protected space when the context satisfies the policy s rules. Further the system can determine that the requesting entity is within a protected space when a recent behavior profile for the requesting entity as determined based in part on the context is substantially similar to a previous behavior profile for the requesting entity.

In some embodiments the system can generate a policy for a protected space. The system selects a namespace for which to control access and determines one or more entities which have been provisioned for the protected space. The system determines a network topology for the determined entities and determines one or more interfaces to authorize for the selected namespace. The system then generates a policy which authorizes access to the selected namespace for the provisioned entities and via the determined interfaces.

In some embodiments the context includes one or more of a hardware identifier a network address a biometric measurement a location identifier a location trace a user behavior a network behavior and an interest related behavior.

In some embodiments while obtaining the data associated with the location independent structured name the system obtains the data from a local repository and or forwards the interest to a remote computing device based on the location independent structured name.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a data firewall system that solves the problem of preventing data from being accessed from outside a protected space. The protected space can include one or more computing devices and or software environments that are trusted entities and are allowed to access data associated with the protected space. For example if the protected space includes one or more computers and software applications provisioned for a company s enterprise environment data that is meant to be accessed only from the protected space may only be accessed by these provisioned devices and applications.

Also if a device becomes compromised the device may restrict access to data that should not be accessed from outside the protected space. For example if the device is lost stolen or has been accessed illegitimately the device may detect that the usage behavior of the device has changed and may perform a remedial action that secures the protected data. The remedial action can include blocking access to the protected data and or requiring the local user or an administrative user to provide authentication information to unblock access to the protected data.

As an example the system can access and disseminate content using content centric networking CCN and uses filters and policies to block protected data from being forwarded to devices that are not within a protected space. The protected space can include devices and applications that are trusted entities and which are not suspected of having been compromised by an illegitimate user or software.

In CCN all content is named and each piece of content is uniquely bound to its location independent structured name. Multiple names can be securely bound to a piece of content through the use of CCN Links and multiple content objects can be considered a collection based on a namespace and the published content. A description of a CCN is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference. When the system generates a structured name for a content item the system binds the meaningful name to the content along with additional information to form a content object that can satisfy various interests from other nodes in the network. For example these structured names allow other entities to obtain the content item via CCN and to add the content item to their local data collection.

In a CCN content objects are persistent which means that the content item can move around within a computing device or across different computing devices but does not change. If any component of the content object changes the entity that made the change creates the updated content additional information or the name and or a new content object and signs the new content e.g. to bind a new name to the content . A structured name can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ccn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ccn test.txt. Thus the name parc home ccn can be a parent of parc home ccn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document. These additional naming components are not the focus of this invention. The naming scheme can be modeled as a forest of trees and there is no single root for the naming scheme. The system can create a set of structured names for the content item to create links between the content item and other sets of names for other content items. In CCN these links are also content objects that securely bind names to existing or future content objects. Additional naming structures can also be developed for example a content object can be created that contains a list of names linking to other content objects.

Because of this naming convention the content item can be addressed located retrieved cached and disseminated by its structured name s . Any entity in a computer network such as a computing device or software application can generate an interest to obtain the content from any device that has a content item whose structured name satisfies the interest. However in embodiments of the present invention a content item is only forwarded to the requesting entity that disseminated the interest if the requesting entity belongs to a protected space for the content item.

In some embodiments devices on the perimeter of protected space e.g. devices and are configured to enforce filters and or policies that restrict access to the protected data. Devices securely within protected space e.g. trusted device can provide access to the protected data without evaluating the filters and or policies that govern access to the protected data.

Protected space can include a data firewall device e.g. a network router or firewall device that prevents protected data within a local area network LAN from flowing to an untrusted device via a wide area network . Device can receive interests for data from within the LAN e.g. protected space and from WAN and uses a set of filters and or policies to determine whether the requesting entity that submitted the interest is within the protected space. The requesting entity can include a computing device or can include a software environment within a computing device. If the requesting entity is within the protected space e.g. trusted device device can forward the requested data to the requesting entity. On the other hand if the requesting entity is not within the protected space e.g. device data firewall device can block the requested data from being forwarded to the requesting entity. For example a malicious user or a computer worm may install malicious executable code in device to steal data. If this malicious code generates the interest to obtain sensitive data device or device will not satisfy the interest by allowing the sensitive data to flow back to device or to the malicious code.

Protected space can also include trusted devices that have been configured to operate securely within the trusted space and are allowed to access the protected data without evaluating the filters and or policies that govern access to the protected data. A system administrator can configure trusted device to only communicate with other devices within protected space and the system administrator may install only applications that are deemed safe for protected space . If a user wishes to install other applications and or to interface trusted device to other devices e.g. device the system administrator can configure these applications and or devices to operate safely within protected space .

For example the system administrator can configure a device such as a personal smartphone or laptop computer to operate within protected space by configuring device to prevent protected data from being accessed by illegitimate entities e.g. by enforcing rules and or by configuring device to block access to protected data e.g. by enforcing the filters . If device receives an interest for protected data from trusted device device can determine that trusted device is within the protected space based on the policies that govern access to the protected data. However if device receives the interest from untrusted applications or from a requesting entity via an untrusted network device can process the policies to determine that the requesting entity is not within protected space and blocks the requested data from being forwarded to the requesting entity.

In some embodiments the system administrator can configure a device within protected space e.g. device or device to process the filters and or policies if the device no longer satisfies a security profile. For example the trusted device may include a security profile that indicates a set of trusted devices and or applications that the trusted device can interface with. However if a user configures device to interface with an unknown device such as by coupling a smartphone to device via a local connection e.g. a universal serial bus USB connection device can analyze its security profile to determine whether device is a trusted device. If device is not a trusted device then device is no longer securely within protected space and device configures itself to enforce the filters and or policies for protected space . Similarly if a user installs untrusted applications into device then device is no longer securely within protected space and device configures itself to enforce the filters and or policies for protected space .

The system can process the interest to obtain data whose name is associated with the location independent structured name operation . Recall that multiple content items can be associated with the interest s location independent structured name. The interest s structured name can indicate a namespace for an organization e.g. parc for a data collection e.g. parc projects alpha or for a specific file e.g. parc projects alpha description.doc . The system can process the various data items that are associated with the interest individually and determines which data items it can forward to the requesting entity. For example the system can determine whether a data item needs to be protected e.g. based on a filter and or a policy and determines whether the requesting entity is within a protected space from which the data item can be accessed.

To protect the data item the system can determine whether the data s structured name is associated with a filtered namespace operation . If so the system blocks the data item from being forwarded to the requested entity operation . Otherwise if the data is not to be filtered the system determines contextual information for the interest operation and obtains a policy associated with the requested data operation .

The system then determines whether the requesting entity is within a trusted space operation by processing the policy s rules based on the contextual information. If the requesting entity is within a protected space the system forwards the data to the requesting entity operation . Otherwise if the requesting entity is not within a protected space the system blocks the data from being forwarded to the requesting entity operation or performs a remedial action e.g. requesting authentication information from the user or the requesting entity .

In some embodiments the rules may cause the system to determine for example whether the requesting entity is a trusted computing device or is a trusted software application in a trusted computing device. As another example the rules can cause the system to determine whether the requesting entity is coupled to a trusted computer network and or resides within a trusted location e.g. the owner s home workplace or any other location associated with the requesting entity .

In some embodiments the system can monitor the contextual information for the interests it receives and can maintain behavior profiles for the interests and or for the requesting entities from which it receives the interests. The rules can include a condition that an interest s context is in accordance with a behavior profile associated with the interest or for the requesting entity that provided the interest. The system can evaluate this profile condition by determining whether a recent behavior profile for the requesting entity is substantially similar to a previous behavior profile for the requesting entity. To determine whether the two behavior profiles are similar the system can compute a Euclidian distance over a plurality of profile attributes or can compute the distance using any other distance metric now known or later developed.

If the recent behavior profile is too different from a previous behavior profile it is possible that the system has been compromised and either an undesired user or a malware application may be using the requesting entity to perform a malicious activity. Hence if the recent behavior profile is too different from a previous behavior profile the system can determine that the requesting entity is not within a protected space and can block the data from being forwarded to the requesting entity.

In some embodiments CCN repository can store data associated with location independent structured names. CCN repository can store the data in encrypted form which prevents an untrusted entity from accessing the data directly from CCN repository . To access the data the requesting entity needs to provide an interest for the data to device at which point a trusted application on device processes the interest. The trusted application e.g. a repository managing application can decrypt the data if the requesting entity is associated with a protected space for the requested data.

For example when device receives an interest from the requesting entity device can use a location independent structured name from the interest to search for matching content items within CCN repository . If at least a subset of a content item s structured name matches that of the interest s structured name device can obtain the content item for the requesting entity.

However before forwarding the content item to the requesting entity device can determine whether the requesting entity is within a trusted space for the content item. Device can use filters to determine whether the content item belongs to a namespace that is not to be forwarded. Also device can collect contextual information associated with the interest and or the requesting entity and can process the contextual information using policies to determine whether the requesting entity is within the content item s protected space.

In some embodiments the requesting entity can include a software application or environment within device such as a trusted application . When device receives the interest from the software application device can collect contextual information such as a name or identifier for the software application permission information for the software application or its software environment access credentials for a user of the software environment permission information for the user a biometric scan for the user a user profile for the user etc. Device can also obtain other contextual information associated with the runtime environment for the software such as network addressing information for device identifiers for hardware and or software modules of device accessible by the software application a physical location for device e.g. geographic positioning system GPS coordinates or a location name etc.

Device can use this contextual information to update a behavior profile associated with the requesting entity e.g. stored in behavior profiles . This updated behavior profile accounts for behavior information derived from the collected contextual information such as to account for the requesting entity s data access behavior network usage behavior activity times etc. Device processes the collected contextual information and or behavior profiles using policies to determine whether the software application is within a protected space. Device blocks access to the data for applications that are not within the protected space will such as a computer worm a virus or an untrusted user application. Device blocks access to the data for a trusted user application when the application s contextual information raises a suspicion that device may have been compromised.

For example the policy for a company s protected space may indicate that the requesting entity needs to be coupled to trusted network and needs to reside either at the company s facilities or within the user s home. Hence when device receives an interest from a trusted application device can forward the data e.g. from CCN repository to the trusted application if the user is operating device within the company s facilities and coupled to trusted network . Device can also forward the data to the trusted application if the user is operating device within his home and device is coupled to a virtual private network VPN session to trusted network .

In some embodiments the requesting entity can include a remote computing device such as a trusted device or an unknown computing device . When device receives the interest from the remote computing device device collects contextual information for the remote device such as network addressing information a media access control MAC address a physical location e.g. GPS coordinates or a location name etc. Device uses this contextual information to update a behavior profile for the remote device to account for the remote device s data access behavior network usage behavior activity times etc.

Device processes the collected contextual information and or behavior profiles using policies to determine whether the remote device is within a protected space. For example the policy for a company s protected space may indicate that a requesting entity needs to provide a digital certificate that is signed by the company s certificate authority e.g. a server within trusted network and that the interest needs to be received via trusted network . If device receives an interest from computing device via a WAN device can determine that computing device is not within the company s protected space because the interest was received via WAN . Hence device will block the requested data from being forwarded to computing device thereby preventing the data from being leaked outside trusted network .

On the other hand if device receives an interest from trusted device via trusted network e.g. a company s secured LAN and device receives a properly signed digital certificate from trusted device device can determine that trusted device is within the protected space and proceeds to forward the requested data to trusted device . However if device receives the interest from trusted device from WAN device will block the requested data from being forwarded to computing device even though the digital certificate for trusted device is valid.

For example a computer cluster for cloud computing e.g. Amazon Web Services provided by Amazon.com Inc. of Seattle Wash. can include a plurality of server racks distributed across various global locations. A software developer can lease a set of computing nodes of the computer cluster and or can lease virtual machines that run on a set of computing nodes and share resources with other virtual machines on these computing nodes. In either case the software developer can configure the leased computing nodes to enforce filters and or policies that prevent protected data from being forwarded to an untrusted entity.

If the developer leases a complete computing node e.g. device . the developer can configure the computing node to implement a trusted device by including only software applications that are allowed to access protected data. Hence the policies in this computing node can allow all local software applications to access the protected data. On the other hand if the developer leases a virtual machine from a computing node e.g. device . the developer can configure this computing node s virtual machine to realize a trusted device. However because the computing node can host multiple virtual machines for various end users the developer creates policies for the trusted virtual machine that allows the virtual machine s software environment to access the protected data and prevents other virtual machines on the same computing node from accessing the protected data.

For example the developer can lease a physical server or a virtual machine on devices . . . of server rack device . of server rack device . of server rack and device . of server rack . The developer can configure network interfaces between the leased physical servers and virtual machines and deploys filters and or policies to realize the protected space that safeguards the developer s protected data. Then when a physical server or virtual machine e.g. device . receives an interest from a requesting entity e.g. device . the server or machine can use the filters and policies to determine whether to forward the requested data to the requesting entity. If the requesting entity is not within the developer s protected space the developer s machine can block the requested data from being forwarded to the requesting entity.

In some embodiments the developer can provision various computing nodes and or virtual machines from throughout cluster environment to work together and function as a single system. This configuration can include a complex set of interfaces that interconnect the various computing nodes such as network switch and local interconnects and . For example server racks and may be housed in the same building and the computing nodes within server racks and can communicate with each other via a local interconnect such as a LAN. Similarly computing nodes within server racks and can also be within the same building and can communicate with each other via local interconnect .

The developer can also install and provision one or more software entities of a respective computing node to access protected data from one or more namespaces. For example the policy can allow a virtual machine that is instantiated on one or more computing nodes to access protected data for a namespace PARC cloud vm config. Also for two independent software applications named Alpha and Beta that run within the virtual machine instances the policy can allow application Alpha to access protected data from namespace PARC cloud Alpha and can allow application Beta to access protected data from namespace PARC cloud Beta. 

Once the developer has created the filters and policies for computer cluster the user can deploy these filters and policies onto the leased computing nodes and virtual machines to safeguard the protected data throughout computer cluster . Hence the developer s computing nodes and virtual machines can use these filters and policies to safely communicate data with each other while preventing protected data from being forwarded to other computing nodes and or virtual machines within cluster . For example a malicious user may attempt to gain access to protected data from the developer s virtual machine on device . by leasing his own virtual machine on device .. However if the malicious user s virtual machine sends interests for protected data to the developer s virtual machine the developer s virtual machine will recognize that the developer s virtual machine is not a trusted software environment. The developer s virtual machine will block the protected data from being forwarded to the malicious user s virtual machine even when both virtual machines reside on the same computing device.

In some embodiments a system administrator can manually create a filter to include a set of namespaces that are not to be communicated to an untrusted entity. The system administrator can also manually create a policy based on desirable contexts for determining whether a requesting entity is within a protected space based on the entity s context. In some other embodiments one or more computing nodes of a computer cluster can automatically generate the policy by auto discovering the system administrator s cluster topology and creating a plurality of rules that prevents protected data from being forwarded to entities that do not belong to the cluster topology.

The system then determines one or more interfaces to authorize for the selected namespace operation and generates a policy that authorizes access to the selected namespace for the provisioned entities and via the determined interfaces operation . A system administrator can deploy the policy across the servers and or virtual machines associated with the namespace to realize a protected space.

In some embodiments communication module can receive and or send interests or data. Interest processing module can obtain an interest from a requesting entity. The interest can include a location independent structured name associated with a request for data. Data obtaining module can obtain the data associated with the location independent structured name and policy managing module can obtain a policy associated with the data.

Context determining module can determine a context for the interest and data providing module can provide the data to the requesting entity in response to determining that the requesting entity is within the protected space. Protected space defining module can generate a policy for authorizing or denying access to a namespace of a protected space.

Data firewall system can include instructions which when executed by computer system can cause computer system to perform methods and or processes described in this disclosure. Specifically data firewall system may include instructions for receiving and or sending interests or data communication module . Further data firewall system can include instructions for obtaining an interest from a requesting entity interest processing module . The interest can include a location independent structured name associated with a request for data. Data firewall system can also include instructions for obtaining the data associated with the location independent structured name data obtaining module .

Data firewall system can also include instructions for obtaining a policy associated with the data policy managing module and can include instructions for determining a context for the interest context determining module . Data firewall system can include instructions for providing the data to the requesting entity in response to determining that the requesting entity is within the protected space data providing module . Data firewall system can also include instructions for generating a policy for authorizing or denying access to a namespace of a protected space protected space defining module .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least one or more data collections interests policies for the data collections behavior profiles for one or more requesting entities etc.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

