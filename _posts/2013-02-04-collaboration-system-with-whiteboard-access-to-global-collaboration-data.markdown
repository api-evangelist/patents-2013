---

title: Collaboration system with whiteboard access to global collaboration data
abstract: A computer system has access to a database storing collaboration data for at least one collaboration having a collaboration space. The collaboration data includes data structures identifying objects displayable by a display client on a display wall and associating locations in the collaboration space with the objects. The system includes logic configured to identify available display walls, each available wall having an identification code; logic to detect user input identifying a collaboration and an identification code for one of the free display walls; and logic to enable delivery of collaboration data for the identified collaboration to a display client for the identified display wall.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479548&OS=09479548&RS=09479548
owner: HAWORTH, INC.
number: 09479548
owner_city: Holland
owner_country: US
publication_date: 20130204
---
Haworth Inc. a Michigan corporation Thought Stream LLC a Delaware corporation and Obscura Digital Incorporated a California corporation are parties to a Joint Research Agreement.

The invention relates to apparatuses methods and systems for digital collaboration and more particularly to digital whiteboard systems which facilitate multiple simultaneous users having access to global collaboration data.

Digital whiteboards are often used for interactive presentations and other purposes. Some whiteboards are networked and can be used for collaboration so that modifications made to the display image on one whiteboard are replicated on another whiteboard or display. Large scale whiteboards offer the opportunity for more than one user to present or annotate simultaneously on the same surface. However problems can occur in the coordination of the multiple users and in some circumstances their use of a single whiteboard can restrict their flexibility of expression.

Also digital whiteboards can comprise large display screens or arrays of screens in a single room which are configured to provide a large whiteboard like interaction surface. Thus it is anticipated that the large digital whiteboards may be shared by many users at different times for different collaborations. Where the collaboration data for collaboration is confidential with access limited to authorized users but the digital whiteboards at which the users interact are distributed to many sites and not necessarily under exclusive control of a single user a problem arises with the security of access to a collaboration.

In addition the distributed nature of the system leads to the possibility of multiple users in different places who interact with and can change the same collaboration data at the same time and at times when no other user is observing the collaboration data. This creates a problem with concurrency in the multiple locations and with sharing information about a current state of the collaboration data.

Therefore it would be desirable to find ways to allow multiple users to share collaboration data in a distributed network of whiteboards in such a way that each user has maximum freedom to express his or her ideas with real time exchange of ideas while providing security adequate to protect the confidential nature of the collaboration. An opportunity therefore arises to create robust solutions to the problem. Better ideas collaboration and results may be achieved.

A collaboration system is described that can have many distributed digital whiteboards which are used both to display images based on collaboration data managed by a shared collaboration server and to accept user input that can contribute to the collaboration data. The system can include management logic providing collaboration data to selected whiteboards based a protocol that insures that an user authorized for the collaboration data has physical access the selected whiteboard. Also a collaboration system can have many distributed digital whiteboards which are used both to display images based on collaboration data managed by a shared collaboration server and to accept user input that can contribute to the collaboration data while enabling each whiteboard to rapidly construct an image to display based on session history real time local input and real time input from other whiteboards. Yet another aspect of the technology described herein involves a whiteboard architecture based on federated displays arranged in an array which cooperate to act as one whiteboard used both to display images based on collaboration data managed by a remote collaboration server and to accept user input that can contribute to the collaboration data.

The above summary is provided in order to provide a basic understanding of some aspects of the collaboration system described herein. This summary is not intended to identify key or critical elements of invention or to delineate a scope of invention.

The following description is presented to enable any person skilled in the art to make and use the invention and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present invention. Thus the present invention is not intended to be limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

The application running at the collaboration server can be hosted using Web server software such as Apache or nginx. It can be hosted for example on virtual machines running operating systems such as LINUX. The server is heuristically illustrated in as a single computer. However the server architecture can involve systems of many computers each running server applications as is typical for large scale cloud based services. The server architecture includes a communication module which can be configured for various types of communication channels including more than one channel for each client in a collaboration session. For example near real time updates across the network client software can communicate with the server communication module via using a message based channel based for example on the Web Socket protocol. For file uploads as well as receiving initial large volume collaboration data the client software can communicate with the server communication module via HTTP. The server can run a front end program written for example in JavaScript served by Ruby on Rails support authentication authorization based for example on Oauth and support coordination among multiple distributed clients. The server communication module can include a message based communication protocol stack such as a Web Socket application that performs the functions of recording user actions in collaboration data and relaying user actions to other clients as applicable. This system can run on the node.JS platform for example or on other server technologies designed to handle high load socket applications.

The database stores for example a digital representation of collaboration data sets for each collaboration where the collaboration data set can include or identify objects displayable on a whiteboard canvas and events related to such objects. There can be collaboration data sets for many different collaborations. A data set for a given collaboration can be configured in a database or as machine readable document linked to the collaboration. The canvas can also be mapped to a region in a collaboration space which can have unlimited or virtually unlimited dimensions. The collaboration data includes data structures identifying objects displayable by a display client in the display area on a display wall and associates a location in the collaboration space with the objects identified by the data structures. Each device displays only a portion of the overall collaboration space. A display wall has a display area for displaying objects the display area being mapped to corresponding area in the collaboration space that corresponds to a region in the collaboration space centered on or otherwise located with a user location in the collaboration space. The mapping of the display area to a corresponding area in the collaboration space is usable by the display client to identify objects in the collaboration data within the display area to be rendered on the display and to identify objects to which to link user touch inputs at positions in the display area on the display.

As explained in more details below the server stores collaboration data sets for a plurality of collaborations and provides the collaboration data to the display clients participating in the session. The collaboration data is then used by the computer systems with appropriate software including display client software to determine images to display on the whiteboard and to assign objects for interaction to locations on the display surface. In some alternatives the server can keep track of a viewport for each device indicating the portion of the canvas viewable on that device and can provide to each device data needed to render the viewport. The application software that runs on the client device and is responsible for rendering drawing objects handling user inputs and communicating with the server can be HTML5 based and run in a browser environment. This allows for easy support of many different client operating system environments.

The user interface data stored in database includes various types of objects such as image bitmaps video objects multi page documents scalable vector graphics and the like. The devices are each in communication with the collaboration server via a network . The network can include all forms of networking components such as LANs WANs routers switches WiFi components cellular components wired and optical components and the internet. In one scenario two or more of the users are located in the same room and their devices communicate via WiFi with the collaboration server . In another scenario two or more of the users are separated from each other by thousands of miles and their devices communicate with the collaboration server via the internet. The walls can be multi touch devices which not only display images but also can sense user gestures provided by touching the display surfaces with either a stylus or a part of the body such as one or more fingers. In some embodiments a wall e.g. can distinguish between a touch by one or more fingers or an entire hand for example and a touch by the stylus. In an embodiment the wall senses touch by emitting infrared light and detecting light received light reflected from a user s finger has a characteristic which the wall distinguishes from ambient received light. The stylus emits its own infrared light in a manner that the wall can distinguish from both ambient light and light reflected from a user s finger. The wall may for example be an array of Model No. MT553UTBL MultiTaction Cells manufactured by MultiTouch Ltd Helsinki Finland tiled both vertically and horizontally. In order to provide a variety of expressive means the wall is operated in such a way that it maintains state . That is it may react to a given input differently depending on among other things the sequence of inputs. For example using a toolbar a user can select any of a number of available brush styles and colors. Once selected the wall is in a state in which subsequent strokes by the stylus will draw a line using the selected brush style and color.

In an illustrative embodiment the array totals on the order of 6 in height and 30 in width which is wide enough for multiple users to stand at different parts of the wall and manipulate it simultaneously. Flexibility of expression on the wall may be restricted in a multi user scenario however since the wall does not in this embodiment distinguish between fingers of different users or styli operated by different users. Thus if one user places the wall into one desired state then a second user would be restricted to use that same state because the wall does not have a way to recognize that the second user s input is to be treated differently.

In order to avoid this restriction the system defines drawing regions on the wall . A drawing region as used herein is a region within which at least one aspect of the wall s state can be changed independently of other regions on the wall. In the present embodiment the aspects of state that can differ among drawing regions are the properties of a line drawn on the wall using a stylus. The response of the system to finger touch behaviors is not affected by drawing regions.

The drawing state can be a feature of a region independent of objects displayed in the region and is defined by the line drawing properties which in the embodiment of include line appearance properties such as brush type brush size and color. For the purposes of example the system can be configured so that when a user touches the wall using either a stylus or one or more fingers sometimes referred to collectively herein as a writing implement a toolbar appears nearby and a drawing region is defined. Touching a touch point is one embodiment of what is sometimes referred to herein as opening user input other embodiments will be apparent to the reader. The initial drawing state of a newly defined drawing region is a predefined default such as brush type ink thickness 5 mm color white which in various embodiments may or may not match the default state of the remainder of the wall. In the embodiment of the drawing properties established for a drawing region apply throughout the drawing region. Line drawing operates on the wall logically in a layer above any application program that might be running on the computer system regardless of whether the program has ownership of any particular area of the wall

In the embodiment of drawing regions always fill the entire vertical extent of the wall though in other embodiments regions can be shorter and or have non rectangular shapes. Also in the embodiment of drawing regions are perceptibly demarcated with left and right hand borders and in another embodiment other means may be used to demarcate the region such as background shading. In yet another embodiment the region boundaries are not perceptible to the user. Assuming sufficient space to the left and right the client side computer system can spawn the drawing region in a position that is centered about the user s touch point. Drawing regions have a minimum width Wmin and an ideal width Wideal. The minimum width preferably is chosen to be the smallest width to allow reasonably unfettered expression and in the embodiment of is 4 . The ideal width preferably is chosen to be roughly equal to the widest span of an average user s arms stretched out horizontally and in the embodiment of is 6 .

If there is plenty of space on either side of the user s touch point then the computer system can set the initial region width to Wideal. This is the scenario illustrated in . If the user s touch point is too close to a wall edge for a new drawing region to be centered about it then the computer system will abut the new drawing region against the wall edge. The new drawing region will still have a width Wideal assuming sufficient space is available so the new drawing region will not be centered about the user s touch point. On the other hand if the user s touch point is far enough from the wall edge to create a drawing region centered about the touch point but the new drawing region would be less than Wmin from the wall edge then the gap space between the wall edge and the new drawing region is considered unusable. In this case the computer system will extend the new drawing region to fill up the unusable space.

Drawing regions can also be made automatically track the movement of the stylus. Although numerous possible tracking algorithms will be apparent to the reader one that follows these minimum rules is preferred 1 the region does not move so long as the stylus remains relatively near the center of the region and 2 as the stylus approaches a region boundary the region moves so that the boundary remains ahead of the stylus.

Drawing regions provide one example of user interaction that can have an effect at a local display wall but not have an effect on the global collaboration data. As illustrated in this example the locations of the objects are not affected by the assignment of drawing regions the toolbars and the drawing overlays within the regions. Of course in other types of user interface interactions the locations of the objects can be moved and such movements can be events related to objects in the global collaboration data.

A variety of behaviors related to the interpretation of user input based on interaction with a local wall are described in co pending U.S. application Ser. No. 13 758 984 filed on 4 Feb. 2013 entitled REGION DYNAMICS FOR DIGITAL WHITEBOARD which is incorporated by reference above. These behaviors are illustrative of local processing of user input and image data at a wall that can be executed by the local computer systems with little or no effect on the shared collaboration data maintained at the collaboration server in some embodiments.

The display client can include a physical or virtual computer system having computer programs stored in accessible memory that provide logic supporting the collaboration session including an HTML client wall array coordination logic collaboration data parsing searching and rendering logic and a session events application to manage live interaction with collaboration data and the display wall.

The portal can include a physical or virtual computer system having computer programs stored in accessible memory that provide logic supporting user access to the collaboration server. The logic can include applications to provide initial entry points for users such as a webpage with login resources logic to manage user accounts and session anticipation logic that provides authorization services such as OAuth based services and account data.

The collaboration service can manage the session event data coordinate updated events among clients deliver catchable history and images to clients and control access to a database stored in the collaboration data.

Each of the display client can maintain a communication channel with the collaboration server which is in turn is coupled to the white board collaboration database . The collaboration server can maintain a user location within the collaboration space for each authorized user. When an authorized user is logged in and has selected a display array such as that shown in as the whiteboard canvas the collaboration server can link each of the display client into a group associated with the session and user. The collaboration server can then download a current user location within the collaboration space to each of the display clients in the group. The display clients in the group can independently apply their offset parameter to identify session locations to map onto the subset of the display area indicated by the offset parameter. In alternative the collaboration server can manage the offset computation in communication with each of the display clients by delivering to each client the current user location as offset according to the array characteristics.

In order to support coordination of a single whiteboard among a plurality of displays each of the display clients can also communicate with each of the other display clients coming connection with events that are local to the management of the whiteboard display area and which do not have an effect on the global collaboration data. Alternatively the display client can communicate solely with the collaboration server which can then direct local events back to the group of display clients associated with the session and global events to all of the display clients in active sessions with the collaboration and to the database storing collaboration data.

The display clients at a single whiteboard comprised of federated displays can be implemented individual computer systems coupled to the corresponding displays or can be implemented using a single computer system with virtual machines coupled to the corresponding displays.

In an embodiment of the collaboration system an application program interface API is executed by the collaboration server and display clients based on two communication channels for each display client as suggested with reference to . In a federated display whiteboard each of the display clients can independently maintain two channels with the server. The first channel is a message based system configured for communications about live events. In one example this first channel is implemented using a set of socket requests over a Websocket channel with the collaboration service and used by the server for updating clients with relevant data new strokes cards clients etc. once connected. The message based channel can also handle the initial connection handshake. A second channel is a more stateless type link with the portal such as n HTTP REST interface which can be used for cacheable responses as well as posting data i.e. images and cards . Also an initial loading of collaboration data to a display client can be done using HTTP requests rather than the message based channel Websockets to support caching.

Socket Requests in one example can be executed on a channel that maintains connections via Websockets with the collaboration service . Messages exchanged can be individual UTF 8 encoded JSON arrays. A display client can establish a socket connection with the server carrying session identifier or in a manner otherwise linked to a session. A message structure and some of the message types included in an example system can be understood from the following description.

The physical hardware component of network interfaces are sometimes referred to as network interface cards NICs although they need not be in the form of cards for instance they could be in the form of integrated circuits ICs and connectors fitted directly onto a motherboard or in the form of macrocells fabricated on a single integrated circuit chip with other components of the computer system.

User interface input devices may include a keyboard pointing devices such as a mouse trackball touchpad or graphics tablet a scanner a touch screen incorporated into the display including the touch sensitive portions of large format digital whiteboard audio input devices such as voice recognition systems microphones and other types of input devices. In general use of the term input device is intended to include all possible types of devices and ways to input information into the computer system or onto computer network .

User interface output devices may include a display subsystem a printer a fax machine or non visual displays such as audio output devices. The display subsystem may include a cathode ray tube CRT a flat panel device such as a liquid crystal display LCD a projection device or some other mechanism for creating a visible image. In the embodiment of it includes the display functions of large format digital whiteboard . The display subsystem may also provide non visual display such as via audio output devices. In general use of the term output device is intended to include all possible types of devices and ways to output information from the computer system to the user or to another machine or computer system.

Storage subsystem stores the basic programming and data constructs that provide the functionality of certain embodiments of the present invention. For example the various modules implementing the functionality of certain embodiments of the invention may be stored in storage subsystem . These software modules are generally executed by processor subsystem .

Memory subsystem typically includes a number of memories including a main random access memory RAM for storage of instructions and data during program execution and a read only memory ROM in which fixed instructions are stored. File storage subsystem provides persistent storage for program and data files and may include a hard disk drive a floppy disk drive along with associated removable media a CD ROM drive an optical drive or removable media cartridges. The databases and modules implementing the functionality of certain embodiments of the invention may have been provided on a computer readable medium such as one or more CD ROMs and may be stored by file storage subsystem . The host memory contains among other things computer instructions which when executed by the processor subsystem cause the computer system to operate or perform functions as described herein. As used herein processes and software that are said to run in or on the host or the computer execute on the processor subsystem in response to computer instructions and data in the host memory subsystem including any other local or remote storage for such instructions and data.

Bus subsystem provides a mechanism for letting the various components and subsystems of computer system communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may use multiple busses.

The computer system itself can be of varying types including a personal computer a portable computer a workstation a computer terminal a network computer a television a mainframe a server farm or any other data processing system or user device. In one embodiment computer system includes several computer systems each controlling one of the tiles that make up the large format whiteboard . Due to the ever changing nature of computers and networks the description of computer system depicted in is intended only as a specific example for purposes of illustrating the preferred embodiments of the present invention. Many other configurations of the computer system are possible having more or less components than the computer system depicted in . The same components and variations can also make up each of the other devices in the collaboration environment of as well as the collaboration server and whiteboard database . Another embodiment of a computer system that can be used to implement collaboration server is set forth in the above incorporated PCT International Application No. PCT US12 39176.

Certain information about the drawing regions active on the digital whiteboard are stored in a database accessible to the computer system of the display client. The database can take on many forms in different embodiments including but not limited to a MongoDB database an XML database a relational database or an object oriented database. is a schematic diagram illustrating certain information that the database contains and certain relationships among the data.

In embodiments described herein each drawing region is considered to be a child of a toolbar. The touching of a point on the wall background spawns a toolbar which in turn spawns a drawing region though the toolbar is not necessarily visible until the drawing region opens . Similarly to close a drawing region a user touches a close icon on the drawing region s toolbar. Thus in the database is headed by one or more toolbar ID s . Each toolbar ID includes or points to a respective block of data indicating the horizontal position of the toolbar the horizontal position of the left edge of the toolbar s drawing region with width of the drawing region and a set of drawing properties for the drawing region. It will be appreciated that many variations are possible such as specifying the right edge position of the drawing region rather than the left and specifying the opposite edge position rather than the drawing region width. The toolbar position has only a horizontal value because in an embodiment it always remains at the same vertical position. In another embodiment both horizontal and vertical positions may be specified.

The drawing properties include or point to an array of drawing attributes each in association with one or more values. The drawing properties in include a brush type the value of which may for example indicate paint ink crayon marker or eraser each of which has a different character of appearance when drawn on the whiteboard . The drawing properties in also include a brush width which can take on any value in a range of available values. The drawing properties in also include a brush color which has three associated values red green and blue content. As used herein the three attributes brush type brush width and brush color are considered to constitute line appearance properties. Drawing properties may in various embodiments also include other attributes such as those that affect its location of the line or the location of part of the line. These properties may include such attributes as corner rounding radius or Bezier curve parameters. As can be seen in there is no requirement that the drawing properties including the line appearance properties for different drawing regions be the same. They can be established independently of each other so there is no need that they be identical. In a typical case they will not be identical.

In order to draw a line on the whiteboard a user provides drawing user input which indicates the drawing of the line. While other embodiments may allow a user to draw with a finger in the embodiment of only a stylus can be used to indicate the drawing of a line. Intuitively the user so indicates by touching the stylus to the whiteboard surface within a drawing region and dragging the stylus along the positions desired for the line. The end of a line drawing operation is indicated by lifting the stylus from the whiteboard surface. The local computer system determines from the user input where the points on the line are to be positioned and displays them on the whiteboard . The computer system also transmits the stroke information to the collaboration server which writes them into its whiteboard database and transmits them back to the various devices sharing the session. Each of the devices can then display the line so long as the line intersects the device s viewport so all such devices will show the line at roughly the same time.

In one example the process of downloading the collaboration data includes delivering the event objects for the session to each display client. Included with the collaboration data a current user location can be provided. Alternatively the collaboration data can be delivered followed by a sequence of messages which identify to the display client how to compute an offset from a default location such as at the center of the collaboration data to a current location associated with the user. Each display client then can traverse the event objects to identify those objects having session locations which map to the display area managed by the display client. The logic to traverse the event objects can include an R TREE search for example which is configured to find objects in the collaboration space that map to the display area. The identified objects can then be rendered possibly communicating with the portal to obtain data relevant to the objects on the display area managed by the display.

As used herein the identification of an item of information does not necessarily require the direct specification of that item of information. Information can be identified in a field by simply referring to the actual information through one or more layers of indirection or by identifying one or more items of different information which are together sufficient to determine the actual item of information. In addition the term indicate is used herein to mean the same as identify .

Also as used herein a given signal event or value is responsive to a predecessor signal event or value if the predecessor signal event or value influenced the given signal event or value. If there is an intervening processing element step or time period the given signal event or value can still be responsive to the predecessor signal event or value. If the intervening processing element or step combines more than one signal event or value the signal output of the processing element or step is considered responsive to each of the signal event or value inputs. If the given signal event or value is the same as the predecessor signal event or value this is merely a degenerate case in which the given signal event or value is still considered to be responsive to the predecessor signal event or value. Dependency of a given signal event or value upon another signal event or value is defined similarly.

The applicant hereby discloses in isolation each individual feature described herein and any combination of two or more such features to the extent that such features or combinations are capable of being carried out based on the present specification as a whole in light of the common general knowledge of a person skilled in the art irrespective of whether such features or combinations of features solve any problems disclosed herein and without limitation to the scope of the claims. The applicant indicates that aspects of the present invention may consist of any such feature or combination of features. In view of the foregoing description it will be evident to a person skilled in the art that various modifications may be made within the scope of the invention.

The foregoing description of preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously many modifications and variations will be apparent to practitioners skilled in this art. For example though the whiteboards described herein are of large format small format whiteboards can also be arranged to use multiple drawing regions though multiple drawing regions are more useful for whiteboards that are at least as large as 12 in width. In particular and without limitation any and all variations described suggested by the Background section of this patent application or by the material incorporated by references are specifically incorporated by reference into the description herein of embodiments of the invention. In addition any and all variations described suggested or incorporated by reference herein with respect to any one embodiment are also to be considered taught with respect to all other embodiments. The embodiments described herein were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents.

