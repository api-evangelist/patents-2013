---

title: Adaptive scene complexity based on service quality
abstract: Content, such as a video game, may be delivered by a content provider to a destination using, for example, streaming content delivery techniques. The transmission of the content may be monitored in order to determine transmission conditions such as a quality of the network connection from the content provider to the destination. The determined transmission conditions may then be used to determine adjustments to a complexity of various scenes associated with the content. For example, in some cases, when transmission conditions are unfavorable, scenes may be adjusted by reducing a complexity of the scenes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09634942&OS=09634942&RS=09634942
owner: Amazon Technologies, Inc.
number: 09634942
owner_city: Reno
owner_country: US
publication_date: 20131111
---
This application is related to the following applications each of which is hereby incorporated by reference in its entirety U.S. patent application Ser. No. 14 076 718 filed Nov. 11 2013 entitled VIDEO ENCODING BASED ON AREAS OF INTEREST U.S. patent application Ser. No. 14 077 127 filed Nov. 11 2013 entitled SERVICE FOR GENERATING GRAPHICS OBJECT DATA U.S. patent application Ser. No. 14 077 136 filed Nov. 11 2013 entitled IMAGE COMPOSITION BASED ON REMOTE OBJECT DATA U.S. patent application Ser. No. 14 077 165 filed Nov. 11 2013 entitled MULTIPLE PARALLEL GRAPHICS PROCESSING UNITS U.S. patent application Ser. No. 14 077 084 filed Nov. 11 2013 entitled ADAPTIVE CONTENT TRANSMISSION U.S. patent application Ser. No. 14 077 180 filed Nov. 11 2013 entitled VIEW GENERATION BASED ON SHARED STATE U.S. patent application Ser. No. 14 077 186 filed Nov. 11 2013 entitled MULTIPLE STREAM CONTENT PRESENTATION U.S. patent application Ser. No. 14 077 149 filed Nov. 11 2013 entitled DATA COLLECTION FOR MULTIPLE VIEW GENERATION U.S. patent application Ser. No. 14 077 142 filed Nov. 11 2013 entitled STREAMING GAME SERVER VIDEO RECORDER U.S. patent application Ser. No. 14 076 815 filed Nov. 11 2013 entitled LOCATION OF ACTOR RESOURCES U.S. patent application Ser. No. 14 077 146 filed Nov. 11 2013 entitled SESSION IDLE OPTIMIZATION FOR STREAMING SERVER U.S. patent application Ser. No. 14 077 023 filed Nov. 11 2013 entitled APPLICATION STREAMING SERVICE U.S. Patent Application No. 61 902 740 filed Nov. 11 2013 entitled EFFICIENT BANDWIDTH ESTIMATION .

Recent technological advances have improved the ability to transmit and deliver information in a fast and efficient manner. In accordance with such advances it is becoming increasingly popular to acquire and store data at a central provider location and to deliver the data to end users quickly upon request. This model may employ technological concepts such as multimedia streaming in which multimedia content may be constantly received by and presented to an end user while being delivered by a provider. One rapidly expanding area is the use of streaming technology to deliver graphics content such as video games. When streaming graphics content a provider may access the requested graphics content render the graphics content from scenes into images and then encode and transmit the images to an end user over a network such as the Internet. The term scene as used herein refers to a representation that may be used in association with generation of an image.

While streaming and other content delivery technology provides many benefits any model that relies on transmission of data across a network may necessarily be subject to at least some of the drawbacks associated with network communications. Such drawbacks may include for example reductions or changes in available bandwidth due to network congestion or other problems. These and other drawbacks may affect both the transmission speed and the quality of the delivered content. End users may become quickly frustrated when they receive content at lower speed or lower quality than expected. In some cases such disruptions may affect the user experience to such a degree that the content becomes at least temporarily unusable. End users of content such as video games which often require continual user interaction and rapid response may be particularly sensitive to reductions and disruptions in delivery quality.

In general this disclosure describes techniques for adaptive scene complexity based on quality of service. In accordance with the disclosed techniques one or more items of content such as a video game may be delivered by a content provider to a destination using for example streaming content delivery techniques. The transmission of the content may be monitored in order to determine transmission conditions such as a quality of the network connection from the content provider to the destination. The determined transmission conditions may then be used to determine adjustments to a complexity of various scenes associated with the content. For example in some cases when transmission conditions are unfavorable scenes may be adjusted by reducing a complexity of the scenes. This may allow for example images generated based on the adjusted scenes to be transmitted at a faster frame rate than might otherwise be available without complexity adjustment. This may also allow for example images generated based on the adjusted scenes to maintain a higher display quality than might otherwise be available without complexity adjustment.

The complexity of a scene may be reduced using various techniques. For example in some cases one or more objects may be removed from the scene. Additionally for example a level of intricacy associated with one or more objects may be reduced. In some cases scene complexity may be reduced by lowering a distance of visibility from a point of view associated with the scene. Additionally in some cases scene complexity may be reduced by lowering a level of movement with respect to a prior scene. Any combination of these or other appropriate techniques may also be employed.

In some cases a content item may have associated complexity information that assists in determining how to adjust the scene complexity. The complexity information may for example provide information regarding a relative interest and or a relative intricacy associated with various objects within a scene. Objects may then be removed from the scene or have their intricacy reduced based on the complexity information. For example in some cases a priority may be set to remove or reduce intricacy of objects that have both low interest and high intricacy. Additionally in some cases adjustments to scene complexity may be determined by observing changes in image quality associated with adjustments to prior scenes. For example if it is observed that an object was removed from a scene and that the resulting image has a high image quality then in some cases it may be estimated that the object has a high level of intricacy. By contrast if it is observed that an object was removed from a scene and that the resulting image has a low image quality then in some cases it may be estimated that the object has a low level of intricacy.

As set forth above a content provider may provide content to a destination over a network such as the Internet. Content may in some cases be provided upon request to a destination using for example streaming content delivery techniques. An example computing environment that enables providing of information to a destination will now be described in detail. In particular illustrates an example computing environment in which the embodiments described herein may be implemented. is a diagram schematically illustrating an example of a data center that can provide computing resources to users and which may be referred herein singularly as user or in the plural as users via user computers and which may be referred herein singularly as computer or in the plural as computers via a communications network . Data center may be configured to provide computing resources for executing applications on a permanent or an as needed basis. The computing resources provided by data center may include various types of resources such as gateway resources load balancing resources routing resources networking resources computing resources volatile and non volatile memory resources content delivery resources data processing resources data storage resources data communication resources and the like. Each type of computing resource may be general purpose or may be available in a number of specific configurations. For example data processing resources may be available as virtual machine instances that may be configured to provide various web services. In addition combinations of resources may be made available via a network and may be configured as one or more web services. The instances may be configured to execute applications including web services such as application services media services database services processing services gateway services storage services routing services security services encryption services load balancing services application services and the like. These web services may be configurable with set or custom applications and may be configurable in size execution cost latency type duration accessibility and in any other dimension. These web services may be configured as available infrastructure for one or more clients and can include one or more applications configured as a platform or as software for one or more clients. These web services may be made available via one or more communications protocols. These communications protocols may include for example hypertext transfer protocol HTTP or non HTTP protocols. These communications protocols may also include for example more reliable transport layer protocols such as transmission control protocol TCP and less reliable transport layer protocols such as user datagram protocol UDP . Data storage resources may include file storage devices block storage devices and the like.

Each type or configuration of computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Customers may choose to allocate a number of small processing resources as web servers and or one large processing resource as a database server for example.

Data center may include servers which may be referred herein singularly as server or in the plural as servers that provide computing resources. These resources may be available as bare metal resources or as virtual machine instances and which may be referred herein singularly as virtual machine instance or in the plural as virtual machine instances . Virtual machine instances and are complexity virtual machine instances. The complexity virtual machine instances and may be configured to perform all or any portion of the scene complexity adjustment techniques in accordance with the present disclosure and described in detail below. As should be appreciated while the particular example illustrated in includes one complexity virtual machine in each server this is merely an example. A server may include more than one complexity virtual machine or may not include any complexity virtual machines.

The availability of virtualization technologies for computing hardware has provided benefits for providing large scale computing resources for customers and allowing computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies may allow a physical computing device to be shared among multiple users by providing each user with one or more virtual machine instances hosted by the physical computing device. A virtual machine instance may be a software emulation of a particular physical computing system that acts as a distinct logical computing system. Such a virtual machine instance provides isolation among multiple operating systems sharing a given physical computing resource. Furthermore some virtualization technologies may provide virtual resources that span one or more physical resources such as a single virtual machine instance with multiple virtual processors that spans multiple distinct physical computing systems.

Referring to communications network may for example be a publicly accessible network of linked networks and possibly operated by various distinct parties such as the Internet. In other embodiments communications network may be a private network such as a corporate or university network that is wholly or partially inaccessible to non privileged users. In still other embodiments communications network may include one or more private networks with access to and or from the Internet.

Communication network may provide access to computers . User computers may be computers utilized by users or other customers of data center . For instance user computer or may be a server a desktop or laptop personal computer a tablet computer a wireless telephone a personal digital assistant PDA an e book reader a game console a set top box or any other computing device capable of accessing data center . User computer or may connect directly to the Internet e.g. via a cable modem or a Digital Subscriber Line DSL . Although only two user computers and are depicted it should be appreciated that there may be multiple user computers.

User computers may also be utilized to configure aspects of the computing resources provided by data center . In this regard data center might provide a gateway or web interface through which aspects of its operation may be configured through the use of a web browser application program executing on user computer . Alternately a stand alone application program executing on user computer might access an application programming interface API exposed by data center for performing the configuration operations. Other mechanisms for configuring the operation of various web services available at data center might also be utilized.

Servers shown in may be standard servers configured appropriately for providing the computing resources described above and may provide computing resources for executing one or more web services and or applications. In one embodiment the computing resources may be virtual machine instances . In the example of virtual machine instances each of the servers may be configured to execute an instance manager or which may be referred herein singularly as instance manager or in the plural as instance managers capable of executing the virtual machine instances . The instance managers may be a virtual machine monitor VMM or another type of program configured to enable the execution of virtual machine instances on server for example. As discussed above each of the virtual machine instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed above discuss the context of virtual machine instances other types of implementations can be utilized with the concepts and technologies disclosed herein. For example the embodiments disclosed herein might also be utilized with computing systems that do not utilize virtual machine instances.

In the example data center shown in a router may be utilized to interconnect the servers and . Router may also be connected to gateway which is connected to communications network . Router may be connected to one or more load balancers and alone or in combination may manage communications within networks in data center for example by forwarding packets or other data communications as appropriate based on characteristics of such communications e.g. header information including source and or destination addresses protocol identifiers size processing requirements etc. and or the characteristics of the private network e.g. routes based on network topology etc. . It will be appreciated that for the sake of simplicity various aspects of the computing systems and other devices of this example are illustrated without showing certain conventional details. Additional computing systems and other devices may be interconnected in other embodiments and may be interconnected in different ways.

In the example data center shown in a server manager is also employed to at least in part direct various communications to from and or between servers and . While depicts router positioned between gateway and server manager this is merely an exemplary configuration. In some cases for example server manager may be positioned between gateway and router . Server manager may in some cases examine portions of incoming communications from user computers to determine one or more appropriate servers to receive and or process the incoming communications. Server manager may determine appropriate servers to receive and or process the incoming communications based on factors such as an identity location or other attributes associated with user computers a nature of a task with which the communications are associated a priority of a task with which the communications are associated a duration of a task with which the communications are associated a size and or estimated resource usage of a task with which the communications are associated and many other factors. Server manager may for example collect or otherwise have access to state information and other information associated with various tasks in order to for example assist in managing communications and other operations associated with such tasks.

It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that data center described in is merely illustrative and that other implementations might be utilized. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

In at least some embodiments a server that implements a portion or all of one or more of the technologies described herein may include a general purpose computer system that includes or is configured to access one or more computer accessible media. depicts a general purpose computer system that includes or is configured to access one or more computer accessible media. In the illustrated embodiment computing device includes one or more processors and or which may be referred herein singularly as a processor or in the plural as the processors coupled to a system memory via an input output I O interface . Computing device further includes a network interface coupled to I O interface .

In various embodiments computing device may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store instructions and data accessible by processor s . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing one or more desired functions such as those methods techniques and data described above are shown stored within system memory as code and data .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripherals in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computing device and other device or devices attached to a network or networks such as other computer systems or devices for example. In various embodiments network interface may support communication via any suitable wired or wireless general data networks such as types of Ethernet networks for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs storage area networks or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a computer accessible medium configured to store program instructions and data as described above for implementing embodiments of the corresponding methods and apparatus. However in other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media. Generally speaking a computer accessible medium may include non transitory storage media or memory media such as magnetic or optical media e.g. disk or DVD CD coupled to computing device via I O interface . A non transitory computer accessible storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM read only memory etc. that may be included in some embodiments of computing device as system memory or another type of memory. Further a computer accessible medium may include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as those that may be implemented via network interface . Portions or all of multiple computing devices such as those illustrated in may be used to implement the described functionality in various embodiments for example software components running on a variety of different devices and servers may collaborate to provide the functionality. In some embodiments portions of the described functionality may be implemented using storage devices network devices or special purpose computer systems in addition to or instead of being implemented using general purpose computer systems. The term computing device as used herein refers to at least all these types of devices and is not limited to these types of devices.

A compute node which may be referred to also as a computing node may be implemented on a wide variety of computing environments such as commodity hardware computers virtual machines web services computing clusters and computing appliances. Any of these computing devices or environments may for convenience be described as compute nodes.

A network set up by an entity such as a company or a public sector organization to provide one or more web services such as various types of cloud based computing or storage accessible via the Internet and or other networks to a distributed set of clients may be termed a provider network. Such a provider network may include numerous data centers hosting various resource pools such as collections of physical and or virtualized computer servers storage devices networking equipment and the like needed to implement and distribute the infrastructure and web services offered by the provider network. The resources may in some embodiments be offered to clients in various units related to the web service such as an amount of storage for storage processing capability for processing as instances as sets of related services and the like. A virtual computing instance may for example comprise one or more servers with a specified computational capacity which may be specified by indicating the type and number of CPUs the main memory size and so on and a specified software stack e.g. a particular version of an operating system which may in turn run on top of a hypervisor .

A number of different types of computing devices may be used singly or in combination to implement the resources of the provider network in different embodiments including general purpose or special purpose computer servers storage devices network devices and the like. In some embodiments a client or user may be provided direct access to a resource instance e.g. by giving a user an administrator login and password. In other embodiments the provider network operator may allow clients to specify execution requirements for specified client applications and schedule execution of the applications on behalf of the client on execution platforms such as application server instances Java virtual machines JVMs general purpose or special purpose operating systems platforms that support various interpreted or compiled programming languages such as Ruby Perl Python C C and the like or high performance computing platforms suitable for the applications without for example requiring the client to access an instance or an execution platform directly. A given execution platform may utilize one or more resource instances in some implementations in other implementations multiple execution platforms may be mapped to a single resource instance.

In many environments operators of provider networks that implement different types of virtualized computing storage and or other network accessible functionality may allow customers to reserve or purchase access to resources in various resource acquisition modes. The computing resource provider may provide facilities for customers to select and launch the desired computing resources deploy application components to the computing resources and maintain an application executing in the environment. In addition the computing resource provider may provide further facilities for the customer to quickly and easily scale up or scale down the numbers and types of resources allocated to the application either manually or through automatic scaling as demand for or capacity requirements of the application change. The computing resources provided by the computing resource provider may be made available in discrete units which may be referred to as instances. An instance may represent a physical server hardware platform a virtual machine instance executing on a server or some combination of the two. Various types and configurations of instances may be made available including different sizes of resources executing different operating systems OS and or hypervisors and with various installed software applications runtimes and the like. Instances may further be available in specific availability zones representing a logical region a fault tolerant region a data center or other geographic location of the underlying computing hardware for example. Instances may be copied within an availability zone or across availability zones to improve the redundancy of the instance and instances may be migrated within a particular availability zone or across availability zones. As one example the latency for client communications with a particular server in an availability zone may be less than the latency for client communications with a different server. As such an instance may be migrated from the higher latency server to the lower latency server to improve the overall client experience.

In some embodiments the provider network may be organized into a plurality of geographical regions and each region may include one or more availability zones. An availability zone which may also be referred to as an availability container in turn may comprise one or more distinct locations or data centers configured in such a way that the resources in a given availability zone may be isolated or insulated from failures in other availability zones. That is a failure in one availability zone may not be expected to result in a failure in any other availability zone. Thus the availability profile of a resource instance is intended to be independent of the availability profile of a resource instance in a different availability zone. Clients may be able to protect their applications from failures at a single location by launching multiple application instances in respective availability zones. At the same time in some implementations inexpensive and low latency network connectivity may be provided between resource instances that reside within the same geographical region and network transmissions between resources of the same availability zone may be even faster .

As set forth above a content provider may provide content to a destination. A content provider may for example provide a content delivery service that may reside on one or more servers. The service may be scalable to meet the demands of one or more customers and may increase or decrease in capability based on the number and type of incoming client requests. The content delivery service may in some cases process a content item in parallel across multiple nodes of the content delivery service. This may be done in one embodiment to reduce the latency for rendering the content item. Portions of the content delivery service may also be migrated to be placed in a position of reduced latency with a requesting client. In some cases the content provider may determine an edge of a system or network associated with the content provider that is physically and or logically closest to a requesting client. The content provider may then for example spin up migrate resources or otherwise employ components associated with the determined edge for interacting with requests from the client. Such an edge determination process may in some cases provide an efficient technique for identifying and employing components that are well suited to interact with a particular client and may in some embodiments reduce the latency for communications between a content provider and one or more clients.

The term content as used herein refers to any information that is presentable to one or more users and the term content item as used herein refers to any collection of any such information. For example content items may in some cases include graphics content items such as video games. In some cases the disclosed techniques may be employed with respect to two dimensional content which as used herein refers to content that may be represented in accordance with two dimensional scenes. In some other cases the disclosed techniques may be employed with respect to three dimensional content which as used herein refers to content that may be represented in accordance with three dimensional scenes. The two dimensional or three dimensional scenes may for example be considered logical representations in the sense that they may not physically occupy the areas that they are intended to logically model or represent. A scene may for example include or otherwise be associated with information or data that describes the scene. When content is eventually presented to end users the scenes may be used to generate resulting images for display to the end users. The images may be generated by way of a process commonly referred to as rendering which may for example incorporate concepts such as depth reflection shading and others. An image may include for example information associated with a displayable output such as information associated with various pixel values and or attributes.

As also set forth above content may be provided to destinations by employing for example streaming content delivery in which content may be constantly received by and presented by a destination while being delivered by a provider. is a diagram illustrating an example content provider system in accordance with the present disclosure. As should be appreciated the directional arrows shown in are merely intended to represent some example portions of data flow between components. Thus data may flow in opposite directions and may also flow between components for which arrows are not specifically depicted.

As shown in a particular content item such as a video game may be delivered to a destination . Content item has associated content information which may include for example any data that is used to generate a resulting image transmitted to destination . Content information may include for example two dimensional or three dimensional scenes that are used to generate resulting two dimensional images.

Data associated with content information may be provided to a rendering component which may use the data to generate resulting two dimensional images for transmission to destination . Rendering component may for example include a graphics processing unit. Rendering component may for example generate resulting two dimensional images based on two dimensional or three dimensional scenes. Rendering component may perform well known operations such as lighting shading clipping transformation scan conversion rasterization texturing and fragment shading. Essentially the output of rendering component may be a two dimensional image that may be provided to encoding component . An image may include for example a collection of information associated with a displayable output.

Encoding component is a component that encodes video images for transmission over a network such as the Internet. Encoding component may perform any appropriate techniques for encoding of images. Encoding component or another component may also perform other appropriate transmission related operations such as data compression. After being encoded by encoding component an image may be provided to transmission component for transmission over network to destination .

As set forth above various network conditions may cause the quality of service for network transmission to vary over time. A network monitoring component may be provided to monitor or otherwise observe network conditions in order to determine network feedback information. Such network feedback information may for example include or assist with a determination of a current network quality of service. The network feedback information may include for example any information related to changes in available bandwidth latency congestion and other factors. The network feedback information may include for example information that may be used to determine available bitrate constraints associated with an image. In some cases the network feedback information may include a determination of information related to total bytes and packets that may be received by the particular destination . Network monitoring component may for example employ various algorithms within a network transport layer of transmission component in order to determine the network feedback information. In some cases in addition to monitoring current and or recent network conditions network monitoring component may also for example monitor and store historical network monitoring data in order to help predict upcoming network conditions.

Network monitoring component may provide the collected network feedback information to complexity adjustment component . As should be appreciated complexity adjustment component need not necessarily be a separate component distinguishable from other components depicted in . For example in some cases some or all of the functionality performed by complexity adjustment component may be performed externally to content item and may be integrated into rendering component and or any other appropriate components.

Complexity adjustment component may use the network feedback information to dynamically adjust the complexity of scene information that is provided to rendering component and used to generate images for transmission to destination . For example in some cases when transmission conditions are unfavorable scenes may be adjusted by reducing a complexity of the scenes. This may allow for example images generated based on the adjusted scenes to be transmitted at a faster frame rate than might otherwise be available without complexity adjustment. This may also allow for example images generated based on the adjusted scenes to maintain a higher display quality than might otherwise be available without complexity adjustment.

The complexity of a scene may generally be adjusted by changing one or more features of the scene. Features of the scene may include for example all or portions of one or more objects of a scene such as characters scenery assets areas groups of one or more pixels background and others. Features of the scene may also include for example attributes of objects such as for example colors textures size parts surfaces seasons lighting shading reflection level of detail level of visibility or other attributes. Features may also include for example associated objects. For example a tree may have associated objects such as leaves or birds. Features of the scene may also include for example audio associated with the scene.

As set forth above the complexity of a scene may be reduced using various techniques. For example in some cases one or more objects may be removed from the scene. Additionally for example a level of intricacy associated with one or more objects may be reduced. In some cases scene complexity may be reduced by lowering a distance of visibility from a point of view associated with the scene. Additionally in some cases scene complexity may be reduced by lowering a level of movement with respect to a prior scene. Any combination of these or other appropriate techniques may also be employed.

Also in some cases scene complexity may be reduced by removing or changing audio associated with the scene. In some cases audio associated with a scene may be problematic in the sense that it may be particularly revealing of a low quality of network service. For example a low quality of network service may sometimes cause audio to be at least partially interrupted or to become partially unsynchronized with associated video. In these and other cases it may be desirable to adjust audio complexity as an alternative or in addition to video complexity.

The intricacy of an object or area may be reduced using any number of appropriate techniques. In some cases the intricacy of an object or area may be reduced by reducing the intricacy of colors and or textures associated with the object. For example a cloth with detailed pattern that includes different shapes and colors may have its intricacy reduced by changing it into a plain white cloth. Additionally in some cases the intricacy of an object or area may be reduced by changing various attributes of the object. For example birds and or leaves may be removed from branches of a tree. As another example plates glasses and silverware may be removed from the top of a table.

In some cases complexity adjustment component may adjust the complexity of a scene based on complexity information . Complexity information may include for example any appropriate information that may assist with adjusting the complexity of a scene associated with content item . Although depicts complexity information as being included as part of a content item complexity information may also be accessed externally to content item . Additionally although depicts complexity information as including interest information and intricacy information complexity information need not necessarily include either or both of interest information and intricacy information and may also include any other appropriate information that may assist with adjusting the complexity of a scene associated with content item . Complexity information may in some cases be generated by developers or creators of the content item or other individuals with a detailed knowledge and understanding of the content item .

Interest information may include for example information that identifies a level of interest associated with various objects or areas within a scene. Objects with higher interest may include for example objects with which a user may be likely to interact or objects which may otherwise be considered important within the context of a scene. For example faces may in some cases be considered to be of higher interest because they may allow a user to distinguish between various characters and may also convey characteristics such as gender emotion age and others. By contrast in some cases objects with lower interest may include certain background objects objects that are positioned far away from a scene viewpoint and objects that are wholly or partially obscured. Interest may be measured using any appropriate technique such as ranks or relative weights assigned to various objects or areas.

Interest information may in some cases indicate that interests associated with different objects or areas may vary depending upon different parameters. Such parameters may include for example quality of network service information. For example interest information may indicate that when transmission conditions are unfavorable an area corresponding to character s face is designated as the highest interest area in a scene. The interest information may also indicate that when transmission conditions are more favorable a different area corresponding to a particular weapon is designated as the highest interest area in a scene.

Intricacy information may include for example information that identifies a level of intricacy associated with one or more objects or areas with a scene. For example a tree in the summer in full bloom may be of higher intricacy then the same tree in winter with no leaves. Intricacy may be measured using any appropriate technique such as ranks or relative weights assigned to various objects or areas.

In some cases intricacy information may be generated based on an identification of a size that a particular object occupies within a view of a scene. In many cases this occupied area may be different from the actual size of the particular object. For example a tablecloth may have a very large size but its visibility may be wholly or partially obscured by the table when the viewpoint of the scene is from underneath the table. Additionally if the tablecloth is positioned far away from the viewpoint of the scene then it may also occupy a smaller scene area than if it were positioned closer to the viewpoint of the scene. The difference between a particular object s occupied scene area and its size may also be due to factors such as an angle of the object with respect to the point of view. For example when the point of view of the scene is near the same height as the table the tablecloth may occupy only a minimal area within the scene even if not obscured by the table itself.

The overall complexity of a scene may be correlated to the occupied screen areas of the objects within that scene. In particular a highly intricate object may be more likely to raise the overall complexity of a scene when the highly intricate object is occupying a larger scene area. For example a tablecloth with a highly intricate design may significantly raise scene complexity when it occupies a large scene area e.g. when viewed from directly above the table and not obscured . However the same highly intricate tablecloth may only minimally raise scene complexity when it occupies a small scene area e.g. when obscured by the table or made smaller by the angle of the scene viewpoint .

Thus complexity information provides information that may assist with adjusting the complexity of a scene associated with content item . In some cases in addition or as an alternative to complexity information other techniques may be employed to assist with adjusting the complexity of a scene. For example adjustments to scene complexity may be determined by observing changes in image quality associated with adjustments to prior scenes. For example if it is observed that an object was removed from a scene and that the resulting image had a high image quality then in some cases the removal of the object from the scene may be associated with the high image quality. Thus in some cases when the removal of an object is associated with high image quality it may be estimated that the object has a high level of intricacy. By contrast if it is observed that an object was removed from a scene and that the resulting image had a low image quality then in some cases the removal of the object from the scene may be associated with the low image quality. Thus in some cases when the removal of an object is associated with low image quality it may be estimated that the object has a low level of intricacy.

In some cases image quality associated with prior scenes may be determined based on information collected by network monitoring component encoder or by any other appropriate component. The image quality may be determined for example based on a comparison of pre encoded pixel values and post decoded pixel values for the same transmitted image. In particular these values may be compared to determine a difference between the pre encoded and post encoded pixel values. These differences may be assumed to be based upon a distortion of the pre encoded image. Thus higher differences between pre encoded and post decoded values may indicate a lower resulting image quality while lower differences between pre encoded and post decoded values may indicate a lower resulting image quality.

Some examples that demonstrate how image quality may be used to estimate the intricacy of an object will now be described with reference to . In particular depicts a first image and a second image . First image includes objects and while second image includes objects and . Thus object is not present in second image . In some cases object may be removed from second image as a result of the scene complexity adjustment techniques described herein. Additionally in some cases no complexity adjustment may have been performed on second image and object may simply not be part of the scene from which second image was generated.

As shown in box indicates that first image is determined to have a low image quality. Additionally as shown in box indicates that second image is determined to have a high image quality. These determinations in boxes and may be made for example based on image quality analysis techniques such as those described above. Thus when comparing first image and second image it may be observed that the difference between the contents of these images is that object is not included in second image . Additionally it may be observed that second image has a higher image quality than first image . Thus based on because the removal of object appears to have at least in part triggered a higher image quality in second image it may be determined that object has a high level of intricacy as indicated in box .

In contrast to a scenario in which the removal of object has a lower impact on image quality is depicted in . In particular similar to depicts first image with objects and second image with objects . Additionally similar to shows that first image is determined to have a low image quality as indicated by box . However unlike in where second image has a high image quality shows that second image is determined to have a low image quality as indicated by box . Thus in because the image quality is lower in both first image and second image it may be determined that the removal of object had a smaller impact with respect to changing quality between first image and second image . Thus based on because the removal of object appears not to have triggered a higher quality in second image it may be determined that object has a low level of intricacy as indicated in box .

As should be appreciated the determinations regarding the intricacy of object may in some cases be more reliable when first image and second image are determined to be transmitted under the same or similar network quality conditions. Thus in some cases complexity adjustment component may compare images that are transmitted within a certain threshold number of images and or a certain threshold time period with respect to one another. In some cases when these threshold conditions are met it may be assumed that network quality conditions may be the same or similar for each different image. Additionally in some cases network feedback information of other information may be analyzed in order to determine that compared images are transmitted under similar network quality conditions.

In addition to the network based techniques set forth above complexity adjustment component may also receive information from encoding component or other components. Such information may include for example information regarding actual output conditions such as an actual realized bandwidth and or an actual realized encode rate for an image that is being transmitted. Complexity adjustment component may in some cases adjust scene complexity based on the actual output conditions. For example if the actual realized encode rate is too high for low quality of service conditions then complexity adjustment component may cause additional scene complexity reductions to be made in subsequently transmitted images.

As set forth above complexity adjustment component may reduce the complexity of a scene by for example removing or reducing the intricacy of various objects within the scene. Objects may be selected for removal or intricacy reduction based on any appropriate parameters. In some cases objects may be selected for removal or intricacy reduction based on their respective distances from a scene viewpoint. For example in some cases objects that are further away from the scene viewpoint may be removed or reduced in intricacy. Additionally in some cases objects may be selected for removal or intricacy adjustment based on their respective levels of interest. For example in some cases the less interesting objects in a scene may be removed or reduced in intricacy. Furthermore in some cases objects may be selected for removal or intricacy adjustment based on their respective levels of intricacy. For example in some cases the more intricate objects in a scene may be removed or reduced in intricacy.

In addition to the above examples there are some cases in which objects may be selected for removal or intricacy reduction based on a combination of parameters. For example in some cases objects in a scene that are both the least interesting and the most intricate may be the most likely to be selected for removal or intricacy reduction. Objects that meet this combination of parameters may in some cases be considered high value targets because they may cause larger reductions in overall scene complexity while also having a smaller impact on the overall interest level of the scene. By contrast in some cases objects in a scene that are both the most interesting and the least intricate may be the least likely to be selected for removal or intricacy reduction. Objects that meet this combination of parameters may in some cases be considered low value targets because they may cause smaller reductions in overall scene complexity while also having a higher impact on the overall interest level of the scene.

Some example techniques for adjusting the complexity of a scene will now be described in detail with reference to . In particular depicts a scene that includes objects and . Additionally indicates the interest and intricacy of objects . In particular object has high intricacy and low interest object has high intricacy and high interest object has low intricacy and low interest and object has low intricacy and high interest.

Referring now to box indicates that a priority has been set to reduce scene complexity based primarily on the level of interest of objects in the scene . also depicts an example order in which objects may be altered in order to reduce the complexity based on the priority listed in box . As set forth above objects may be altered by for example removing the objects from the scene or reducing the complexity of the objects. Box indicates that the objects most likely to be altered are shown at the top of while box indicates that the objects least likely to be altered are shown at the bottom of .

As shown in object high intricacy low interest is the most likely object to be altered based on the priority in box . As set forth above object may be considered a high value target for altering because due to its high intricacy altering of object may cause a higher impact on the overall complexity of scene than altering of lower intricacy objects and . Additionally due to its low interest altering of object may be less likely to result in removal of important information from scene than altering of higher interest objects and .

Object low intricacy low interest may be the second most likely object to be altered based on the priority in box . Similar to object object also has a low interest level. Thus like object altering of object may also be less likely to result in removal of important information from scene . However unlike object object has a low level of intricacy. Thus altering of object may have a lower impact on the overall complexity of scene . Accordingly there may be fewer advantages associated with altering object than with altering object .

Object high intricacy high interest may be the third most likely object to be altered based on the priority in box . Unlike objects and object has a high interest level. Thus altering of object may be more likely to result in removal of important information from scene . Accordingly based on the priority in box it may be less desirable to alter object than to alter objects and . However it should also be appreciated that object has a high level of intricacy. Thus even though it may result in removal of important information altering of object may also be advantageous in the sense that it may cause a higher impact on the overall complexity of scene .

Object low intricacy high interest is the least likely object to be altered based on the priority in box . As set forth above object may be considered a low value target for altering because due to its low intricacy altering of object may cause a lower impact on the overall complexity of scene than altering of higher intricacy objects and . Additionally due to its high interest altering of object may be more likely to result in removal of important information from scene than altering of lower interest objects and .

Referring now to a different strategy for reducing scene complexity will now be described in detail. In particular box of indicates that a priority has been set to reduce scene complexity based primarily on the level of intricacy of objects in the scene . This is in contrast to box of which indicated that the priority was based primarily on the level of interest. As depicted in the order of likelihood for altering of object has changed in comparison to the order depicted in . Object is still the most likely object to be altered while object is still the least likely object to be altered. However objects and have now changed places.

In particular in object high intricacy high interest is the second most likely object to be altered based on the priority in box . Additionally object low intricacy low interest is the third most likely object to be altered based on the priority in box . As should be appreciated because box indicates a priority based primarily on intricacy high intricacy object is more likely to be altered than low intricacy object . Thus even though altering of object is more likely to remove important information form scene than altering of object this risk may be acceptable because altering of object may result in a greater impact on overall scene complexity than altering of object .

Essentially as illustrated by there may be various tradeoffs associated with choosing whether to alter objects based primarily on interest or based primarily on intricacy or based on any other appropriate scheme. In some cases it may be preferred to alter objects based primarily on interest in situations when there is more of a concern that important information may be inadvertently excluded from a scene. By contrast in some cases it may be preferred to alter objects based primarily on intricacy when there is less of a concern that important information may be inadvertently excluded from a scene.

As should be appreciated the examples depicted in are selected merely for illustrative purposes and are non limiting. Additionally are not intended to imply that a content item is required to employ distinct operating modes in which objects are altered either primarily based on interest or primarily based on intricacy. Rather merely depict some example techniques for employing some aspects of the disclosed concepts and illustrate some example differences between these techniques. In practice any combination of the techniques depicted in and or any other appropriate techniques may be employed in accordance with the disclosed concepts.

Thus scene complexity may be adjusted based on quality of service using information such as complexity information as described above. An example method for adjusting scene complexity based on quality of service in accordance with disclosed techniques will now be described in detail with reference to . In particular at operation delivery of content is initiated. The delivery of content may be initiated for example based on a request issued by a particular destination. As set forth above the content may be delivered using multimedia streaming or any other appropriate technology for delivering content to an end user.

At operation feedback information is received by complexity information adjustment component . The feedback information may include for example network feedback information regarding a quality of network service with respect to the destination. As set forth above network feedback information may for example include or assist with a determination of a current network quality of service. The network feedback information may include for example any information related to changes in available bandwidth latency congestion and other factors. In some cases the network feedback information may include a determination of information related to total bytes and packets that may be received by the particular destination . Updated network feedback information may be collected and provided to complexity adjustment component at any repeating or non repeating i.e. irregular intervals. Thus it is not required that updated network feedback information be received prior to rendering of every image.

The feedback information received at operation may also include for example information regarding image quality of previously transmitted images. Information regarding image quality may be collected by for example network monitoring component and or encoding component of or by any other appropriate component. As set forth above the image quality may be determined for example based on a comparison of differences in value between pre encoded pixel values and post decoded pixel values for the same transmitted image.

The feedback information received at operation may also include for example information from encoding component or other components. Such information may include for example information regarding actual output conditions such as an actual realized bandwidth and or an actual realized encode rate for an image that is being transmitted.

At operation content item may identify scene information for rendering a next image based on for example content information . As set forth above in some cases an order in which images are displayed and the particular contents and arrangement of information in each image may be dependent on user interaction with the content. For example in the case of a video game a game player may at least in part determine an order in which images are displayed by determining where to navigate or direct particular characters or objects. As also set forth above the scene information used to render an image may include two dimensional or three dimensional scene information.

At operation the complexity of a scene associated with the information identified at operation is adjusted. The adjustment of scene complexity at operation may include for example adjusting any data or information associated with the scene in order to result in an adjustment of scene complexity. Scene complexity may be adjusted by for example scene complexity adjustment component of . The complexity of a scene may for example be adjusted based at least in part on the feedback information received at operation . As set forth above in some cases when transmission conditions are unfavorable scenes may be adjusted by reducing a complexity of the scenes. Reducing scene complexity may in some cases allow images to be transmitted at a faster frame rate and or with a higher display quality than might otherwise be available without complexity adjustment. The complexity of a scene may for example be adjusted by changing one or more features of the scene as set forth in detail above.

Various example techniques for reducing scene complexity are described in detail above. These example techniques include for example reducing a level of intricacy of various objects in the scene. As another example one or more objects may be removed from the scene. In some cases scene complexity may be reduced by lowering a level of movement with respect to a prior scene. Another example technique involves reducing scene complexity by lowering a distance of visibility from a point of view associated with the scene. Any combination of the above example techniques or other appropriate techniques may also be employed.

As also set forth above scene complexity may in some cases be adjusted based at least in part on complexity information associated with a content item. Complexity information may include for example interest information and intricacy information. Interest information may include for example information that identifies a level of interest associated with various objects or areas within a scene. Objects with higher interest may include for example objects with which a user may be likely to interact or objects which may otherwise be considered important within the context of a scene. Interest information may in some cases indicate that interests for different objects or areas may vary depending upon different parameters such as quality of network service information. Intricacy information may include for example information that identifies a level of intricacy associated with one or more objects or areas with a scene. For example a tablecloth with highly detailed textures and colors may be of higher intricacy than a plain white tablecloth.

Scene complexity may also be adjusted based on for example information regarding quality of previously transmitted images. This information may be used for example to determine or estimate levels of intricacy of various objects that may be included in images that have yet to be transmitted. As set forth above in some cases if it is observed that an object was removed from a scene and that the resulting image had a high image quality then it may be assumed that the object may have had a higher level of intricacy. By contrast in some cases if it is observed that an object was removed from a scene and that the resulting image had a low image quality then it may be assumed that the object may have had a lower level of intricacy.

Scene complexity may also be adjusted based on for example information from encoding component or other components. Such information may include for example information regarding actual output conditions such as an actual realized bandwidth and or an actual realized encode rate for an image that is being transmitted

At operation adjusted scene information associated with the adjusted scene is provided to rendering component . The adjusted scene information provided at operation may include or otherwise reflect the scene complexity adjustments performed at operation . At operation rendering component is employed to render the image for transmission to destination . As set forth above rendering component may for example generate a resulting two dimensional image based on the adjusted scene information provided at operation . Rendering component may perform well known operations such as for example lighting shading clipping transformation scan conversion rasterization texturing and fragment shading.

At operation the output of the rendering component a rendered two dimensional image is provided to an encoding component to be encoded for transmission.

At operation the image is encoded. Encoding may be performed by a component such as encoding component of . Any appropriate techniques for encoding of images for transmission may be performed. Encoding component or another component may also perform other appropriate transmission related operations such as data compression. At operation the encoded image is transmitted over a network to destination for display. At operation it is determined if there are any remaining images for display. If so then the example process may return to operation for performance of the process with respect to the next remaining image. If there are no remaining images then the content delivery process may be terminated at operation .

Each of the processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain methods or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

