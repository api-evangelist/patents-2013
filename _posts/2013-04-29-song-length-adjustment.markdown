---

title: Song length adjustment
abstract: A system for automatic rearrangement of a musical composition includes a process of assigning metadata to an existing piece of music to divide it into sections and identify sections of the same type, and logic to remove and rearrange sections to produced a customized playback with a desired duration and additional options for including or removing specific sections or instruments under the control of a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230528&OS=09230528&RS=09230528
owner: UJAM INC.
number: 09230528
owner_city: Dover
owner_country: US
publication_date: 20130429
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 702 897 filed on 19 Sep. 2012 which application is incorporated by reference as if fully set forth herein.

The present invention relates to technology for computer based rearrangement of a musical composition.

It is often desirable to add music to a piece of video or film to enhance the mood or impact experienced by the viewer. In high budget productions music is composed specifically for the film but in some cases the producer or editor will want to use an existing piece of music. Libraries of Production Music are available for this purpose with a broad range of music genres and lower licensing costs than commercially released music.

An existing piece of music is unlikely to have the same length as the film scenes it is set to so either the film is edited to fit the music or more commonly the music is edited to fit the film. Making manual edits in the middle of a piece of music often gives unsatisfactory results so usually the editor will select a section of the music with the wanted length and apply a cut or fade at the ends of the section.

The editor may wish to select a quiet or unobtrusive part of the music or a loud dynamic part depending on the wanted effect. Some professional music libraries offer music in stem format where instead of a single stereo recording there are separate recordings of for example vocals drums bass and other accompaniment and the editor can combine or omit each stem as desired. Or there may be multiple versions to choose from such as full mix mix with no vocals or mix with no drums . However it requires additional work by the editor to utilize the music in stem form and additional resources to handle the increased amount of data and number of simultaneous audio tracks.

Technologies have been developed for composing music with a given length or compiling pre existing sections of music to a given length but these cannot be applied to large existing libraries of music without musical knowledge and a great deal of manual preparation and editing.

Technologies are described here for taking an existing piece of music in any form but typically one or more audio tracks to be played simultaneously and pre prepared metadata describing the piece of music where the description includes how to split the music into a number of musically meaningful sections marking which sections have similar content and measuring the length of musical bars and automatically editing the piece of music to fit a wanted length either fully automatically or with simple options controllable by the user.

The basis of the technology described here is splitting existing musical compositions into sections. It is assumed that a song consists of a number of middle sections which may be preceded by one or more Intro sections and may be followed by one or more Ending sections. Each middle section is labeled with a letter A B C etc. If a middle section has the same type of content as another for example they are both verses or both choruses they are labeled with the same letter otherwise the next available letter is used working from the start of the song to the end so that the first middle section is always labeled A the first B section is always later in the song than the first A section the first C section is always later in the song than the first B section and so on for as many different types of section exist in the song.

In one possible implementation songs are split into sections using a semi automated process. A software utility displays the audio waveform of the song and allows a key to be tapped in time with playback to indicate the tempo and bar positions followed by additional taps during playback at points where the song should be split which are then rounded to the nearest musical bar. In some music particularly classical orchestral it may not be possible to set exact split points because of notes with overlaps or slow onsets. In this situation split points can be positioned at the ends of pauses or other quiet moments in the music rather than at the barlines of music sections so that later editing of the audio at these points will be less conspicuous.

Some songs include one or more examples of a pickup or anacrusis where the vocals or lead instrument may play across the start of a section. shows an example from the song Hound Dog where the lyrics You ain t nothing but a are sung before the accompanying instruments start playing the chorus section followed by the lyrics hound dog in the first musical bar of the section. The lyrics only make sense when played in their entirety so a pickup length must be defined that extends the section start earlier relative to the start of the first bar. When multi track audio or stems are available with the vocals in a separate recording the pickup length can be defined just for the vocal track so whenever the section is played the vocal track must start playing earlier than the other tracks to include the pickup. When the song is only available as a single recording it is still better to start playing the section earlier by the pickup length but all instruments will start playing early which may sound unnatural.

Table lists the metadata for each audio track. This includes an ID that can be used to find the associated audio data and a name for the track which can be displayed to the user when required. Also stored is a track type which can be useful for displaying the tracks to the user for example color coding depending on the type but the value can also be used to affect the rearranged song playback When the track type is vocal lead phrases this indicates that the contents of each section including any pickup only makes sense when played in its entirety and playing only half of the section would risk cutting off a sung or melodic phrase in mid flow. When the track type is exclusive only one of the tracks in the song of this type should be played at a time as they are alternate versions of the same thing.

Table lists the metadata for each section of each track. This includes a pickup length as described above stored as an offset in musical beats relative to the start of the section. This could interchangeably be stored as a value in seconds as the tempo is known and relates seconds to beats. A mute value is also stored for each track and each section of each track but this is not used in the automatic song rearrangement but is available as a user control for customizing the resulting playback.

The system includes a computer system configured as a server including resources for storing a library of audio recordings associating metadata with those recordings processing the metadata to create a rearranged song form and rendering the resulting rearranged song using data from the audio recordings. In addition the computer system includes resources for interacting with a client system e.g. to carry out the process in a client server architecture.

Computer system typically includes at least one processor which communicates with a number of peripheral devices via bus subsystem . These peripheral devices may include a storage subsystem comprising for example memory devices and a file storage subsystem user interface input devices user interface output devices and a network interface subsystem . The input and output devices allow user interaction with computer system . Network interface subsystem provides an interface to outside networks and is coupled via communication network to corresponding interface devices in other computer systems. Communication network may comprise many interconnected computer systems and communication links. These communication links may be wireline links optical links wireless links or any other mechanisms for communication of information. While in one embodiment communication network is the Internet in other embodiments communication network may be any suitable computer network.

User interface input devices may include a keyboard pointing devices such as a mouse trackball touchpad or graphics tablet a scanner a touchscreen incorporated into the display audio input devices such as voice recognition systems microphones and other types of input devices. In general use of the term input device is intended to include possible types of devices and ways to input information into computer system or onto communication network .

User interface output devices may include a display subsystem a printer a fax machine or non visual displays such as audio output devices. The display subsystem may include a cathode ray tube CRT a flat panel device such as a liquid crystal display LCD a projection device or some other mechanism for creating a visible image. The display subsystem may also provide non visual display such as via audio output devices. In general use of the term output device is intended to include all possible types of devices and ways to output information from computer system to the user or to another machine or computer system.

Storage subsystem includes memory accessible by the processor or processors and by other servers arranged to cooperate with the system . The storage subsystem stores programming and data constructs that provide the functionality of some or all of the processes described herein. Generally storage subsystem will include server management modules a music library as described herein and programs and data utilized in the automated music rearrangement technologies described herein. These software modules are generally executed by processor alone or in combination with other processors in the system or distributed among other servers in a cloud based system.

Memory used in the storage subsystem can include a number of memories arranged in a memory subsystem including a main random access memory RAM for storage of instructions and data during program execution and a read only memory ROM in which fixed instructions are stored. A file storage subsystem can provide persistent storage for program and data files and may include a hard disk drive a floppy disk drive along with associated removable media a CD ROM drive an optical drive or removable media cartridges. The modules implementing the functionality of certain embodiments may be stored by file storage subsystem in the storage subsystem or in other machines accessible by the processor.

Bus subsystem provides a mechanism for letting the various components and subsystems of computer system communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may use multiple busses. Many other configurations of computer system are possible having more or less components than the computer system depicted in .

The computer system can comprise one of a plurality of servers which are arranged for distributing processing of data among available resources. The servers include memory for storage of data and software applications and a processor for accessing data and executing applications to invoke its functionality.

The system in shows a plurality of client computer systems arranged for communication with the computer system via network . The client computer system can be of varying types including a personal computer a portable computer a workstation a computer terminal a network computer a television a mainframe a smartphone a mobile device or any other data processing system or computing device. Typically the client computer system will include a browser or other application enabling interaction with the computer system audio playback devices which produce sound from a rearranged piece of music.

In a client server architecture the computer system provides an interface to a client via the network . The client executes a browser and renders the interface on the local machine. For example a client can render a graphical user interface in response to a webpage programs linked to a webpage and other known technologies delivered by the computer system to the client . The graphical user interface provides a tool by which a user is able to receive information and provide input using a variety of input devices. The input can be delivered to the computer system in the form of commands parameters for use in performing the automated rearrangement processes described herein and the like via messages or sequences of messages transmitted over the network .

In one embodiment a client interface for the music rearrangement automation processes described here can be implemented using HTML 5 and run in a browser. The client communicates with an audio render server that gets selected based on the region the user logs in from. The amount of audio servers per region is designed to be scalable by making use of cloud computing techniques. The different protocols that get used for communication with the servers can include RPC and REST via HTTP with data encoded as JSON XML.

Although the computing resources are described with reference to as being implemented in a distributed client server architecture the technologies described herein can also be implemented using locally installed software on a single data processing system including one or more processors such as a system configured as a personal computer a mobile device or as any other machine having sufficient data processing resources. In such system the single data processing system can provide an interface on a local display device and accept input using local input devices via a bus system like the bus subsystem or other local communication technologies.

Multiple audio tracks can be shown parallel to the timeline with controls to mute whole tracks or individual sections of a track . The mute function when engaged stops the muted item being heard in the playback.

An alternative implementation allows a video clip and a piece of music to be selected then the music is automatically rearranged so it has the same duration as the video clip with no other user interaction required.

The first step is to simply divide the sections into three groups Sections labeled as Intro middle sections labeled A B C etc and sections labeled as Ending. In the example song form shown in there are two Intro sections I and one Ending section E . This division is done because some of the subsequent operations should be applied to the middle sections only so that Intro and Ending sections are not included in the middle of the resulting rearrangement where they may sound unnatural. At this point the total length of the sections in the song can be measured and if there is silence at the start of the first section or the end of the last section this should not be included in the measurement. The measured length is updated as sections are added and removed in the following steps so it can be compared to the wanted length.

If the user has specified that one or more sections should preferably be included in the rearrangement then the focus flag is set in the metadata for these sections. If the user has specified that sections before or after the focus section s should not be included in the rearrangement then these sections are removed including any Intro or Ending sections. The last step regarding focus sections is to discard middle sections furthest from the focus section s if the song is longer than the wanted length. This is done to move sections closer to the middle of the song if they are not already at the start or end of the song due to discarding sections in the previous step. While the song is longer than the wanted length the furthest middle section from the focus section s is discarded until removing the section would make the song shorter than the wanted length.

Whether focus sections exist or not Step now checks if the song is shorter than the wanted length and if so duplicates as many sections as needed until the song is at least the wanted length. shows this process in more detail Initially the last middle section is selected for duplication and while the current song length plus the length of the selected section s is less than the wanted song length the selection is increased to include the preceding middle section . When the song length plus the length of the selected sections exceeds the wanted length or there are no more middle sections to add to the selection the selected sections are duplicated and inserted after the last middle section . If the song is still shorter than the wanted length the process in is repeated. This method of duplicating sections to extend the length of the song has a number of benefits 

The next step in is to re classify the last middle section as an ending section so that it is treated in the following step as part of the ending. This is done so that the last middle section will not be removed creating a transition from some other section to the ending which may sound unnatural.

Step now checks if the song is longer than the wanted length and if so removes or truncates as many sections as needed until no more sections can be removed without making the song shorter than the wanted length. This is done with the aim of positioning the end of the last section close to the wanted length. shows this process in more detail Firstly a maximum and minimum length to be removed is calculated. The maximum is the wanted length subtracted from the current length and the minimum is the maximum minus a small leeway as it is impractical to remove exactly the maximum in most cases. In one implementation the leeway is half the length of the last section with the result that if the minimum length is removed then the wanted length will occur half way through the last section of the song and the last half of the last section can likely be discarded without sounding unnatural if its musical content consists of a fade out long held notes fading away or reverberation.

Step now decides if an Intro section or middle section s should be removed from the song to reduce its length. In one implementation an Intro section should be removed if the total length of all Intro sections exceeds 25 of the wanted length of the song or exceeds the minimum length to be removed. In this case the longest Intro section that is not longer than the maximum length to be removed is selected . In the case that an Intro section should not be removed or no Intro sections exist in the arrangement at this point then a range of consecutive middle sections are selected where all possible ranges are examined and the one with the longest length that is less than the maximum length to be removed is selected that also satisfies the constraint that the section type of each section in the series are sorted alphabetically i.e. any section can follow an A section any section except A can follow a B section any section except A and B can follow a C section and so on . As section types labeled with a later letter of the alphabet first occurred later in the original song than earlier letters and sections later in the song generally have higher intensity this constraint tends to result in series of sections with increasing intensity being selected such as a verse followed by a chorus as opposed to a chorus followed by a verse . When the selected sections are removed from the song the remaining sections are more likely to maintain a pattern of slowly rising intensity interspersed with small drops in intensity. In the case that all possible ranges of sections including ranges of just one section are longer than the maximum length to be removed then the shortest section is selected.

Step checks if more than one section has been selected and removes the whole selection from the song otherwise one section has been selected and may be longer than the maximum length to be removed. If it is not longer the whole section is removed otherwise the selected section kept in the song but truncated. At this point the metadata for musical meter and tempo is used to calculate the length of a musical bar so the section can be truncated such that the removed length is less than the maximum length to be removed and the retained length is a multiple of four bars. Four bars is chosen because the most common chord sequences in music are two or four bars long and other common lengths such as eight and twelve bars are also likely to sound more natural when truncated to a multiple of four bars than any other length. If however a length between the minimum and maximum calculated above can be removed by truncating the section to a multiple of two or one bars is possible but not possible by truncating to a multiple of four bars then the section is truncated to a length that is a multiple of two or one bars if it is considered more important to reach close to the wanted length than to maintain chord sequences.

In the case that a section is truncated the track type metadata is examined for each track and if the track type is set to vocal lead phrases the mute flag is set in the metadata for that section of that track. This ensures that vocal or instrumental phrases will not be cut off in mid flow when the section ends earlier than in the original arrangement.

The last step of is to adjust the song to the exact wanted length as it is now as close as could be achieved by adding or removing sections and truncating a section to a multiple of bar lengths. In one possible implementation this can be done by adjusting the song s musical tempo by the percentage difference between the wanted and current length. However this may lead to a reduction of audio quality if timestretching must be applied to the audio waveform to realize the tempo change on playback. In an alternative implementation a short fade out is applied such that the end of the fade is at exactly the wanted song length. A fade length of two seconds is adequate and the fade is likely to start towards the end of the last section of the song where it will not sound unnatural.

The rearrangement described so far has been applied to the metadata associated with a piece of music starting with the metadata of the original song and copying or removing items of metadata and modifying some values in the metadata such as mutes to form a new arrangement. After the rearrangement process the resulting song can be played or rendered to an audio file for later playback or use in other software. Playback is rendered using the audio data associated with the tracks and scheduling which parts of the audio data should be played at which times on the playback timeline based on the rearranged metadata. Where audio data must start or stop playback other than at the start or end of the recording it is beneficial to apply a short fade a few milliseconds in length so the audio waveform does not start or stop abruptly leading to unwanted clicks. These fades can be applied while the playback audio is being rendered or can be applied in advance as the location of sections in the recording is already specified in the metadata.

While the present invention is disclosed by reference to the preferred embodiments and examples detailed above it is understood that these examples are intended in an illustrative rather than in a limiting sense. Computer assisted processing is implicated in the described embodiments. Accordingly the present invention may be embodied in methods for perform processes described herein systems including logic and resources to perform processes described herein systems that take advantage of computer assisted methods for performing processes described herein media impressed with logic to perform processes described herein data streams impressed with logic to perform processes described herein or computer accessible services that carry out computer assisted methods for perform processes described herein. It is contemplated that modifications and combinations will readily occur to those skilled in the art which modifications and combinations will be within the spirit of the invention and the scope of the following claims.

