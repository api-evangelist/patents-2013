---

title: Method, system and smart card reader for management of access to a smart card
abstract: The described embodiments relate generally to devices, methods and systems for managing access to a memory card, such as a smart card, by a plurality of accessing devices. Certain embodiments relate to a smart card reader (SCR) for managing concurrent access to a smart card by a plurality of accessing devices, the SCR comprising: a processor; a channel manager responsive to the processor for interfacing with the smart card; a communication interface responsive to the channel manager for communicating with the plurality of accessing devices; and wherein, when a session is open on a first channel between a first accessing device and the smart card and the channel manager is configured to issue an open channel command to the smart card to cause the smart card to open a second channel between the smart card and the second accessing device in response to the session request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08944336&OS=08944336&RS=08944336
owner: BlackBerry Limited
number: 08944336
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20130613
---
This application is a continuation of U.S. patent application Ser. No. 13 565 891 filed Aug. 3 2012 which is a continuation of Ser. No. 13 316 642 filed Dec. 12 2011 which issued to patent as U.S. Pat. No. 8 240 578 which is a continuation of U.S. patent application Ser. No. 13 007 868 filed Jan. 17 2011 which issued to patent as U.S. Pat. No. 8 079 530 which is a continuation of U.S. patent application Ser. No. 11 622 250 filed Jan. 11 2007 which issued to patent as U.S. Pat. No. 7 871 010 which claims the benefit of U.S. Provisional Patent Application No. 60 807 743 filed Jul. 19 2006. The entire contents of U.S. patent application Ser. No. 13 565 891 U.S. patent application Ser. No. 13 316 642 U.S. patent application Ser. No. 13 007 868 U.S. patent application Ser. No. 11 622 250 and U.S. Provisional Patent Application No. 60 807 743 are hereby incorporated by reference.

Embodiments relate to methods and systems for management of access to a smart card. In particular embodiments relate to facilitating access to the smart card by multiple devices concurrently.

Communication with a smart card requires a session to be opened between the smart card and the application that wishes to communicate with it. The secure nature of a smart card requires that only one session can be open at any given time. Most smart card readers SCR are connected to one system at a time which allows for its exclusive use by the attached system. Many systems take advantage of this exclusivity by maintaining an open session with the smart card for the duration of the time the smart card is inserted in the reader.

With some SCRs it is possible even likely that more than one connection will exist at a given time. However if a session is opened by one of the connected systems it is generally not possible for another connected system to open the session for its own use until the system which currently has the open session decides to close its session.

This may be the case when both a handheld device and a PC are connected to the SCR. When the PC is notified by the SCR that a smart card has been inserted the PC will typically open the smart card session and keep the session open until the connection with the reader is terminated or the smart card is removed from the SCR. Since the smart card session is always being held open by the PC the handheld device cannot initiate a session with the smart card. This prevents the handheld device user from performing operations such as signing or decrypting emails and if the smart card is required for authenticating the user for use of the handheld device the user will not be able to unlock the handheld device.

The described embodiments relate generally to devices methods and systems for managing access to a memory card such as a smart card by a plurality of accessing devices. Further embodiments relate to computer readable storage storing computer program instructions for execution by a processor to perform the described methods.

Certain embodiments relate to a smart card reader SCR for managing concurrent access to a smart card by a plurality of accessing devices the SCR comprising a processor a channel manager responsive to the processor for interfacing with the smart card a communication interface responsive to the channel manager for communicating with the plurality of accessing devices and wherein when a session is open on a first channel between a first accessing device and the smart card and the channel manager is configured to issue an open channel command to the smart card to cause the smart card to open a second channel between the smart card and the second accessing device in response to the session request.

The open channel command may be a MANAGE CHANNEL command. The smart card reader may further comprise a memory storing a connection table wherein the connection table includes entries for each session established between the smart card and a respective accessing device. The connection table may include for each session entry one or more channel entries.

When the first and second channels are open between the smart card and respective first and second accessing devices and the channel manager receives a further session request from one of the first accessing device the second accessing device and a third accessing device the channel manager may be configured to issue a further open channel command to the smart card to cause the smart card to open a third channel between the smart card and the one accessing device in response to the further session request.

The channel manager may be configured to receive data units from the second accessing device intended for transmission to the smart card on the first channel and to modify data units to indicate that the data units were received over the second channel. The channel manager may modify a class byte of the data units to indicate that the data units were received over the second channel.

The channel manager may control the channels that can be opened between the smart card and the plurality of accessing devices so that the total number of channels is limited to a predetermined number. The smart card reader may further comprise a socket for receiving the smart card and electrically coupling the processor and the smart card. The communication interface may comprise a wireless communication interface.

Other embodiments relate to a method for managing concurrent access to a smart card by a plurality of accessing devices. The method comprises while a session is open on a first channel between a first accessing device and the smart card receiving at a smart card reader a session request from a second accessing device issuing an open channel command to the smart card to cause the smart card to open a second channel between the smart card and the second accessing device in response to the session request.

The open channel command may be a MANAGE CHANNEL command. The method may further comprise storing a connection table in a memory of the smart card reader the connection table comprising entries for each session established between the smart card and a respective accessing device. The connection table may include for each session entry one or more channel entries.

When first and second channels are open between the smart card and respective first and second accessing devices the method may further comprise receiving a further session request from one of the first accessing device the second accessing device and a third accessing device and issuing a further open channel command to the smart card to cause the smart card to open a third channel between the smart card and the one accessing device in response to the further session request.

The method may further comprise controlling the channels that can be opened between the smart card and the plurality of accessing devices so that the total number of channels is limited to a predetermined number. The method may further comprise receiving data units from the second accessing device intended for transmission to the smart card on the first channel and modifying the data units to indicate that the data units were received over the second channel. The modifying may comprise modifying a class byte of the data units to indicate that the data units were received over the second channel. The session request may be received by wireless communication between the smart card reader and the second accessing device.

Other embodiments relate to computer readable storage storing program instructions which when executed by a processor on a smart card reader cause the processor to perform a method of managing concurrent access to a smart card by a plurality of accessing devices the method comprising while a session is open on a first channel between a first accessing device and the smart card receiving at a smart card reader a session request from a second accessing device issuing an open channel command to the smart card to cause the smart card to open a second channel between the smart card and the second accessing device in response to the session request.

Other embodiments relate to a card reader device for managing access to a memory card by a plurality of accessing devices. The card reader device comprises a processor a wireless communication interface and a memory card interface. The wireless communication interface is responsive to the processor for communicating with the plurality of accessing devices. The memory card interface enables communication between the processor and the memory card. When a first secure session is open between a first accessing device and the memory card and the card reader device receives an open session command from a second accessing device the processor is configured to terminate the first secure session and to allow the second accessing device to open a second secure session between the memory card and the second accessing device in response to the open session command.

The processor may be configured to terminate the first open session by notifying the first accessing device that the memory card cannot be accessed by the card reader device. The notification may be that the memory card has been removed from the card reader device.

The first accessing device may be a personal computer. The second accessing device may be a mobile device such as a wirelessly enabled handheld device. The card reader device may further comprise a serial interface for wired communication with one of the plurality of accessing devices.

The card reader device may be further configured to end the second secure session in response to an end session command from the second accessing device and to notify the first accessing device that the memory card is available to open another secure session. The notification of availability may be that the memory card is received in the card reader device. The memory card may be a smart card.

Further embodiments relate to a method of managing communication between a memory card and first and second accessing devices when a first secure session is established between the memory card and the first accessing device by a card reader. The method comprises the steps of receiving an open session command at the card reader from the second accessing device terminating the first secure session between the first accessing device and the memory card in response to the open session command and opening a second secure session between the second accessing device and the memory card.

The method may further include the steps of receiving a close session command at the card reader from the second accessing device and closing the second secure session in response to the close session command and notifying the first accessing device that the memory card is available to establish another secure session.

The first session may be terminated by notifying the first accessing device that the memory card cannot be accessed by the card reader device. The notification may be that the memory card has been removed from the card reader device.

The first accessing device may be a personal computer. The second accessing device may be a mobile device. The memory card may be a smart card.

Other embodiments relate to a system for managing access to a memory card by a plurality of accessing devices. The system comprises a card reader device a first accessing device and a second accessing device. The card reader device has a processor a wireless communication interface responsive to the processor for communicating with the plurality of accessing devices including the first and second accessing devices and a memory card interface for enabling communication between the processor and the memory card. The first and second accessing devices are in communication with the card reader device. When a first secure session is open between the first accessing device and the memory card and the card reader device receives an open session command from the second accessing device the processor is configured to terminate the first secure session and to allow the second accessing device to open a second secure session between the memory card and the second accessing device in response to the open session command.

Another embodiment relates to computer readable storage storing computer program code which when executed by a processor of a card reader device cause the card reader device to terminate a first secure session between a first accessing device and a memory card accessible to the card reader device in response to receipt of an open session command from a second accessing device and allow a second secure session to be opened between the second accessing device and the memory card.

Communication with a smart card during a smart card session is processed on what is referred to as the basic channel. ISO 7816 4 Section 6.16 defines the MANAGE CHANNEL command which can be used to create up to three logical channels in addition to the basic channel on which to communicate with the smart card. Opening a new logical channel allows the commands to be processed by the smart card without affecting the session state of the basic channel or other logical channels.

In the current architecture on the Microsoft Windows platform for example the manufacturer of the smart card typically supplies a Cryptographic Service Provider CSP which is used by the operating system and applications on the PC to communicate with the smart card. It is the CSP that maintains the long term smart card session. The CSP manages communication with the smart card through the SCR ensuring that responses are provided to the process that sent the associated command.

When multiple connections are open between would be accessing devices e.g. PC and mobile device and the SCR only one connection can have the smart card session at a given time. Since any session opened by a PC is likely to be a long term session other connections will not be able to open the session. Using an open channel command such as the MANAGE CHANNEL command the SCR can open a logical channel if one is available which can be used to send commands to the memory card for processing while not affecting the previously opened session.

In order to do this the SCR manages the use of logical channels in a manner that is transparent to the originator of the commands. This may involve for example modifying the Class byte CLA of the application protocol data unit APDU as defined in the ISO 7816 standard to specify the correct logical channel. The SCR also ensures that commands that affect other channels such as a card reset command are not allowed if received from a connection that uses a logical channel that the SCR is managing.

The SCR also handles receiving further MANAGE CHANNEL commands on the basic channel or a logical channel that it is managing. This may involve opening a new logical channel either on the basic channel or on the current logical channel depending on the channel over which the session request was received and providing the appropriate feedback to the accessing device that sent the MANAGE CHANNEL command.

In order to manage the processing of simultaneous commands from multiple accessing devices it may be necessary to prioritize commands coming from specific connections or even commands themselves. This may be required to ensure that more urgent operations such as user authentication are not unduly delayed by commands that take longer to process such as importing a certificate. For example if a PC is importing certificates from the memory card which is a relatively long process and the mobile device needs to authenticate the user in order to unlock the device the authentication request from the mobile device should be given a higher priority and be processed as soon as a logical channel becomes available.

By default all commands from the mobile device may be considered higher priority than commands from a PC simply because smart card sessions with mobile device are more likely to be short. Alternatively commands from the mobile device can be accompanied by an indication of the command type such as User Authentication or Data Signing for example which would allow the SCR to determine which commands should have higher priority for example based on the number and type of connections open and the number of logical channels available.

The mobile device may be any suitable wirelessly enabled handheld mobile device. The mobile device may be a dual mode data and voice communication device and personal digital assistant device such as is described in further detail below in relation to . Alternatively the mobile device may be a single mode data communication device. The mobile device may be capable of email communication. The user of mobile device may be required to authenticate itself for use of the mobile device by providing a password or a personal identification number PIN code for example to unlock a user interface of mobile device to digitally sign a message or to decrypt an encrypted message.

Personal computers may be any kind of computer such as a normal desktop computer laptop or other portable or fixed computer system which may require access to memory card . While computing devices are described as being PCs it should be understood that they need not be of a particular type of computer nor must they be of the same type or run a particular operating system. While not specifically shown in each PC is enabled for wireless and or wired communication with card reader in a manner compatible with the communication capabilities of card reader described below in relation to .

Although illustrates more than one PC in communication with card reader over a wireless link it is possible to have only one such PC present in system . Further while does not illustrate a communication link between mobile device and PC such a link may be established.

Memory card may be a smart card. Smart cards are personalized security devices defined by the ISO 7816 4 standard and its derivatives as published by the International Organization for Standardization. A smart card may have a form factor of a credit card and may include a semiconductor device. The semiconductor device may include a memory that can be programmed with security information for example such as a private decryption key a private signing key biometrics information or an authentication certificate. The semiconductor device may include a decryption engine such as a processor and or dedicated logic circuitry for performing decryption and or authentication functions. The smart card may include a connector for powering the semiconductor device and performing serial communication with an external device such as card reader .

Smart cards may have exposed contacts on one surface of the card for establishing electrical contact with corresponding contacts on the card reader thereby facilitating communication between the smart card and the card reader. In one embodiment memory card and card reader use electrical contact to establish communication therebetween. Although memory card may be physically received in card reader it is not essential that card reader physically receive or contact memory card in order to establish communication therebetween. For example in an alternative embodiment memory card may interface with card reader using radio frequency identification RFID technology. In such an alternative embodiment the memory card need only be sufficiently proximate to card reader to enable radio frequency communication therebetween.

Mobile device may be enabled to communicate with a wireless network . The wireless network may be implemented as a packet based cellular network that includes a number of base stations each providing wireless Radio Frequency RF coverage to a corresponding area or cell. For example the wireless network could conform to one or more of the following among other network standards Mobitex Radio Network DataTAC Global System for Mobile Communication GSM General Packet Radio System GPRS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Cellular Digital Packet Data CDPD integrated Digital Enhanced Network iDEN or various other third generation networks such as Enhanced Data rates for GSM Evolution EDGE or Universal Mobile Telecommunications Systems UMTS .

In some embodiments instead of or in addition to a wireless wide area network the wireless network may include a wireless local area network such as for example a wireless local area network that conforms to one or more IEEE 802.11 standards such as 802.11b 802.11g and 802.11n. In at least some example embodiments the wireless network is connected through intermediate communications links not shown including for example links through the Internet to one or more enterprise networks not shown . Typically such enterprise networks are each associated with a set of respective mobile devices such that the mobile devices are each enabled to exchange electronic messages and other information with the enterprise networks with which the mobile devices are associated.

The mobile device includes peripheral devices or subsystems such as a flash memory a random access memory RAM an auxiliary input output I O subsystem e.g. a scroll wheel a serial port e.g. a Universal Serial Bus or USB port an input device e.g. a keyboard or keypad a speaker a microphone a mobile device short range communications subsystem e.g. an infrared transceiver wireless bus protocol system such as a Bluetooth or other means of local wireless communications and an other device subsystem designated generally by reference .

The mobile device microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the flash memory includes stored programs e.g. firmware including an operating system program or code module and other programs or software applications indicated generally by reference . The software applications can for example include a World Wide Web WWW browsing application and an e mail client application .

According to example embodiments the software applications of the mobile device further include a memory card driver that may be used in conjunction with the card reader which is described in more detail below in connection with . Notably the memory card driver may be provided not by the manufacturer of the mobile device but instead by a third party i.e. the manufacturer of the memory card . Furthermore an Application Programming Interface API may be built in to the memory card driver to allow the mobile device to communicate with the memory card through the card reader .

The software applications of the mobile device may further include a smart card reader SCR pairing and security module for coordinating a pairing process between the mobile device and the card reader . The roles of the memory card driver and the smart card reader pairing and security module will be described in greater detail below. Software applications may further comprise a channel manager not shown for managing communication between multiple applications on mobile device that have an active session open with memory card over separate logical channels.

The operating system code code for specific device applications code for the WWW browsing application code for the e mail client application code for the memory card driver or code for the smart card reader pairing and security module may be temporarily loaded into a volatile storage medium such as the RAM during operation of the mobile device . Received communication signals and other data with information may also be stored in the RAM . In some embodiments the mobile device may include in addition to the internal flash memory persistent memory carried on a SIM Subscriber Identity Module card or other removable device and at least some of the flash memory may be allocated to the SIM card flash memory.

The stored program control i.e. the software applications for the mobile device microprocessor also includes a predetermined set of applications code components or software modules that control basic device operations for example data and voice communication applications which are normally installed on the mobile device as the software applications during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the mobile device through the operation of networks described above the auxiliary I O subsystem the serial port or the mobile device short range communications subsystem . The downloaded code modules or components are then installed by the user or automatically in the RAM or the non volatile program memory e.g. the flash memory .

The serial port comprises a USB type interface port for interfacing or synchronizing with another device such as a desktop or notebook computer not shown . The serial port is used to set preferences through an external device or software application. The serial port is also used to extend the capabilities of the mobile device by providing for information or software downloads including user interface information to the mobile device other than through a wireless communication network. In one embodiment the serial port may be used to communicate with card reader .

The mobile device short range communications subsystem provides an interface for communication between the mobile device and other devices including the card reader to be described in greater detail in connection with below. For example the mobile device short range communications subsystem may employ an infrared communication link or channel or may operate according to a wireless bus protocol such as Bluetooth or any other localized wireless means of communication.

The smart card reader microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the stored programs e.g. firmware include an operating system program or code module and other programs or software applications indicated generally by reference . The operating system of the card reader further includes a channel manager component and a memory card reader driver component .

The channel manager component is responsible for communicating with the one or more accessing devices and memory card to facilitate establishment and perpetuation for as long as required of one or more secure sessions between the one or more accessing devices and memory card . The functions of the channel manager component are described in further detail below with reference to .

The memory card reader driver component is responsible for coordinating communications between the card reader and a memory card and or the memory card driver of the mobile device via wired or wireless communication link .

The operating system code code for specific device applications code for the channel manager component code for the memory card reader driver component or code components thereof may be temporarily loaded into a volatile storage medium such as the RAM . Received communication signals and other data may also be stored in the RAM . Additionally the storage component interface receives the removable memory card providing additional storage space for the card reader .

In one embodiment the memory card has a card driver and controller responsible for coordinating communications between the memory card and the memory card reader driver component of the smart card reader . While operation of the card reader is described in a context in which the memory card is a smart card it will be understood by those skilled in the art that the card reader may be designed to operate with any suitable form of memory device.

The stored program control i.e. software applications for the smart card reader microprocessor may include a predetermined set of applications code components or software modules that control basic device operations for example management and security related control of the data of the card reader and may be installed on the card reader as a component of the software applications during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the card reader through the operation of the serial port the smart card reader short range communications subsystem or from the memory card . The downloaded code module or components are then installed by the user or automatically in the RAM or non volatile program memory e.g. the flash memory .

While the channel manager component and the memory card reader driver component are shown to be an integrated portion of the operating system for security purposes e.g. individuals must not be permitted to tamper with the channel manager component or the memory card reader driver component the channel manager component and or the memory card reader driver component could be installed as one of the software applications provided that suitable security related precautions are taken to ensure that the channel manager component and the memory card reader driver component cannot be modified or tampered with by unauthorized users.

The serial port may be a USB type interface port for interfacing or synchronizing with another device such as personal computer or the mobile device . The serial port is used to set preferences through an external device or software application or exchange data with a device such as the mobile device which data is stored on the memory card that is plugged into the storage component interface of the card reader . The serial port is also used to extend the capabilities of the card reader by providing for downloads to the card reader of information or software including user interface information.

The short range communications subsystem provides an interface for communication between the mobile device or PC and the card reader . In one embodiment the short range communications subsystem employs an infrared communication link or channel. In another embodiment the short range communications subsystem operates according to a wireless RF bus protocol such as Bluetooth . However the short range communications subsystem may operate according to any suitable local wired or wireless communication protocol provided that the short range communications subsystem of the mobile device operates using the same protocol thereby facilitating wireless communication between the mobile device and the card reader .

Any communications mechanism and or protocol may be implemented for the short range communications subsystems provided that the mobile device and the card reader can communicate with each other when within physical proximity.

Although not shown in in relation to PC PC comprises a suitable short range communication subsystem for facilitating wireless communication between PC and card reader . The short range communication subsystem of the PC may operate in a similar manner to the short range communication subsystem of the mobile device for example using an infrared communication link or a wireless RF bus protocol such as Bluetooth . Alternatively the PC may employ a suitable serial interface for communication with card reader for example using a USB cable.

Referring now to there is shown a flowchart of a first method for managing communication between memory card and a plurality of accessing devices for example such as PC and mobile device . Method assumes that a connection exists between a first accessing device eg. PC and card reader and that the first accessing device has established a secure session with memory card via card reader . Method also assumes that a second accessing device eg. mobile device is introduced to system subsequent to the first accessing device establishing the secure session with memory card .

For purposes of illustration PC will be used as an example of the first accessing device and mobile device will be used as an example of the second accessing device in the following description. However it should be understood that the PC or mobile device may be substituted with another form of accessing device. Further the first accessing device may be a mobile device instead of PC and the second accessing device may be a PC instead of mobile device .

At step mobile device and card reader initiate securing pairing therebetween. Secure pairing of the mobile device and card reader involves setting up encryption and decryption keys for use in communicating with each other and then forming the connection for secure communication. The secure pairing of mobile device and card reader may be performed such that they each generate a cryptographic key for encrypting communications between mobile device and card reader . The cryptographic key may be formed from separately generated symmetric keys K K and a hash result created by hashing packets communicated over communication link . Once the cryptographic key is generated the mobile device and card reader become securely paired and the cryptographic key can be used for encrypted communication therebetween.

At step the card reader notifies mobile device of the existing session between PC and memory card . This notification may be passive or active. If the notification is active the card reader may proactively indicate to the mobile device that memory card is already engaged in a session or if the notification is passive the card reader may respond to a power up command from the mobile device to memory card by indicating that a session has already been established.

Steps and may be omitted where mobile device is not newly introduced to system and already has information that memory card is engaged in a session with another device.

At step once mobile device determines that there is a functional requirement to open a session with memory card mobile device displays an option for example via a dialog box displayed to the user by display subsystem . The option thus displayed to the user is to disconnect the device currently having the open session with memory card which in this case is the PC and therefore terminate the open session. An option to cancel and not terminate the open session may also be displayed.

At step the user selects one of the options displayed at step for example by providing input to keyboard or to auxiliary I O eg. using a scroll wheel or a track ball . If the user selects the cancel option method ends at step . If the user selects the option to disconnect the existing session with PC mobile device transmits an open session command to card reader over link at step .

At step the card reader receives the open session command from mobile device and is configured to recognize that the command requires the existing session to be closed in order for the mobile device to open another session with memory card . Accordingly the card reader effectively terminates the session between PC and memory card . This termination may be performed by notifying the PC that memory card can no longer be accessed by card reader . This may happen when for example memory card is removed from card reader or the connection between memory card and card reader is otherwise broken or interrupted. Upon receipt of such a notification from card reader PC treats the session as having been ended.

Termination of a session between PC and memory card may be made immediately so as to interrupt any data exchange or may be made subsequent to completion of a data transfer or other operation.

At step mobile device establishes a session with memory card via card reader . Mobile device may wait for confirmation from card reader that the previous session was terminated or it may not wait for such confirmation and simply assume that termination has occurred.

At step mobile device transmits a close session command to card reader once mobile device has completed the operation for which it required the session with memory card to be opened. Card reader then terminates the session between memory card and mobile device .

At step card reader may notify PC that memory card is again available for opening a new session. As it is common for a PC to maintain an open session with memory card as long as communication between card reader and PC is established the PC will usually open a new session with memory card at step .

As mobile device is recognized by card reader as being a device requiring relatively short sessions with memory card in contrast with the long sessions opened by PC card reader may be programmed to recognize the open session command from mobile device as being a command taking priority over the existing session between the memory card and the PC . In a further exemplary embodiment one or more other computing devices may be recognized as having a relatively higher priority for creating a session with memory card so that a relatively lower priority device can have a session open subject to the needs of the higher priority devices.

Method described in relation to comprises one example of a method for managing access to a smart card by multiple accessing devices. Method represents what is in effect a brute force method in which the pre existing session between PC and memory card is terminated in order to allow a shorter higher priority session to be established between the mobile device and smart card . In contrast an alternative method of managing access to memory card is described below in relation to . This alternative method involves the creation of additional logical channels on top of the basic channel over which the newly introduced accessing device e.g. mobile device can communicate with memory card . The creation of such an additional logical channel is facilitated by channel manager component on card reader .

The channel manager component maintains a connection table in flash memory or RAM cache with entries in the table for each connection which may be a securely paired connection established between the memory card and a respective accessing device . The connection table may also comprise entries for securely paired connections between card reader and accessing device where no session is currently established with memory card for that accessing device .

For each connection entry in the connection table there may be one or more channel entries. For example where PC has a session established with memory card by the CSP over the basic channel the connection table will have a connection entry for PC and a channel entry for the basic channel associated with that session. If PC opens a logical channel with memory card for example where a further application on PC needs to access memory card then a further channel entry will be created in the connection table associated with the connection for PC . Additionally the number of the logical channel is recorded in the connection table. In this example the basic channel is number 0 and the new logical channel may be channel 1.

Building on the above example suppose mobile device establishes a securely paired connection with card reader and attempts to establish a session with memory card . In this case the channel manager component will issue a MANAGE CHANNEL command to memory card which will then create a new logical channel over which mobile device can securely communicate with memory card . The newly established connection between mobile device and card reader is recorded in the connection table together with the logical channel assigned to the session between mobile device and memory card .

As the establishment of the logical channel is transparent to mobile device because card reader does not make mobile device aware of the pre existing session that PC has established with memory card over the basic channel mobile device attempts to communicate with memory card over the basic channel. Thus the APDUs transmitted from mobile device to memory card via card reader are modified by channel manager component so as to appear to have been transmitted on the assigned logical channel for the session with mobile device . This may be done by modifying the class byte of each APDU from mobile device so as to change the channel identifier in that byte for example from 0 the basic channel to 2 the assigned logical channel . The connection table is used by channel manager component to ensure appropriate modification of the class bytes so that they appear to have been received over the assigned logical channel.

If another application on mobile device then seeks to communicate with memory card the channel manager on mobile device may then send a further session request to card reader . Card reader then transmits a further MANAGE CHANNEL command to memory card to open a further logical channel. Memory card in this example will assign the fourth and last available channel which is channel number 3 to the new session with the further application on mobile device . Memory card notifies card reader that channel 3 has been assigned for the new session established with mobile device and card reader in turn notifies mobile device of this assignment.

The assignment of the new logical channel for the application on mobile device is not transparent to mobile device because the channel manager of mobile device is already aware of the session established over channel 2 which it assumes is the basic channel channel 0 . Thus the channel manager of mobile device is expecting to receive a logical channel assignment for the second session that it has sought to establish with memory card .

Under the above described scenario the connection table would have two connection entries one for PC and one for mobile device . The connection entry for PC would indicate that channels 0 and 1 are assigned to the connection with PC while the connection entry for mobile device would indicate that channels 2 and 3 are assigned to mobile device . Channel manager component also includes a mapping reference for each assigned channel in order to indicate how the incoming APDUs need to be modified. For example when mobile device transmits APDUs over what it assumes is the basic channel a mapping of channel 0 to channel 2 is performed by channel manager component in card reader according to the relevant channel entry in the connection table. Table 1 below is an example connection table depicting the recorded connection and channel entries plus mapping if relevant for the above described example.

Referring now to a method of managing access to memory card is described in further detail. Method begins at step at which an accessing device for example either PC or mobile device requests a session with memory card . This session request may be in the form of a cold reset or a warm reset depending on whether memory card is in a powered down or powered up state respectively.

The channel manager component of SCR receives the session request and at step checks the connection table stored in flash memory or RAM cache to determine which channels if any are available to establish a session with memory card . If at step channel manager component determines that the basic channel is not in use then at step channel manager component causes memory card to open a session with accessing device or on the basic channel and updates the connection table accordingly.

If at step channel manager component determines that the basic channel is already in use then at step channel manager component determines from the connection table whether a logical channel is available for the requested session. If no logical channel is available for example because the maximum number of possible logical channels are already in use SCR notifies the accessing device or at step that no channel is available.

If at step it is determined that a logical channel is available for the requested session SCR issues an open channel command such as a MANAGE CHANNEL command to memory card at step . Memory card then assigns a logical channel to the accessing device or requesting the new session at step . If the session request was made over a pre existing logical channel the assigned logical channel is communicated to SCR from memory card and then in turn to accessing device or . Otherwise the assigned channel number is not communicated to the accessing device or as the accessing device or assumes that it is communicating with the memory card over the basic channel.

At step the accessing device or proceeds to communicate with memory card in order to achieve its desired purpose. Such communication will usually include transmission of one or more APDUs according to the ISO 7816 4 standard.

If the channel assigned to the session requested by the accessing device or is different to the channel that the accessing device or assumes it has been assigned then mapping of the assumed channel to the assigned channel is required. This is described in further detail below with reference to .

Once accessing device or has communicated with memory card to achieve its desired purpose then at step the accessing device or may close the session with memory card . This may be done by issuing an appropriate command to SCR which in turn issues an appropriate end session command to memory card indicating the channel on which the session was opened. Memory card then closes the session for that channel and channel manager component updates the connection table to remove the channel entry corresponding to the closed channel from the relevant connection entry. This close function explicitly closes a logical channel other than the basic channel. The closed logical channel is then available for reuse.

If the channel sought to be closed is the basic channel this may necessitate closing of the logical channels also. In this case the channel manager component may facilitate re establishment of the sessions that were open on the logical channels and that were forced to close. For example one of the previously open sessions on a logical channel may be re opened on the basic channel and the other sessions may be re opened on newly re established logical channels based on the connections and channels recorded in the connection table.

Method may be performed repeatedly over time according to the access needs of the various accessing devices that establish connections with SCR . Such repeated performance need not necessarily include step unless memory card has reached its maximum number of logical channel assignments.

Referring now to a method of mapping an assumed channel to an assigned channel is described in further detail. Method assumes that a session between an accessing device or and memory card has been established.

Method begins at step at which SCR receives an APDU from accessing device or . Channel manager component determines the connection over which the APDU was received and the channel over which the APDU was intended by accessing device or to be provided to memory card . The channel manager component determines the intended channel number by inspecting the relevant bits in the class byte of the APDU. The channel manager component then checks the connection table at step and compares the intended channel with the assigned channel.

The channel manager component determines whether any mapping of the channel number is required at step . If the intended channel is the same as the assigned channel then the intended channel is correct and no mapping is required. If the intended channel is different from the assigned channel then it is an assumed channel and must be mapped to the assigned channel according to a mapping previously determined by the channel manager component and recorded in the connection table

If the channel of the APDU is required to be mapped from an assumed channel to an assigned channel then at step the channel manager component modifies the relevant bits in the class byte of the APDU according to the mapping specified in the connection table.

At step if no channel mapping is required or if the APDU has been modified according to the required mapping the APDU is then passed to memory card for processing. For responses from the memory card that are sent back to the accessing device or an inverse mapping process may be employed as necessary.

It should be understood that variations and modifications can be made to the embodiments described and illustrated herein without departing from the spirit of the described embodiments the general scope of which is defined in the appended claims.

