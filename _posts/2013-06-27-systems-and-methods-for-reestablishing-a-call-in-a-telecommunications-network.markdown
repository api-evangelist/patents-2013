---

title: Systems and methods for reestablishing a call in a telecommunications network
abstract: A call server includes a network interface for connecting the call server to a packet-based network within a telecommunications network. The call server establishes a first connection with a calling party terminal and a second connection with a called party terminal via the packet-based network. The call server then joins the first connection with the second connection to establish communication between the calling party terminal and the called party terminal. The call server may park the second connection when the first connection is terminated or vice-versa and establish a new connection with the calling party terminal via the packet-based network if the first connection was terminated or vice versa. The call server may join the new connection with the first or second connection to reestablish communication between the calling party terminal and the called party terminal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08634531&OS=08634531&RS=08634531
owner: Bandwidth.com, Inc.
number: 08634531
owner_city: Raleigh
owner_country: US
publication_date: 20130627
---
This application is a continuation of U.S. application Ser. No. 12 974 648 filed Dec. 21 2010. The patent application identified above is incorporated here by reference in its entirety.

The present invention relates generally to a call reestablishment feature in a telecommunications network. In particular the present invention relates to the implementation of a call reestablishment feature in an Internet Protocol IP or other packet based network or segment of a telecommunications network.

In one embodiment a call server in a telecommunications network is disclosed. The call server includes a network interface for connecting the call server to a packet based network in which the packet based network comprises at least a segment of the telecommunications network. The call server also includes a memory for storing one or more program modules and a processor for executing the one or more program modules. The one or more program modules may comprise computer executable instructions for causing the call server to establish a first connection with a calling party terminal via the packet based network establish a second connection with a called party terminal via the packet based network join the first connection with the second connection to establish communication between the calling party terminal and the called party terminal park the second connection when the first connection is terminated or park the first connection when the second connection is terminated establish a new connection with the calling party terminal via the packet based network if the first connection was terminated or establish a new connection with the called party terminal via the packet based network if the second connection was terminated and join the new connection with the first or second connection to reestablish communication between the calling party terminal and the called party terminal.

These and other aspects and features of the invention will be described further in the detailed description below in connection with the appended drawings and claims.

The present invention provides systems and methods for implementing a hold call back feature in a packet based network or in a packet based segment of a telecommunications network that includes packet based and non packet based segments i.e. a hybrid network . As used herein the term hold call back is used to describe generally a calling feature that allows a caller to terminate a connection in response to the call being placed on hold and to receive a call back when the party who initiated the call hold becomes available. Exemplary embodiments of the present invention will be described herein in the context of Voice over IP communications. Voice over IP also referred to as VoIP is a general term of a family of methodologies protocols and transmission technologies for delivery of voice communications and multimedia sessions over IP networks. Those skilled in the art will appreciate however that the principles of the present invention may be applied to any packet based communication protocols and technologies.

The hold call back feature is implemented through one or more software modules executed by one or more network servers e.g. call server API server database server connected to the IP network. Calls originating from or destined for the PSTN or other non IP segments of a telecommunication network may be routed to and from the network servers by appropriate media gateways session border controllers etc. These devices are collectively and generally referred to herein as gateway devices. In operation a first call connection is established between a calling party terminal and a call server. The calling party terminal may dial an access number to establish this first connection or may use a client side application to request that the call server initiate the first connection. The call server may then prompt the calling party terminal to enter the phone number of the party to be called and after that phone number is received by the call server the call server initiates a second connection between itself and the called party terminal. The call server subsequently joins or bridges the first connection with the second connection to establish communication between the calling party terminal and the called party terminal.

If the call is placed on hold by the called party the calling party can invoke the hold call back feature by inputting a pre determined star code or other activation command to the call server. After the call server receives the hold call back activation command it splits the first connection from the second connection and then disconnects the first connection i.e. the connection between the call server and the calling party terminal but maintains the second connection i.e. the connection between the call server and the called party terminal . The call server may play a message for or issue a prompt to the calling party terminal before terminating the first connection. With the first connection terminated the calling party may hang up his her terminal and is thus freed from the burden of holding on the line until the calling party is available. Then the call server repeatedly prompts the called party terminal for input of a command for reestablishing communication with the calling party. The call server monitors the second connection for input of the call reestablishment command by the called party terminal. If the call reestablishment command is detected the call server initiates a new connection between itself and the calling party terminal. Once this new connection is established the call server bridges it with the existing second connection i.e. between the call server and the called party terminal to reestablish communication between the calling party terminal and the called party terminal.

Reference will now be made in detail to various and alternative exemplary embodiments and to the accompanying figures in which like numerals represent substantially identical elements. Each exemplary embodiment is provided by way of explanation and not as a limitation. It will be apparent to those skilled in the art that modifications and variations can be made without departing from the scope or spirit of the disclosure and claims. For instance features illustrated or described as part of one embodiment may be used in connection with another embodiment to yield a still further embodiment. Thus it is intended that the present disclosure includes modifications and variations that come within the scope of the appended claims and their equivalents.

As used herein a terminal refers to any wireline or wireless device for initiating and or receiving calls including traditional rotary terminals pulse activated DTMF terminals cell phones personal computers and the like. As will be appreciated terminals can vary in connectivity functionality and other characteristics and features. The present invention contemplates that one party the calling party will use a first terminal e.g. terminal to call another party the called party who uses a second terminal e.g. terminal terminal or terminal . For example the called party may be an agent or operator in a call center or other location that receives a high volume of calls. However the called party may in general be any user of any terminal. A call can comprise any voice or other type of media communication.

As is well known in the art calls originating from terminating in or passing through a non IP network e.g. the PSTN or the radio access network may pass through one or more gateway devices which among other functions convert digital media streams between disparate types of telecommunications networks. Gateway functionality is not unique to the present invention and is therefore not explained in further detail herein. Of course the present invention also contemplates end to end VoIP calls between terminals e.g. terminals and connected to the IP network that would not require a gateway device 

In accordance with the present invention calls between terminals are managed by the call server . depicts only a single call server for simplicity but multiple call servers may be deployed in a scaled system. In the context of the present invention a call server can be a VoIP server or any other processor driven device that is capable of executing instructions for establishing and or managing call connections between terminals and for implementing the inventive hold call back feature as hereafter described. The call server will thus include components such as a network interface for connecting to the IP network and communicating with the resources thereof a memory device for storing computer executable instructions e.g. software code and data and a processor for executing computer executable instructions. Other components and the basic operation of processor driven devices are well known in the art and are therefore not discussed herein.

In certain embodiments the call server may execute the Linux operating system and the FreeSWITCH communications platform. In such an environment one or more hold call back modules which include computer executable instructions for performing the methods of the hold call back feature described herein may be implemented as an application or a component of an application built on the FreeSWITCH platform. Examples of such applications include JSON and OpenSSL. In other embodiments the call server may execute any other suitable operating system and call management software and the hold call back module s may be implemented as a component thereof or as a stand alone application. The call server may also execute speech recognition software such as PocketSpynx or any other suitable program for detecting speech commands transmitted by the various terminals. The call server may also execute software module s for generating call records or the like.

Call records and other data e.g. details regarding call connections on hold statistics call durations and various actions taken by the calling party and called party may be stored in the local memory of the call server which may include a RAM hard disk removable disks tape arrays or any other computer readable medium. Alternatively or additionally the call server may communicate with a database server for storing call records and or other data in one or more database . The database s may be connected to the database server and or the IP network . The database server can be implemented using PostGreSQL running on the Linux operating system for example.

In some embodiments functionality for implementing the inventive hold call back feature may be distributed among multiple servers such as the call server the API server and the database server . For example the API server or other web server may interact with client side application modules executed by certain terminals and such as smart phones personal computers laptop or tablet computers or other computing devices to initiate a new call. As a result of this interaction the API server may collect data from a calling terminal such as the calling terminal s phone number and the phone number of a called terminal and may send data and messages to the calling terminal . The API server may then communicate with the database server to establish and store a call record for the new call and send data to the call server so that the call server can establish a connection with the calling party terminal . For simplicity s sake depicts one call server one API server and one database server but multiple of each of these devices can be used to implement a more scalable system. Additional details regarding these distributed embodiments are provided below with reference to .

The joined call connections are monitored at step for activation of the hold call back feature. As described activation of the hold call back feature may occur when one party in response to determining that the other party has put the call on hold inputs an activation command such as a predetermined star code voice command etc. In some embodiments different commands may be used to activate different variations of the hold call back feature. For instance a first command e.g. 7 may be used to indicate that one party simply wishes to receive a call back when the other party takes the call off hold a second command e.g. 6 may be used to indicate that one party wishes to receive a call back at a specified time which can entered by that party in response to prompts and a third command e.g. 5 may be used to allow one party to record a message that will be played to the other party when the other party takes the call off hold. These and other variations for the hold call back feature will occur to those of skill in the art. In still other embodiments the call server may be able to detect that one party has put the other on hold and may prompt the held party terminal for a hold call back activation command.

If it is determined at step that the hold call back feature has not been activated a determination is made at step as to whether either party has hung up i.e. terminated the call. If either party has hung up the method ends at step . If not processing returns to step to continue monitoring for activation of the hold call back feature. When it is determined at step that the hold call back feature has been activated the joined call connections are split and parked at step so that neither party can hang up. Then at step the held party terminal i.e. the terminal that activated the hold call back feature is prompted for optional input of an alternate call back number. The call back number i.e. either the phone number of the held party terminal or a specified alternate call back number is stored in memory at step . The connection with the held party terminal is then terminated while the connection with the holder party terminal i.e. the terminal that placed the call on hold is maintained at step . In some embodiment the connection with the held party terminal may not be parked to allow for input of an alternate call back number.

At step an on hold timer is started. This timer tracks the amount of time the call remains on hold. More specifically this time tracks the amount of time the connection with the holder party terminal remains on hold. At step the connection with the holder party terminal is prompted and monitored for a command to reestablish the held call. The prompt can be a voice recording or other communication capable of being received and acted upon by the holder party terminal. The prompt can be played continually at predetermined or variable intervals until an appropriate response is received or the holder party hangs up. The command call reestablishment command can be a star code voice command or other suitable command. Thus for example the holder party may be prompted to press 1 or say connect me to reconnect your call and the connection can be monitored for input of either of those commands. Alternatively or in addition customized prompts can be transmitted to the holder party terminal. For example as described the held party may have been given an option to record a voice message for the holder party e.g. regarding the purpose of the call information requested etc. which may be packaged with instructions on how to reconnect the call and transmitted to the holder party terminal. In such embodiments the amount of time spent on hold by the held party can be further reduced by providing the holder party with an opportunity to become more prepared for the call before entering the call reestablishment command e.g. by obtaining the information requested in the voice recording.

At step a determination is made as to whether the call reestablishment command is detected. If not it is determined at step whether the holder party terminal has hung up. If the holder party hangs up the call the on hold timer is stopped and the on hold time is added to a database record associated with the held party terminal or held party at step and the method ends at step . If the holder party does not hang up the call the method returns from step to step to continue monitoring and prompting the holder party terminal for the command to reestablish the call. When it is determined at step that the call reestablishment command is detected the on hold timer is stopped and the on hold time is added to a database record associated with the held party terminal or held party at step . Then at step a new connection is initiated with the terminal of the held party by sending a connection request to the call back number that had been stored in memory. Accordingly the terminal of the held party may be the same terminal that had previously been involved in the call or may be a different terminal associated with an alternate call back number specified by the held party. From step the method returns to step for a determination of whether the new connection with the held party is successfully established. If so this new connection and the connection with the holder party are joined at step so that the parties can again communicate with each other. From that point the method continues in the same manner as described above.

At step a determination is made as to whether the call requested by the calling party terminal to the called party terminal is authorized to proceed. This determination may involve one or more sanity checks. For example customer account details e.g. stored in a database record associated with the calling party terminal s phone number may be accessed to confirm that the account is current and no delinquencies exist. In addition a rating database can be searched for rate records associated with the phone numbers of the calling party terminal and the called party terminal. If it is determined that either phone number is not associated with a rate record or if the rate records indicate a cost for the requested call above a preset threshold e.g. which may be associated with the calling party s account then the call will not be authorized to proceed. Those skilled in the art will appreciate that various other sanity checks and other tests can be performed to determine if the requested call is authorized to proceed.

If the requested call is not authorized to proceed the method proceeds to step where the calling party terminal is prompted or otherwise notified that the call cannot be completed. From step processing returns to step where the calling party terminal is again prompted for a phone number of a called party terminal and the method continues from that point as previously described. When it is determined at step that the requested call is authorized to proceed the processing moves to step for initiation of the connection with the called party terminal.

At step the on hold statistics for the calling party terminal are retrieved from one or more database record associated with the calling party terminal. The database record s may indicate a total on hold time for the calling party terminal or may indicate individual on hold times for multiple calls which times can be summed to calculate a total on hold time. At step the on hold statistics are provided to the calling party terminal for display to the calling party. By way of example the calling party terminal may display a message indicating that the hold call back feature has saved X minutes of your life. Those skilled in the art will appreciate that the provision of on hold statistics is an optional feature of the invention and is not required in some embodiments to enable a hold call back feature. Therefore steps are to be considered optional steps within exemplary method .

At step the phone numbers for the calling party terminal and the called party terminal are received from the calling party terminal or possibly from another terminal . In some embodiments this information is sent by the calling party terminal in an HTTPS API call with JSON which includes the phone numbers and a unique identifier associated with the calling party terminal. Other messages and or protocols may be used in other embodiments. Next at step a determination is made as to whether the call requested by the calling party terminal is authorized to proceed. As described with reference to step this determination may involve one or more sanity checks. For example customer account details associated with the calling party terminal s phone number may be accessed to confirm that the account is current and no delinquencies exist. In addition a rating database can be searched for rate records associated with the phone numbers of the calling party terminal and the called party terminal. If it is determined that either phone number is not associated with a rate record or if the rate records indicate a cost for the requested call above a preset threshold then the call will not be authorized to proceed. Various other sanity checks and other tests can be performed to determine if the requested call is authorized to proceed.

If the requested call is not authorized to proceed the method proceeds to step where the calling party terminal is prompted or otherwise notified that the call cannot be completed. From step processing returns to step to again await receipt of phone numbers for the calling party terminal and called party terminal. For example the calling party terminal may prompt the calling party to input a new called party phone number. Processing continues from step as previously described except that in some cases the method may be automatically terminated if new phone numbers are not received in a defined amount of time. If it is determined at step that the requested call is authorized to proceed a call record is created in the database and the phone numbers of the calling party terminal and the called party terminal are stored therein at step . Then at step a call start command and the call record identifier which identifies the call record in the database are sent to a call server. As mentioned some exemplary systems according to the present invention may include more than one call server for scalability purposes e.g. load balancing etc. Accordingly an API server or other device executing the exemplary method or a similar method for initiating a call connection may select a call server to handle the requested call. This selection may be based on availability a random draw e.g. a randomly weighted order of available call servers or any of various other algorithms or processes. Following step the exemplary method ends at step .

In some embodiments the calling party terminal may be configured to automatically reformat phone numbers to a standard ten digit format or may not accept any phone numbers that are not input in a standard ten digit format. Once the phone number of the called party terminal is received a call request is generated and sent to an API server or other appropriately configured device at step . The call request will include at least the phone numbers of the calling party terminal and the called party terminal. As mentioned the call request may be in the form of an HTTPS API call with JSON. Other messages and protocols may alternatively be used. A positive or negative confirmation of the call request is received and displayed at step . As an example a positive confirmation may indicate that the call request is being processed and a negative confirmation may indicate that the call cannot be completed as requested. Following step the exemplary method ends at step .

Many other modifications features and embodiments of the present invention will become evident to those of skill in the art. For example the hold call back feature described herein may be implemented using various other device configurations and network architectures. Accordingly it should be understood that the foregoing relates only to certain embodiments of the invention which are presented by way of example rather than limitation. Numerous changes may be made to the embodiments described herein without departing from the spirit and scope of the invention as defined by the following claims.

