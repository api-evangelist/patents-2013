---

title: Browsing and quality of service features
abstract: Embodiments are configured to provide browsing and other functionality that can be used to provide viewable data based in part on a current viewable space of a browser interface, but the embodiments are not so limited. In an embodiment, components of a system can operate to communicate viewable data to a browser engine based in part on a configuration of the browser engine and/or a display architecture. In one embodiment, a computing device includes a browser application that can be used to provide data associated with viewable portions of a browser display, wherein the provided data can be used to monetize advertising revenue according to monetization and/or advertising requirements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09360988&OS=09360988&RS=09360988
owner: Microsoft Technology Licensing, LLC
number: 09360988
owner_city: Redmond
owner_country: US
publication_date: 20130218
---
The present application is a continuation of U.S. patent application Ser. No. 13 365 337 filed Feb. 3 2012 now U.S. Pat. No. 8 380 565 entitled Browsing and Quality of Service Features which is a continuation of application Ser. No. 12 147 361 filed Jun. 26 2008 entitled Browsing and Quality of Service Features now U.S. Pat. No. 8 135 616 which are assigned to the assignee of the present application and hereby incorporated by reference.

Computing devices including mobile communication devices have become essential tools for business and personal uses. Advances in computing power communication functionality and storage capacity continue to enhance the user experience. Handheld and other portable computing devices can include web browsing graphics and video processing capabilities. The size of many handheld and portable devices tends to result in a limited space for displaying content. For example mobile phones and other smart handheld devices include browsers that can be used to access the web and display content of a web page on the associated displays. Users can use zoom and scrolling controls to view portions a web page that are difficult to view or not being currently displayed due in part to the limited display area of an associated display.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are configured to provide browsing and other functionality that can be used to provide viewable data based in part on a current viewable space of a browser interface but the embodiments are not so limited. In an embodiment components of a system can operate to communicate viewable data to a browser engine based in part on a configuration of the browser engine and or a display architecture. In one embodiment a computing device includes a browser application that can be used to provide data associated with viewable portions of a browser display wherein the provided data can be used to monetize advertising revenue according to monetization and or advertising requirements.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.

Embodiments are configured to provide browsing and other functionality that can be used to provide viewable data based in part on a current viewable space of a browser interface and or aspects of a device display but the embodiments are not so limited. In an embodiment components of a system can operate to communicate viewable data to a browser engine based in part on a configuration of the browser engine and or a display architecture. For example viewable data can be requested by the browser engine based in part on a dynamic layout engine using parameters associated with a display resolution and configuration of a browser window e.g. full screen vs. browser application resized to cover only a percentage of a visible display area .

The browser engine can be configured to operate with a variety of communication protocols to receive and translate information from one or more servers display text images etc. associated with a viewable portion or space of a browser interface by interpreting instructions of a requested page and or from one or more servers run embedded programs launch external programs and or provide view data for use in advertising models. For example advertising charges can be determined based in part on whether all or a portion of an advertisement image is requested by the browser engine when requesting web page data for a viewable portion of a display. A pro rated or other charge can be assessed against an advertisers account based on a request and or whether the advertisement was rendered in the viewable portion of the display.

Browser applications in conjunction with the browser engine and other applications can operate to optimize network downloads by using an associated layout engine to interact with the display subsystem to determine when images and other content would have been rendered completely or partially outside and or inside an application display window. The layout display interaction enables the browser to provide network bandwidth efficiency by intentionally avoiding retrieving images and other content which fall outside the visible regions. Accordingly an event driven mechanism can be used to provide quality of service attributes for advertisers to target a percentage of the visible image or display region which can prevent charging advertisers for images retrieved and rendered partially visible or outside the visible region of the display by avoiding requests for the content.

In various embodiments the browser engine can be configured to request one or more complete image files or portions of one or more image files associated with the current viewable space and or next viewable space of a browser display. Embedded web objects web page scripts and or other features can be used to provide one or more complete image files or portions of one or more image files and or a load receipt or other communication event which for use in providing and monetizing browsing data. For example executing scripts provided by the web designer or embedded in the images such as using steganography or displaying embedded objects which retrieve a remote image or images when visible in a current viewable area of a browser window. As further example the browser engine can request load tiles zones adjacent and or contiguous to a current viewable area of a browser window and issue load receipt events associated with the current viewable pixel and other data. As described below the browser engine can cache or otherwise store browser data associated with a prior viewable portion of the browser display. The browser engine can also operate to publish viewable space information in conjunction with one or more servers to dynamically download bits tiles zones associated with viewable and or unviewable content for use by the browser engine.

In another embodiment a browser application which includes executable instructions can be used in conjunction with a computing device of a communication network to browse the network. As an example a handheld computing device such as a smart phone etc. can include the browser application that a user can use to surf the Internet. The browser application can operate to limit data fetch requests to only those which would provide viewable data associated with a current viewable portion of a browser interface. That is the browser application can operate to limit data requests to browser data that corresponds to a current viewable portion of the browser interface but is not so limited.

In yet another embodiment a user can enable disable a data miser feature associated with a browser application. When the data miser feature is enabled the browser application can operate to selectively request load browser data based in part on a determination of a current viewable space of a browser interface. In addition to providing browsing functionality the browser application can be used to assist in monetizing advertising revenue according to monetization and or advertising requirements.

In one embodiment the browser application can operate to communicate a tolling event to a serving device once all or a defined portion of an advertisement has been rendered in the viewable portion of a browser window as part of rendering a viewable portion of a web page. The tolling event can include information associated with how much of the advertisement was displayed in the browser interface. An advertising or business model can use a tolling event to determine whether an advertiser should be charged for the display of an advertisement. As an example the browser application can communicate information to the serving device associated with dimensions of an ad that were in the visible pane of the browser wherein the information can be used by businesses and other entities to quantify advertising requirements and contractual arrangements. Other embodiments are described below.

The user device is in communication with at least one server via one or more communication networks hereinafter network . The system can include a plurality of users associated devices systems and or other components. The system includes an infrastructure and functionality to enable the user to access web pages and other information associated with the network . Depending on the configuration of a browser interface and or device display portions of web page may not need to be retrieved by the browser engine since the portions are not currently visible to the user.

These portions can be represented by the region s of the browser interface that extends outside the visible display region of the display . The content is outside the display region through either a virtual desktop or by content which can be scrolled up down left right to view additional regions of a page. As described below content outside the visible region may not be requested downloaded by the browser engine . In an embodiment the browser engine can operate in conjunction with the layout engine to download images and other content based in part on 1 the image position on a web page inside the browser application e.g. have to scroll to see it 2 the position of the browser application within the virtual desktop display portal and or 3 whether other windows or applications occlude the visibility of the images and or content.

A web page can be described as a number of bits of a data configured according to a defined language such as hypertext markup language extensible markup language etc. Moreover a web page can be dynamically generated and include markup tags that describe the layout and associated formatting of the web page. In one embodiment height and width attributes of tags and or other additional tag attributes can be used to indicate a size and quality of service percentage reduction that can be used to monetize impression based advertisements. For example a developer or other web designer can use a java script to insert an ad call into a web page including what size ad to include e.g. ad calls associated with 300 400 on the right pane and a top banner at a 600 100 . A web page can include text graphics and other images video audio etc. As described below images and other content may be requested and or retrieved from the server when they can be displayed within the union of the area represented by the browser application window and the display e.g. the current viewable region .

According to an embodiment and as described further below the user device includes a browser engine that can be used to access web pages and other data from the server and or other servers and components of the system or some other system. Server can be in communication with other servers and client devices according to a networked computing environment such as the World Wide Web WWW for example as well as a private intranet and other systems. The user device also includes a display for displaying browser data which may include video text graphics etc. For example launching the browser opens a browser window in the display wherein the browser window can include a web page that a user is interacting with based in part on a submitted uniform resource locator URL . In some cases a portion of a web page may be downloaded such that only the portion is displayed due in part to the configuration of the browser window display resolution pixel count pixel configuration and or a physical size of the display. Moreover a plurality of such browser windows can be opened and displayed dependent upon the size and resolution of the display. Further the display may be physically attached to the device or be a remote client to the device such as a virtual desktop or remote desktop application.

The user device also includes a memory and a cache . The cache can be used to store web page and other data. For example the browser engine can operate to store viewable web page data in the cache so that portions of the same web page do not have to be downloaded if the user requests viewable portions of the web page on more than one occasion. In one embodiment other web page data such as web page data that is contiguous with or adjacent to viewable web page data can be requested from the server and stored in cache . For example a portion of an advertisement image may be viewable to a user based in part on the current viewable space of a browser window and the browser engine can operate to substitute the unviewable portion of the advertisement image in the cache as part of a prioritized download request based in part on a ratio threshold for displaying the image e.g. if the image will be reduced to a certain do not request the image from server and or substitute a local image . The user device can include other components and functionality and is not limited to the embodiments and examples described herein.

With continuing reference to and in accordance with an embodiment the browser engine can be configured to dynamically fetch or request viewable bits of a web page document or other information resource based in part on a browser configuration display resolution pixel count pixel configuration and or display size but is not so limited. As an example a user can select a data miser feature to configure the browser engine to limit its data requests to web page data that is associated with a current viewable space of a browser interface or window. The browser engine can use a window manager and or other operating system OS component or functionality to determine a size orientation and or location of a window being used to provide the browser and associated browser controls.

For example the user device can use an application programming interface API call e.g. getwinrecviewablerec etc. to determine a resolution size and or configuration of a current visible or viewable space of a browser interface . The browser engine can also be configured to fetch or request other web page data e.g. text images etc. that is not within the current viewable space. For example assume a user has scrolled down to view another portion of a web page. In this example the browser can also request and download other unviewable content immediately below or adjacent to the content that was just scrolled to. The browser application can also define an attribute for the perimeter for the amount of loading for regions off screen. For example load up to 250 pixels above and below the visible region.

As described above a request for web page data can include information associated a current viewable space of the browser display or interface that can be used to quantify web page data to be included as part of a download package. Moreover the browser engine can operate to provide feedback to the server or other component s as to what the user is currently viewing. The feedback provided by the browser engine can be based in part on the current browser interface configuration e.g. window size orientation location scroll location etc. display resolution pixel information physical size of the display etc. .

For example java script active server page ASP cascading style sheet CSS and other functionality can be used to pass information between the browser engine and the server e.g. ms alt url fullimage.png altimage.png 0.50 ms alt url fullimage.png placeholder 0.50 wherein the placeholder key identifies using a built in image placeholder that the browser provides when the ratio is satisfactory and or according to quality of service preferences. Accordingly in addition to information associated with the browser and or device the browser engine can provide information as to a user s interaction with a browser interface .

 ms alt url fullimage.png placeholder 0.50 . As briefly described above the placeholder key can be used to identify using a built in image placeholder that the browser provides.

A list of CSS properties that support url include Background Background image Content List style and List style image. Accordingly styles can be given information about element and where it is on a page and a determination can be made on how to handle the rendering of an associated image. Moreover ASP ASPX functionality can collect the necessary information and pass it to an associated requested object and an ASP page can determine the appropriate information to send back to the user.

As described below and according to one embodiment browser information can be used by the server to generate one or more script parameters for use by the browser engine when determining whether to request and or load one of a primary or secondary advertisement image. For example upon receiving resolution and positional information from the browser engine as part of an image ASP request server ASP can operate to choose an appropriate image file to respond back to the browser engine . Additionally the browser engine can operate to substitute a locally stored image when a rendering size is below a predefined image size. For example the browser engine can operate to pull a recognizable logo independent of visibility size from memory when an otherwise fetched image would be difficult to recognize by the user e.g. ALT tags which can be used to transform the text web to small screen web .

The browser engine can use a threshold or other parameter s to determine whether to fetch or request an image or image portion and or other object from the server . For example if the browser engine determines that it would have to resize an image more than 50 the browser engine may not fetch or request the image. In such a case the browser engine can substitute a locally cached image or request a different image to take the place of the requested image. Accordingly the browser engine can operate to request and download images from the server or some other server when a rendering size is at or greater than a percentage of a defined reduction size. As an example the browser engine may not request a 1920 1600 image from the server that will be scaled down to 10 of the full size if the display size is 200 300 and the data miser feature has been selected.

As described briefly above the browser engine can in addition to requesting and or downloading viewable bits of a browser interface provide feedback or other information as to positional and other configuration information associated with a user interaction e.g. stylus finger vocalized mouse etc. to scroll up or down left or right and or to resize the browser window. For example due in part to its size a handheld communication device has a limited display area for displaying information such as text images and video associated with a web page. Smaller fonts and display parameters may allow more textual and other information to be displayed in the browser interface . When a user uses a browser to download a web page an image such as an advertising logo may not be initially viewable to the user. For example handheld device user may have difficulty viewing an advertisement without using zoom controls even though an advertisement image was rendered in the viewable space under these and other circumstances.

The browser engine can use information associated with a user s interaction and or the browser interface to determine which bits to request for a viewable portion of a web page associated with a current viewable space of the browser interface . For example a user may scroll down and over or resize a browser window to view an image or read some text and the browser engine in conjunction with other component s can track the user interaction and limit its fetch or request to bits that are currently viewable or newly viewable to the browsing user. Devices with limited screen sizes and communication bandwidths can use the data miser functionality to reduce the download and rendering times by limiting the requesting and fetching of browser data to the browser data associated with a current viewable space of the browser interface . If the browser interface is configured such that an image or portion thereof text and or other object is not viewable to the current user the browser engine in the data miser mode can operate to not fetch or request the associated unviewable bits from the server .

Accordingly the browser engine can also use configuration parameters of the browser interface and or display to further determine the viewable portion of a web page. For example the browser engine can determine a text size associated with a browser s configuration when determining whether an advertising charge should issue for an advertisement that was displayed in the current viewable space of the browser interface . The browser engine can issue a toll event or some certificate associated with an advertisement charge depending upon the particular advertisement arrangement. For example a particular advertising arrangement may charge advertisers for displayed advertisements that are displayed above a certain font or display size resolution displayed for a defined amount of time with an associated dimension size resolution parameter etc. The browser engine can operate to issue the toll event or some other identifying certificate under these and other circumstances when requesting and or displaying data within the viewable space of the browser interface .

Correspondingly the browser engine can operate to provide information associated with the user experience when determining whether to charge an advertising provider or other entity for an advertisement associated with a particular web page or other browsing data. In one embodiment a charge can be assessed if the browser engine sends or issues a notification that an advertisement or a defined portion of the advertisement was located in a viewable space of a browser window. For example the resource.asp can be used for ad tracking purposes to properly account for full or partial renderings of an advertisement. Charges can then be assessed using the associated data. For example the browser engine can operate to communicate a certificate of visibility if an advertisement image was requested downloaded and or recognizably displayed in a current viewable space of a browser window.

As described briefly above as part of an advertising or business model the viewable data can be used to determine whether to charge an advertising entity for an advertising charge. In an embodiment as part of an impression ad campaign an advertiser is not charged for an advertisement if all or a designated portion of the advertisement is not within a current viewable space of a browser display. Stated differently an advertiser is not charged for an advertisement as part of an impression ad campaign if all or a certain portion of the advertisement is not requested or downloaded by the browser engine since the user would not have viewed the advertisement based in part on the current viewable space of a browser display.

As a result and in accordance with such an embodiment advertisers are not charged for advertisements that are unrecognizable to the user and or not downloaded by the browser engine . Moreover users do not have to be charged for browser data that is not downloaded and bandwidth may be more efficiently utilized since viewable browser data can be prioritized as part of downloading operations. For example if the browser engine determines that bits associated with an advertisement are not to be downloaded since they are not in the user s viewable window the advertiser or other entity is not charged.

In one embodiment an advertiser or other entity is only charged for the advertisement when the browser engine issues a toll event certificate and or other acknowledging signal to alert the server or other device system that an advertisement is in the viewable space of a device display. In another embodiment information can be embedded in an image or other object e.g. using steganography to embed advertising code messages etc. which can be read and used to determine whether to charge an advertising or other entity. For example a flash applet or other application can be used to fire off an acknowledging signal when an image or portion thereof becomes visible within the display. The layout engine can also operate to send an event signal or other signal associated with the display of an image or object.

In addition to the functionality described above the browser engine can operate to provide information based in part on dimensions of an ad or portion of the ad included in the visible or viewable space of the browser interface . The information can be communicated to the server and used by business and other systems to use the information for various business requirements. In one embodiment as part of an advertisement monetization model the browser engine can operate to communicate visible dimensions of an advertisement image to the server or dedicated billing system since the browser engine is requesting browser data associated with a current viewable space of the browser interface e.g. browser window .

For example the browser engine as part of a deterministic operation can inform the server or other system that 120 300 pixels out of 400 600 pixels of an advertisement image were visible in a current viewable space of a browser window. Depending on the implemented model an associated advertising entity may or may not be charged for the particular advertisement impression. The browser engine can also operate to provide additional visibility or placement information to the server such as top left corner visible lower left corner visible etc.

As described above a billing or other system can use the information provided by the browser engine to generate an advertisement charge based in part on terms of a given contract or other negotiation with an advertiser. Alternatively a billing or other system can use information provided by the server to generate an advertisement charge based in part on terms of a given contract or other negotiation with an advertiser since the server has knowledge of browser data that was requested and downloaded by the browser engine .

As an example according to one advertising model an advertising charge can issue under the following circumstances 1 if the area in the current viewable space of the browser window is greater than or equal to X then consider it visible e.g. X could be 50 or some other quantification 2 charge based in part on the percentage of an advertisement that was visible in the current viewable space of the browser window e.g. if 40 of an ad is visible then issue a charge of 40 of the contracted rate 3 if multiple partial dimensions were sent by the browser engine e.g. the user scrolled a little bit which may have required additional download requests for the additional data but not enough to expose the rest of an ad then use the largest set of dimensions for billing purposes 4 charge based in part on preference of certain viewable locations e.g. top left must be visible to be billable since that is where my logo is regardless of visible etc. 5 only charge for advertisements that were 100 visible in the viewable space of the browser window 6 no charge for advertisements that were not included in the viewable space of the browser window 7 provide discounts based on ad visibility e.g. no charge for the first N impressions that are not visible or based on some of a visible ad etc.

As described briefly above the server in addition to other functionality can operate to dynamically provide web pages for consumption by the browser engine through the network but is not so limited. The server can also operate to generate fixed content web pages for consumption by the browser engine . Dynamically generated fixed and other web page types can include content and other data such as video audio images advertising data and other information. In one embodiment an advertisement server or ad server e.g. local and or remote server s can be used to communicate advertisement images and other advertisement content that the server can use to dynamically generate web page data for a targeted user.

The ad server can be used to provide advertisement data which is to be located on specific portions or pixel locations of a fixed web page e.g. upper left upper center pixels xx xx x xx etc. The server can use script generator component which includes scripting features to dynamically provide web page data including advertisement images or portions thereof to the browser engine . As described above a request for web page data can include additional information including information associated with a current viewable space of the browser display or interface that can be used to quantify web page data to be included as part of a download package. Moreover the browser engine can communicate quantification data to the server or other component s wherein the quantification data can be used to monetize advertising and other business entities associated with the browser data downloaded and or displayed in the browser interface . For example the browser engine can issue quantification data e.g. a toll event etc. that can be used to identify that designated data e.g. advertising data or portions thereof etc. was requested downloaded and or displayed in the current viewable space of the browser interface .

In another embodiment upon receiving a download request for web page data from the browser engine the server can operate to examine image sizes associated with a requested web page using server side scripting features of the script generator component . The server can use features of the script generator component to provide an entire image or a portion of an image based in part on the configuration of the browser engine and or display. For example the server can operate to examine an image size of an image associated with a requested web page using one or more active server page ASP server side scripts for a dynamically generated web page.

Moreover the browser engine and the server can negotiate an efficient partial image download optimizing the communication bandwidth. For example assume an image is 1000 1000 pixels. The browser engine informs the server that is can only display 100 100 pixels and the user has scrolled to the middle of a web page image. The browser engine can issue a fetch request to the server for the x y coordinates of the image at 400 400 to 500 400 400 500 to 500 500 . The server can then perform a scatter read or other read operation on the image to provide the requested bits or pixel data. As described above the browser engine can operate to cache and append image portions from the local cache to generate a total image. In one embodiment the browser engine can operate to request an image and then issue a TCP reset to the connection when enough of the image bytes have been downloaded to fill a current viewable space.

Components of system described above can be implemented as part of networked distributed and or other computer implemented and communication environments. Moreover the browsing functionality can be used in conjunction with a desktop computer laptop smart phone personal data assistant PDA ultra mobile personal computer and or other computing or communication devices to provide browsing and other data. The system can be employed in a variety of computing communication environments. For example the system can used with devices systems having networking security and other communication components configured to provide communication functionality with other computing and or communication devices.

While a communication architecture is shown in functionality of various components can be also combined or further divided. For example while one server is shown the system can include a plurality of servers. Moreover the server can communicate with other servers such as ad servers content servers search engine servers and other serving devices to generate dynamic and static web page data. Additionally the various embodiments described herein can be used with a number of applications systems and other devices and are not limited to any particular implementation or architecture. Moreover certain components and functionalities can be implemented in hardware and or software. While certain embodiments include software implementations they are not so limited and also encompass hardware or mixed hardware software solutions. Also while certain functionality has been described herein the embodiments are not so limited and can include more or different features and or other functionality. Accordingly the embodiments and examples described herein are not intended to be limiting and other embodiments are available.

As part of the request the browser engine can also communicate information associated with the current viewable space of the browser interface to the server but is not so limited. For example the request can include one or more of a browser configuration display resolution pixel count pixel configuration and or a physical size of the display. In an alternative embodiment based in part on the request and viewable space information the server can operate to provide image size and other information that the browser engine can use in determining which image data to request and or substitute for a web page image to be displayed in the device display .

In another embodiment the browser engine in conjunction with the layout engine can operate to determine the visible space available to display the image and only makes the tag request if it meets the quality of service QOS attributes if provided . At the browser engine receives the viewable web page data from the server based in part on the current viewable space of the browser interface . For example device requests can include 1 providing screen resolution and or other information to the server or other component s when requesting a page or portions thereof 2 all display data 3 data that fits on a requested page and or 4 image s from server or other component s with attributes which information provided in conjunction with the attributes.

At the browser engine determines whether a defined portion of an advertisement is included with the received web page data. For example the defined portion of an advertisement can be an entire image file or a defined percentage of an image file. In an alternative embodiment the browser engine can also determine if advertisement data will be displayed sufficiently to be recognized by the user. The browser engine can also use scrolling resizing and other interactive information to determine if an advertisement is recognizable and or request remaining data associated with a partial advertisement download. If a defined portion of the advertisement is not included with the received web page data at the browser engine can operate to load locally stored advertisement or other display data including leaving blank in the designated location of the web page and not communicate quantification data such as a toll event for example that can be used to charge an associated advertising source. For example the browser engine can issue a toll event when a defined amount of an advertisement is requested and or displayed in the current viewable space of the browser interface wherein the toll event informs the server of the display for assessing an associated charge.

However if a defined portion of the advertisement is included with the received web page data and or displayed in the browser interface at the browser engine can operate to communicate the quantification data for charging an associated advertising source for an ad impression based in part on the defined portion of the advertisement received and or displayed. For example the browser engine can operate to issue a toll event if an entire or defined portion of an advertisement image was requested from the server and or displayed above a certain display size that would be recognizable to a user based in part on the associated device and or browser configurations and characteristics. At the browser engine determines if the viewable space has changed.

For example a user may have scrolled to another location or resized the browser interface or used a zoom feature to change the rendered content size for the entire page. An embodiment can include a zoom in feature with settings 125 150 200 etc. which show less content overall however rendering with larger attributes filling the same display region. Additionally the zoom out feature with settings like 75 65 50 etc. showing more content overall in the display region of the browser interface e.g. rendering with smaller attributes fonts and images . At the browser engine communicates parameters associated with the viewable space change to the server if the viewable space has changed. Otherwise the flow returns to .

At the browser operates to request and or load content associated with the current viewable space of the browser interface wherein the content can include viewable bits of web page and other data such as advertisement data for example. For example a handheld device user may only be able to view a limited portion of a web page due in part to the size of the device and the display architecture. At the browser in conjunction with a layout engine or other component operates to calculate the layout of the current viewable space associated with the viewable bits wherein the layout can include a number of layout measuring objects that are measured against the visible portion of the display. At the browser operates to generate a number of display structures associated with the current viewable space wherein a number of display objects can be associated therewith.

At the browser can operate in conjunction with a display driver or other display device to render the viewable bits e.g. the display objects as pixel data in the current viewable space of the browser interface including the number of display objects. At the browser can detect whether a user has interacted with the browser interface and or requested additional web page data according to a number of user events . For example a user may have scrolled to a previously unviewable part of a web page resized the browser interface or typed in a different URL. These and other actions can drive another evaluation of the visible region and download from the remote site content to provide additional display objects .

At the browser can use scripts and other objects to further browser operations and or provide feedback and other information to other components of the computing environment. For example the browser can use script information generated by a web server to determine if an advertisement image should be downloaded or whether a readily identifiable logo symbol or other source identifier should be pulled from a local cache or other storage local or remote for display in an image placeholder.

Returning to and as part of the operation s at the browser can also operate to load markup information at and or load high priority object data at such as visible images as well as optionally those which reside just outside the visible or current viewable space for example. As part of the operation at the browser can also operate to load content and or markup . At the browser operates to determine an estimated layout associated with the viewable space of the browser interface without having to download all the image payloads only the size e.g. width height etc. of the images is necessary as well as information where the images should be placed as provided by the web page designer for example. As shown in operation also follows the calculate layout operation at .

At the browser operates to load high priority object data which can include content associated with the high priority object data. At the browser operates to load low priority object data such as off screen non advertisement based images e.g. those without a visible quality of service QOS quotient in the associated markup and at determines if further operations associated with the low priority object data should be avoided and or postponed until some subsequent time. While a certain order and number of operations are described with respect to the order and or number of operations and or components can be modified and or reconfigured according to a desired implementation. For example operations can be selectively added removed rearranged etc. according to a desired implementation. Accordingly other embodiments are available.

As part of its downloading operation associated with the request the browser has received viewable bits of an advertisement that are not currently recognizable to determine an advertising source by the user. As described above in an alternative embodiment the browser can operate to substitute a recognizable advertisement or other image in such a situation when requested bits of an image are unrecognizable or require further user interaction. Bandwidth may be allocated inefficiently and download times may increase when an image is designated to be located in an off screen or unviewable region of a display based in part on a web page layout design. In such a situation a server side script can be used to assist in request and download operations. For example a server side script using ASP can include 

The example script can execute on a server to dynamically populate the height width layout attributes to assist the browser with layout using null or secondary images until the designated location becomes visible and or recognizable. The tag can also support alt attributes such as alt ratio 0.50 alt img temp.img for example which informs the browser to substitute a locally stored image until the image is viewed at 50 of the original size. The alt ratio is an example of a quality of service QOS attribute amount of image visible on the display as computed by the ratio of visible pixels vs. total image pixels. Other QOS attributes can include distance from edge proximity to center of the page as well as define the number of pixel rows and or columns or combination thereof which should be visible to create the billable image fetch or toll event.

The ratio can be greater than or equal to the ratio greater than or conversely do not download if less than a certain or less than or equal to the QOS attribute etc. The browser can generate a billable event when the user views the image at 50 or larger ratio and the browser can then fetch the advertisement image or a portion thereof. The server can then issue a billable charge for the billable event to an advertising or other entity. In many current implementations advertisers do not know that their image was actually rendered on the visible portion of the display within the quality of service attributes desired. If the data miser feature is enabled and the QOS attributes configured on the web page the image shown by would not have been downloaded because it did not fit 50 or greater on the screen.

The networked environment can include a secure network such as an enterprise network an unsecure network such as a wireless open network the Internet or some other network or combination of networks. By way of example and not limitation the networked environment can include wired media such as a wired network or direct wired connection and or wireless media such as acoustic radio frequency RF infrared and or other wireless media. Many other configurations of computing devices applications data sources data distribution systems etc. can be employed to implement browsing and other functionality. Moreover the networked environment of is included for illustrative purposes. Embodiments are not limited to the example applications modules devices systems or processes described herein.

Referring now to the following discussion is intended to provide a brief general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with program modules that run on an operating system on a personal computer those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including handheld devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative operating environment for embodiments of the invention will be described. As shown in computing device comprises a general purpose desktop laptop handheld tablet or other type of computer capable of executing one or more application programs. The computing device includes at least one central processing unit CPU a system memory including random access memory RAM read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM .

The computing device further includes a mass storage device for storing an operating system application programs and or other program modules. The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computing device . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed or utilized by the computing device .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing device .

According to various embodiments the computing device may operate in a networked environment using logical connections to remote computers through a network such as a local network the Internet etc. for example. The computing device may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computing systems. The computing device may also include an input output controller for receiving and processing input from a number of input types including a keyboard mouse keypad pen stylus finger speech based and or other means. Other input means are available including combinations of various input means. Similarly an input output controller may provide output to a display a printer or other type of output device. Additionally a touch screen or other digitized device can serve as an input and an output mechanism.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computing device including an operating system suitable for controlling the operation of a networked personal computing device such as the WINDOWS operating systems from MICROSOFT CORPORATION of Redmond Wash. for example. The mass storage device and RAM may also store one or more program modules. The mass storage device or other storage and the RAM may store other application programs or modules including browser application .

The browser application may be a separate application or an integral module of a hosted service application that provides browsing services using computing device . As discussed above browser application can operate to request and or download browser data associated with a current viewable space of a browser interface but is not so limited. The browser application can employ different methods to request and or download browser data associated with a current viewable space. The browser application can also provide tolling data that can be used to monetize advertising and other business activities.

It should be appreciated that various embodiments of the present invention can be implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of a computing system implementing the invention. Accordingly logical operations including related algorithms can be referred to variously as operations structural devices acts or modules. It will be recognized by one skilled in the art that these operations structural devices acts and modules may be implemented in software firmware special purpose digital logic and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims set forth herein.

Although the invention has been described in connection with various exemplary embodiments those of ordinary skill in the art will understand that many modifications can be made thereto within the scope of the claims that follow. Accordingly it is not intended that the scope of the invention in any way be limited by the above description but instead be determined entirely by reference to the claims that follow.

