---

title: Proof of possession for web browser cookie based security tokens
abstract: In one embodiment, a user device  may access a network service  using a secure cookie . A high trust process may create an authentication proof  using a secure key. The high trust process may provide a browsing token  and the authentication proof  to a low trust process to send to an authentication service 
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09521146&OS=09521146&RS=09521146
owner: Microsoft Technology Licensing, LLC
number: 09521146
owner_city: Redmond
owner_country: US
publication_date: 20130821
---
When a browser accesses a website the web site may store a small data set referred to as a cookie with the browser of a user. The website may use the cookie to maintain a record of the state of the website as presented to the user. The website may also use the cookie track a secure session between the user and the website. The website may track the user by receiving reports from other websites that read the cookie of that website in the browser.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Embodiments discussed below relate to accessing a network service using a secure cookie. A high trust process may create an authentication proof in a secure context using a secure key. The high trust process may provide a browsing token and the authentication proof to a low trust process to send to an authentication service.

Embodiments are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the subject matter of this disclosure. The implementations may be a machine implemented method a tangible machine readable medium having a set of instructions detailing a method stored thereon for at least one processor or a network service access client.

A browser operating on a user device may access a secured network service by providing a set of login credentials such as a username and password to an authentication service. The authentication service may then determine if the user has a user account that grants access to a secured network service. The browser may subsequently access the secured network service using a cookie containing a browsing token. The browsing token may alert the authentication service that the user has been previously authenticated. A cookie with a browsing token may be susceptible to theft by a malevolent actor. The malevolent actor may then use the cookie having a browsing token to access the network service. The malevolent actor may then hijack the user account or steal private user data.

The authentication service may protect the user account of the network service by using a secure cookie developed in a secure context on the user device. The authentication service may issue a browsing token to the user device accompanied by a secure key such as a cryptographic key. The secure key may be accessible by a high trust process. A high trust process is a process running in a secure context such as a system context or a secure module. A secure context limits the vulnerability of data or a process by limiting access to the data and the process. A system context is data stored or a process executed at an operating system level privilege. A secure module is a physical device designed to store data or execute processes using protective security features. A low trust context as opposed to the high trust context of the secure context increases the vulnerability of the data or the process but increases the flexibility and usefulness of the data or the process by increasing access. Processes running in a low trust context such as a user context process and most malware may be prevented from accessing the key in a secure context limiting the chances of key theft.

Proving ownership of the browsing token may imply proving possession of the accompanying secure key. The high trust process may perform a time sensitive cryptographic operation using the secure key such as creating an authentication proof. The authentication proof may be a time sensitive signature of the browsing token using the secure key. The secure key may remain in the secure context such as a system context or a secure module. A user context process such as an internet browser may ask a system context process to generate a proof of possession. The user context process may then present the browsing token and the authentication proof in lieu of a username and a password to an authentication service in order to grant the user access to the network service. Although the browsing token and authentication proof together may be stolen and reused on a separate device the quick expiration of the authentication proof may limit the value of such a theft.

Thus in one embodiment a user device may access a network service using a secure cookie. A high trust process such as a system context process may create an authentication proof using a secure key. The high trust process may provide a browsing token and the authentication proof to a low trust process such as a user context process to send to an authentication service. The low trust process may receive the authentication proof created using the secure key in the high trust process. The low trust process may send the browsing token and the authentication proof to access the authentication service.

The user device may implement a user context process such as a browser or an applet to access a network service NET SERV executed on the secure server . A network service is a network based user service such as e mail a social network online banking cloud resource or other online application. Prior to accessing the network service the user device may verify the user with an authentication service AUTH SERV . The authentication service may determine if the user has an account with the network service . The authentication service may be executed on the secure server or may be executed by a physically or logically separate server. The authentication service may use a login credential such as a user name and password biometric identifier or other unique identifier to verify the user.

Once the authentication service has verified the user the authentication service may provide the user device with resources to create a secure cookie to identify a verified user to the network service . To prevent the theft of the secure cookie by a malevolent actor the user device and secure server may use a bifurcated cookie creation process that creates an authentication proof in a secure context to accompany a browsing token. The system context process being a high trust process may present login credentials to the authentication service either when the user context process being a low trust process seeks access to the network service or at any time prior to access of the network service by the user context process . For a protected system context process the login credentials may be the same to access the system context process as to access the authentication service . Alternately the system context process may request login credentials from the user via an application programming interface with the user context process when the user context process seeks to access the network service .

The authentication service may provide the system context process with a browsing token and a secure key. The browsing token is a data set that allows the user to pass the authentication service without resubmission of the login credentials when accompanied by the proper parameters. The system context process may use the secure key to create an authentication proof to accompany the browsing token such as by signing the browsing token with the secure key. Alternately a secure module may store the secure key and use the secure key to create the authentication proof. A secure module is a physical device specifically designed to protect data or a process such as a trusted platform module or smart card. The user context process may create a secure cookie based on the browsing token and the authentication proof.

The authentication service may bind the browsing token to a set of one or more service tokens. A service token represents additional layers of authorization or authentication for a network service . A user may provide further credentials to the authentication service to receive additional service tokens. Alternately a user s login account may be automatically associated with further layers of authorization represented by the service tokens. The authentication service may bind a set of service tokens to the browsing token. The user context process may present the service tokens along with the authentication proof and the browsing token to access additional network services designated by the authentication service .

The processor may include at least one conventional processor or microprocessor that interprets and executes a set of instructions. The memory may be a random access memory RAM or another type of dynamic data storage that stores information and instructions for execution by the processor . The memory may also store temporary variables or other intermediate information used during execution of instructions by the processor . The data storage may include a conventional ROM device or another type of static data storage that stores static information and instructions for the processor . The data storage may include any type of tangible machine readable medium such as for example magnetic or optical recording media such as a digital video disk and its corresponding drive. A tangible machine readable medium is a physical medium storing machine readable code or instructions as opposed to a signal. Having instructions stored on computer readable media as described herein is distinguishable from having instructions propagated or transmitted as the propagation transfers the instructions versus stores the instructions such as can occur with a computer readable medium having instructions stored thereon. Therefore unless otherwise noted references to computer readable media medium having instructions stored thereon in this or an analogous form references tangible media on which data may be stored or retained. The data storage may store a set of instructions detailing a method that when executed by one or more processors cause the one or more processors to perform the method.

The input output device may include one or more conventional mechanisms that permit a user to input information to the computing device such as a keyboard a mouse a voice recognition device a microphone a headset a gesture recognition device a touch screen etc. The input output device may include one or more conventional mechanisms that output information to the user including a display a printer one or more speakers a headset or a medium such as a memory or a magnetic or optical disk and a corresponding disk drive. The communication interface may include any transceiver like mechanism that enables computing device to communicate with other devices or networks. The communication interface may include a network interface or a transceiver interface. The communication interface may be a wireless wired or optical interface.

A secure module interface may interact with a secure module to perform computing functions or store data more securely. A secure module interface may connect to a trusted platform module or a smart card . A trusted platform module is a module that has security features in place to protect data during storing and processing. A smart card is a portable card carried by the user that may protect data during storing and processing.

The computing device may perform such functions in response to processor executing sequences of instructions contained in a computer readable medium such as for example the memory a magnetic disk or an optical disk. Such instructions may be read into the memory from another computer readable medium such as the data storage or from a separate device via the communication interface .

The authentication service may pass a browsing token and secure key package to the system context process . The secure key may remain in the system context. A system context process may use the secure key to create an authentication proof to be passed from the system context process to the user context process as part of a browsing token and authentication proof package . The user context process may then use the browsing token and authentication proof package possibly in the form of the secure cookie to access the network service via the authentication service .

A malevolent actor may attempt a theft of the secure cookie from the user context process . The malevolent actor may send the secure cookie to the authentication service to attempt to access the network service . As the secure cookie has expired and the malevolent actor does not have access to the secure key the authentication service may send a failure notice to the malevolent actor denying access.

The high trust process may create an authentication proof in a secure context using a secure key Block . The high trust process or the authentication service may set an expiration time for the authentication proof . If the authentication proof is to be a single use proof Block the high trust process may limit the authentication proof to a single use Block . Otherwise the high trust process may limit the authentication proof to an expiration time period Block . The high trust process may provide a browsing token and the authentication proof to a low trust process such as a user context process to send to an authentication service to access a network service Block .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms for implementing the claims.

Embodiments within the scope of the present invention may also include computer readable storage media for carrying or having computer executable instructions or data structures stored thereon. Such computer readable storage media may be any available media that can be accessed by a general purpose or special purpose computer. By way of example and not limitation such computer readable storage media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic data storages or any other medium which can be used to carry or store desired program code means in the form of computer executable instructions or data structures. Combinations of the above should also be included within the scope of the computer readable storage media.

Embodiments may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination thereof through a communications network.

Computer executable instructions include for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Computer executable instructions also include program modules that are executed by computers in stand alone or network environments. Generally program modules include routines programs objects components and data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Although the above description may contain specific details they should not be construed as limiting the claims in any way. Other configurations of the described embodiments are part of the scope of the disclosure. For example the principles of the disclosure may be applied to each individual user where each user may individually deploy such a system. This enables each user to utilize the benefits of the disclosure even if any one of a large number of possible applications do not use the functionality described herein. Multiple instances of electronic devices each may process the content in various possible ways. Implementations are not necessarily in one system used by all end users. Accordingly the appended claims and their legal equivalents should only define the invention rather than any specific examples given.

