---

title: Bootstrapping user authentication on devices
abstract: Disclosed are various embodiments that facilitate bootstrapping authentication of a user at a first device using a second device. The second device is authenticated for access to a user account via a first security credential. A second security credential is received by the second device. The second security credential is then sent to the first device. Subsequently, the second security credential is received from the first device, and the first device is authenticated for access to the user account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09397989&OS=09397989&RS=09397989
owner: Amazon Technologies, Inc.
number: 09397989
owner_city: Seattle
owner_country: US
publication_date: 20130703
---
Phishing is a serious computer security problem in which users provide their security credentials financial information and or other personal information to fraudulent applications or network sites. As part of phishing attackers may simulate a legitimate site or application to deceive users into providing their sensitive information. To avoid succumbing to phishing schemes users may rely upon various safeguards to verify the identity of the site or application. For example even if a fraudulent web page otherwise replicates a legitimate web page in every respect the browser may show an inconsistent uniform resource locator URL in the address bar. The user may recognize that the URL does not correspond to the legitimate web page and thereby avoid providing sensitive information.

The present application relates to bootstrapping device authentication via the use of a second device. For example mobile devices are particularly susceptible for use in phishing schemes. Mobile devices such as smartphones may have a relatively limited display area which encourages simplification of user interfaces. However such user interface simplification may omit cues on which users rely for avoiding phishing schemes. For instance mobile browsers may omit or simplify the browser chrome e.g. the window borders address bar menus and so on. Further developers on mobile devices may have access to control the entire user interface thereby allowing attackers to fake an entire browser user interface including a fake address bar.

Various embodiments of the present disclosure facilitate authentication of a user account via a mobile device without the user having to provide trusted security credentials through the mobile device. For example the user may authenticate a user account via a desktop laptop or other computing device and then receive a one time password or token that may be used to access the user account via a mobile device. The one time password or token may be tied to characteristics of the mobile device so as to prevent authorized use via other devices.

In addition to mobile devices the bootstrap authentication approach herein may be employed for kiosks public terminals smart televisions set top boxes and or other devices that may be untrusted or have limited capabilities. In one scenario an account may require two factor authentication that is not supported by a first device. In order to log in to the account via the first device the user may log in using a second device that supports two factor authentication and then use the second device to bootstrap authentication of the first device.

With reference to shown is an example scenario within a networked environment including a computing environment in data communication with a primary client and a bootstrap client according to various embodiments. A user logs into a user account maintained in the computing environment using the primary client . In doing so the user provides one or more trusted credentials to the primary client which may include passwords keys and or other credentials. For example it may be assumed that the primary client includes adequate visual cues within a user interface so as to assure the user that the trusted credentials are being provided to the correct application or network page.

The user may wish to access the same account via the bootstrap client . However the bootstrap client may be a mobile device or may otherwise be unable to provide visual cues or assurances that the user interface corresponds to a legitimate application or network page on which the trusted credentials should be entered. Accordingly it may be unsafe to enter the trusted credentials via a user interface rendered by the bootstrap client . In order to authenticate the bootstrap client bootstraps the authentication via a primary client that may already be authenticated by the computing environment . To this end the primary client that has been authenticated sends a bootstrap request to the computing environment . The computing environment generates a bootstrap credential which is returned to the primary client .

The bootstrap credential is then communicated from the primary client to the bootstrap client which may involve an automated process or a manual process. For instance the primary client may display the bootstrap credential to the user who may then enter the bootstrap credential via a user interface field rendered upon a display of the bootstrap client . Alternatively the primary client may communicate the bootstrap credential to the bootstrap client via a wireless data connection using near field communication NFC Bluetooth Wi Fi etc. The bootstrap client then may authenticate with the computing environment using the bootstrap credential in order to access the user account. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

Referring next to shown is a block diagram of a networked environment according to various embodiments. The networked environment includes a computing environment one or more primary clients and one or more bootstrap clients in data communication via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs personal area networks PANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. Additionally the bootstrap client may be in data communication with the primary client via a communications channel separate from the network e.g. NFC Bluetooth infrared and or other technologies.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that are arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a hosted or cloud computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include an authentication service and other applications services processes systems engines or functionality not discussed in detail herein. The authentication service is executed to authenticate users at the primary clients and bootstrap clients for access to user accounts. In some embodiments the authentication service may serve up network pages that include user interfaces for logging onto user accounts and requesting bootstrap credentials. In other embodiments the authentication service may communicate with applications executed by the primary clients and or bootstrap clients by way of an application programming interface API . The authentication service may correspond to an independent or federated identity provider and or may facilitate a single sign on experience for multiple different systems services etc. operated by one or more organizations.

The data stored in the data store includes for example user account data and potentially other data. The user account data corresponds to data regarding user accounts for multiple users. The user account data may include for example trusted security credentials bootstrap security credentials device identifiers application profile data and or other data. The trusted security credentials may correspond to usernames passwords keys answers to knowledge based questions social security numbers and or other private information. In some cases the trusted security credentials may correspond to long lived security credentials. Such credentials may be expected to persist for at least a predetermined length of time or indefinitely. For instance the trusted security credentials may be assumed to be valid until the user changes them. Alternatively the trusted security credentials may be valid for a month six months or another period of time according to a predefined security policy.

The bootstrap security credentials correspond to security credentials of an ephemeral nature that are used to authenticate bootstrap clients . For example the bootstrap security credentials may include a one time password a personal identification number a token or other types of credentials. The bootstrap security credentials may be relatively less trusted than the trusted security credentials . For example the trusted security credentials may be user defined passwords that are intended to be long lived while the bootstrap security credentials may be automatically generated numerical codes or dictionary words that are valid for a relatively shorter period of time. The bootstrap security credentials may be relatively less trusted because they may be selected for ease of memorization rather than credential strength. The bootstrap security credentials may be valid for a predetermined length of time e.g. an hour a day etc. and or may expire in response to certain events. Non limiting examples of events that may trigger expiration may include a change to applications executed in the bootstrap client a detected physical or network location of the bootstrap client different bootstrap clients using the same bootstrap security credential a change in a network address of the bootstrap client and or other events. The bootstrap security credentials may be generated for specific bootstrap clients and may be invalid for use by other bootstrap clients .

The device identifiers may include unique device identifiers unique software identifiers network addresses media access control MAC addresses serial numbers and or other types of identifiers for bootstrap clients . The device identifiers may be employed in order to generate bootstrap security credentials . A bootstrap security credential may be tied to a particular device identifier so that it is valid only for a particular bootstrap client . The application profile data may describe or profile applications installed upon the bootstrap clients in order to facilitate detecting a change in such applications. For example it may be desired to expire access to a user account via a bootstrap security credential when the content of an application that accesses the user account changes.

The primary client and the bootstrap client are representative of a plurality of client devices that may be coupled to the network . The primary clients and the bootstrap clients may each comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. In one example the primary client may be a desktop device and the bootstrap client may be a mobile device. The primary client may include a display and the bootstrap client may include a display . The displays may comprise for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays electrophoretic ink E Ink displays LCD projectors or other types of display devices etc.

The primary client may be configured to execute various applications such as a client application and or other applications. The client application may be executed in a primary client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . The client application may for example correspond to a browser a mobile application etc. and the user interface may correspond to a network page a mobile application screen etc. The primary client may be configured to execute applications beyond the client application such as for example browsers mobile applications email applications social networking applications and or other applications.

The bootstrap client may be configured to execute various applications such as a client application and or other applications. The client application may be executed in a bootstrap client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . The client application may for example correspond to a browser a mobile application etc. and the user interface may correspond to a network page a mobile application screen etc. The bootstrap client may be configured to execute applications beyond the client application such as for example browsers mobile applications email applications social networking applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a user employs a primary client to authenticate using trusted security credentials for access to resources associated with a user account. For example the user provides a username and password to the authentication service by filling out a form in a network page. The user is reassured that the network page is legitimate due to browser chrome and or other visual cues.

Subsequently the user may wish to gain access via a mobile device or other bootstrap client . Unlike the primary client the bootstrap client may be more susceptible to phishing attacks due to the control given to developers over the user interface the lack of browser chrome and or other factors. It may be the case that an attacker could completely fake a user interface on the bootstrap client . These issues may weigh against providing trusted security credentials via the bootstrap clients .

To provide access to the bootstrap client a bootstrap security credential is requested via the primary client that has already been authenticated. The bootstrap security credential is thus generated and returned to the primary client . The primary client communicates the bootstrap security credential to the bootstrap client via manual user entry quick response QR or other machine readable code wireless data transmission or other approaches. The bootstrap client is thereby able to authenticate with the authentication service for access to the user account with the bootstrap security credential . It is noted that the trusted security credentials need not be provided by the bootstrap client in order to authenticate.

Device identifiers may be used in order to prevent usage of a bootstrap security credential by non authorized devices. For example a device identifier may be generated by a bootstrap client communicated to the primary client and onto the authentication service . The bootstrap security credential may be generated based at least in part on the device identifier and or otherwise associated with the device identifiers such that bootstrap clients lacking access to the device identifier are unable to authenticate using the bootstrap security credential . Public key encryption utilizing the device identifiers may be used for signing the bootstrap security credential or performing other functions for verification of the bootstrap clients .

In contrast to the trusted security credentials the bootstrap security credentials may be short lived or temporary. For example authenticated sessions using the bootstrap security credentials may expire after 30 minutes. By contrast authenticated sessions using the trusted security credentials may last longer or even indefinitely. This difference may ensure close proximity between the primary client and the bootstrap client . In one embodiment the bootstrap security credentials may expire or have limited use based at least in part on the location of the bootstrap clients . For example if the bootstrap security credentials are initially requested for use at a certain location the bootstrap security credentials may be unusable more than a half mile from that location.

Such functionality may be especially useful in the context of stationary devices such as televisions which may be expected to remain in the same location for a relatively long period of time. For example if a television is moved it may be the case that it was sold which may be a good reason to expire the bootstrap security credentials . Subsequent bootstrapping may be necessary to continue authenticated account access for the bootstrap client . Otherwise access to the user account by the bootstrap client may be disabled. Alternatively the user of the bootstrap client may be prompted to confirm whether the authentication period should be renewed or revoked prior to a tentative expiration of the access granted in the authentication period.

As client applications request additional or different security privileges subsequent bootstrapping may be necessary. Further the code underlying the client application may change and this may prompt subsequent bootstrapping. For example a web application may be self updating and the updated code may not correspond to stored application profile data . In response to such changes to applications the bootstrap client may need to be bootstrapped again.

In one embodiment a bootstrap client once authenticated may be employed to bootstrap the authentication of other bootstrap clients in like manner. For example once a user s smartphone is authenticated via bootstrapping the smartphone may then be considered a trusted device. Subsequently the user may use the smartphone to bootstrap the authentication of a tablet.

In one embodiment the client application may be configured to bootstrap any bootstrap client connected to the primary client via a private or trusted network e.g. a home Wi Fi network . Such bootstrapping may be done automatically or subject to user approval of the particular bootstrap client via the client application . A network may be considered trusted for example when the devices connected to the network are in close proximity to the user such as with a home network .

In some scenarios different classes of resources may be made available to clients depending on how they are authenticated. For example a primary client authenticated with trusted security credentials may be given a higher level of access to resources of a user account as compared to a bootstrap client . Further the method used to bootstrap a bootstrap client may also impact which classes of resources are made available. For example manual bootstrapping via manual code entry may be considered more trustworthy than automatic bootstrapping via a private wireless network . Similarly automatic bootstrapping with a manual approval process may be considered more trustworthy than purely automatic bootstrapping.

Techniques relevant to bootstrapping authentication may be found in U.S. patent application Ser. No. 13 546 626 entitled TRUSTWORTHY INDICATION OF SOFTWARE INTEGRITY and filed on Jul. 11 2012 and U.S. patent application Ser. No. 13 746 719 entitled SCALABLE ACCOUNT STATUS MANAGEMENT and filed on Jan. 22 2013 both of which are incorporated herein by reference in their entirety.

Referring next to shown is one example of a user interface rendered by a client application executed in a primary client in the networked environment according to one embodiment. Specifically the client application is a browser that is rendering a network page served up by the computing environment . The network page facilitates authentication with the authentication service in order to access resources associated with a user account of an online retailer. A username field is provided in order for the user to enter a username a password field is provided in order for the user to enter a password and a submit component is provided to submit the username and password to the authentication service via the network .

In this example the user has filled in username jsmith123 in the username field and a password in the password field . The username and password correspond to trusted security credentials of the user account. In some scenarios the username and password may be stored in the primary client and automatically populated. Alternatively a cookie may be stored in the primary client that facilitates automatic login. Biometric data private keys answers to knowledge based questions and so on may be used in addition to or in place of username and password in some embodiments.

Various elements of browser chrome are present in the user interface to reassure the user that the network page corresponds to a legitimate site. To this end an address bar may show the uniform resource locator URL corresponding to the site and a lock icon may indicate the use of secure sockets layer SSL or another form of encryption. Window framing scroll bars menu bars taskbars and so on may also be present to assure the user that the user interface was indeed generated by the browser. Thus the user may confidently supply the trusted security credentials .

Turning now to shown is one example of a user interface rendered by a client application executed in a primary client in the networked environment according to one embodiment. Specifically the client application is a browser that is rendering a network page served up by the computing environment . The network page facilitates requesting bootstrap security credentials from the authentication service . The network page indicates at label that the user account for John Smith has been successfully authenticated.

A request component is provided in order to submit a request for a bootstrap security credential . In this example a device identifier field is provided in order for the user to specify a particular device identifier for which the bootstrap security credential is to be generated. In this case the user has entered the device identifier of 98765. In other examples it may be that no device identifier is necessary. In some cases no explicit request for the bootstrap security credentials may be necessary. For example the bootstrap security credentials may be automatically downloaded to or preexisting in the primary client .

Moving on to shown is one example of a user interface rendered by a client application executed in a primary client FIG. in the networked environment according to one embodiment. Specifically the client application is a browser that is rendering a network page served up by the computing environment . The network page facilitates receiving bootstrap security credentials from the authentication service . To this end the network page presents a bootstrap security credential of 43210 and a site verification credential of RecumbentVanilla. The user can view the site verification credential to ensure that the network site accessed by the primary client and the bootstrap client is the same in other words that both show the same site verification credential .

Continuing to shown is one example of a user interface rendered upon a display by a client application executed in a bootstrap client in the networked environment according to one embodiment. The user interface allows the user to sign in to the same user account in as the examples of through the use of a bootstrap security credential .

To this end the user interface includes a bootstrap code field and a submit component . In the bootstrap code field the user has entered the bootstrap security credential of 43210. The site verification credential is present to assure the user that the user interface corresponds to the same network site as that accessed in the example of . The device identifier may be shown in order for the user to populate the device identifier field . The device identifier in this example is 98765 which is the same as that entered in the device identifier field . The device identifier may be generated by the client application or received from the authentication service . Upon entering the bootstrap security credential the authentication service may authenticate the bootstrap client thereby permitting the client application and or other applications in the bootstrap client to access resources associated with the user account.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the authentication service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the authentication service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the authentication service receives an authentication request specifying one or more trusted security credentials from a primary client . In box the authentication service authenticates the primary client for access to a user account based at least in part on the trusted security credentials . For example the authentication service may calculate a hash value from a password obtained from the primary client and compare the hash value with a stored hash value corresponding to the trusted security credentials to determine whether they match.

In box the authentication service receives a bootstrap request from the primary client . In box the authentication service generates a bootstrap security credential in response to the bootstrap request. Where the bootstrap request specifies a particular device identifier the bootstrap security credential may be generated based at least in part on the particular device identifier or the bootstrap security credential may be associated with the particular device identifier . In box the authentication service sends the bootstrap security credential to the primary client . In other embodiments the bootstrap security credential may be embedded in the primary client and may be unlocked or authorized for use by the action of the authentication service .

In box the authentication service receives an authentication request that specifies the bootstrap security credential from the bootstrap client . In box the authentication service authenticates the bootstrap client based at least in part on the bootstrap security credential . Additionally the authentication service may ensure that a device identifier associated with the bootstrap client corresponds to the particular bootstrap security credential to ensure that the bootstrap security credential is not being used by an unauthorized device. In box the authentication service may optionally provision a trusted security credential to the bootstrap client that has been authenticated. Thereafter the portion of the authentication service ends.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the client application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the client application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the primary client according to one or more embodiments.

Beginning with box the client application renders a login user interface such as that shown in . In box the client application receives trusted security credentials . The trusted security credentials may be input by a user. Alternatively the trusted security credentials may be stored or embedded in the primary client and loaded automatically by a credential manager. In box the client application sends the trusted security credentials to the authentication service within an authentication request. Subsequently the authentication service authenticates the primary client for access to resources associated with the user account.

In box the client application renders a bootstrap user interface such as that shown in . In box the client application receives a device identifier for the bootstrap client . For example a user may fill out a form field in the bootstrap user interface the primary client may capture a quick response QR code rendered by the bootstrap client or the primary client may learn of the device identifier by other wireless approaches. In box the client application sends a bootstrap request to the authentication service . The bootstrap request may specify the device identifier .

In box the client application receives a bootstrap security credential from the authentication service . In box the client application renders the bootstrap security credential in a user interface . Alternatively the client application may communicate the bootstrap security credential to the bootstrap client via QR code captured with a camera encoded audio captured with a microphone wired or wireless data connection or another approach. In some cases the client application may also receive a site verification credential and render this code within the user interface . Thereafter the portion of the client application ends.

Moving on to shown is a flowchart that provides one example of the operation of a portion of the client application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the client application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the bootstrap client according to one or more embodiments.

Beginning with box the client application renders a bootstrap login user interface such as that shown in . In box the client application may generate and or retrieve a device identifier and present the device identifier within the user interface . In box the client application receives a bootstrap security credential . For example a user may manually fill out a form field with the bootstrap security credential obtained from the primary client . Alternatively the client application may obtain the bootstrap security credential by way of a QR code rendered by the primary client or through a wireless data connection with the primary client .

In box the client application authenticates with the authentication service using the bootstrap security credential for access to the user account. In box the client application determines whether re bootstrapping is needed. In other words the client application determines whether it is necessary to authenticate again with the authentication service using a new bootstrap security credential . Re bootstrapping may be called for after a predetermined time period expires or in response to detecting a certain event such as a change to application code or change in security privileges granted to an application as determined through the application profile data . If re bootstrapping is called for the client application returns to box . Otherwise the portion of the client application ends.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the authentication service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the authentication service the client applications and and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the authentication service the client application and the client application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the authentication service and the client applications and that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

