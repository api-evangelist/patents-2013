---

title: Control and capture of audio data intended for an audio endpoint device of an application executing on a data processing device
abstract: A method includes implementing an audio framework to be executed on a data processing device with a virtual audio driver component and a User Mode Component (UMC) communicatively coupled to each other. The virtual audio driver component enables modifying an original default audio endpoint device of an application executing on the data processing device to an emulated audio device associated with a new audio endpoint in response to an initiation through the application in conjunction with the UMC. The virtual audio driver component also enables registering the new audio endpoint as the modified default audio endpoint with an operating system executing on the data processing device. Further, the virtual audio driver component enables capturing audio data intended for the original default audio endpoint device at the new audio endpoint following the registration thereof to enable control of the audio data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152374&OS=09152374&RS=09152374
owner: NVIDIA Corporation
number: 09152374
owner_city: Santa Clara
owner_country: US
publication_date: 20130617
---
This disclosure relates generally to audio data capturing and more particularly to a method a device and or a system of control and capture of audio data intended for an audio endpoint device of an application executing on a data processing device.

A data processing device e.g. a desktop computer a laptop computer a notebook computer a netbook a mobile device such as a mobile phone may execute multiple applications thereon. In a shared mode of multiple applications sharing an audio endpoint device e.g. a speaker headphones it may be possible to capture audio data e.g. an audio stream to the audio endpoint device through for example an audio framework executing on the data processing device. However a gaming application may have exclusive access to the audio endpoint device. In this exclusive mode of operation it may not be possible to capture audio data streams associated with the gaming application.

Disclosed are a method a device and or a system of control and capture of audio data intended for an audio endpoint device of an application executing on a data processing device.

In one aspect a method includes implementing an audio framework to be executed on a data processing device with a virtual audio driver component and a User Mode Component UMC communicatively coupled to each other. The data processing device includes a processor communicatively coupled to a memory. The method also includes modifying through the virtual audio driver component an original default audio endpoint device of an application executing on the data processing device to an emulated audio device associated with a new audio endpoint in response to an initiation through the application in conjunction with the UMC.

Further the method includes registering through the virtual audio driver component the new audio endpoint as the modified default audio endpoint with an operating system executing on the data processing device and capturing through the virtual audio driver component audio data intended for the original default audio endpoint device at the new audio endpoint following the registration thereof to enable control of the audio data.

In another aspect a non transitory medium readable through a data processing device and including instructions embodied therein that are executable through the data processing device is disclosed. The non transitory medium includes instructions to implement an audio framework to be executed on the data processing device with a virtual audio driver component and a UMC communicatively coupled to each other. The data processing device includes a processor communicatively coupled to a memory. The non transitory medium also includes instructions to modify through the virtual audio driver component an original default audio endpoint device of an application executing on the data processing device to an emulated audio device associated with a new audio endpoint in response to an initiation through the application in conjunction with the UMC.

Further the non transitory medium includes instructions to register through the virtual audio driver component the new audio endpoint as the modified default audio endpoint with an operating system executing on the data processing device and instructions to capture through the virtual audio driver component audio data intended for the original default audio endpoint device at the new audio endpoint following the registration thereof to enable control of the audio data.

In yet another aspect a data processing device includes a memory a processor communicatively coupled to the memory and an audio framework executing on a computing platform provided through the processor and the memory. The audio framework is implemented with a virtual audio driver component and a UMC communicatively coupled to each other. The virtual audio driver component is configured to enable modifying an original default audio endpoint device of an application executing on the data processing device to an emulated audio device associated with a new audio endpoint in response to an initiation through the application in conjunction with the UMC and registering the new audio endpoint as the modified default audio endpoint with an operating system executing on the data processing device.

Also the virtual audio driver component is configured to enable capturing audio data intended for the original default audio endpoint device at the new audio endpoint following the registration thereof to enable control of the audio data.

The methods and systems disclosed herein may be implemented in any means for achieving various aspects and may be executed in a form of a non transitory machine readable medium embodying a set of instructions that when executed by a machine cause the machine to perform any of the operations disclosed herein.

Other features will be apparent from the accompanying drawings and from the detailed description that follows.

Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.

Example embodiments as described below may be used to provide a method a system and or a device of control and capture of audio data intended for an audio endpoint device of an application executing on a data processing device. Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments.

In one or more embodiments data processing device may include a number of audio endpoint devices e.g. speakers headphones earphones related to one or more application s executing thereon. Audio endpoint devices may be interfaced with a soundcard coupled to system bus interfaced with a peripheral bus or Input Output I O bus Universal Serial Bus USB may be an example peripheral bus or coupled to data processing device through a computer network . shows one or more audio endpoint devices of all of the aforementioned types. Other forms of audio endpoint devices applicable to the concepts to be discussed herein are within the scope of the exemplary embodiments.

In one or more embodiments data processing device may have an audio framework e.g. a software framework executing thereon. The audio framework may simply tasks related to handling audio data in data processing device and or audio data over computer network . The tasks may be simplified through easing audio capturing and playback. Audio frameworks are well known to one skilled in the art. Detailed discussion associated therewith therefore has been skipped for the sake of convenience clarity and brevity.

In the case of audio endpoint devices being interfaced with soundcard two modes of operation may be relevant viz. shared mode and exclusive mode. In the case of the shared mode multiple applications e.g. applications shown as being stored in memory executing on data processing device may share use of an audio endpoint device . For example a speaker of a mobile phone an example data processing device may be utilized during an alarm notification an incoming call notification AND audio music rendering. In the case of the exclusive mode an application may have exclusive use of audio endpoint device during capturing of audio data e.g. audio stream and or rendering thereof. For example a gaming application example application may be associated with an exclusive mode audio data stream.

In one or more embodiments data processing device may execute an operating system thereon. shows operating system as being part of memory . In the case of a Windows operating system example operating system an application may be allowed to capture data from a shared mode audio data stream but not an exclusive mode audio data stream. There exist scenarios where a user of data processing device may wish to capture audio data e.g. shown as part of memory memory here may be a volatile memory to an audio endpoint device e.g. headphones speaker external device . Although the shared mode of operation may enable capturing audio data a desired audio endpoint device may not support a data format e.g. an uncompressed Linear Pulse Code Modulation LPCM based format a Dolby Digital based format a Dolby TrueHD based format of audio data .

In one or more embodiments audio framework may be implemented with a virtual audio driver component and a user mode component UMC . In one or more embodiments virtual audio driver component may enable abstracting an audio device in other words virtual audio driver component may enable mimicking an audio device to be presented to operating system and registering an audio endpoint associated therewith with operating system . Then in one or more embodiments virtual audio driver component may enable setting up a data buffer associated with virtual audio device to receive audio data from an application e.g. a gaming application said data buffer may be shared with UMC .

In one or more embodiments UMC may expose one or more Application Programming Interface s API s to application . In one or more embodiments application may utilize UMC to request virtual audio driver component to register the desired audio endpoint with operating system . In one or more embodiments application may have a default audio endpoint device associated therewith. In one or more embodiments virtual audio driver component may therefore modify default audio endpoint device to the emulated audio device associated with audio endpoint in other words the default audio endpoint may be modified . In one or more embodiments virtual audio driver component may further enable redirection of audio data from audio endpoint to a new desired audio endpoint device e.g. based on modifying identifier data associated with emulated audio device audio endpoint to the new desired audio endpoint device .

In one or more embodiments as data buffer is shared with UMC UMC may be capable of processing audio data therein as per the request of application . For example audio data may be redirected to the new desired audio endpoint device as discussed above. Also audio data may be converted e.g. utilizing processor into an appropriate data format compatible with the new desired audio endpoint device and or the original default audio endpoint device scenarios may be envisioned in which audio data is incompatible with the original default audio endpoint device . Thus in one or more embodiments UMC may serve as an interface to utilize functionalities provided through audio framework .

In one or more embodiments the capability to modify the default audio endpoint device may not necessarily preclude an original default audio endpoint device from having audio data rendered thereon. In one or more embodiments UMC may also enable routing audio data back to the original default audio endpoint device . This may enable maintaining an experience of user on data processing device while still redirecting audio data to the new desired audio endpoint device . Further in one or more embodiments the redirection of audio data to the new desired endpoint device discussed above may be performed when the original default audio endpoint device does not support a data format of audio data . Other scenarios are also within the scope of the exemplary embodiments discussed herein.

Here when audio data is being rendered by application an audio stream may be opened in virtual audio driver component and data buffer set up to receive a stream of audio data therein. Data buffer may then be shared with UMC . UMC may also open an audio stream at the original default audio endpoint device . As data buffer is mapped to UMC a chunk of data therein may be placed in a data buffer associated with the original default audio endpoint device . Now the consumption of the placed chunk of data by the original default audio endpoint device may trigger a notification to UMC through virtual audio driver component thus more data may be consumed from data buffer . Virtual audio driver component may in turn report the notification events to operating system .

In one or more embodiments the entire capturing process may be transparent to an end user e.g. user the final audio output may come from a same audio endpoint device as before the start of the audio capturing process. The control and capture of audio data to any audio endpoint device may be made possible through the exemplary embodiments discussed herein. Further the control and capture of both shared mode audio streams AND exclusive mode audio streams may be possible through the exemplary embodiments discussed herein. Last but not the least format conversion of audio data may be enabled through the exemplary embodiments discussed herein based on the capture thereof.

In one or more embodiments instructions associated with audio framework and or one or more components thereof may be tangibly embodied on a non transitory medium e.g. a Compact Disc CD a Digital Video Disc DVD a Blu ray disc a hard drive appropriate instructions may be downloaded to the hard drive readable through data processing device . Also in one or more embodiments the aforementioned instructions may be packaged with operating system and or an application executing on data processing device . All reasonable variations are within the scope of the exemplary embodiments discussed herein.

In one or more embodiments operation may involve registering through virtual audio driver component new audio endpoint as the modified default audio endpoint with operating system . In one or more embodiments operation may then involve capturing through virtual audio driver component audio data intended for the original default audio endpoint device at new audio endpoint following the registration thereof to enable control of audio data .

Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example the various devices and modules described herein may be enabled and operated using hardware circuitry e.g. CMOS based logic circuitry firmware software or any combination of hardware firmware and software e.g. embodied in a non transitory machine readable medium . For example the various electrical structures and methods may be embodied using transistors logic gates and electrical circuits e.g. application specific integrated ASIC circuitry and or Digital Signal Processor DSP circuitry .

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a non transitory machine readable medium and or a machine accessible medium compatible with a data processing system e.g. data processing device . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

