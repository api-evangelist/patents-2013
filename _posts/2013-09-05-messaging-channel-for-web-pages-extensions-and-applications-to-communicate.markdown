---

title: Messaging channel for web pages, extensions, and applications to communicate
abstract: A web page itself, unmodified by any injected content script, may communicate with installed extensions or installed packaged applications. A web page initiates a request for a browser extension or a web application via a messaging channel provided by the web browser. A system determines if a URL of the web page matches a pattern specified by a manifest file of the browser extension or the web application, and sends the request to a browser extension or a web application if the URL of the web page matches the pattern.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342386&OS=09342386&RS=09342386
owner: Google Inc.
number: 09342386
owner_city: Mountain View
owner_country: US
publication_date: 20130905
---
This application generally relates to web technology and more particularly to message passing between web pages browser extensions and web applications.

Web browsers implemented on a web enabled computing device allow users to access all kinds of content. Web browsers are configured to read programmatic code and render that code as web pages which may include rendering both audio and visual content contained in various media files e.g. image video and audio files as well as performing other functions defined in the programmatic code. Web pages are generally implemented using programming languages such as HTML including HTML5 CSS and JavaScript among a number of other available programming languages.

Some browsers allow users to install add ons or extensions to the browser where such extensions add functionality to the browser and operate as an integrated part of the browser. For instance an extension may provide a user access to its additional functionality by modifying a user interface UI of the browser. As an example a weather forecast extension may be added to a browser where the extension provides easy access to weather information by adding an icon or a button to the UI of the browser. A user may then interact with the extension s button or icon e.g. by clicking it or hovering over it with a pointing device to obtain weather information rather than having to browse to a weather related web page in order to obtain weather information.

Browser extensions may be implemented using programmatic code that is written using the same programming languages that are used for implementing web pages such as JavaScript. From a browser s perspective extensions effectively function as web pages that are an integrated part of the browser once they are installed. By installing extensions that are of interest to him or her a user can effectively create a custom browser that includes the functionality of the extensions they choose to install.

Web applications are bundled applications that a user downloads which may be used to perform some functionality for the user.

It may be useful for web pages extensions and web applications to exchange messages while maintaining a user s privacy and security.

A web page itself unmodified by any injected content script may communicate with installed extensions or installed packaged applications. A system allows web pages to send messages to web applications or browser extensions using a messaging channel. Web applications can also use the messaging channel to communicate directly with other web applications browser extensions or web pages.

In one implementation a web page initiates a request for a browser extension or a web application via a messaging channel provided by the web browser. A method determines if a URL of the web page matches a pattern specified by a manifest file of the browser extension or the web application and sends the request to a browser extension or a web application if the URL of the web page matches the pattern.

Other implementations of this aspect include corresponding systems apparatus and computer programs configured to perform the actions of the methods encoded on computer storage devices.

In another implementation a method includes automatically detecting via an installed web application an input from a peripheral device connected to a computing device automatically uploading the input to a web page sending a message from the web page via a messaging channel to the installed web application receiving a response to the message via the messaging channel and authenticating a user to the webpage using the response. The peripheral device may be for example a USB security device.

Other implementations of this aspect include corresponding systems apparatus and computer programs configured to perform the actions of the methods encoded on computer storage devices.

In another implementation means for automatically detecting an input from a peripheral device connected to a computing device are provided. Means for automatically uploading the input to a web page are provided. Means for sending a message from the web page via a messaging channel to the installed web application and means for receiving a response to the message are provided. Means for authenticating a user to the webpage using the response are provided.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings and from the claims.

A system and method for message passing between web pages extensions and web applications substantially as shown in or described in connection with at least one of the figures is set forth more completely in the claims.

A web browser executed by a client device can receive code e.g. HTML code from a remote server e.g. a remote server that hosts a website and can execute the received code on the client device for the benefit of a user of the client device.

In various implementations the web browser may include or have installed one or more web applications. In this context a web application may be configured to perform a single task or multiple tasks for a user. In such an implementation the web application may be configured to be executed or interpreted by the web browser. Thus web applications can be run inside a browser with a dedicated user interface and may provide functionality and an experience that is more rich and interactive than a standalone website but are less cumbersome and monolithic than a desktop application. Examples of web applications include games photo editors and video players that are run inside the browser.

Web applications can be hosted web applications or packaged web applications. Hosted web applications can grant a small number of additional permissions to a specific website such as the ability to use more than the normal quota of temporary storage space use geolocation features without additional confirmation prompts beyond a single install time one and the ability to always have a hidden page open which is performing tasks such as synchronizing data for offline use or receiving server pushed notifications to display to the user. They also get special treatment in a user interface in that they may be shown with a large icon that can be clicked to launch the application either in a tab or in a standalone possibly full screen window.

Installable web applications are a way of making a browser treat certain websites like applications. Many installable web applications are hosted web applications with extra metadata such as a small manifest file that describes the application . Packaged web applications are a type of installable web applications. Packaged applications can be thought of as web applications whose code is bundled so that the user can download all of the content of the web application for execution by the browser or in a standalone window. A packaged web application may not need to have network access to perform its functionality for the user and rather may be executed successfully by the browser locally on the computing device without access to a network. Packaged web applications have the option of using extension application programming interfaces APIs allowing packaged apps to change the way the browser behaves or looks. In some cases packaged web applications may operate without appearing to run in a browser e.g. without the browser chrome tabs or other user interface of the browser. In such a case the packaged web applications would operate in a standalone window without access to content scripts or APIs related to browser state such as cookies history bookmarks open tabs etc. In various cases packaged web applications may access USB drives BLUETOOTH devices open raw network sockets act as servers or access the local filesystem as examples.

In various examples the web browser may include or be configured to interact with one or more browser extensions. In this context a browser extension may include one or more web pages packaged or grouped together as a definable whole and configured to extend the functionality to the web browser. As described herein browser extensions are small software programs that can modify and enhance the functionality of a web browser. They may be written using web technologies such as HTML JavaScript and CSS. Extensions may have little or no user interface. In some implementations extensions may provide a small user interface icon or other user interface that may modify a browser s chrome which is defined herein to include an area outside of a webpage displayed in the browser such as the borders of a web browser window which include the window frames menus toolbars and scroll bars . Selecting the icon or the other user interface may activate the functionality of the extension within the browser.

Thus browser extensions also provide extra functionality to a browser but generally unlike web applications there is little or no user interface component to the functionality provided by an extension. Instead browser extensions extend the functionality of the browser and the websites being viewed in it. For example browser extensions can extend the functionality of the browser by adding a new button to the address bar such as an ever present currency converter. Buttons like this can also apply to the current website being viewed for example clicking the currency converter button can convert all prices on the website presented to a user into a currency chosen by the user. In another example an extension can be installed so that when a user hovers a cursor over a thumbnail image on a webpage executed by a browser a larger size version of the image is displayed until the user moves the cursor away from the image. In another example and extension may be installed to embed a mail this button next to every link in every page.

Extensions may modify websites for example to block advertisements to increase a zoom level on pages or read strings of text and pass those to a text to speech engine for a blind user. A developer may want injected code from an extension to communicate to the rest of the extension. For example an extension may remove all images from a news website. The extension may establish a communication channel back to the rest of the extension running in its own process in the browser using a content script. Because content scripts run in the context of a web page and not the extension they often need some way of communicating with the rest of the extension. For example an RSS reader extension might use content scripts to detect the presence of an RSS feed on a page then notify the background page in order to display a page action icon for that page. Communication between extensions and their content scripts works by using message passing. Either side can listen for messages sent from the other end and respond on the same channel. A message can contain any valid object e.g. a JSON object such as null boolean number string array or object .

 Packaged web applications in contrast to browser extensions may look and feel like regular web applications with a big screen design and rich user interface. Both extensions and packaged web applications may bundle all their files into a single file that a user downloads and installs. This bundling means that unlike ordinary web applications extensions and packaged web applications do not need to depend on content from the web. Browser extensions packaged web applications and installable web applications may be distributed via a trusted web store or via individual websites.

The extension may include a manifest file . The web application may also include a manifest file and at least one web page . The web page is different from the web page . The manifest file and the manifest file may include metadata describing the extension or web application such as a name version title description permissions etc. and may be in a JSON or other format.

As discussed in more detail below with respect to an extension or web application can receive and respond to messages from regular web pages if it has specified in its manifest file which web sites it can communicate with or receive messages from. This may expose the messaging channel to for example any web page which matches the URL patterns specified in the manifest file of the browser extension or web application.

A web page itself unmodified by any injected content script may communicate with installed extensions or installed packaged applications. Advantages of this approach include for example that extensions do not have to inject a content script which can be a security and a privacy benefit for users. Instead of users needing to grant the extension the ability to read and modify the content of all web pages the content script would be injected into it instead passively can wait for websites that opt in to connect to the extension. Moreover the web page itself can communicate with an installed packaged application that operates in a standalone window.

The messaging channel may operate as one or more public messaging application programming interface s API that is configured to mediate messages and that allows for communication between the web page and one or more of the extension or the web application for example. The messaging channel may also operate to mediate messages exchanged between two web applications or between a web application and an extension. The API s may be synchronous or they may be asynchronous such that they return immediately without waiting for the operation to finish. While only one extension one web application and one web page are shown and described in it will be appreciated that additional extensions web pages messaging channels or web applications may be implemented in the browser and the techniques described herein would apply equally to those additional extensions or applications.

As shown in a declaration may be included in a manifest file of a web application or a browser extension. The declaration may include one or more URL patterns. The example includes a pattern for . .example.com which may be a second level domain rather than a top level domain. For example in example.com example is the second level domain of the .com top level domain.

The code may be used to send a message to an extension or web application. The code may include an identifier for the extension the web page wants to message which may be a unique alpha numeric string for example. The code may also include at least one request. In this example the code includes a request to open a URL in an editor. If there is an error the web page may handle the error. In some examples only the web page can initiate a request for communication.

As one example a user inputs a graphic card into a desktop computer. The computer using an installed web application may automatically detect the photos and automatically upload the photos to a photo storage website. The website may use a messaging channel to communicate with the installed web application. For example the website may query the installed web application using the messaging channel to see if the installed web application is installed for a particular user. The website may receive a response via the messaging channel that the application is installed. Upon determining that the web application is installed the website may prevent certain promotional advertisements related to photo storage from being displayed to the user such as install this photo web application because the user has already installed the photo web application . As another example the website may select other more appropriate custom advertisements for presentation to the user.

As yet another example a photo storage website may be notified by an installed web application that some photos are pending upload on the local device and the website may prompt the user to upload the photos via the website when the user accesses the website.

As yet another example a user may utilize a USB connected 2nd factor security device that is registered with a website s back end account system. During a login process for that website the login webpage can try sending a message to a locally installed application that communicates with the USB security device to perform cryptographic operations and return a result to the webpage. The result can be submitted to a server e.g. by the webpage along with the username password combination e.g. entered by a user . The process may serve as a stronger authentication mechanism for websites. In some implementations the result can be used to determine a level of access for the user for example in combination with the username password combination.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provided in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provided as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor which may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

