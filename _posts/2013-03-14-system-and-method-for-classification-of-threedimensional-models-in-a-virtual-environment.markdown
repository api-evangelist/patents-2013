---

title: System and method for classification of three-dimensional models in a virtual environment
abstract: A method for classification of three-dimensional structures in a virtual environment includes identifying a plurality of polygons in a structure located in a virtual environment, identifying a plurality of surface normals, each surface normal corresponding to one polygon in the plurality of polygons that are in the structure, identifying a variance of a distribution of the plurality of surface normals, generating a first classification for the structure in response to the variance being less than a predetermined threshold, and generating a graphical display of the structure with at least one visual aspect of the structure being modified with reference to the first classification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09196088&OS=09196088&RS=09196088
owner: Robert Bosch GmbH
number: 09196088
owner_city: Stuttgart
owner_country: DE
publication_date: 20130314
---
This disclosure relates generally to the field of computer graphics and more specifically to systems and methods that display three dimensional graphics.

Many modern software applications display three dimensional representations of structures and scenes as part of a user interface. Three dimensional 3D graphics are used in a wide range of applications including video games simulations virtual reality applications geospatial information applications and applications for mapping and navigation. In many applications 3D graphics are more useful than two dimensional 2D graphics at depicting real world environments and locations because the normal interaction between humans and the real world occurs in three dimensions.

In one form of 3D graphics different objects in a scene are formed from a large number of polygons. The polygons form shapes and structures in a 3D scene. Since most computing devices only display graphics with a two dimensional display the 3D graphics are converted into a rasterized array of two dimensional pixels for display. The 2D display depicts portions of the three dimensional scene in a manner similar to how a camera takes a two dimensional photograph of 3D scenes in the real world. Many 3D graphics systems and application programming interfaces APIs which include the Open Graphics Library OpenGL and the Direct 3D APIs provide common structures and interfaces to specialized graphics hardware for generation of 3D images in an efficient manner. The 3D software interacts with general purpose and specialized digital computing hardware that generates the 3D graphics in an efficient manner. In particular graphical processing units GPUs are hardware components that are configured to generate polygons and other graphical effects that form a 3D scene. Modern computing devices typically execute software with a combination of instructions for a central processing unit CPU and a GPU to generate the 3D scene and enable interaction with the 3D scene in some software applications. In some hardware embodiments the functionality of the CPU and GPU are merged together physically and optionally logically into a single system on a chip SoC device.

Some 3D software applications are used to model virtual environments that correspond to real world environments. For example mapping and navigation applications produce 3D graphical depictions of a geographic region to assist a user in finding a point of interest or navigating to a destination. The 3D environment includes a large number of objects that represent real world structures including natural landmarks roads buildings and other man made structures. In addition to displaying the 3D objects in the virtual environment the mapping and navigation applications often provide additional information about the objects in the environment. For example mapping and navigation applications often highlight roads and display road names or numbers to assist in navigation. Mapping programs often display names and links to websites for points of interest around the map. Many devices that display 3D virtual environments are also connected to external databases through data networks such as wireless data networks. The external databases store 3D models that depict roads buildings and other structures in a geographic region.

While 3D models that are loaded from external databases can be displayed in the virtual environment the 3D objects often lack classification information to identify what the 3D model represents. For example a 3D object that depicts a section of a highway does not include information that distinguishes the highway from another 3D object that depicts an office building. In order to display the 3D objects in an accurate context a mapping or navigation program needs to classify the 3D objects in the virtual environment. Consequently improvements to systems and methods for classifying and displaying 3D objects in a virtual environment would be beneficial.

In one embodiment a method for classifying and displaying a structure in a virtual environment has been developed. The method includes identifying a plurality of polygons in a structure located in a virtual environment generating data corresponding to a plurality of surface normals each surface normal corresponding to one polygon in the plurality of polygons in the structure identifying a variance of a distribution of the plurality of surface normals generating a first classification for the object in response to the identified variance being below a first predetermined threshold and generating with a display device a visual depiction of the structure in the virtual environment with at least one visual aspect of the structure being modified with reference to the first classification.

In another embodiment a system that classifies and displays a structure in a virtual environment has been developed. The system includes a memory configured to store data corresponding to a plurality of polygons in a structure in a virtual environment and data corresponding to a plurality of textures for structures in the virtual environment. The system also includes a display device configured to generate a display of the structure in the virtual environment and a processor operatively connected to the memory and the display. The processor is configured to generate data corresponding to a plurality of surface normals for the data corresponding to the plurality of polygons in the structure each surface normal corresponding to one polygon in the plurality of polygons in the structure identify a variance of a distribution of the plurality of surface normals generate a first classification for the object in response to the identified variance being below a first predetermined threshold and generate with the display device a visual depiction of the structure in the virtual environment with at least one visual aspect of the structure being modified with reference to the first classification.

For the purposes of promoting an understanding of the principles of the embodiments disclosed herein reference is now made to the drawings and descriptions in the following written specification. No limitation to the scope of the subject matter is intended by the references. The present disclosure also includes any alterations and modifications to the illustrated embodiments and includes further applications of the principles of the disclosed embodiments as would normally occur to one skilled in the art to which this disclosure pertains.

As used herein the term in vehicle information system refers to a computerized system that is associated with a vehicle for the delivery of information to an operator and other occupants of the vehicle. In motor vehicles the in vehicle information system is often physically integrated with the vehicle and is configured to receive data from various sensors and control systems in the vehicle. In particular some in vehicle information systems receive data from navigation systems including satellite based global positioning systems and other positioning systems such as cell tower positioning systems and inertial navigation systems. Some in vehicle information system embodiments also include integrated network devices such as wireless local area network LAN and wide area network WAN devices which enable the in vehicle information system to send and receive data using data networks. In an alternative embodiment a mobile electronic device provides some or all of the functionality of an in vehicle information system. Examples of mobile electronic devices include smartphones tablets notebook computers handheld GPS navigation devices and any portable electronic computing device that is configured to perform mapping and navigation functions. The mobile electronic device optionally integrates with an existing in vehicle information system in a vehicle or acts as an in vehicle information system in vehicles that lack built in navigation capabilities including older motor vehicles motorcycles aircraft watercraft and many other vehicles including but not limited to bicycles and other non motorized vehicles.

As used herein the term object refers to data that correspond to a group of polygons in a virtual environment that form a model of a single object in the larger virtual environment. As used herein the term structure refers to an object with polygons that are positioned and oriented in the 3D virtual environment to stand on a virtual representation of ground or the surface of the earth. Common examples of structures include representations of manmade objects such as buildings bridges monuments and other artificial constructions.

As used herein the term surface normal refers to a vector that extends from the surface of a polygon in a perpendicular direction to the plane of the polygon in a three dimensional space. One technique that is known to the art for generation of a surface normal vector is to perform a cross multiplication of two vectors that correspond to two non parallel sides of the polygon.

In the in vehicle information system the processor includes one or more integrated circuits that implement the functionality of a central processing unit CPU and graphics processing unit GPU . In some embodiments the processor is a system on a chip SoC that integrates the functionality of the CPU and GPU and optionally other components including the memory network device and global positioning system into a single integrated device. In one embodiment the CPU is a commercially available central processing device that implements an instruction set such as one of the x86 ARM Power or MIPs instruction set families. The GPU includes hardware and software for display of both 2D and 3D graphics. In one embodiment processor includes software drivers and hardware functionality in the GPU to generate 3D graphics using the OpenGL OpenGL ES or Direct3D graphics application programming interfaces APIs . For example the GPU includes one or more hardware units including geometry processing units vertex shader units fragment shader units and image rasterization units for the generation of a rasterized 2D depiction of a 3D virtual environment. During operation the CPU and GPU execute stored programmed instructions that are retrieved from the memory . In one embodiment the stored programmed instructions include operating system software and one or more software application programs including a mapping and navigation application program. The processor executes the mapping and navigation program and generates 2D and 3D graphical output corresponding to maps and map features through the display device .

The memory includes both non volatile memory and volatile memory. The non volatile memory includes solid state memories such as NAND flash memory magnetic and optical storage media or any other suitable data storage device that retains data when the in vehicle information system is deactivated or loses electrical power. The volatile memory includes static and dynamic random access memory RAM that stores software and data including graphics data and map feature data during operation of the in vehicle information system .

In in vehicle information system the memory stores the cache of structure data . The data for each structure includes a plurality of vertex coordinates for polygons that form the structure. In some embodiments the processor retrieves structure data from one or more online data storage systems using the network device . As described below the processor is configured to identify a classification for one or more structures in the memory and the cached structure classifications store generated classification data for each structure in association with the structure data . The processor performs the classification process once for each structure and subsequently generates a graphical depiction of the structure with selected textures from the texture memory . In the embodiment of the texture memory stores one or more textures that correspond to roads regular buildings irregular buildings and statues . The textures stored in the memory provide more uniform appearances to a wide range of structures that are displayed in the virtual environment to provide a simplified depiction of the virtual environment to occupants in the vehicle.

In the embodiment of the processor sends and receives data using the network device . In a vehicle the network device is often a wireless network device such as a wireless wide area network WWAN device which communicates with radio transceivers in a cellular data network while the vehicle is in motion. The network device optionally includes a wireless local area network WLAN device for communication with shorter range wireless local area networks. Examples of WLAN devices include the IEEE 802.11 family of protocols and Bluetooth protocols. In some embodiments the network device includes a wired network connection such as Ethernet or USB for use when the vehicle is parked or for interfacing with another computing device in the compartment of the vehicle. In the system the processor optionally retrieves polygon data corresponding to one or more of the structure models in the structure model cache from online data services not shown using the network device .

In the in vehicle information system the global positioning system GPS identifies a location of the vehicle for use in navigation applications. In one embodiment the GPS includes a radio receiver that receives signals from orbiting navigation satellites. Commercially available satellite GPS receivers are integrated in some in vehicle information systems and many mobile electronic devices include satellite GPS receivers as well. In an alternative embodiment the global positioning system receives signals from terrestrial transmitters including WWAN and WLAN transmitters. The global positioning system identifies a location of the vehicle using triangulation or other geolocation techniques. Some embodiments include receivers for both satellite GPS and terrestrial signals. In some embodiments the global positioning system further includes an inertial navigation system that assists in identifying the location of the vehicle if signals from the satellite or terrestrial transmitters are unavailable. During operation the processor receives data from the GPS to identify a geographic location of the vehicle. The processor selects a portion of the virtual environment and structures in the virtual environment that correspond to the identified geographic location of the vehicle for display during a navigation operation.

The in vehicle information system includes one or more display devices . In one embodiment the display device is a liquid crystal display LCD organic light emitting diode display OLED or other suitable display device that generates image output for the vehicle occupants. Displays are commonly mounted in a dashboard or other fixed location in the vehicle. In an alternative embodiment the display device is a head up display HUD that is projected onto a windshield of a vehicle or projected onto goggles or glasses that are worn by an occupant in the vehicle. In an embodiment where the in vehicle information system is a handheld mobile electronic device the display is typically an LCD or organic LED OLED flat panel display that is housed in the mobile electronic device.

Process begins as the processor receives polygon data corresponding to a structure model in a 3D virtual environment block . In the in vehicle information system the cached structure data memory stores polygon data corresponding to one or more structures in the structure model polygon. During operation the in vehicle navigation system also retrieves additional structure model polygon data and geolocation coordinates for the corresponding map structures from one or more online data storage services using the network device . As described above in some instances the online databases include polygon structure model data for the map structures but do not include classifications for the type of structure. During process the in vehicle information system assigns a classification to the retrieved structure model and selects textures for the structure model with reference to the assigned classification to enable generation of map displays with a uniform map layout.

Once the in vehicle information system receives the polygon data corresponding to a structure the processor identifies surface normals that correspond to each of the polygons in the structure block . To generate the surface normal for a polygon the processor selects the three dimensional coordinate data for two non parallel sides of the polygon and performs a cross multiplication operation on the sides. The cross multiplication generates a vector that is a surface normal of the polygon. The surface normal vector extends in a perpendicular direction from the face of the polygon. In many 3D graphics system embodiments the polygons that form the structure models are all triangles and the processor generates surface normals for the triangles using the three vertex coordinates in the triangle with one vertex coordinate being used twice to represent an intersection between two sides of the triangle. In the embodiment of the memory includes a surface normal storage cache and the processor stores the generated surface normals in the cache . As described below the surface normal data are used in different portions of the process and the surface normal cache enables retrieval of the surface normals without requiring regeneration of the surface normal data. In another embodiment the processor identifies the surface normals during multiple stages of the process .

During process if an identified variance of the surface normals for the structure is less than a predetermined variance threshold block then the structure is classified as being a road in the 3D virtual environment block . depicts a display of a virtual environment that includes roads. In a road includes polygons that are formed over a surface of the terrain depicted in the virtual environment display. The surface normals such as surface normal for the road have a relatively low variance because the structure model for the road is formed from an approximately planar mesh of polygons that extend across the virtual environment along the path of the road. The surface normals for the road have some variation due to curves and changes in terrain elevation but the variance for the road surface normals is typically smaller than for normals that correspond to buildings. For example the buildings and in include a wider distribution of surface normals including the normals and for polygons in the building .

Referring again to in the graph the distribution includes a relatively narrow distribution in an approximately Gaussian shape with a peak . By contrast the surface normal distribution for non road structure includes a roughly uniform distribution of surface normals. In the process the processor identifies the variance of the histogram distribution for the identified surface normals in the structure model and if the variance for the distribution of surface normals is less than a predetermined variance threshold block then the processor identifies that the structure is a road block .

If the variance of surface normals in the polygon model data exceeds the predetermined threshold block then process continues for the classification of other structure types for the structure in the virtual environment. The processor identifies the ratio of the number of polygon faces in the polygon data for the structure model divided by the total number of polygon faces in the structure model block . The identification of the ratio is described in more detail in .

The process begins with selection of a single side of a polygon in the polygon data for the structure model and the generation of a first axis in a 3D coordinate space from the selected side block . depicts a graphical view of an illustrative structure model that is formed from a plurality of polygons. In the polygons in the structure model form a regular building in the virtual environment. In solid lines represent the visible edges of the structure as the structure is depicted in a virtual environment while the dashed lines indicate the interior edges of triangles in the polygon model. Some triangles in the structure model are arranged together to form larger visible polygons such as rectangles in the structure . During process the processor selects the edges in the polygons that form the structure model and generates a three dimensional coordinate system from each side in an iterative manner. For example during one iteration of the processing described with reference to block the processor selects the edge in the structure model . The processor generates a first axis in parallel with the side . During another iteration of the process the processor selects the edge and generates the first axis in parallel with the edge .

Process continues as the processor generates a second axis in a 3D coordinate system corresponding to the selected edge of the polygon in the structure block . The processor identifies the second axis as a surface normal of the polygon that includes the selected edge that forms the basis for the first axis. As described above the processor generates the surface normal for triangles as a cross product of two edges in the triangle. During process the processor generates the normal for the second axis as the cross product of the selected side that forms the first axis and either one of the other two sides of the triangle that includes the selected side. In during one iteration of the process the process generates the second axis corresponding to the side and first axis and in another iteration of the process the processor generates the second axis corresponding to the side and first axis .

Process continues with generation of a third axis for the coordinate system that is generated for the selected edge block . In one embodiment of the process the processor performs a cross multiplication between the first axis and the second axis to generate the third axis. In the processor generates the third axis from the cross product of the axes and in one iteration of the process and the processor generates the third axis from the cross product of the axes and in another iteration of the process .

During each iteration of the process the processor identifies a count of the polygons in the model that are orthogonal to one of the generated three axes block . At least only one polygon in the model is orthogonal to the axes in each iteration because the axes are generated from one side of one of the polygons in the structure model. In one embodiment the processor identifies the other orthogonal polygons in the model through generation of surface normals for each of the remaining polygons in the model. If a surface normal for a polygon is parallel to any one of the first second and third axes then the polygon is orthogonal to the original polygon with the side that is used to generate the three axes. In the example of the processor generates the surface normals for each of the polygons in the structure model and identifies whether the surface normal is parallel to any one of the three axes. For example in one iteration of the process the processor identifies that surface normal for the polygon is parallel to the axis during one iteration of the process and the processor identifies that the surface normal for the polygon is parallel to the axis during another iteration of the process .

In addition to identifying the number of polygons that are orthogonal to the first second and third axes in the three dimensional coordinate system process also includes identification of a sum of the surface areas for the orthogonal polygons block . In the in vehicle information system the processor identifies the surface area for each orthogonal polygon using geometric techniques that are known to the art. For example the processor identifies the area of triangles using the formula of A b h where b and h represent the base and height of the triangle. In one embodiment the processor tessellates more complex polygons into a set of triangles to identify the total surface area of the polygon as a sum of the surface areas of the smaller triangles.

Process continues in an iterative manner for each edge in the polygon data for the structure model block . During each iteration of process the processor identifies whether the total surface area of the orthogonal polygons exceeds the maximum identified surface area from any earlier iterations of the process . The processor stores the maximum surface area in association with the count of orthogonal polygons that are identified in association with the maximum surface area. If processor identifies a larger total surface area during another iteration of the process then the processor updates the maximum surface area and associated orthogonal polygon count. The process continues to process each side of the polygons in the structure model block and the processor identifies the ratio of orthogonal polygons to the total number of polygons in the structure model data using the polygon count that is associated with the maximum orthogonal polygon surface area block .

As described above the process identifies the number of orthogonal polygons in the polygon data for the structure model. This identification is made using the maximum surface area of orthogonal polygons as a constraint for selecting a polygon for use as the basis for generating the first second and third coordinate axes. The maximum surface area constraint is useful in complex structures that include a large number of orthogonal polygons with small surface areas to ensure that a large number of small polygons in the structure do not result in a misclassification of the structure. The ratio that is identified in the process is used in the continued processing of the process .

Referring again to the process in if the identified ratio of orthogonal polygon faces to total polygon faces in the polygon data for the structure model exceeds a predetermined threshold block then the processor classifies the structure as a regular building block . The term regular building applies to the total proportion of 90 corners that are present in the building model. The orthogonal polygons meet at 90 angles while non orthogonal polygons meet at angles other than 90 . Many buildings and other structures in the real world include a high proportion of 90 angle corners and the corresponding polygon data for the structure models in the virtual environment also include the 90 corners. In one configuration the ratio threshold is 0.8 which is to say that if 80 or more of the polygons in the structure are orthogonal then the processor classifies the structure as a regular building.

If the identified ratio of orthogonal polygons to total polygons in the structure model data is below the predetermined threshold block then process continues as the processor generates a distribution of dihedral angles in the polygon data of the structure model block . The dihedral angles refer to angles between adjoining polygons in the structure model. If one of the polygons is rotated through the dihedral angle then the two polygons are parallel to one another. One method for identifying the dihedral angle between two polygons includes identification of a relationship between surface normals to the two polygons. For example given polygons A and B with surface normals Uand U respectively the dihedral angle between A and B is provided by the following equation with two equivalent expressions for the dihedral angle 

Process continues as the processor then identifies whether the number and magnitude of discontinuities in the distribution of dihedral angles is greater than or less than a predetermined threshold to classify the structure as either an irregular building or a statue block . In one embodiment only discontinuities between dihedral angles that are larger than a predetermined angle size are used to classify the irregular buildings and statues. In one embodiment only discontinuities between dihedral angles that are greater than two radians are used to classify the structure model. In the context of the dihedral angle distributions for structure models the term discontinuity refers to a difference between the sizes of adjacent dihedral angles in the sorted dihedral angle distribution. The maximum difference between two adjacent dihedral angle entries in the sorted dihedral angle data for a given structure model is referred to as the maximum discontinuity for the structure model. Structures that are formed with smooth curves such as statues typically have smaller discontinuities between dihedral angles while irregular buildings tend to have more abrupt changes between dihedral angles.

Referring again to if the identified maximum discontinuity between the adjacent dihedral angles of the structure exceed the predetermined threshold block then the processor classifies the structure as an irregular building in the virtual environment block . If however the identified discontinuities in the dihedral angles of the structure are less than the predetermined threshold block then the processor classifies the structure model as a statue in the virtual environment block .

As described above in the description of blocks and the in vehicle information system classifies the polygon data for the structure model as one of a road regular building irregular building or a statue respectively. Once the structure is classified a data identifier for the classification is stored in a memory in association with the structure block . In the in vehicle information system the processor stores classification identification data for the structure in the cached structure classifications region in the memory . The structure classification data are stored in the structure classification cache in association with the cached structure data and the memory retains the classification for the structure during the display of graphics and other operations in the 3D virtual environment. In one embodiment the structure classification data are predetermined text strings that conform to a structured data format such as an extensible markup language XML format. In another embodiment the structure classification is a numeric or other binary data identifier.

During process the in vehicle information system is configured to display virtual environments including the structures which are displayed using the polygon data to generate a 3D display of the structure. The in vehicle information system uses the identified classification for the structure to modify at least one visual aspect of the structure in the 3D virtual environment block . As used herein the term visual aspect refers to any adjustment to the display of the structure model that is visually perceptible to a typical user of the in vehicle information system . Examples of visual aspects including but are not limited to size shape color location animation lighting and textures for the structural model. For example in one operating mode the classification of an object affects a priority for displaying the object. A road classification is assigned high priority in a navigation application program while regular buildings are assigned lower priorities. The lower priority regular buildings are optionally displayed with reduced size without textures to appear as single color forms or are flattened to be shown as 2D graphics instead of full three dimensional models. In another operating mode irregular buildings and statues are highlighted with additional lighting to increase the visibility of the structure since irregular buildings and statues are often used as landmarks during navigation.

In another operating mode in the process the in vehicle information system selects and applies graphical textures to the structure models with reference to the classification for each model to modify the visual aspects of a wide range of models to form a more uniform appearance for different structures in the 3D virtual environment. The processor applies a common set of textures to structures in the virtual environment with the same classification to enable generation of a virtual environment with a more uniform appearance. Some existing mapping and navigation applications generate textures for a structure using photographic data to provide a so called photorealistic depiction of the structure in the virtual environment with the same appearance as in the physical world. While photorealistic display of a structure is used in some mapping programs the photorealistic graphics are often more difficult for a vehicle operator or other vehicle occupant to interpret in a short period of time. In the in vehicle information system the processor applies a comparatively limited set of textures to the different structures in the virtual environment with reference to the classification for each structure in order to provide a simplified visual depiction of the 3D virtual environment to the vehicle occupants. The processor selects textures for the structure from the texture memory with reference to the identified classification for the structure In the in vehicle information system the processor selects one or more road textures regular building textures irregular building textures and statue textures with reference to the identified classification for the structure.

Process continues as the in vehicle information system generates a display of the 3D virtual environment including a depiction of the structure model with the modified visual aspect block . The GPU in in the processor generates a display of the 3D virtual environment including the structure model with the modified visual aspect through the display device for the user to view. In an embodiment where the processor applies textures with reference to the classification for the structure model the processor applies the textures to the polygons in the structure using for example texture mapping techniques that are known to the art and generates a display of the 3D virtual environment including the textured structure.

Referring again to the display of the virtual environment includes the road regular buildings such as the regular building and an irregular building . As depicted in the textures that are applied to the road depict a simplified view of a road including lane marks but are not photorealistic renderings of the road in the physical world that is represented by the road structure model in the display . Similarly the buildings and have simplified wall and roof textures applied to selected polygons in each structure to generate a graphical depiction of a building but without rendering photographic details of the building exterior. The processor applies textures to a curved wall in the irregular building to accentuate the curved shape of the irregular building instead of attempting to generate a photographic display of the curved wall in the irregular building . During operation of the in vehicle information system the simplified depictions of the structures in the virtual environment enable the vehicle occupants to focus on the task of navigation with fewer distractions because the in vehicle information system classifies structures in the 3D virtual environment and displays the structures with the predetermined textures.

In one embodiment the in vehicle information system in the in vehicle information system only performs the classification process once for structure models that are previously unclassified. In the embodiment of processor stores the classification for each structure in the structure classification cache which stores the classification in association with the structure model polygon data for each structure that is stored in the memory . During operation of a mapping or navigation application the processor loads the structure polygon data from the memory and applies an appropriate set of textures from the textures memory corresponding to roads regular buildings irregular buildings and statues with reference to the previously identified classification for the structure.

It will be appreciated that variants of the above disclosed and other features and functions or alternatives thereof may be desirably combined into many other different systems applications or methods. Various presently unforeseen or unanticipated alternatives modifications variations or improvements may be subsequently made by those skilled in the art that are also intended to be encompassed by the following claims.

