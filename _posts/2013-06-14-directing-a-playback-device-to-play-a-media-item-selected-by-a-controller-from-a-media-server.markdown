---

title: Directing a playback device to play a media item selected by a controller from a media server
abstract: A remote media server provides a resource identifier to a digital media controller. A digital media controller passes this resource identifier to a digital media renderer. The digital media renderer launches an application that processes the resource identifier to access the remote media server and play back the media. Playback is responsive to controls from the digital media controller. The digital media renderer can play back media identified by the digital media controller, but that is encoded and protected in a manner specific to the digital media renderer. The digital media controller can shut down or become dormant to save battery power without affecting playback by the digital media renderer. By providing the information about available applications from the digital media renderer to the digital media controller, the digital media controller can reliably send resource identifiers for which applications are available the digital media renderer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09313255&OS=09313255&RS=09313255
owner: Microsoft Technology Licensing, LLC
number: 09313255
owner_city: Redmond
owner_country: US
publication_date: 20130614
---
In recent years new consumer electronics devices have been introduced that can connect to local area computer networks including home networks. Examples of such devices include printers DVD players and personal video recorders. A technology called Universal Plug and Play UPnP has been developed to provide a common language for such devices to communicate over such local area computer networks.

UPnP defines a category of devices called media servers and another category called media renderers and a concept called a control point. A control point is an entity which can find UPnP devices and control them. A control point that controls a media renderer is referred to as a digital media controller DMC .

A common use of UPnP devices is to have a media server that transfers multimedia content e.g. a digital representation of a movie to a media renderer device with the help of a digital media controller. If the media server media renderer and the digital media controller are three separate devices then the digital media controller orchestrates the connection between the media renderer and the media server.

In a possible scenario the media renderer is a networked television the media server is a desktop personal computer and the digital media controller is a portable personal computer such as a notebook computer or a mobile phone all interconnected on a local area network such as in a home network. The digital media controller discovers the media server and downloads a catalog of movies from the media server. The digital media controller then instructs the media renderer to initiate a streaming transfer of one the movies from the media server to the media renderer for display on the television screen.

In another possible scenario the device that acts as a digital media controller also hosts a server that streams media data to the digital media renderer. For example the digital media controller can be an application running on a tablet computer which receives media data from another application that acts as a digital media server and the digital media renderer can be a television or a gaming console connected to a television.

There are several limitations with existing implementations of UPnP and similar networked systems when the digital media controller is streaming media to the digital media renderer.

First the digital media controller cannot enter into a dormant state commonly called a sleep state or hibernating state in which activity of the device is reduced so as to conserve power. Transitioning to such a state can interrupt transfer of the media from the digital media controller in the event the digital media controller also acts as a media server. However not transitioning to such a state can result in the digital media controller running out of battery power.

Second if the digital media controller is receiving media from another service not on the local area network such as an online store or other remote media server connected to a computer network such as the internet the media may be encoded by that service to be optimized for the digital media controller. For example if the digital media controller is a small portable device and the digital media renderer is a high definition television the digital media controller may receive media with a small spatial resolution and not high definition.

Third if the digital media controller is receiving media from another service not on the local area network such as an online store or other remote media server connected to a computer network such as the internet the media may be protected by digital rights management technology that allows only the digital media controller to access the media.

This Summary introduces selected concepts in simplified form that are further described below in the Detailed Description. This Summary is intended neither to identify key or essential features of the claimed subject matter nor to limit the scope of the claimed subject matter.

A remote media server provides a resource identifier to a digital media controller. A digital media controller passes this resource identifier to a digital media renderer. The digital media renderer launches an application that processes the resource identifier to access the remote media server and play back the media. Such playback is then responsive to controls from the digital media controller. In such a configuration the digital media renderer can play back media identified by the digital media controller but that is encoded and protected in a manner specific to the digital media renderer instead of the digital medial controller. Also the digital media controller can shut down or become dormant to save battery power without affecting playback by the digital media renderer. By providing the information about available applications from the digital media renderer to the digital media controller the digital media controller can reliably send resource identifiers for which applications are available the digital media renderer.

Accordingly in one aspect a digital media controller requests data from a digital media renderer about applications installed on the digital media renderer. The digital media controller determines whether the applications can playback a media item specified by a resource identifier. If the digital media renderer can playback the media item the digital media controller sends the resource identifier to the digital media renderer. The digital media controller can control playback of the media item by the digital media renderer which accesses the digital media item from the remote media server.

In another aspect a remote media server provides information about media items including a resource identifier for a media item to a digital media controller. The resource identifier enables a digital media renderer to access another version of the media item.

In another aspect a digital media controller receives information about media items from a remote media server. This information includes a resource identifier for a media item. The resource identifier enables a digital media renderer to access a version of the media item from a remote media server.

In another aspect a digital media renderer provides information about available applications that support playback of a media item from a remote media server given a resource identifier from a digital media controller. Such information can be collected by an operating system of the digital media renderer when the applications are installed.

In another aspect the digital media renderer plays back a media item from a remote media server in response to a resource identifier provided by a digital media controller. The playback is controlled through playback commands from the digital media controller.

In the following description reference is made to the accompanying drawings which form a part hereof and in which are shown by way of illustration specific example implementations of this technique. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the disclosure.

The following section provides an example operating environment. Referring to a digital media controller a media server and a media renderer are connected to each other through a local area computer network . The digital media controller is connected through a first network connection . The media server is connected through a second network connection . The media renderer is connected through a third network connection .

In an example configuration the media server can be a desktop computer that provides media data such as digital video data files to the digital media controller. The second network connection can be for example a wired Ethernet connection that connects to the local area computer network or a wireless connection. The local area computer network as an example can be implemented using a router which provides both wired and wireless connections among the digital media controller media server and media renderer .

The media renderer in this example is a television that plays back received digital video data files for which the third network connection to the computer network is a wireless connection.

The digital media controller in this example is a mobile computing device such as a tablet computer for which the first network connection to the computer network is a wireless connection.

In this example communication among the various devices can be over a local area network using the UPnP protocol. It should be understood however that other protocols can be used.

While the foregoing describes an example practical configuration such configurations can change in any given installation. For example a user may decide to connect the digital media controller to the local area computer network through a wired connection. Also the digital media controller is implemented so as to anticipate several possible configurations. For example any of the first second or third network connections can be wired or wireless. If wired the connection can use IPv6 IPv4 or other protocol. Also if wireless the connection can be Infrastructure Wi Fi Wi Fi Direct or other protocol. While the configuration shown assumes that the local area computer network is implemented using a single router with wired and wireless connectivity the computer network can be arbitrarily complex.

In such a system the device that acts as a digital media controller also can host a server that streams media data to the digital media renderer. For example the digital media controller can be an application running on a tablet computer that streams media data to the digital media renderer. The digital media renderer can be any of a variety of devices including but not limited to a television a gaming console connected to a television an audio receiver audio speakers or another computer.

The digital media controller receives the media data over a wide area computer network such as the internet from a remote media server which is not part of the UPnP controlled home network. The remote media server can be for example an online store or other remote media server connected to a wide area computer network such as the internet. The local area computer network allows the digital media controller and the digital media renderer to access the remote media server by connecting to the wide area computer network on which the remote media server resides. The media may be encoded by the remote media server to be optimized for the device that is receiving the media data. The media also may be protected by that service using digital rights management technology limiting access to the media to the device that is receiving the media data. In practice there are a large number of remote media servers as any resource on the internet can be identified as a remote media server.

In this context the digital media controller and the digital media renderer are configured so as to allow the digital media controller to identify media on the remote media server and then instruct the digital media renderer to access that media directly from the remote media server without further intervention by the digital media controller but still allowing playback to be controlled through commands from the digital media controller. To achieve this the digital media renderer provides information to the digital media controller about the available applications that can play back media data. The digital media controller provides the digital media renderer a resource identifier for use by one of the applications. The application accesses the media data directly from the resource using the resource identifier however the digital media renderer still provides control commands from the digital media controller to the application.

In a more detailed block diagram of such a system will now be described. A digital media renderer implements an interface through which the digital media controller can issue a request for information about applications available on the digital media renderer. In response to such a request the digital media renderer provides profile information indicative of the applications available for playing media data.

When the digital media controller identifies a media item on a remote media server the digital media controller receives a resource identifier for the media item. The digital media controller also can receive a resource locator from the remote media server that identifies a version of the media item to be consumed by the digital media controller and which can be stored on a local digital media server . The remote media server also can optionally provide to the digital media controller one or more resource locators for streaming the media item. The digital media controller provides the resource identifier to the digital media renderer optionally resource locator s also can be provided to the digital media renderer . Those resource locators can point to resources on the remote media server or the local digital media server . The digital media controller may specify the application on the digital media renderer that will use the resource identifier or the digital media renderer may select the application or the resource identifier itself can specify an application to play the resource. The digital media renderer accesses the media item directly from the remote media server e.g. over the internet instead of from the local digital media server using the resource identifier . The digital media renderer then plays back the media item in response to playback commands from the digital media controller. It is possible for the digital media renderer also to ignore the resource identifier and use one of the resource locators to stream a media item from the source specified by the resource locator.

The digital media renderer can be configured to provide the profile information in a number of ways. In one implementation when an application is installed on the digital media renderer the application provides information to an operating system on the digital media renderer indicating its capability to receive a resource identifier to play media under the control of the digital media controller. The operating system of the digital media renderer then provides such information for all applications in response to a query from the digital media controller. In one implementation the GetProtocolInfo command of UPnP connection manager service can be used to pass this information from the digital media renderer to the digital media controller.

One specific example of such protocol information is the following. In this implementation the protocol information is defined using a markup language and a markup element below e.g. . . . defines the list of available applications 

In such an implementation where applications on the digital media renderer provide its operating system with information when a digital media controller provides the digital media renderer with a resource identifier the digital media renderer can readily identify the application for which the resource identifier is intended and run that application.

An example implementation of the resource identifier is a uniform resource identifier URI that identifies a media item by identifying a service to be used to play the identified media item and not a specific location for a specific encoding of the media item. This resource identifier can be embedded in a media item or conveyed separately from the media item. The digital media controller uses the URI and information about available applications on the digital media renderer to determine which URI to send to the digital media renderer.

The resource identifier is supplied from the remote media server from which the media item is retrieved from the digital media renderer. For example the remote media server can provide the digital media controller with a web page that references a video. The reference to the video can include the resource identifier for the video.

As a specific example the web page can include a markup element that references a video. The markup element specifies a resource identifier to be sent by the digital media controller to a digital media renderer. The markup element also can specify one or more resource locators to be accessed to playback video on the current device e.g. on the digital media controller. For example consider the following markup element 

In the foregoing example a markup element defines video e.g. in a web page. One attribute e.g. src filename can be a resource locator identifying a source file to be accessed to playback video on the current device such as the digital media controller. Another attribute can be a resource identifier e.g. x ms playToPreferredURI resource identifier that specifies the resource identifier that can be passed to another device such as the digital media renderer. There can be multiple resource locators resource locators can be omitted.

The digital media controller accesses a remote media server from which it receives information about one or more media items including but not limited to a resource identifier for a media item. An application on the digital media controller such as a browser application or a media player application identifies the resource identifier and presents information about the media item to the user. The digital media controller then receives an indication of a selected media item. For example a user viewing a web page in a browser application can select an item to be played back.

The digital media controller requests information about available applications from the digital media renderer. The digital media renderer responds and the digital media controller receives the information. This information can be used in a variety of ways. For example the digital media controller can create a graphical user interface through which a user can select an application on the digital media renderer through which to playback a selected media item. The resource identifier for the selected media item is then sent to the digital media renderer.

The steps in can be performed in different orders as the steps to identify and select a media item and the steps to identify and select an application on the digital media renderer can be done separately with the results of one set of steps informing the subsequent steps.

In one implementation the operating system of the digital media controller provides an application programming interface through which information such as a resource identifier can be shared from one application to another. In such an implementation the operating system can show any application from a digital media renderer to which the digital media controller is connected as a possible target for sharing data.

First an indicator of the resource identifier is received . It is then determined whether the content referenced by the resource identifier is available on the source. If the content is available on the source and if the device has an application for accessing that source as determined at for example by examining the protocol information described above then the device can be shown as available. For example the source can be a movie service that has its own proprietary player application. If the protocol information indicates this player application is installed on the digital media renderer then the digital media renderer can be shown as an available device.

If the device does not have an application for accessing the source as determined at or if the content is not available from that source as determined at then it is determined at whether the device otherwise supports the media type. If the media type is supported it is then determined whether the media is protected. If the media is not protected then the device also can be shown as available. Thus as an example if the player application for a service is not installed but the media provided by the service is otherwise supported on the device and the media is not protected then the media can be played on the device and the device can be shown as an available device.

Otherwise if the digital media renderer does not support the media type as determined at or if the content is protected as determined at after it having already been determined that an application is not available to access the protected content then the digital media renderer is not shown as an available device for playing this media item.

It should be understood that the sequence of steps shown in is merely one implementations and that other implementations are possible following other sequences of steps. Any sequence of steps which can ultimately identify a device as being available to access a media item can be used and involves checking in any order whether the digital media renderer has either an application that allows access to protected content from the source or an application that supports the media type of unprotected content and that the content ultimately is available from the remote media server.

In the foregoing implementation the requested media content on the remote media server can be referenced by a conventional resource locator such as a uniform resource locator URL as commonly used on the internet and played back by a conventional browser application or other application that can access unprotected content. After first checking whether the requested content is unprotected the digital media controller can determine whether the digital media renderer can handle protected content referenced by a resource identifier.

Referring now to flow charts of an example implementation of operation of a digital media renderer will now be described. describes how a digital media controller is informed of the capabilities of the digital media renderer. describes how a digital media renderer plays back media identified by a resource identifier from a remote media server yet under control of the digital media controller.

Thus in an application is installed on the digital media renderer. After installation the digital media renderer receives requests from devices such as digital media controllers for information describing available applications. The digital media renderer identifies the various applications and provides the protocol information to the requesting device.

When a digital media controller directs a digital media renderer to play back media the digital media renderer receives a request including a resource identifier. The digital media renderer processes the request to identify an application to play the media. The digital media renderer launches the application providing the application with the resource identifier. The application uses the resource identifier to contact a remote media server that provides the media item and receives the media data from that remote media server. The playback of the media is then responsive to commands such as play stop pause rewind fast forward and the like from the digital media controller.

As can be seen from the foregoing a remote media server provides media data specified by a resource identifier. A digital media controller passes this resource identifier to the digital media renderer. The digital media renderer launches the application that processes the resource identifier to access the remote media server and play back the media. Such playback is then responsive to controls from the digital media controller. In such a configuration the digital media renderer can play back media identified by the digital media controller but that is encoded and protected in a manner specific to the digital media renderer instead of the digital medial controller. Also the digital media controller can shut down or become dormant to save battery power without affecting playback by the digital media renderer. By providing the information about available applications from the digital media renderer to the digital media controller the digital media controller can reliably send resource identifiers that can be used by the digital media renderer.

It should be understood that the foregoing description is not limited to UPnP and similar standards implementing arrangements. More generally speaking a first device receives a resource identifier for a media item from a remote media server. The first device provides that resource identifier to a second device which can play the media item. The second device in turn accesses the remote media server directly to access the media data for the media item and then plays back the media item under the control of the first device.

As an example use case a user can access a service over the internet using a tablet computer to identify a media item such as a movie. The service provides a resource identifier for the movie to the tablet computer. The user can then use the table computer to direct a television to playback the movie directly from the service. The tablet computer can communicate with the television to determine which applications are available to play back a media item from the service. The tablet computer provides the resource identifier to the television. An application running on the television connects with the service using the resource identifier to access the movie. Then playback commands from the tablet computer can be used to control the playback of the movie on the television.

Having now described an example implementation a computer with which components of such a system are designed to operate will now be described. The following description is intended to provide a brief general description of a suitable computer with which such a system can be implemented. The computer can be any of a variety of general purpose or special purpose computing hardware configurations. Examples of well known computers that may be suitable include but are not limited to personal computers server computers hand held or laptop devices for example media players notebook computers cellular phones personal data assistants voice recorders multiprocessor systems microprocessor based systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

With reference to an example computer in a basic configuration includes at least one processing unit and memory . The computer may include multiple processing units and or additional co processing units such as graphics processing unit . Depending on the exact configuration and type of computer memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. This configuration is illustrated in by dashed line .

Additionally computer may also have additional features functionality. For example computer may also include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer program instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Any such computer storage media may be part of computer .

Computer may also contain communications connection s that allow the device to communicate with other devices over a communication medium. Communication media typically carry computer program instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal thereby changing the configuration or state of the receiving device of the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Communications connections are devices that interface with the communication media to transmit data over and receive data from communication media such as a network interface.

Computer may have various input device s such as a keyboard mouse pen camera touch input device and so on. Output device s such as a display speakers a printer and so on may also be included. All of these devices are well known in the art and need not be discussed at length here. Various input and output devices can implement a natural user interface NUI which is any interface technology that enables a user to interact with a device in a natural manner free from artificial constraints imposed by input devices such as mice keyboards remote controls and the like.

Examples of NUI methods include those relying on speech recognition touch and stylus recognition gesture recognition both on screen and adjacent to the screen air gestures head and eye tracking voice and speech vision touch gestures and machine intelligence and may include the use of touch sensitive displays voice and speech recognition intention and goal understanding motion gesture detection using depth cameras such as stereoscopic camera systems infrared camera systems and other camera systems and combinations of these motion gesture detection using accelerometers or gyroscopes facial recognition three dimensional displays head eye and gaze tracking immersive augmented reality and virtual reality systems all of which provide a more natural interface as well as technologies for sensing brain activity using electric field sensing electrodes EEG and related methods .

Each component of this system that operates on a computer generally is implemented by software such as one or more computer programs which include computer executable instructions and or computer interpreted instructions such as program modules being processed by the computer. Generally program modules include routines programs objects components data structures and so on that when processed by a processing unit instruct the processing unit to perform particular tasks or implement particular abstract data types. This computer system may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

Alternatively or in addition the functionality described herein can be performed at least in part by one or more hardware logic components. For example and without limitation illustrative types of hardware logic components that can be used include Field programmable Gate Arrays FPGAs Program specific Integrated Circuits ASICs Program specific Standard Products ASSPs System on a chip systems SOCs Complex Programmable Logic Devices CPLDs etc.

The terms article of manufacture process machine and composition of matter in the preambles of the appended claims are intended to limit the claims to subject matter deemed to fall within the scope of patentable subject matter defined by the use of these terms in 35 U.S.C. 101.

Any or all of the aforementioned alternate embodiments described herein may be used in any combination desired to form additional hybrid embodiments. It should be understood that the subject matter defined in the appended claims is not necessarily limited to the specific implementations described above. The specific implementations described above are disclosed as examples only.

