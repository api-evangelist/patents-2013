---

title: Multi layer, multi vendor, multi domain, applications for software defined networking enabled networks
abstract: Systems and methods are disclosed including a computer system, comprising a software defined networking configuration manager having a processor computing and provisioning paths through an optical transport network for multiple switch nodes to be provisioned as head end nodes, the processor managing and interpreting data indicative of managed entities within the optical transport network to create a first network Sub-Network Connection (SNC) for a first customer, and a second network SNC for a second customer, the first network SNC being representative of a first graphical illustration of a state of first resources within the transport network that are allocated to the first customer, and the second network SNC being representative of a second graphical illustration of a state of second resources within the transport network that are allocated to the second customer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09621968&OS=09621968&RS=09621968
owner: Infinera Corporation
number: 09621968
owner_city: Sunnyvale
owner_country: US
publication_date: 20131231
---
The present patent application claims priority to the provisional patent application identified by U.S. Ser. No. 61 902 655 filed on Nov. 11 2013 the entire contents of which are hereby incorporated herein by reference.

The disclosure generally relates to methods and apparatuses for orchestration of configuration and protection in multiple layers in data transport networks. More particularly the disclosure relates to methodologies for software defined networking SDN enabled networking configuration for multi layer multi vendor multi domain provisioning in data transport networks enabling utilization of smart applications. Though the methodologies set forth herein are in the context of traffic engineering TE routing in data transport networks such methodologies may be applied to any transport network that utilize configuration protection and recovery provisioning.

Generally data transport networks are defined as having multiple layers that combine to make a network. For example one standard that describes a multi layer model is the International Telecommunication Union recommendation ITU T X.200 07 94 entitled Information technology Open Systems Interconnection Basic Reference Model The basic model. The Open Systems Interconnection OSI Model contains the following seven layers the Application Layer layer 7 the Presentation Layer layer 6 the Session Layer layer 5 the Transport Layer layer 4 the Network Layer layer 3 the Data Link Layer layer 2 and the Physical Layer layer 1 . The model may also include a Layer Zero containing transmission media.

An Optical Transport Network OTN is comprised of a plurality of switch nodes linked together to form a network. The OTN includes an electronic layer and an optical layer. The electronic layer and the optical layer each contain multiple sub layers. The optical layer provides optical connections also referred to as optical channels or lightpaths to other layers such as the electronic layer. The optical layer performs multiple functions such as monitoring network performance multiplexing wavelengths and switching and routing wavelengths. In general the OTN is a combination of the benefits of SONET SDH technology and dense wavelength division multiplexing DWDM technology optics . OTN structure architecture and modeling are further described in the International Telecommunication Union recommendations including ITU T G.709 ITU T G.872 and ITU T G.805 which are well known in the art.

The construction and operation of switch nodes also referred to as nodes in the OTN is well known in the art. In general the nodes of an OTN are generally provided with a control module input interface s and output interface s . The control modules of the nodes in the OTN function together to aid in the control and management of the OTN. The control modules can run a variety of protocols for conducting the control and management of the OTN. One prominent protocol is referred to in the art as Generalized Multiprotocol Label Switching GMPLS .

Generalized Multiprotocol Label Switching GMPLS is a type of protocol which extends multiprotocol label switching MPLS to encompass network schemes based upon time division multiplexing e.g. SONET SDH PDH G.709 wavelength multiplexing and spatial switching e.g. incoming port or fiber to outgoing port or fiber . Multiplexing is when two or more signals or bit streams are transferred over a common channel. Wave division multiplexing is a type of multiplexing in which two or more optical carrier signals are multiplexed onto a single optical fiber by using different wavelengths that is colors of laser light.

Typically packet switched network systems are interconnected using wavelengths from the optical transmission backbone the transport layer that may contain a mix of WDM optical transmission and or OTN Digital switching technologies and or packet switching technologies. Conventionally traffic engineers may set or pre engineer a path for a data traffic flow through the packet switched layer of the network or the path may be computed using native routing protocols within the packet switched layer.

Traffic Engineering TE is a technology that is concerned with performance optimization of operational networks such as OTNs. In general Traffic Engineering includes a set of applications mechanisms tools and scientific principles that allow for measuring modeling characterizing and control of user data traffic in order to achieve specific performance objectives.

A switched network usually includes multiple switch nodes also referred to as nodes which are connected by communication links and arranged in a topology referred to in the art as a mesh network . Within the mesh network user traffic can be transported between any two locations using predefined connections specifying particular links and or switch nodes for conveying the user traffic. Shared Mesh Protection SMP is a common protection and recovery mechanism in mesh networks where multiple paths can share the same set of network resources such as bandwidth or timeslots for protection purposes. Mesh networks utilizing Shared Mesh Protection may be referred to as shared mesh networks.

As discussed above the switch nodes in the mesh network are each provided with a control module. The control modules of the switch nodes function together to aid in the control and management of the mesh networks. The control modules can run a variety of protocols for conducting the control and management of the mesh networks. One prominent protocol is referred to in the art as Generalized Multiprotocol Label Switching GMPLS .

Generalized Multiprotocol Label Switching includes multiple types of label switched paths including protection and recovery mechanisms which specifies predefined 1 working connections within a mesh network having multiple nodes and communication links for transmitting data between a headend node and a tailend node and 2 protecting connections specifying a different group of nodes and or communication links for transmitting data between the headend node to the tailend node in the event that one or more of the working connections fail. Working connections may also be referred to as working paths. Protecting connections may also be referred to as recovery paths and or protecting paths and or protection paths. A first node of a path may be referred to as a headend node or a source node. A last node of a path may be referred to as a tailend node or end node or destination node. The headend node or tailend node initially selects to receive data over the working connection such as an optical channel data unit label switched path and then when a working connection fails the headend node or tailend node selects a protecting connection for passing data within the mesh network. The set up and activation of the protecting connections may be referred to as restoration or protection. Protection mechanisms where network resources act as a backup for working connections have been in use for some time.

Routing and topology management protocols may also be used with GMPLS. Under OSPF protocols typically each node in an Optical Transport Network maintains a database of the network topology and the current set of resources available as well as the resources used to support traffic. In the event of any changes in the network or simply periodically the node floods the updated topology information to all the Optical Transport Network nodes which use the updated topology information to update their local databases. The nodes use their local database information to chart routes through the Optical Transport Network.

In current systems to set up a connection in an Optical Transport Network nodes in the Optical Transport Network exchange messages with other nodes in the Optical Transport Network using RSVP or RSVP TE signaling protocols. Resources required for the connection are reserved and switches inside a node of the network are pre configured to forward information from certain input ports to certain output ports. Information sent by signaling protocols are often in a type length value TLV format. The same protocols may also be used to take down connections in the Optical Transport Network when the connections are no longer needed.

In recent years a new device known as an OpenFlow Switch and new protocol known as OpenFlow have been introduced. In a classical router or switch the fast packet forwarding data path and the high level routing decisions control path occur on the same device. An OpenFlow Switch separates these two functions onto separate devices. The data path portion still resides on the router or switch while high level routing decisions are moved to a separate controller which is typically a standard server. An exemplary high level routing decision includes the computation of a new path within the network and notifying routers or switches of the new path. The OpenFlow Switch and Controller communicate via the OpenFlow protocol which defines messages such as packet received send packet out modify forwarding table and get stats.

Methods and systems are disclosed that provide additional flexibility in the deployment and management of the transport networks including methodologies for software defined networking SDN configuration for multi layer multi vendor provisioning in data transport networks enabling utilization of smart applications non exclusive examples of which include bandwidth on demand Layer 1 Optical Virtual Private Networks and overlay networks. In some embodiments the transport network is provided with a plurality of nodes with at least some of the nodes having a control module having a first processor accessing a first database storing first network node configuration information and being configured to compute a first path to a destination node within the transport network through the output interface with the first network node configuration information. Once the first path is computed then the first processor sends first signals which can conform to RSVP or RSVP TE signaling protocols to other nodes on the first path so that the other nodes will be configured to be a part of the first path. The transport network is also provided with a SDN configuration manager that may be separate from the plurality of nodes. The SDN configuration manager has a second processor accessing a second database storing second network node configuration information and being configured to compute a second path from a headend node that does not include the second processor to a tailend node of the plurality of nodes updating the second network configuration information with information indicative of the second path and sending second signals to at least the headend node and the tailend node to provision the second path. The second signals may conform to the protocol of the first signals or may utilize a different protocol such as a protocol referred to in the art as OpenFlow. 

Utilizing first and second processors with the first processor being a part of the headend node of the paths computed by the first processor within the transport network and the second processor being separate from the headend node of at least some of the paths computed by the second processor within the transport network provides additional flexibility in the management configuration discovery monitoring and provisioning of the transport network.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

The mechanisms proposed in this disclosure provide additional flexibility in the management configuration discovery monitoring and provisioning of the transport network. The present disclosure describes methods and systems which enhance the management and provisioning of transport networks which may conform to the GMPLS protocols for example. In some embodiments the transport network is provided with a plurality of nodes with at least some of the nodes having a control module having a first processor accessing a first database storing first network node configuration information and being configured to compute a first path to a destination node within the transport network through the output interface with the first network node configuration information. Once the first path is computed then the first processor sends first signals which can conform to RSVP or RSVP TE signaling protocols to other nodes on the first path so that the other nodes will be configured to be a part of the first path. The first processor can be a component of a headend node of the first path.

The transport network is also provided with a SDN configuration manager that may be separate from the plurality of nodes. The SDN configuration manager has a second processor accessing a second database storing second network node configuration information and being configured to compute a second path from a headend node that does not include the second processor to a tailend node of the plurality of nodes updating the second network configuration information with information indicative of the second path and sending second signals to at least the headend node and the tailend node to set up and enable the second path. The second signals may conform to the protocol of the first signals or may utilize a different protocol such as a protocol referred to in the art as OpenFlow. 

Utilizing first and second processors with the first processor being a part of the headend node of the paths computed by the first processor within the transport network and the second processor being separate from the headend node of at least some of the paths computed by the second processor within the transport network provides additional flexibility in the management configuration discovery monitoring and provisioning of the transport network as will be discussed below.

The first processor may execute implicit provisioning in which a SDN configuration manager instructs the headend node to compute the path. In this case the creation of required cross connects may be handled by the GMPLS control plane running on the network elements.

The second processor may execute explicit provisioning in which the SDN configuration manager computes the path and also instructs network elements to create any required cross connects. In this scenario the GMPLS control plane running on the network elements is not required for path computation purposes.

In one embodiment a computer system may include a software defined networking configuration manager having a processor computing and provisioning paths through an optical transport network for multiple switch nodes to be provisioned as head end nodes the processor managing and interpreting data indicative of managed entities within the optical transport network to create a first network Sub Network Connection SNC for a first customer and a second network SNC for a second customer the first network SNC being representative of a first graphical illustration of a state of first resources within the transport network that are allocated to the first customer and the second network SNC being representative of a second graphical illustration of a state of second resources within the transport network that are allocated to the second customer.

In one embodiment a computer system may include a software defined networking configuration manager having a processor computing and provisioning paths through a physical optical transport network for multiple switch nodes within the physical optical transport network and instructing one or more switch nodes to compute one or more paths through the physical optical transport network the processor receiving and interpreting data indicative of managed entities within the physical optical transport network to create a logical network indicative of the physical optical transport network the physical optical transport network having first resources allocated to a first customer and second resources allocated to a second customer the processor extracting first information from the logical network to provide a first graphical illustration of a first state of the first resources within the physical optical transport network and second information from the logical network to provide a second graphical illustration of a second state of the second resources.

In one embodiment a method may include generating a logical network indicative of a physical optical transport network by a software defined networking configuration manager having a processor programmed to compute and provisioning paths through the physical optical transport network for multiple switch nodes to be provisioned as head end nodes the physical optical transport network having first resources allocated to a first customer and second resources allocated to a second customer providing a first graphical illustration of a first state of the first resources within the physical optical transport network to a first user device associated with the first customer and providing a second graphical illustration of a second state of the second resources within the physical optical transport network to a second user device associated with the second customer.

If used throughout the description and the drawings the following short terms have the following meanings unless otherwise stated 

GMPLS stands for Generalized Multi Protocol Label Switching which extends Multi Protocol Label Switching to encompass time division for example SONET SDH PDH G.709 wavelength lambdas and spatial multiplexing e.g. incoming port or fiber to outgoing port or fiber . The GMPLS framework includes a set of routing protocols which runs on a control module. The Generalized Multiprotocol Label Switching architecture is defined for example in RFC 3945.

IETF stands for Internet Engineering Task Force. The Internet Engineering Task Force IETF is a volunteer group dedicated to improving the Internet by proposing uniform standards for data transfer protocols among other things. The IETF has recently extended GMPLS to allow for the transmission of more data through an Optical Transport Network OTN . The IETF publishes Requests for Comment RFC detailing proposed standard protocols.

IP stands for Internet Protocol which is a protocol used for communicating data across a packet switched internetwork using the Internet Protocol Suite also referred to as TCP IP.

LSP stands for Label Switched Path which is a path through a Generalized Multi Protocol Label Switching network. Note that Label Switched Paths can be bidirectional or unidirectional they enable packets to be label switched through the Multiprotocol Label Switched network from a port on an ingress node which can be called a headend node to a port on an egress node which can be called a tailend node .

MPLS stands for multi protocol label switching which is a scheme in telecommunications networks for carrying data from one node to the next node. MPLS operates at an OSI model layer that is generally considered to lie between traditional definitions of layer 2 data link layer and layer 3 network layer and is thus often referred to as a layer 2.5 protocol.

OTN stands for Optical Transport Network which includes a set of optical switch nodes which are connected by optical fiber links. ITU T recommendations G.709 and G.872 define OTN interface requirements and network architecture respectively.

SDN as used herein stands for Software defined networking which includes software which may be executed by hardware that is separate from switch nodes within the optical transport network and which includes the functionality to compute and provision paths through the optical transport network for multiple switch nodes as well as instruct one or more switch nodes to compute paths through the optical transport network.

TE stands for Traffic Engineering which is a technology that is concerned with performance optimization of operational networks. In general TE includes a set of applications mechanisms tools and scientific principles that allow for measuring modeling characterizing and control of user data traffic in order to achieve specific performance objectives.

Network Priority refers to Setup Holding priority as defined in RFC 3209 RSVP TE Extensions to RSVP for LSP Tunnels December 2001. In general network priorities are assigned to connections in a shared mesh network and utilized to indicate which connections take precedent over other connections.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by anyone of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

In addition use of the a or an are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the inventive concept. This description should be read to include one or more and the singular also includes the plural unless it is obvious that it is meant otherwise.

Further use of the term plurality is meant to convey more than one unless expressly stated to the contrary.

Also certain portions of the implementations have been described as components or circuitry that perform one or more functions. The term component or circuitry may include hardware such as a processor an application specific integrated circuit ASIC or a field programmable gate array FPGA or a combination of hardware and software. Software includes one or more computer executable instructions that when executed by one or more component cause the component or circuitry to perform a specified function. It should be understood that the algorithms described herein are stored on one or more non transient memory. Exemplary non transient memory includes random access memory read only memory flash memory or the like. Such non transient memory can be electrically based or optically based. Further the messages described herein may be generated by the components and result in various physical transformations.

Finally as used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Referring now to the drawings and in particular to shown therein and designated by a reference numeral is an exemplary computer system constructed in accordance with the present disclosure. The computer system is a system or systems that are able to embody and or execute the logic of the processes described herein. The logic embodied in the form of software instructions or firmware may be executed on any appropriate hardware which may be a dedicated system or systems or a personal computer system or distributed processing computer system.

Preferably the computer system is distributed and includes a host system communicating with one or more user devices via a network . In some embodiments the host system is used to implement the functionality of a SDN configuration manager which is discussed below. The network can be the Internet or other network. In either case the host system typically includes one or more servers configured to communicate with the network via one or more gateways . When the network is the Internet the primary user interface of the computer system is delivered through a series of web pages but the primary user interface can be replaced by another type of interface such as a Windows based application. This method is also used when deploying the computer system in a stand alone environment such as a kiosk.

The network can be almost any type of network although Internet and Internet 2 networks are preferred because of the wide support of their underlying technologies. The preferred embodiment of the network exists in an Internet environment which means a TCP IP based network. It is conceivable that in the near future the preferred or other embodiments may wish to use more advanced networking topologies.

The servers can be networked with a LAN . The gateway is an entity responsible for providing access between the LAN and the network . The gateway can also be used as a security means to protect the LAN from attack from external networks such as the network .

The LAN network can be based on a TCP IP network such as the Internet or it can be based on another underlying network transport technology. The preferred embodiment uses an Ethernet network with TCP IP because of the availability and acceptance of underlying technologies but other embodiments may use other types of networks such as Fibre Channel SCSI Gigabit Ethernet etc.

As discussed above in one preferred embodiment the host system includes the servers . The configuration of the server hardware will depend greatly upon the requirements and needs of the particular embodiment of the computer system . Typical embodiments including the preferred embodiment will include multiple servers with load balancing to increase stability and availability. It is envisioned that the servers will include database servers and application web servers. The database servers are preferably separated from the application web servers to improve availability and also to provide the database servers with improved hardware and storage.

The user devices can be any number and type of devices. The most typical scenario of the user device involves an end user using a computer with a display and one or more input device such as a keyboard and mouse . The display can be a single monitor or multiple adjacent monitors. Typically the user device uses a type of software called a browser as indicated by a reference numeral to render HTML XHTML content that is generated when requesting resources from a source such as the host system . In the preferred embodiment the computer system is designed to be compatible with major Web Browser vendors Microsoft Internet Explorer Mozilla Firefox Google Chrome Opera and the like and the host system can be organized as a web site. Other embodiments may wish to focus on one particular browser depending upon the common user base using the computer system .

The user devices can also be implemented as a portable device such as a laptop computer or handheld computer a cellular telephone with a micro or embedded Web Browser a Portable Digital Assistant PDA capable of wireless network access a pen based or tablet computer having a touchscreen . In another embodiment the user device can be a cable box or other similar device for viewing through a display or television. Current embodiments of computer system can also be modified to use any of these or future developed devices.

The computer system is designed in this way as to provide flexibility in its deployment. Depending upon the requirements of the particular embodiment the Engine could be designed to work in almost any environment such as a desktop application a web application or even simply as a series of web services designed to communicate with an external application.

The hardware and system software are designed with two key concerns flexibility and scalability. Although some specifics for software and hardware components may be mentioned herein it will be understood that a wide array of different components could be substituted such as using different database vendors or even replacing the databases with XML based document stores.

When the computer system is used to execute the logic of the processes described herein such computer s and or execution can be conducted at a same geographic location or multiple different geographic locations. Furthermore the execution of the logic can be conducted continuously or at multiple discrete times.

The computer system is further provided with a SDN configuration manager comprised of a collection server and the host system for managing a plurality of nodes cooperating to form at least a part of a transport network which is shown in . The collection server communicates with the nodes via the network and serves to collect network topology information internal to at least some of the nodes as well as network topology information external to the nodes . The SDN configuration manager utilizes the network topology information to compute paths set up the paths activate deactivate the paths and report network state information to customers and others via the user devices . To obtain network configuration information set up the paths and or activate deactivate the paths the SDN configuration manager may communicate messages directly with the nodes via the network . Alternatively one or more of the nodes may act as a proxy for other nodes to increase the scalability and flexibility in deploying the computer system . For example the node may act as a proxy for nodes . In this instance a message intended for node would be delivered by the SDN configuration manager to the node which would forward the message to the node . Using certain of the nodes to act as proxies for other nodes to obtain network configuration information set up the paths and or activate deactivate the paths increases the scalability and flexibility in deploying the computer system . The nodes may communicate with each other using the network . Network configuration information can be obtained by the nodes exchanging identification information between interfaces for example.

As will be discussed in more detail below the SDN configuration manager may utilize a transport network protocol such as GMPLS to compute and or manage the paths within the transport network . Another protocol such as one referred to in the art as OpenFlow may be used to communicate with the nodes to set up activate or deactivate the paths within the transport network .

A hardware diagram of one of the servers is shown in . In general the server is provided with one or more processor which is referred to hereinafter as the processor one or more input device one or more output device and one or more computer readable medium hereinafter referred to as the computer readable medium . Two input devices are shown in and designated by reference numerals and for purposes of clarity. The input devices function to receive information and to supply the information to the processor and can be constructed in various types or manners. For example the input device can be adapted to communicate with the one or more of the other servers the collection server and or one or more of the user devices with the LAN and the input device can be adapted to communicate with a keyboard . The input device can be a serial device for example.

Two output devices are shown in and designated by reference numerals and for purposes of clarity. The output devices function to supply information from the processor to another device and can be constructed in various types or manners. For example the output device can be a video controller adapted to communicate with a display having one or more monitor and the output device can be adapted to communicate with the one or more of the other servers the collection server and or one or more of the user devices with the LAN utilizing any suitable protocol.

The processor as shown in is capable of communicating with the computer readable medium as well as reading and or executing the computer executable code. The processor can be located at any location relative to the computer readable medium as long as the processor is able to communicate with the computer readable medium . The processor may for example be implemented as one or more microprocessors one or more microcontrollers one or more field programmable gate arrays one or more digital signal processors or the like. It is to be understood that the processor may contain one two three or a plurality of microprocessors microcontrollers field programmable gate arrays digital signal processors or the like or any combination thereof.

Shown in is the transport network for communicating between San Francisco and New York for example. The transport network is formed by a plurality of interconnected managed entities. The managed entities can be any structures within the transport network that are capable of receiving and transporting information. The structure and type of the managed entities can vary and typical examples of managed entities include sub network connections cross connects ports links manual circuits protection connections and the like which cooperate to form the transport network . For example the transport network may include the following managed entities a first sub network connection a second sub network connection a third sub network connection a first link connecting the first sub network connection and the second sub network connection in San Francisco as well as a second link connecting the second sub network connection and the third sub network connection in New York. In the example shown in the first sub network connection and the third sub network connection can be considered metro networks and the second sub network connection can be considered a core transport network. The first second and third sub network connections and generally extend between Santa Cruz Calif. and Danbury N.Y. and can be made up of two different hardware types including a reconfigurable switched DWDM system utilizing GMPLS enabled end end service intelligence for the core transport network and a DWDM CWDM system including a ring topography for the metro networks.

Sub networks and may be Ethernet packet networks and sub network may be a WDM Transport network. In current systems sub networks are handled by separate departments network operations causing delays and increase operational costs for creating end to end service orders.

A sub network connection referred to herein as a SNC is a logically divided sub division of the transport network . A sub network connection preferably has the following attributes 

3. Service Rate Indicates the type of data traffic the SNC will carry. The Type of traffic itself indicates whether the SNC is channelized or not.

A link can be a physical link managed by software as a managed entity that is used to connect two sub network connections together to establish communication there between.

Assuming that a customer desires to setup a telecommunication service from Santa Cruz Calif. to Danbury N.Y. the following steps should be followed 

1. User creates a Circuit SNC in the San Francisco SFO metro network SNC 1 identified in as the first sub network connection .

2. User creates a Circuit SNC in the core transport network between SFO to New York SNC 2 identified in as the second sub network connection .

3. User creates a Circuit SNC in the New York metro network SNC 3 identified in as the third sub network connection .

4. After that User has to connect the SNC 1 to SNC 2 using a Link 1 between 2 different types of nodes and identified in as the first link .

5. Similarly user connects SNC 2 TO SNC 3 using Link 2 between 2 different types of nodes and identified in as the second link .

These five steps create five different managed entities the first sub network connection the second sub network connection the third sub network connection the first link and the second link . In the past the customer can manage these five managed entities individually and make sure that the customer signals are handled by those five entities properly. However the computer system in accordance with the present disclosure may consolidate the five managed entities and provides a single Network Sub Network Connection SNC creating in essence a virtual overlay indicative of the five managed entities. A Network SNC is a single management service for a customer which can be displayed graphically to the customer via the user devices . As will be described below the computer system manages and interprets many different kinds of managed entities and merges them into a single Network SNC for the customer. Multiple Network SNCs can be created for each customer or a single Network SNC can be created for each customer. In either instance this greatly simplifies the management of the managed entities for the customer because the virtual overlay provides a graphical illustration of the state of the resources within the transport network that are allocated to the customer.

Referring now to shown therein and designated by reference numeral is a block diagram of an exemplary node constructed in accordance with the present disclosure. The node is adapted to facilitate the communication of data which may be referred to herein as traffic between multiple nodes in the transport network . The transport network may be for example an optical transport network OTN .

The node is provided with one or more input interfaces one or more output interfaces a control module and a switch . In general the input interfaces shown here as and are adapted to receive traffic from the transport network and the output interfaces shown here as and are adapted to transmit traffic onto the transport network . The switch serves to communicate the traffic from the input interfaces and to the output interfaces and . And the control module serves to control the operations of the input interfaces and the output interfaces and and the switch as well as to compute and set up label switched paths LSP or statically provisioned manual cross connect within the transport network having a headend node and a tail end node of which the control module is a component of the headend node. The node may also include non transitory memory not shown either within the control module and or the switch or separate from the control module and or the switch which stores a database having network configuration information indicative of the topology of the transport network and an internal topology of at least some of the nodes within the transport network .

The node can be implemented in a variety of ways including commercial installations having one or more backplanes not shown racks and the like. In this example the input interface s the output interface s the control module and the switch are typically implemented as separate devices which may have their own power supply local memory and one or more processor referred to hereinafter as the processor but which are installed within the same rack or installation of racks. In another example the node can be implemented as a single device having a shared power supply memory and processing equipment. Or in another example the node can be implemented in a modular manner in which one or more of the input interface s the output interface s the control module and the switch share a power supply and or housing.

The input interface s and the output interface s of one node are adapted to communicate with corresponding input interface s and output interface s of another node within the transport network via communication links as shown in . An example of an input interface and or an output interface is an Ethernet card or optical port. In general each of the input interface s and or the output interface s may have a unique logical identification such as an IP address or Logical Port Number Identifier. The input interfaces and the output interfaces may be of different combinations. For example one or more input interfaces may be Ethernet interfaces and one or more output interfaces may be OTN interfaces.

The communication links can be implemented in a variety of ways such as a physical link including electrical e.g. copper wire or coax and or optical signal e.g. optical fiber or other waveguide carrying capabilities or as a wireless link. The communication links can be fiber optic cables electronics cables wireless communication links or the like.

The implementation of the input interface s and the output interface s will depend upon the particular type of communication link that the particular input interface and or output interface is designed to communicate with. For example one of the input interfaces can be designed to communicate wirelessly with another node within the transport network while one of the output interfaces of the node can be designed to communicate optically through a fiber optic link. For a particular node the input interfaces and can be of the same type or different types the output interfaces and can be of the same type or different types and the input interface s and output interface s can be of the same type or different types.

The input interface and the output interface are shown separately for purposes of clarity. However it should be understood that one or more of the input interfaces and or the output interfaces could be connected to a single communication link and implemented as a single device such as a line module. Exemplary line modules are described in U.S. Pat. No. 8 223 803 Application Publication number 20090245289 the entire contents of which are hereby incorporated herein by reference.

As discussed above the control module has its own processing capabilities and memory and can execute transport network protocols. The control module is also provided with a communication interface configured to connect to a communication link which is external to the node . The control module utilizes the communication interface to communicate with control modules of other nodes within the transport network to obtain network node configuration information of nodes and or topologies within the transport network . The control module may also utilize the communication interface to communicate with the SDN configuration manager as discussed above.

The processing capabilities of the control module may be implemented as one or more processors as discussed above. The network node configuration information can be stored within a database that is stored within the memory of the control module . To set up a path within the transport network a signal can be sent to the control module via the communication interface including an identification of a particular interface on a destination node within the transport network . In this case the control module of the node will be the headend node of the path to be set up within the transport network . The processor of the control module receives the signal including the identification of the destination node and accesses network node configuration information from the database including information indicative of the particular interface and destination node and computes a path to the destination node utilizing at least one of the output interfaces. Once the path is computed the control module provides instructions to the switch to configure the switch to communicate traffic from one or more of the input interfaces and to one or more of the output interfaces and . The control module also sends signals which can conform to RSVP or RSVP TE signaling protocols to other nodes on the path so that the other nodes will be configured to be a part of the path.

The control module is also programmed and or configured to be switched between a variety of different states to work together with the SDN configuration manager to manage setup and or configure the node and or the transport network . In one state the control module runs the transport network protocol such as GMPLS to compute paths signal other nodes with network configuration information as well as to set up and activate paths within transport network . In another state the tasks associated with computing paths signaling other nodes with network configuration information as well as to setting up and activating paths within the transport network are allocated to the SDN configuration manager . In this state instructions received from the SDN configuration manager via the communication interface for setting up and activating paths within the transport network are provided from the control module to the switch to configure the switch to communicate traffic from one or more of the input interfaces to one or more of the output interfaces .

The control module may also be programmed with instructions establishing the control module and the SDN configuration manager to work together to allocate resources provided by one or more of the input interfaces and output interfaces . For example the input interface may be able to receive 500 Gb of bandwidth which may be divided up among a variety of resources such as time slots or wavelengths. In this instance certain of the resources of the input interface may be allocated to be managed by the control module and others of the resources of the input interface may be allocated to be managed by the SDN configuration manager . For example 200 Gb may be allocated to the control module and the remaining 300 Gb may be allocated to the SDN configuration manager . In this state when a path is computed by the control module that utilizes resources allocated to be managed by the control module the control module computes the path and then configures the switch to allocate at least a portion of the first resources to communicate the traffic received from the input interface to one or more of the output interfaces . When a path is computed by the SDN configuration manager involving the resources managed by the SDN configuration manager the SDN configuration manager sends instructions to the control module via the communication interface which provides instructions to the switch to allocate at least a portion of the second resources to communicate traffic from the input interface to one or more of the output interfaces . The same state can be used to manage the resources of the other input interfaces and output interfaces of the node . Management of the states of the control module can be implemented by setting bits within the memory of the control module that can be interpreted by the processor of the control module . Likewise allocation of particular resources of the input and output interfaces and can be implemented by setting bits within the memory of the control module and bits within the memory of the SDN configuration manager . In some embodiments information indicative of the management of the states and allocation of particular resources of the input and output interfaces and may be stored in one or more databases storing network node configuration information.

The number of devices and or networks illustrated herein is provided for explanatory purposes. In practice there may be additional devices and or networks fewer devices and or networks different devices and or networks or differently arranged devices and or networks than are shown in . Furthermore two or more of the devices illustrated in may be implemented within a single device or a single device illustrated in may be implemented as multiple distributed devices. Additionally or alternatively one or more of the devices of environment may perform one or more functions described as being performed by another one or more of the devices of environment . Devices of environment may interconnect via wired connections wireless connections or a combination of wired and wireless connections.

SDN configuration manager may include one or more devices that gather process search store and or provide information in a manner described herein. The SDN configuration manager may also be referred to as an orchestration console or network controller. SDN configuration manager may receive and or store network information regarding multiple layers within the transport network via the collection server for example. The SDN configuration manager may receive and or store information regarding network configuration which may include a quantity location capacity status and or configuration of NEs failure information communication priority characteristics and or configurations e.g. capacity of paths and or super channels between NEs traffic demands of NEs and or super channels between NEs and or any other network configuration information associated with the network e.g. optical device configurations digital device configurations etc. within a database.

Network topology information may be determined by using standard topology discovery procedures. NEs may provide network information to the collection server which is then forwarded or accessed by the SDN configuration manager for example through messages to the collection server and or the SDN configuration manager .

SDN configuration manager may control one or more of the NEs . SDN configuration manager may use any Application Program Interface API to discover information about the network topology of and or to setup and or control the NEs non exclusive examples of which include NETCONF REST OpenFlow TL1 etc. to discover configure reconfigure NEs and to support protection recovery mechanisms.

SDN configuration manager may provide information associated with the network configuration changes to the transport network and or NEs in order to allocate network bandwidth and or super channels based on the network information such as link failures and path priorities.

SDN configuration manager may include a bus a processor a memory an input component an output component and a communication interface . In some implementations SDN configuration manager may include additional components fewer components different components or differently arranged components than those illustrated in .

Bus may include a path that permits communication among the components of device . Processor may include a processor a microprocessor and or any processing logic e.g. a field programmable gate array FPGA an application specific integrated circuit ASIC etc. that may interpret and execute instructions. Memory may include a random access memory RAM a read only memory ROM and or any type of dynamic or static storage device e.g. a flash magnetic or optical memory that may store information and or instructions for use by processor .

Input component may include any mechanism that permits a user to input information to device e.g. a keyboard a keypad a mouse a button a switch etc. . Output component may include any mechanism that outputs information e.g. a display a speaker one or more light emitting diodes LEDs etc. . Communication interface may include any transceiver like mechanism such as a transceiver and or a separate receiver and transmitter that enables device to communicate with other devices and or systems such as via a wired connection a wireless connection or a combination of wired and wireless connections. For example communication interface may include mechanisms for communicating with the NEs . Additionally or alternatively communication interface may be a logical component that includes input and output ports input and output systems and or other input and output components that facilitate the transmission of data to and or from other devices such as an Ethernet interface an optical interface a coaxial interface an infrared interface a radio frequency RF interface a universal serial bus USB interface or the like.

SDN configuration manager may perform various operations described herein. SDN configuration manager may perform these operations in response to processor executing software instructions contained in a computer readable medium such as memory . A computer readable medium may be defined as a non transitory memory device. A memory device may include space within a single storage device or space spread across multiple storage devices.

Software instructions may be read into memory from another computer readable medium or from another device via communication interface . Software instructions stored in memory may cause processor to perform processes that are described herein. Additionally or alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

SDN configuration manager may include a Network Service Provisioning Manager and a Network Configuration Manager . Each of functional components may be implemented using one or more components of SDN configuration manager . The functional components of SDN configuration manager may be distributed singularly or duplicatively in any manner between NEs and or devices external to the transport network . In some implementations SDN configuration manager may include other functional components not shown that aid in managing network configurations and allocating network resources. Network Service Provisioning Manager may perform operations associated with managing a network configuration. In some implementations Network Service Provisioning Manager may receive network configuration information from NEs .

The initial network configuration information provided to Network Service Provisioning Manager may be supplemented with network configuration information received from NEs . For example NEs may provide real time network deployment information to update the initial network configuration information. For example Network Service Provisioning Manager may receive network configuration information from NEs that identifies newly deployed NEs and or new super channels between NEs . Additionally or alternatively Network Service Provisioning Manager may receive other network configuration information from NEs such as super channel allocation information that identifies super channels that are available for optical transmission assigned to transmit optical signals currently being used to transmit optical signals and or blocked from transmitting optical signals.

Network Configuration Manager may perform operations associated with configuring an optical network and or network entities associated with an optical network. For example Network Configuration Manager may compute a path between a headend node and a tailend node and then supply signals to particular ones of the nodes and or other NEs that are on the path to cause the nodes and or other NEs to allocate resources to the path. Network Configuration Manager may receive information associated with network configuration changes. Network Configuration Manager may communicate the information associated with the changes to NEs and or other devices in optical network so that the switches may adjust their configuration in accordance with the network configuration changes. For example Network Configuration Manager may provide instructions to NEs that indicate that NEs are to reserve capacity e.g. bandwidth over one or more super channels connecting NEs . In some implementations Network Configuration Manager may receive information validating a changed configuration from NEs and may provide the configuration validation information to user device .

Returning now to NEs may include one or more devices that gather process store and or provide information in a manner described herein. For example NEs may include one or more optical data processing and or traffic transfer devices such as an optical node an optical add drop multiplexer OADM a reconfigurable optical add drop multiplexer ROADM an optical multiplexer an optical demultiplexer an optical transmitter and optical receiver an optical transceiver a photonic integrated circuit an integrated optical circuit a computer a server a router a bridge a gateway a modem a firewall a switch a network interface card a hub and or any type of device capable of processing and or transferring optical traffic. In some implementations NEs may include OADMs and or ROADMs capable of being configured to add drop multiplex and demultiplex optical signals. NEs may process and transmit optical signals to other NEs throughout optical network in order to deliver optical transmissions.

SDN configuration manager may provide information associated with the network configuration changes to another device such as user device so that a user may interact with the SDN configuration manager to determine the status of and or configure the transport network .

The transport network may include Layer 2 Layer 3 NEs such as routers. Transport network may include integrated ROADM and OTN NEs providing L1 and L0 functionality. Network may include communication links between NEs and or the SDN configuration manager .

In the example illustrated in the NEs include integrated ROADM and OTN network elements NE and which may provide Layer 1 and Layer 0 functionality. The NEs also include Layer 2 Layer 3 network elements NE .

The SDN configuration manager and or NEs may configure one or more optical channels such as one or more super channels to carry data through the network over the NEs and the communication links .

A super channel as used herein may refer to multiple optical carriers that are simultaneously transported over the same optical waveguide e.g. a single mode optical fiber . Each optical carrier included in a super channel may be associated with a particular optical wavelength or set of optical wavelengths . The multiple optical carriers may be combined to create a super channel using wavelength division multiplexing. For example the multiple optical carriers may be combined using dense wavelength division multiplexing in which carrier to carrier spacing may be less than one nanometer. In some implementations each optical carrier may be modulated to carry an optical signal.

An example frequency and or wavelength spectrum associated with super channels is illustrated in . In some implementations the frequency and or wavelength spectrum may be associated with a particular optical spectrum e.g. C Band C Band etc. . As illustrated super channel may include multiple optical carriers each of which corresponds to a wavelength e.g. 1 2 through 10 within a first wavelength band. Similarly super channel M may include multiple optical carriers each of which corresponds to a wavelength e.g. Y X through Y within a second wavelength band. The quantity of illustrated optical carriers per super channel is provided for explanatory purposes. In practice super channel may include any quantity of optical carriers .

Optical carrier may be associated with a particular frequency and or wavelength of light. In some implementations optical carrier may be associated with a frequency and or wavelength at which the intensity of light carried by optical carrier is strongest e.g. a peak intensity illustrated by the peaks on each optical carrier . In some implementations optical carrier may be associated with a set of frequencies and or a set of wavelengths centered at a central frequency and or wavelength. The intensity of light at the frequencies and or wavelengths around the central frequency and or wavelength may be weaker than the intensity of light at the central frequency and or wavelength as illustrated.

In some implementations the spacing between adjacent wavelengths e.g. 1 and 2 may be equal to or substantially equal to a bandwidth or bit rate associated with a data stream carried by optical carrier . For example assume each optical carrier included in super channel e.g. 1 through 10 is associated with a 50 Gigabit per second Gbps data stream. In this example super channel may have a collective data rate of 500 Gbps e.g. 50 Gbps 10 . In some implementations the collective data rate of super channel may be greater than or equal to 100 Gbps. Additionally or alternatively the spacing between adjacent wavelengths may be non uniform and may vary within a particular super channel band e.g. super channel . In some implementations optical carriers included in super channel may be non adjacent e.g. may be associated with non adjacent wavelengths in an optical spectrum .

Each super channel may be provisioned in transport network as one optical channel and or as an individual optical channel. Provisioning of an optical channel may include designating an optical route and or path for the optical channel through transport network and can be computed by either the control module of the node functioning as the head end node for the path or the SDN configuration manager . For example an optical channel may be provisioned to be transmitted via a set of NEs . In some implementations NEs may be configured as a ring. Additionally or alternatively NEs may be configured in a point to point configuration. Provisioning may be referred to as allocating and or allocation herein. Even though each super channel is a composite of multiple optical carriers the optical carriers included in super channel may be routed together through transport network . Additionally or alternatively super channel may be managed and or controlled in transport network as though it included one optical channel and or one optical carrier at one wavelength.

The OTSA and or may also facilitate network discovery and network monitoring in the transport network by the SDN configuration manager by collecting information stored locally within the nodes and and transmitting such information to the SDN configuration manager . In addition the OTSA and or may also facilitate provisioning of paths within the transport network by receiving and implementing instructions indicative of paths to be provisioned activated or deactivated by the node and or

OTSA and or present a simplified abstraction of one or more converged transport systems suitable for integration into SDN frameworks. For example the simplified abstraction may provide less than all of the information about the network. Rather the simplified abstraction may represent the network elements and information required for a particular Network Service. OTSA and or may be used to extend OpenFlow protocol for transport functions by receiving and executing instructions in the OpenFlow protocol on the nodes and or . OTSA and or may utilize other Web based Application Program Interfaces APIs for example REST when managing configuring discovering network topologies and monitoring the functions of the nodes and

Utilization of OTSA and the SDN configuration manager provides flexible deployment scenarios. For example the OTSA and the SDN configuration manager may be run natively on programmable packet optical transport platforms and or on one or more separate servers and or in the internet cloud . The OTSA and the SDN configuration manager can be run from anywhere in or out of the network in a singular or distributed fashion and still provide connectivity to customers to the network as a whole and or to particular Network Services.

Additionally utilization of OTSA supports multiple provisioning modes. For example OTSA may establish local control of the node by the control modules in the nodes referred to as implicit provisioning or can in effect disable the local control functionality of the control modules in the nodes to establish control of the nodes by the SDN configuration manager referred to as explicit provisioning or can establish a hybrid between implicit and explicit provisioning. The OTSA may utilize standard GMPLS protocols as are well known in the art.

OTSA collection and utilization of such categories by the SDN configuration manager creates a simplified view referred to herein as a virtual overlay of the transport network that can be provisioned configured managed and controlled. The information indicative of the nodes may be utilized to create a logical virtual transport system of the virtual overlay with switching capability and capacity. The information indicative of the links can be used as an abstract of inter OTSA bandwidth and physical implementation of the virtual overlay. Links provide generalized topological bandwidth links that maps to a set of physical resources and may provide a tunnel to an adjacent node and or to a trib. Links may be comprised of logical ports plus link attributes. The nodes need not be physically adjacent. The information indicative of the logical Ports may provide points for data plane connectivity of the virtual overlay. Logical Ports are logical ports for service connectivity that map to physical port resources. Not all physical ports are enabled to be controlled by the SDN configuration manager . Ports and Nodes that are not enabled to be controlled by the SDN configuration manager may be excluded from the virtual network if desired.

The virtual overlay of the transport network is used by the SDN configuration manager to create a Network SNC for each customer including indicia which can be displayed graphically to the customer via the user devices . Indicia may be used to communicate information to the customer. As discussed above the computer system including the SDN configuration manager manages and interprets many different kinds of managed entities and merges them into a single Network SNC for the customer. Multiple Network SNCs can be created for each customer or a single Network SNC can be created for each customer. In either instance this greatly simplifies the management of the managed entities for the customer because the virtual overlay provides a graphical illustration of the state of the resources within the transport network that are allocated to the customer. The Network SNC for each customer may include indicia indicative of whether the nodes links and ports are under local control of the control modules or under external control by the SDN configuration manager .

In the SDN configuration manager is implemented within one or more server for example in the servers of the host system which may be the Service Provider Network Operations Center . The OTSA may run within a server running the SDN configuration manager or run separately from the SDN configuration manager . OTSA may run on node .

In the SDN configuration manager is implemented within the cloud and OTSA may run on node . The SDN configuration manager may also handle multi vendor adaptors for different vendor specific APIs for communicating with the nodes . Alternatively the SDN configuration manager may utilize a common protocol for communicating with the OTSA installed on each node which may utilize vendor specific APIs for provisioning configuring managing and or controlling the nodes 

The server based feature platform of the OTSA may be independent of embedded network element control management planes. The OTSA software is decoupled from the network element software such that the OTSA software may be upgraded without coordination with network element software releases.

Similarly as shown in GMPLS may be utilized for creating a tunnel between non adjacent OTSA instances within a GMPLS domain. For explanatory purposes the GMPLS domain in comprises Nodes and with respective OTSA instances OTSA A OTSA B and OTSA C. Nodes may contain one or more OTN line modules. In the case of a L1 tunnel digital express an OTSA level logical tunnel may be created between node and node for example. Physical OCG connectivity is via an intermediate digital site node where a line to line cross connection is implemented. However the abstracted virtual network provided to the customer may simply show node and node and a tunnel between node and node

Of course it will be understood that the implementations of the SDN configuration manager and the OTSA running on two or more of the nodes that are described herein are merely for explanatory purposes and that other variations may be implemented for transport networks.

Conventionally in a classical router or switch the fast packet forwarding data path and the high level routing decisions control path occur on the same device. An OpenFlow Switch separated these two functions. The data path portion of the OpenFlow switch still resides on the switch while high level routing decisions were moved to a separate controller typically a standard server. Additionally in current systems sub networks in an overall network are handled by separate departments network operations causing delays and increase operational costs for creating end to end service orders.

In accordance with the present disclosure methods nodes and systems are described which enhance the management and provisioning of transport networks which may conform to the GMPLS protocols for example. In one embodiment instead of segmented networks a virtual overlay network is created comprising of network elements from the three segments. The end to end SNC can then be created on top of the virtual overlay network. In some embodiments the transport network is provided with a plurality of nodes with at least some of the nodes having a control module having a first processor accessing a first database storing first network node configuration information and being configured to compute a first path to a destination node within the transport network through the output interface with the first network node configuration information. Once the first path is computed then the first processor sends first signals which can conform to RSVP or RSVP TE signaling protocols to other nodes on the first path so that the other nodes will be configured to be a part of the first path. The first processor can be a component of a headend node of the first path.

The transport network is also provided with a SDN configuration manager that may be separate from the plurality of nodes and which can disable at least a portion of the functionality of the control modules of particular nodes within the transport network to allow a second processor accessing a second database storing second network node configuration information to compute a second path from a headend node that does not include the second processor to a tailend node of the plurality of nodes updating the second network configuration information with information indicative of the second path and sending second signals to the switches of the headend node and the tailend node to set up and enable the second path. The second signals may conform to the protocol of the first signals or may utilize a different protocol such as a protocol referred to in the art as OpenFlow. 

Utilizing a hybrid approach with first and second processors with the first processor being a part of the headend node of the paths computed by the first processor within the transport network and the second processor being separate from the headend node of at least some of the paths computed by the second processor within the transport network provides additional flexibility in the management configuration discovery monitoring and provisioning of the transport network.

The foregoing description provides illustration and description but is not intended to be exhaustive or to limit the inventive concepts to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the methodologies set forth in the present disclosure.

Further while implementations have been described in the context of an optical network this need not be the case. These implementations may apply to an electronic network using copper cabling or even a wireless network. It should be understood that the methods described herein may be applied to any protection or protection scenario for any mesh network.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the disclosure. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim the disclosure includes each dependent claim in combination with every other claim in the claim set.

No element act or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such outside of the preferred embodiment. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

