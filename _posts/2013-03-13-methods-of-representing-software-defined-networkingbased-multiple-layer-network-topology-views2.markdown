---

title: Methods of representing software defined networking-based multiple layer network topology views
abstract: A method for network control, comprising receiving a request for a network view from an application at a Software Defined Network (SDN) controller, creating a network view from a network map, wherein the network map comprises a representation of a plurality of network devices and network paths in a SDN-based multiple layer network, and wherein the network view comprises at least a portion of the devices or paths in the network map, and sharing the network view with the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584369&OS=09584369&RS=09584369
owner: Futurewei Technologies, Inc.
number: 09584369
owner_city: Plano
owner_country: US
publication_date: 20130313
---
Software defined networks SDN have emerged as a promising new technology. In SDNs network control is decoupled from forwarding and is directly programmable e.g. by separating the control plane from the data plane and implementing the control plane using software applications and a centralized SDN controller which may make the routing decisions and communicate these decisions to all the devices on the network. This migration from tightly bound individual network device control to control using accessible computing devices has enabled the underlying infrastructure to be abstracted for applications and network services permitting treatment of the network as a logical or virtual entity.

SDN architecture networks may be divided into multiple logical layers networking devices e.g. routers switches servers etc. Networking Operating Systems NOSs SDN controllers and user applications. SDN controllers are software modules built over NOS in network systems and may provide platforms for users to write applications and services via Application Programming Interfaces APIs . One goal of SDNs is to simplify the existing network software systems and provide an open platform for developing user applications. However present SDN architectures do not efficiently utilize the limited network resources.

In one aspect the disclosure includes a method for network control comprising receiving a request for a network view from an application at an SDN controller creating a network view from a network map wherein the network map comprises a representation of a plurality of network devices and network paths in a SDN based multiple layer network and wherein the network view comprises at least a portion of the devices or paths in the network map and sharing the network view with the application.

In another aspect the disclosure includes an apparatus comprising a processor configured to monitor a plurality of network devices underlying a SDN create a network map comprising a representation of the topology of the network devices create at least one network view comprising less than all of the network devices and network paths comprised within the network map share the at least one network view with an application.

In yet another aspect the disclosure includes a computer program product comprising computer executable instructions stored on a non transitory medium that when executed by a processor cause the processor to assess a network map for one or more capabilities wherein the network map comprises a representation of a plurality of network devices and network paths in a SDN based multiple layer network select a plurality of network devices from the network map for inclusion in a network view wherein the plurality of network devices is less than the total number of network devices in the network map create a network view and share the network view with at least one application

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed are the methods of representing SDN based multiple layer network topology views e.g. logical or virtualized representations of the network of the underlying hardware devices. These topological views may be developed from a larger network map containing the full panoply of network information. As used herein the term network map may mean a virtual representation of the underlying network topology state information dynamic traffic flow volume information and or other network state information stored in a computer memory and may include the real world transmission performance capabilities of the underlying network nodes e.g. bandwidth latency port capability jitter etc. as well as the real world links between the network nodes. SDNs may provide applications with topological views also referred to herein as network views of the underlying networks. As used herein the term network view may mean a logical representation of at least a portion of a whole network map e.g. a subnet stored on a computer memory and transmittable between devices e.g. an SDN controller and an application running on a computer device. The network views may be represented based on multiple layer virtualized SDNs. Based on the network views user applications may define their own data flow paths also called network paths or links in the SDN. Using these network views user applications may define data flow paths and may operate the simplified subnet views provided by the SDN more efficiently. SDN controllers may interact with NOSs may collect network information for user applications and may provide applications with various views e.g. global network topology views network views services views resource views and or subnet views.

Whereas traditional virtualized networks are static configured and fixed for applications the disclosed approach may allow dynamic allocation of virtualized subnets to applications based on the applications needs using minimum system resources. This may save system resources per applications and let different applications share whole network resources in maximum. The views defined according to the disclosure may be dynamically created and destroyed making network utilization more efficient and flexible. This may also permit user application to cease handling complicated network controls as in normal networks.

The SDN controller may comprise a Network Map Controller e.g. Network Map Controller of which may identify and store the global network topology in a map. The Network Map Controller may comprise a Network Map Element a Mapping Services Element a Directing Services Element and an Event Services Element . Network Map Element may store the network map. Mapping Services Element may receive input from the network devices for updating the network map e.g. adding a new node to the physical network topology stored in Network Map Element . Directing Services Element which may be provided by a NOS e.g. NOS of may let applications directly setup forwarding path e.g. by allowing the applications to make routing decisions rather than the routing protocol. Event Services Element may monitor the function of one or more network paths and or network devices and may inform the Network Map Controller of event based changes e.g. a failed link or component.

The SDN controller may further comprise a Network View Controller e.g. Network View Controller of which may select network views e.g. network views of from the global network topology or network map to serve to applications . The Network View Controller may comprise a Network View Element a Network View Element a Network View Element a Path Services Element a Notification Services Element a Discovery Services Element and a Location Services Element . Network View Elements may store discrete network views comprising at least a portion of the network map devices and or paths or in some embodiments alternate network views from Network Map Element and may be in communication with Applications e.g. via a programmable API or Controller Interface which may be an interface engine for exchanging data between e.g. APIs at applications and the Network View Elements . As shown in a single network view stored at a Network View Element e.g. Network View Element may service a single application e.g. application . Similarly a single application e.g. application may have access to network views stored at multiple Network View Elements e.g. Network View Elements and . Similarly a single network view stored at a single Network View Element e.g. Network View Element may service multiple applications e.g. applications and . This sharing may be managed by the Network View Controller . The sharing of network views by multiple applications or multiple applications sharing the same network view may optionally be visible to the applications which are using them separately e.g. using Virtual Local Area Network VLAN or Virtual Private Network VPN techniques according to network configurations. The connections between Network View Elements and applications are illustrative of the interactions permissible and are not limiting as would be understood by one of skill in the art. Path Services Element may identify one or more available paths between devices on the physical network and passing the information to the Network View Controller so that appropriate network views may be selected for the requesting application. Notification Services Element may interface with the applications to inform the applications of events and or changes in the relevant network view s and or underlying physical network. Discovery Services Element may identify services that the network may provide in the network view. Location Services Element may find the service location and one or more preferred paths for reaching the service location.

Returning to network maps a network map and or network topology may be a complete representation of the physical network managed under the Network Map Controller e.g. comprising network components and or forwarding devices of . Network maps may include communications links bandwidth latency port capability etc. of the physical network e.g. network components and or forwarding devices of . Network maps may comprise nodes representing the physical devices and links representing the connections between the physical devices. Nodes may be direct maps of nodes or may be representations of e.g. a subnet in a map. Each node may have a node name assigned by the Network View Controller or in some embodiments by querying a policy database where names may be defined by a Network Manager . Network Manager may be a program for providing detection and configuration for systems to automatically connect to network as well known in the art. Links may be direct maps of paths between nodes may be tunnels e.g. virtual links between nodes or may be abstractions of logical paths between nodes. Links may represent multiple parallel connections between nodes and may be represented by the link s attributes or capabilities. The SDN Controller may further comprise an element for Routing Services for interfacing with and finding connectivity within the network e.g. network devices which element may comprise a Universal Message Object UMO API and or NOS.

Network View Elements may comprise select portions of the global network map e.g. as apportioned by the Network View Controller . The Network View Controller may ensure that the Network View Elements are compatible with the requests of the applications . For example if a link in a network view is a virtual link over multiple network nodes e.g. a tunnel or abstraction of a logical path between network nodes the Network View Controller may ensure that the virtual link does not include any loops. Network View Elements may include node and link capabilities. Node capability may be the physical routing device s capability as monitored by e.g. Mapping Services Element or may be any abstract capability defined by the map and Network View Controller . Link capability may be the physical link s capability as monitored by e.g. Mapping Services Element or may be any abstract capability defined by the map and Network View Controller . Link capability may be a direct mapping of the link capability if it may be a direct mapping of a link in map. Link capability may be a tunnel capability that may be the minimum of all capabilities between two nodes. Link capability may be a combination of multiple parallel connections between nodes equal to or less than the summation of the combined link capabilities. Link capability may be classified or reclassified by the Network View Controller based on the application request and or current network map status. For example if a network map link has a 10 gigabits per second G bandwidth capacity the mapped link in view may be 2G or 8G etc. depending on e.g. actual conditions in the network etc. If a link has a latency of 1 millisecond ms then the mapped link in the network view passed to the application may have 2 ms according to Network View Controller .

Network View Elements may be created at the request of an application . Applications may provide some special requirements on the network view e.g. minimum capabilities of the nodes and or links. Network View Controller may create the network view according to such requirements coupled with the currently available resources. Network View Controller may assign a network view ID to newly created network views and may allocate system resources to the view e.g. Network View Elements . If the application places no special requirement on the requested network view Network View Controller may create a network view based on currently available network resources and default management policies. Once created the Network View Controller may return the view to application. When the application no longer requires the view it may request that the Network View Controller destroy the network view. Network View Controller may then reclaim all network resources allocated to the network view. In embodiments with isolated network view sharing isolated network views may form complete sub network systems permitting additional functionality e.g. users may build network management and control modules in such network views.

At least some of the features methods described in the disclosure may be implemented in a general computing device and or a network apparatus or component such as a computer or network component with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. For instance the features methods of the disclosure may be implemented using hardware firmware and or software installed to run on hardware. illustrates a typical general purpose network component suitable for implementing one or more embodiments of the components disclosed herein. The network component includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM input output I O devices e.g. cameras microphones display screens etc. and network connectivity devices . The processor may be implemented as one or more CPU chips or may be part of one or more application specific integrated circuits ASICs and or digital signal processors DSPs .

The secondary storage is typically comprised of one or more disk drives or erasable programmable ROM EPROM and is used for non volatile storage of data. Secondary storage may be used to store programs that are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

It is understood that by programming and or loading executable instructions onto the general computing device at least one of the processor the ROM and the RAM are changed transforming the general computing device in part into a particular machine or apparatus e.g. a video codec having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment e.g. k is 1 percent 2 percent 3 percent 4 percent 5 percent . . . 50 percent 51 percent 52 percent . . . 95 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. All documents described herein are incorporated herein by reference.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

