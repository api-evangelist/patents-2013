---

title: Tiered XML services in a content management system
abstract: A content management system (CMS) includes a value-add application with a first set of XML content services, one or more dedicated XML processing servers with a second and other sets of XML content services, and a core CMS with a third set of XML content services. The content management system may be designed to provide XML content services at any of these three tiers of processing. A first threshold is defined that allows the value-add application to determine when to offload XML content services to a dedicated XML processing server. A second threshold is defined that allows the core CMS to determine when to offload XML content services to a dedicated XML processing server. Callback services are included that allow each tier of XML content services to send or receive additional information to complete the XML processing. The result is a content management system that is very powerful and flexible.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938522&OS=08938522&RS=08938522
owner: International Business Machines Corporation
number: 08938522
owner_city: Armonk
owner_country: US
publication_date: 20130130
---
This disclosure generally relates to content management systems and more specifically relates to services relating to eXtensible Markup Language XML in content management systems.

A content management system CMS allows many users to efficiently share electronic content such as text audio files video files pictures graphics etc. Content management systems typically control access to content in a repository. A user may generate content and when the content is checked into the repository the content may be subsequently processed by the CMS according to predefined rules. A user may also check out content from the repository or link to content in the repository while generating content. The rules in a CMS assure that content that comes into or out of the system or that is linked to meets desired criteria specified in the rules.

Many content management systems are used in situations that require specialized functions not provided by the core content management system. In these situations a value add application is typically provided that provides the specialized functions while still taking advantage of much of the functionality of the core content management system. For example the pharmaceutical industry is heavily regulated and a value add application specific to the pharmaceutical industry may be provided that interfaces with a core content management system.

Because the value add application typically has unique requirements that must be met often the XML content processor with its associated linking bursting and synchronization may be used exclusively by the value add application and the XML content processor with its associated linking bursting and synchronization in the core CMS is not used. While it is possible for the value add application to call low level application programming interfaces APIs in the core CMS to manage content in the content repository doing so makes the value add application designed to the details of the underlying core CMS instead of taking advantage of the repository abstraction layer . In addition if data comes into the repository from sources other than the value add application the data processed by the XML content processor in the core CMS will be processed differently than data processed by the XML content processor in the value add application . Thus in environments where data may be imported directly by the core CMS the processing provided by the value add application is not available. In addition some documents are large and therefore create significant memory requirements on the value add application. Without a way to implement XML content services in a way that overcomes these disadvantages known content management systems will continue to be plagued by the problems discussed above.

A content management system CMS includes a value add application with a first set of XML content services one or more dedicated XML processing servers with a second and other sets of XML content services and a core CMS with a third set of XML content services. The content management system may be designed to provide XML content services at any of these three tiers of processing. A first threshold is defined that allows the value add application to determine when to offload XML content services to a dedicated XML processing server. A second threshold is defined that allows the core CMS to determine when to offload XML content services to a dedicated XML processing server. Callback services are included that allow each tier of XML content services to send or receive information to complete the XML processing. The result is a content management system that is very powerful and flexible and can be implemented using various different core content management systems.

The foregoing and other features and advantages will be apparent from the following more particular description as illustrated in the accompanying drawings.

Many known content management systems use extensible markup language XML due to its flexibility and power in managing diverse and different types of content. One known value add content management system that uses XML is Solution for Compliance in a Regulated Environment SCORE developed by IBM Corporation. XML is growing in popularity and is quickly becoming the preferred format for authoring and publishing. While the discussion herein is in terms of XML documents XML elements and XML processing one skilled in the art will recognize these concepts apply equally as well to things that are not implemented in XML.

A content management system includes a value add application one or more dedicated XML processing servers and a core CMS. The value add application includes a first set of XML content services. The one or more dedicated XML processing servers each include a set of XML content services. The core CMS includes a third set of XML content services. The content management system may be designed to provide XML content services at any of these three tiers of processing. A first threshold is defined that allows the value add application to determine when to offload XML content services to a dedicated XML processing server. A second threshold is defined that allows the core CMS to determine when to offload XML content services to a dedicated XML processing server. Callback services are included that allow each tier of XML content services to send or receive information to complete the XML processing. The result is a content management system that is very powerful and flexible and can be implemented using various different core content management systems.

Referring to networked computer system includes multiple clients shown in as clients A . . . N coupled to a network . Each client preferably includes a CPU storage and memory that contains a document editor and a content management system CMS plugin. Thus client A includes a CPU A storage A memory A a document editor A in the memory A that is executed by the CPU A and a CMS plugin A that allows the document editor A to interact with content in the repository that is managed by the CMS in server . In similar fashion other clients have similar components shown in client A through client N which includes a CPU N storage N memory N a document editor N and a CMS plugin N.

The CMS resides in the main memory of a server computer system that also includes a CPU and storage that includes a content repository that holds one or more documents i.e. content managed by the CMS . Document may include one or more elements . The term element means any section or portion of a document that may be individually displayed or operated on whether actually in the document or linked to the document.

One example of a suitable server computer system is an IBM eServer System i computer system. However those skilled in the art will appreciate that the disclosure herein applies equally to any type of client or server computer systems regardless of whether each computer system is a complicated multi user computing apparatus a single user workstation or an embedded control system. CMS includes a value add application one or more dedicated XML processing servers and a core CMS . Details regarding the value add application dedicated XML processing server s and core CMS are provided below with reference to and other figures. While the value add application the dedicated XML processing server s and core CMS are shown in to reside in the same memory in a single server this is shown for the purpose of illustration. These three items and may be implemented in three different server computer systems instead of on a single server computer system.

In repository is shown separate from content management system . In the alternative repository could be within the content management system . Regardless of the location of the repository the content management system controls access to content in the repository .

Server computer system may include other features of computer systems that are not shown in but are well known in the art. For example server computer system preferably includes a display interface a network interface and a mass storage interface to an external direct access storage device DASD . The display interface is used to directly connect one or more displays to server computer system . These displays which may be non intelligent i.e. dumb terminals or fully programmable workstations are used to provide system administrators and users the ability to communicate with server computer system . Note however that while a display interface is provided to support communication with one or more displays server computer system does not necessarily require a display because all needed interaction with users and other processes may occur via the network interface.

The network interface is used to connect the server computer system to multiple other computer systems e.g. A . . . N via a network such as network . The network interface and network broadly represent any suitable way to interconnect electronic devices regardless of whether the network comprises present day analog and or digital techniques or via some networking mechanism of the future. In addition many different network protocols can be used to implement a network. These protocols are specialized computer programs that allow computers to communicate across a network. TCP IP Transmission Control Protocol Internet Protocol is an example of a suitable network protocol.

The mass storage interface is used to connect mass storage devices such as a direct access storage device to server computer system . One specific type of direct access storage device is a readable and writable CD RW drive which may store data to and read data from a CD RW .

Main memory preferably contains data and an operating system that are not shown in . A suitable operating system is a multitasking operating system known in the industry as i5 OS however those skilled in the art will appreciate that the spirit and scope of this disclosure is not limited to any one operating system. In addition server computer system utilizes well known virtual addressing mechanisms that allow the programs of server computer system to behave as if they only have access to a large single storage entity instead of access to multiple smaller storage entities such as main memory storage and DASD device . Therefore while data the operating system and content management system may reside in main memory those skilled in the art will recognize that these items are not necessarily all completely contained in main memory at the same time. It should also be noted that the term memory is used herein generically to refer to the entire virtual memory of server computer system and may include the virtual memory of other computer systems coupled to computer system .

CPU may be constructed from one or more microprocessors and or integrated circuits. CPU executes program instructions stored in main memory . Main memory stores programs and data that CPU may access. When computer system starts up CPU initially executes the program instructions that make up the operating system.

Although server computer system is shown to contain only a single CPU those skilled in the art will appreciate that a content management system may be practiced using a computer system that has multiple CPUs. In addition the interfaces that are included in server computer system e.g. display interface network interface and DASD interface preferably each include separate fully programmed microprocessors that are used to off load compute intensive processing from CPU . However those skilled in the art will appreciate that these functions may be performed using I O adapters as well.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a non transitory computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The core CMS preferably includes its own set of XML content services shown in as linking bursting and synchronization . The core CMS also includes an XML request broker XML callback services and CMS code . The XML request broker and XML callback services perform similar functions to the XML request broker and XML callback services in the value add application as discussed above. The CMS code represents the software in the core CMS that provides the core logic needed for the core CMS to function properly.

The content management system in further includes a shared file system or distributed cache and one or more dedicated XML processing servers . The shared file system or distributed cache stores XML or related content that may be processed by the value add application the core CMS and the one or more dedicated XML processing servers . Each dedicated XML processing server preferably includes its own tier of XML content services which may include any suitable XML content service including linking bursting and synchronization .

The value add application preferably includes a first threshold used by the XML request broker to determine when to route a requested XML content service to the local XML content services and when to route the requested XML content service to a dedicated XML processing server . The first threshold may be any suitable criteria that may be specified by the user. In one preferred implementation the first threshold relates to resources in the content management system . In the most preferred implementation the first threshold relates to estimated use of memory by the requested XML content service. Note the estimated use of memory is related to the size of a document that needs to be processed using the requested XML content service. Thus when the estimated use of memory is less than the first threshold the XML request broker will route the requested XML content service to the local XML content services in the value add application . When the estimated use of memory is greater than the first threshold the XML request broker will route the requested XML content service to a dedicated XML processing server . Note the dedicated XML processing server is preferably implemented on a separate server computer system than the value add application allowing the value add application to offload compute intensive XML content services to an external dedicated XML processing server .

The core CMS preferably includes a second threshold used by the XML request broker to determine when to route a requested XML content service to the local XML content services and when to route the requested XML content service to a dedicated XML processing server . The second threshold may be any suitable criteria that may be specified by the user. In one preferred implementation the second threshold relates to resources in the content management system . In the most preferred implementation the second threshold relates to estimated use of memory by the requested XML content service. Thus when the estimated use of memory is less than the second threshold the XML request broker will route the requested XML content service to the local XML content services in the core CMS . When the estimated use of memory is greater than the second threshold the XML request broker will route the requested XML content service to a dedicated XML processing server allowing the core CMS to offload compute intensive XML content services to an external dedicated XML processing server . Note the dedicated XML processing server may be the same dedicated XML processing server used by the value add application or may be a different dedicated XML processing server than the dedicated XML processing server used by the value add application .

Note the different tiers of XML content services shown in . The value add application includes its own local XML content services the core CMS includes its own local XML content services and one or more dedicated XML processing servers may include their own XML content services . By providing XML content services at three different tiers in the content management system the system architect that defines the content management system has great flexibility in determining where and how to implement the needed XML content services.

Referring to a method shows the high level function of the content management system at run time i.e. after the system architect has performed method in . First we assume the application code in the value add application calls the XML request broker to perform a requested XML content service step . When the requested XML content service is implemented locally step YES meaning the XML content service is implemented within the value add application the XML request broker then determines when the first threshold for the dedicated XML processing server is satisfied step . When the first threshold for the dedicated XML processing server is satisfied step YES the requested XML content service is performed on the dedicated XML processing server step . When the first threshold for the dedicated XML processing server is not satisfied step NO the local XML content service in the value add application is called step . When the requested XML content service is not implemented locally step NO meaning the XML content service is not implemented within the value add application a call is generated to the requested XML content service in the core CMS step . The XML broker determines whether the second threshold for the dedicated XML processing server is satisfied step . When the second threshold for the dedicated XML processing server is satisfied step YES the requested XML content service is performed on a dedicated XML processing server step . When the second threshold for the dedicated XML processing server is not satisfied step NO the local XML content service in the core CMS is called step . Method is then done.

While a dedicated XML processing server is performing the requested XML content service in steps or in the dedicated XML processing server may need to send or receive information via one or more callback services to complete its task. Method determines when the dedicated XML processing server needs to send or receive information to complete its task step . When the dedicated XML processing server needs to send or receive information to complete its task step YES one or more callback services may be invoked to send or receive the needed information step . When the dedicated XML processing server does not need to send or receive information to complete its task step NO step is skipped. The requested XML content service is then completed step .

A simple example is now presented to illustrate the concepts described in general terms above. Referring to specifications for a content management system with a value add application state linking is performed in the value add application linking is offloaded to a dedicated XML processing server if the required memory for the linking exceeds 10 megabytes MB bursting is performed in the value add application bursting is offloaded to a dedicated XML processing server if the required memory for the bursting exceeds 10 MB synchronization is performed in the core CMS and synchronization is offloaded to a dedicated XML processing server if the required memory for the synchronization exceeds 15 MB. Referring to we assume for this example the system architect of the content management system implements the appropriate logic in the value add application the core CMS and the one or more dedicated XML processing servers to meet the specifications in . We now consider the run time behavior of the content management system once configured according to the specifications in .

A method is shown in the flow diagram in . We assume for this example a user requests check in of a document step . When bursting is needed during the check in of the document step YES when the required memory for the bursting is greater than the 10 MB first threshold step YES the dedicated XML processing server performs the bursting step . When the required memory for the bursting is less than the 10 MB first threshold step NO the value add application performs the bursting step . When linking is needed step YES when the required memory is greater than the 10 MB first threshold step YES the dedicated XML processing server performs the linking step . When the required memory is less than the 10 MB threshold step NO the value add application performs the linking step . When synchronization is needed step YES the synchronization in the core CMS is called step . When the required memory for the synchronization is greater than the 15 MB second threshold step YES a dedicated XML processing server performs the synchronization step . When the required memory for the synchronization is less than the 15 MB second threshold step NO the core CMS performs the synchronization step . Method in shows how easily the CMS content services at different tiers in the content management system may be used according to the specifications for the content management system.

A detailed example is now given in to again illustrate function of the content management system when configured according to the specifications in for a specific XML content service. First a user imports an XML document containing links to images to the value add application step . The import action is executed in the application code of the value add application step . The import action of the application code calls the XML broker of the value add application step . We assume for this specific example the document imported by the user has a memory footprint of 12 MB. The XML request broker in the value add application then determines to offload the XML processing to a dedicated XML processing server because the memory footprint of 12 MB exceeds the first threshold of 10 MB step . The XML request broker in the value add application stores the XML file in the shared file system or distributed cache step . Note from this point the shared file system or distributed cache is referred to simply as cache. The XML request broker in the value add application calls XML content services in the dedicated XML processing server step . The XML content services in the dedicated XML processing server reads the file from the cache parses the file and stores the Document Object Model DOM in a Hashmap step . The linking module evaluates the link rules and determines more files are needed from the client step . The XML content services in the dedicated XML processing server sends a reply to the XML request broker in the value add application requesting the missing files step . The XML request broker forwards the request for the missing files to the import XML action in the application code step . The import XML action in the application code sends a message to the client to upload the missing files step . The client then uploads the missing files step . Note that steps and may involve user participation or may be performed by the user s client computer system without the user s participation. The import XML action in the application code then calls the XML broker of the value add application step . The XML request broker stores the missing files in the cache step . The XML request broker in the value add application then calls the XML content services in the dedicated XML processing server using the same key as the first call step . The XML content services checks the DOM map previously created step . The XML content services reads the missing files from the cache using the existing DOM step . The XML content services performs the linking and bursting step . During processing the XML content services calls the XML request broker which calls the XML callback services to import any objects into the repository step . The XML callback services calls the import function in the application code to import the objects step . The application code calls the import function in the core CMS to import the objects step . The XML content services in the dedicated XML processing server sends a reply to the XML request broker in the value add application that linking and bursting were successful step . The XML request broker in the value add sends a reply to the import action in the application code that linking and bursting were successful step . The XML request broker in the value add application then calls the synchronization action in the CMS code step . The synchronization action in the CMS code calls the XML request broker in the core CMS step . The XML request broker in the core CMS determines to use local XML content services in the core CMS because the memory footprint of 12 MB does not exceed the second threshold of 15 MB step . The local XML content services in the core CMS then performs the synchronization step . The local XML content services in the core CMS sends a reply to the XML request broker in the core CMS that synchronization was successful step . The XML request broker in the core CMS then sends a message to the import action in the application code that synchronization was successful step .

Note that assumes a particular implementation for the content management system in that could vary within the scope of the disclosure and claims herein. The steps in are shown to illustrate one specific implementation without limiting the application of the disclosure and claims herein to any specific implementation.

While the specific examples above define a first threshold for the value add application and a second threshold for the core CMS other thresholds could be defined and used in the content management system. For example the value add application could have three different thresholds the first for linking the second for bursting and the third for synchronization. The disclosure and claims herein extend to any suitable type and number of thresholds in the content management system that determine when to offload a requested XML content management service to a dedicated XML processing server.

The specific examples above show linking bursting and synchronization as three specific XML content services that may be implemented in a tiered manner in the content management system. Note however that other XML content services could also be included whether currently known or developed in the future.

The content management system disclosed herein includes XML content services that are defined in multiple tiers. One or more thresholds determine whether processing of an XML content service is offloaded to a dedicated XML processing server. One or more callback services may be called when an XML content service needs to send or receive information to complete its task. The result is a very powerful and flexible architecture for a content management system.

One skilled in the art will appreciate that many variations are possible within the scope of the claims. Thus while the disclosure is particularly shown and described above it will be understood by those skilled in the art that these and other changes in form and details may be made therein without departing from the spirit and scope of the claims.

