---

title: Data flow path determination
abstract: A method of determining a data flow path within a computing network includes, with the processor executing a data flow path determination module, determining a number of data flow paths between a first node and a second node within the computing network, and with a with the processor executing a graphical user interface (GUI) module, displaying the data flow paths to a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09288143&OS=09288143&RS=09288143
owner: HEWLETT PACKARD ENTERPRISE DEVELOPMENT LP
number: 09288143
owner_city: Houston
owner_country: US
publication_date: 20131014
---
A software defined networking SDN manager in a network builds a path through the network to allow a number of devices to connect with other devices within the network. Once the SDN manager builds a path through the network the SDN manager makes decisions about where network traffic is sent by instructing switches within the network to forward packets of data traveling across the network between the devices. As a result the devices are connected to the other devices.

Throughout the drawings identical reference numbers designate similar but not necessarily identical elements.

SDN networks utilize applications tied to a controller within a network to program data flows through the network. The applications utilize application program interfaces APIs and other interlaces to communicate with the controller. Although there may exist instances were an SDN network is utilized where no applications are present a desire to benefit from an SDN network may still exist. Further there are network environments that do not have developers that can utilize the programmatic interface of the controller. The present SDN manager in relation to the above abstracts the programmatic interface of the controller and provides a number of graphical user interfaces GUIs to program the controller and create network paths within the network.

The SDN manager builds a path through a network and makes decisions about where and how network traffic is sent by instructing switches or other computing devices within the network to forward packets of data traveling across the network between the nodes within the network. In some circumstances a user may desire an optimized data transfer path to be built by the SDN manager in order to provide for a desired or required bandwidth within that data transfer path. In another circumstance a user may desire a shortest data flow path with the least amount of hops between two nodes. Thus the present SDN manager provides for the creation of data flow paths within the network based on a user desired or user selected data flow path goal.

As used in the present specification and in the appended claims the term node is meant to be understood broadly as any interconnection point within a computer network. For example a node may be a possessing device a controller a core a switch a router a server device client devices printers or a computing device among may other types of hardware devices within the network and combinations thereof.

Further as used in the present specification and in the appended claims the term a number of or similar language is meant to be understood broadly as any positive number comprising 1 to infinity zero not being a number but the absence of a number.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present systems and methods. It will be apparent however to one skilled in the art that the present apparatus systems and methods may be practiced without these specific details. Reference in the specification to an example or similar language means that a particular feature structure or characteristic described in connection with that example is included as described but may not be included in other examples.

Turning now to the figures is a block diagram of a software defined network SDN manager according to one example of the principles described herein. The SDN manager may be implemented in an electronic device. Examples of electronic devices include servers desktop computers laptop computers personal digital assistants PDAs mobile devices smartphones gaming systems and tablets among other electronic devices.

The SDN manager enables network architects or other users to design and create end to end paths through a SDN domain using a map of the topology of the network. The map of the topology is displayed to the user via a number of graphical user interfaces GUIs . The paths created using the SDN manager is achieved through the GUIs provided by the SDN manager . Each path displayed within the GUI of the mapped topology represents a data path in hardware from two or more nodes in the SDN domain.

In one example data flow paths may be manually created by selecting via the GUIs nodes from the topology map. In another example data flow paths may be automatically created by the SDN manager . In this example the SDN manager selects two end nodes from the topology map. In one example the SDN manager selects the two end nodes based on user input. In another example the user selects the end nodes via the GUIs. In this example of automatic data flow path creation the GUI displays to the user an option of choosing an optimized data flow path or a shortest data flow path An optimized data flow path is defined by a data flow path within the network with the most bandwidth available. A shortest data flow path is defined by a data flow path within the network with the fewest hops between the two selected end nodes.

In one example the paths may be automatically and continuously monitored. This monitoring may be performed to audit security within the network and the hardware devices. Monitoring may also be used to ensure isolation of a data flow path through the network. In most cases a data flow path may not overlap or intersect another data flow path. If data flow paths were permitted to overlap or intersect data integrity may be compromised and result in a voiding of multi tenancy requirements where two individual tenants are not allowed to accesses another tenant s data flows through the network. Monitoring may also be performed to ensure that service level agreements SLAs are being met and to ensure that overall infrastructure capacity loading is being accomplished.

The SDN manager may be utilized in any data processing scenario including stand alone hardware mobile applications through a computing network or combinations thereof. Further the SDN manager may be used in a computing network a public cloud network a private cloud network a hybrid cloud network other forms of networks or combinations thereof. In one example the methods provided by the SDN manager are provided as a service over a network by for example a third party. In this example the service may comprise for example the following a Software as a Service SaaS hosting a number of applications a Platform as a Service Paas hosting a computing platform comprising for example operating systems hardware and storage among others an Infrastructure as a Service IaaS hosting equipment such as for example servers storage components network and components among others application program interface API as a service APIaaS other forms of network services or combinations thereof. Further the present systems and methods may be implemented on a wired network wireless network physical network virtual network or combinations thereof.

The present systems may be implemented on one or multiple hardware platforms in which the modules in the system can be executed on one or across multiple platforms. Such modules can run on various forms of cloud technologies and hybrid cloud technologies or offered as a SaaS Software as a service that can be implemented on or off the cloud. In one example one of the multiple platforms may be the Intelligent Management Center IMC network management platform developed and distributed by Hewlett Packard Company. In another example the methods provided by the SDN manager are executed by a local administrator.

To achieve its desired functionality the SDN manager comprises various hardware components. Among these hardware components may be a number of processors a number of data storage devices a number of peripheral device adapters and a number of network adapters . These hardware components may be interconnected through the use of a number of busses and or network connections. In one example the processor data storage device peripheral device adapters and a network adapter may be communicatively coupled via a bus .

The processor may include the hardware architecture to retrieve executable code from the data storage device and execute the executable code. The executable code may when executed by the processor cause the processor to implement at least the functionality of determining a number of data flow paths between a first node and a second node within a computing network displaying the data flow paths to a user via a number of graphical user interfaces GUIs and utilizing a selected data flow path as the data flow path through which the first node and a second node communicate according to the methods of the present specification described herein. In the course of executing code the processor may receive input from and provide output to a number of the remaining hardware units.

The data storage device may store data such as executable program code that is executed by the processor or other processing device. As will be discussed the data storage device may specifically store computer code representing a number of applications that the processor executes to implement at least the functionality described herein.

The data storage device may include various types of memory modules including volatile and nonvolatile memory. For example the data storage device of the present example includes Random Access Memory RAM Read Only Memory ROM and Hard Disk Drive HDD memory . Many other types of memory may also be utilized and the present specification contemplates the use of many varying type s of memory in the data storage device as may suit a particular application of the principles described herein. In certain examples different types of memory in the data storage device may be used for different data storage needs. For example in certain examples the processor may boot from Read Only Memory ROM maintain nonvolatile storage in the Hard Disk Drive HDD memory and execute program code stored in Random Access Memory RAM .

Generally the data storage device may comprise a computer readable medium a computer readable storage medium or a non transitory computer readable medium among others. For example the data storage device may be but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples of the computer readable storage medium may include for example the following an electrical connection having a number of wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store computer usable program code for use by or in connection with an instruction execution system apparatus or device. In another example a computer readable storage medium may be any non transitory medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

The hardware adapters in the SDN manager enable the processor to interface with various other hardware elements external and internal to the SDN manager . For example the peripheral device adapters may provide an interface to input output devices such as for example display device a mouse or a keyboard. The peripheral device adapters may also provide access to other external devices such as an external storage device a number of network devices including for example servers switches and routers client devices other types of computing devices and combinations thereof that exist within the network.

The display device may be provided to allow a user of the SDN manager to interact with and implement the functionality of the SDN manager . The peripheral device adapters may also create an interface between the processor and the display device a printer or other media output devices. The network adapter may provide an interface to other computing devices within for example a network thereby enabling the transmission of data between the SDN manager and other devices located within the network.

The SDN manager may display the number of graphical user interfaces GUIs on the display device associated with the executable program code representing the number of applications stored on the data storage device . The GUIs may include aspects of the topology of the network including a number of devices within the network communication links between the devices and a number of data flow paths between a number of nodes within a the network. The GUIs may further display a selected data flow path as the data flow path through which a first node and a second node communicate according to the methods of the present specification described herein.

By making a number of interactive gestures on the GUIs of the display device a user may select a number of nodes between which a user desires to create a data flow path. Additionally via making a number of interactive gestures on the GUIs of the display device a user may select an optimized data flow path between the number of nodes. The optimized data flow path defines a data flow path within the network with the most available bandwidth. The optimized data flow path is determined based on bandwidth requirements of a number of applications executed within said network. The user may also select a shortest data flow path the shortest data flow path defining a data flow path within the network with the least amount of hops between a first node and a second node.

Examples of display devices include a computer screen a laptop screen a mobile device screen a personal digital assistant PDA screen and a tablet screen among other display devices . Examples of the GUIs displayed on the display device will be described in more detail below.

The SDN manager further comprises a number of modules used in the implementation of determining a number of data flow paths between a first node and a second node within a computing network displaying the data flow paths to a user via a number of graphical user interfaces GUIs and utilizing a selected data flow path as the data flow path through which the first node and a second node communicate according to the methods of the present specification described herein. The various modules within the SDN manager comprise executable program code that may be executed separately. In this example the various modules may be stored as separate computer program products. In another example the various modules within the SDN manager may be combined within a number of computer program products each computer program product comprising a number of the modules.

In still another example the modules may be instead embodied as a number of data processing engines a number of application specific integrated circuits ASICs or other processing devices that perform the functionality described herein with regard to the various modules. In this example the processing devices may be coupled to the various hardware devices within the SDN manager in order to perform their functionality. However the present SDN manager will be described herein as comprising a number of modules.

The SDN manager may include a topology mapping module to when executed by the processor discover and identify a number of hardware computing devices within a computing network. As described herein the hardware computing devices may include for example a processing device a controller a core a switch a router a server device or a computing device among many other types of hardware devices that may exist within a network.

The SDN manager may also include a GUI module to when executed by the processor display the topology as discovered and identified by the topology mapping module on the display device to a user. In this manner the GUI module provides a user intelligible representation of the topology of the network and the communication links between the nodes within the topology.

The SDN manager may further include a data flow path determination module to when executed by the processor determine a number of data flow paths between a number of nodes with the computing network. In one example the data flow path determination module may determine all possible data flow paths between all nodes with the computing network. In another example the data flow path determination module may determine an optimized data flow path between a number of nodes within the computing network. In this example the data flow path determination module may use data related to the execution of a number of applications within the network to determine the optimized data flow path as will be described in more detail below. In another example the data flow path determination module may determine a shortest data flow path within the network. The shortest data flow path is defined by a data flow path within the network with the least amount of hops between a number of nodes.

The GUI module displays the number of data flow paths determined by the data flow path determination module in a number of the GUIs generated by the GUI module . The GUI module may display all of the data flow paths the optimized data flow path the shortest data flow path or combinations thereof. In this manner the GUI module provides a user intelligible representation of the data flow paths determined by the data flow path determination module .

The SDN manager may further include a data flow monitoring module to when executed by the processor monitor the data flow paths within the computing network. The data flow monitoring module may automatically and continuously monitor the various data flow paths within the computing network including for example currently utilized data flow paths an optimized data flow path a shortest data flow path or combinations thereof. As described above this monitoring may be performed to audit security within the network and the hardware devices. Monitoring may also be used to ensure isolation of a data flow path through the network. In most cases a data flow path may not overlap or intersect another data flow path. If data flow paths were permitted to overlap or intersect data integrity may be compromised and result in a voiding of multi tenancy requirements where two individual tenants are not allowed to accesses another tenant s data flows through the network. Monitoring may also be performed to ensure that service level agreements SLAs are being met and to ensure that overall infrastructure capacity loading is being accomplished. The GUI module may display a number of data flow paths being monitored and their status.

The network of may comprise a network layer a controller layer and an application layer . In the example of the network layer comprises a number of cores a number of switches through and a number of computing devices through . A number of switches through representing switches through respectively may be identified as being included within a number of zones . The zones provide for a user friendly way to understand and represent areas within the network . Examples of switches may include for example a switch that uses an OPENFLOW communications protocol developed and distributed by the Open Networking Foundation a virtual switch vSwitch a physical switch pSwitch or a wireless local area network access point WLAN AP among other types of switches and routers.

As will be discussed in more detail below the zones may be represented within a GUI generated by the GUI module to assist a user in identifying the various nodes through within the network . Further as will described in more detail below the zones when represented in a GUI may be user selectable and expanded to show those nodes that exists within a selected zone. As depicted in zone B and zone C are depicted in a collapsed manner. However although not depicted zone B and zone C also comprise a number of nodes that make up part of the network .

Further although a number of switches through are depicted in the network of any type of hardware device may be included as intermediary hardware elements. The computing devices through of the network may be any type of hardware device. In one example the computing devices through may be located on an edge or terminal of the network .

The hardware devices through of the network layer of the network are coupled to a number of controllers located in the controller layer of the network . The controllers instruct the switches through were to send the data that is to be transmitted through the network.

The controllers are coupled to an application data center that stores a number of applications to be executed by the computing devices through . The application data center is located on the application layer of the network. The applications may include any application that is used to transmit data from one computing device through to another computing device within the network . An example of an application is LYNC messaging application developed and distributed by Microsoft Corporation. LYNC allows for instant messaging voice over internet protocol VOIP and video conferencing. These features of LYNC are bandwidth demanding and if a data flow path within the network is not chosen to have an adequate amount of bandwidth with respect to the features of LYNC being utilized by the computing devices through the user s experience with the application will be diminished. LYNC will be used as an example herein of an application executed on the network and computing devices through .

The applications stored on the application data center utilize the network to transmit data between a number of the computing devices through . As will be described in more detail below the SDN manager uses information associated with the applications in order to provide data flow paths through the network that meet a number of requirements of the applications and ensure a level of quality in the transfer of data between the computing devices through .

In one example the SDN manager although being coupled to all layers of the network is not considered part of any of the layers . The SDN manager communicates with and manages any number of hardware devices in the network level such as for example controllers routers switches servers client devices printers and modem racks among many other forms of hardware devices and may do so either directly or indirectly through another computing device such as for example the controllers . In one example the SDN manager communicates with the hardware devices in the network layer of the network using simple network management protocol SNMP . SNMP is a protocol for managing devices on networks. In this manner the SDN manager communicates with and manages any device that supports SNMP.

In another example the SDN manager communicates with and controls the hardware devices in the network layer using a command line interface CU . A CLI provides interaction with a computer program stored an executed by the hardware devices where the user issues commands to the program in the form of successive lines of text called command lines. Thus the SDN manager communicates with and manages any device that supports CLI.

The SDN manager communicates with and manages the controllers using a representational state transfer REST interface. REST is a programmatic access methodology and software architectural style for distributed hypermedia systems like the World Wide Web. REST may execute any interface that uses extensible markup language XML markup language YAML human readable data serialization format JavaScript object notation JSON scripting language or plain text over hypertext transfer protocol HTTP without an additional messaging layer such as simple object access protocol SOAP . In this manner the SDN manager communicates with and manages any device that supports REST including for example the controllers .

The SDN manager also communicates with manages and provides adequate bandwidth within the network for the applications within the application data center using REST.

In one example the SDN manager may obtain information regarding the applications from the controller which either has that information or obtains that information from the applications . This is performed using the REST interface protocol. In another example the SDN manager obtains the information regarding the applications directly from the applications . This may be performed using the REST interface protocol or depending on the application with JAVA computer programming language developed and distributed by Oracle Corporation or PYTHON computer programming language developed and distributed by Python Software Foundation among other types of programming languages.

As described above the SDN manager by executing the GUI module displays a number of GUIs on the display device of the SDN manager by executing for example the topology mapping module and the GUI module . is a block diagram of a service flow graphical user interface GUI displayed on a display device of the SDN manager of according to one example of the principles described herein. The service flow graphical user interface GUI comprises a network topology window that displays the topology of the network. In the example of the network whose topology is displayed is the topology of the network of . In one example the zones depicted in and reproduced in the network topology window of may be user selectable. In this example when a zone is selected an expanded view is presented to the user. An expanded view may be presented as are Zone A and Zone D are depicted in and as opposed to Zone B and Zone C which are depicted in a collapsed view. In this manner the user may be able to identify and view the switches and other computing devices in a particular zone without making the network topology window cluttered or otherwise difficult to view.

The service flow graphical user interface GUI further comprises a flow list window that displays a number of data flows within the network displayed in the network topology window . As depicted in a number of entries may be depicted in a table format to a user that informs the user of a number of data flows between nodes within the network . In each row of the table the information conveyed within the flow list window may include for example a flow number for a number of data flows a status of a number of devices and a number of device names that identify the device that is represented in each of the rows. The table depicted in the flow list window may also include information regarding an input port of each of the devices a next node with which the node identified in a row is communicating with an output port of each of the devices and a match VLAN field that informs a user as to whether the VLAN fore selected data flow matches a VLAN configured on a physical device.

The service flow graphical user interface GUI further comprises a flow parameters window that provides a user with information regarding a flow selected within the flow list window . Information of the parameters of the selected data flow may include for example a flow name a match VLAN and an amount of bandwidth available within the data flow path measured in for example megabytes among other parameters of the data flow within the network .

A manual tab and an auto tab may be presented to the user. The tabs when selected by a user via the service flow GUI display manually created and automatically created data flow paths within the network . When the manual tab is selected by a user the user may select a number of nodes represented in the network topology window that connect two computing devices through . For example if the network were displayed to a user in the network topology window and the user wanted to communicatively connect computing device to computing device the user would be allowed to select a number of nodes that bridge computing device to computing device . For example the user could with a item selection device such as a mouse or keyboard select the following nodes between computing device and computing device 1 switch 5 2 switch 6 3 switch 1 4 core 1 5 core 2 6 switch 4 7 switch 12 and 8 switch 13 . In this manner the user may dictate which path through the network the data is to flow.

The flow list window displays each of the nodes within the series of user selected nodes that connect the computing device to computing device . In this manner the user can identify what nodes within the network he or she has selected. The flow parameters window will also display the flow parameters of the data flow path that the user selects via the network topology window . In one example the flow parameters displayed to the user in the flow parameters window are adjusted as the user adds nodes to the data flow path as he or she selects the nodes. In this manner the user may identify how the parameters of the data flow path change as nodes are added or subtracted from the data flow path.

If a user selects the auto tab of the flow list window the display device allows or prompts the user to select two nodes such as for example computing devices through or any other two devices within the network . For example in continuation of the above example regarding manual selection of nodes the user may select computing device and computing device as the two devices between which the user wishes to create a data flow path. Once the two nodes are selected the topology GUI of . is a block diagram of a topology GUI displayed on a display device of the SDN manager of according to one example of the principles described herein.

The topology GUI will display the topology of the network of along with an auto generated data flow path between the selected nodes e.g. computing device and computing device . An example of an automatically generated data flow path is depicted in the representation of the topology of the network in the topology GUI as a dashed line between computing device and computing device and a number of intermediary nodes there between.

A number of buttons may be presented to the user to allow the user to select a type of automatically determined data flow path within the network . For example an optimized path button and a shortest path button may be presented to the user for user selection. If the user selects the shortest path button then the SDN manager executing the data flow path determination module will generate a data flow path between computing device and computing device that includes the fewest amount of hops or in other words the lowest hop count. A hop may be defined as one segment of a transmission path between adjacent nodes in a routed network. Thus a hop count may be defined as a measure of the links between two nodes within a network. A hop count of five means that four nodes separate the source and destination devices. Thus the shortest path between computing device and computing device assuming the data flow path depicted in dashed lines in is the shortest data flow path then the hop count between computing device and computing device is nine with eight intermediary nodes.

If the user selects the optimized path button then the SDN manager executing the data flow path determination module determines an optimized data flow path is represented as the data flow path in the topology GUI . The data flow path determination module may take a number of parameters into consideration when determining the optimized data flow path through the network . One parameter the flow path determination module may consider is the data flow requirements of a number of applications being executed between the two user selected nodes the user desires to communicate between. As described above the controllers are coupled to an application data center that stores a number of applications to be executed by the computing devices through . The applications may include any application that is used to transmit data from one computing device through to another computing device within the network . An example of an application is LYNC messaging application described above. The various features of LYNC are bandwidth demanding and if a data flow path within the network is not chosen to have an adequate amount of bandwidth with respect to the features of LYNC being utilized by for example computing device and computing device the user s experience with the application will be diminished.

The SDN manager uses information associated with the applications in order to provide an optimized data flow path through the network that meets a number of requirements of the applications and ensure a level of quality in the transfer of data between the computing devices through . In the example of LYNC the SDN manager executing the data flow path determination module receives a number of bandwidth requirements defined by the LYNC application. Based on these bandwidth requirements the data flow path determination module will consider the data transfer capabilities of a number of the nodes within the network calculations of the available bandwidth between the nodes through within the network and the bandwidth requirements defined by the application being used to transfer data. Using this information the data flow path determination module generates an optimized data flow path . In one example the data flow path determination module determines an optimized data flow path with the most bandwidth or the greatest data transfer speed. The generated optimized data flow path may be presented to the user in the topology GUI of .

Further the status of the selected shortest data flow path or optimized data flow path may be monitored by the SDN manager executing the data flow monitoring module . In one example the flow parameters window of and its information may be displayed to the user in either the service flow GUI of or the topology GUI of . Information regarding the status of the data flow path such as for example the bandwidth through the data flow path and the status of a number of nodes through within the network .

The SDN manager executing the topology mapping module and the GUI module displays block the topology of the network in the service flow GUI . The representation of the network as defined by the topology will identify the nodes through within the network and their relationship using for example graphical elements with links between them representing how the nodes through are connected or otherwise related.

The SDN manager executing the data flow monitoring module and the GUI module displays block information associated with a number of data flows via a flow list window . As described above the displays a number of data flows within the network displayed in the network topology window . As depicted in a number of entries may be depicted in a table format to a user that informs the user of a number of data flows between nodes within the network . In each row of the table the information conveyed within the flow list window may include for example a flow number for a number of data flows a status of a number of devices device and a number of device names that identify the device that is represented in each of the rows. The table depicted in the flow list window may also include information regarding an input port of each of the devices a next node with which the node identified in a row is communicating with an output port of each of the devices and a match VLAN field that informs a user as to whether the VLAN for a selected data flow matches a VLAN configured on a physical device.

The method of may proceed with displaying block information regarding a user selected data flow within the flow list window . As described above information of the parameters of the selected data flow may include for example a flow name a match VLAN and an amount of bandwidth available within the data flow path measured in for example megabytes among other parameters of the data flow within the network .

The SDN manager executing the data flow path determination module and other modules receives block a number of inputs from a user via the service flow GUI and determines block a number of data flow paths from a first node to a second node within the network . As described above the user may select the manual tab of the flow list window and select a number of nodes through between a first and a second node through which the user wants data to transfer through.

In another example and as described above the user may select the auto tab of the flow list window . Thus the SDN manager receives a user selected indication and determines block with the data flow path determination module whether the user selected a shortest data flow path or an optimized data flow path. If the SDN manager determines block determination Shortest that the user wishes to use the shortest data flow path then the SDN manager uses block the data flow path between the two selected computing devices through that includes the fewest amount of hops or in other words the lowest hop count. If however the SDN manager determines block determination Optimized that the user wishes to use the shortest data flow path then the SDN manager uses block the data flow path with the most bandwidth or the greatest data transfer speed. Executing the GUI module the SDN manager displays block the data flow path to the user. Further the status of the selected shortest data flow path or optimized data flow path may be monitored by the SDN manager executing the data flow monitoring module as described above.

Aspects of the present system and method are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to examples of the principles described herein. Each block of the flowchart illustrations and block diagrams and combinations of blocks in the flowchart illustrations and block diagrams may be implemented by computer usable program code. The computer usable program code may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the computer usable program code when executed via for example the processor of the SDN manager or other programmable data processing apparatus implement the functions or acts specified in the flowchart and or block diagram block or blocks. In one example the computer usable program code may be embodied within a computer readable storage medium the computer readable storage medium being part of the computer program product. In one example the computer readable storage medium is a non transitory computer readable medium.

The specification and figures describe an SDN manager and a method of determining a data flow path within a computing network. The specification and figures provide for determining a number of data flow paths between a first node and a second node within the computing network and displaying the data flow paths to a user. This title may have a number of advantages including 1 providing an SDN manager that manages both a software defined network SDN and traditional networking environments 2 providing the ability to easily create paths and in this manner program the network without programming experience or resources and 3 furthering of the adoption of SDNs in various different networking environments including for example datacenters and campuses.

The preceding description has been presented to illustrate and describe examples of the principles described. This description is not intended to be exhaustive or to limit these principles to any precise form disclosed. Many modifications and variations are possible in light of the above teaching.

