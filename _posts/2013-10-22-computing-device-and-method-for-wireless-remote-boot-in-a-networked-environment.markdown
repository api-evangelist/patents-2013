---

title: Computing device and method for wireless remote boot in a networked environment
abstract: In some embodiments, a secure authenticated remote boot of computing device over a wireless network is performed in a pre-boot execution environment (PXE) using active management technology (AMT) for remote discovery. In these embodiments, a management engine (ME) may maintain full control of a wireless interface and a wireless connection as booting begins. The ME may relinquish control of the wireless interface after a PXE timeout, in response to a shutdown command, or once the device has booted. The ME controls the use of an operating system received from a remote location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938610&OS=08938610&RS=08938610
owner: Intel Corporation
number: 08938610
owner_city: Santa Clara
owner_country: US
publication_date: 20131022
---
This application is a divisional of U.S. application Ser. No. 12 623 555 filed Nov. 23 2009 which is incorporated herein by reference in its entirety.

Some embodiments pertain to wireless devices. Some embodiments pertain to remote boots of computing devices.

An operating system may use a variety of sources to boot up in various environments. Networked systems allow a computing device to receive start up information from a network server. A Basic Input Output System BIOS defines a firmware interface which is the first code run by a computing device when powered on. The BIOS loads the operating system identifies tests and initializes system devices. The BIOS prepares the computing device to operate in a known state so that software may be loaded executed and given control of the device.

The state of a computing device is defined by a system image and is used by the BIOS. A computer system boots up by executing BIOS instructions that cause an operating system loader program to be loaded from a disk drive into system memory. The BIOS may then cause the computer system to execute the loader program that in turn causes the computer system to load portions of the operating system into the system memory. Subsequently the operating system may execute one or more program s to initialize and start execution of the operating system.

Many computing devices are wireless devices that include a wireless adapter card for communicating within a wireless network. Wireless adapter cards may not have sufficient memory storage to store operating code and driver codes used to support wireless networked functionality. Thus what is needed are computing devices and methods that provide for wireless remote boot in a networked environment.

The following description and the drawings sufficiently illustrate specific embodiments to enable those skilled in the art to practice them. Other embodiments may incorporate structural logical electrical process and other changes. Examples merely typify possible variations. Individual components and functions are optional unless explicitly required and the sequence of operations may vary. Portions and features of some embodiments may be included in or substituted for those of other embodiments. Embodiments set forth in the claims encompass all available equivalents of those claims.

The following details some embodiments of a method and apparatus for a wireless remote boot such as an Operating System OS streaming method in a networked environment having access to a wireless network. In example embodiments the method and apparatus utilize existing software and firmware instructions e.g. code as well as apparatus to retrieve information that may be used to enable networked boot up from a wireless network for a remote computing device. Such techniques may be implemented without additional memory to the wireless cards that implement the wireless connectivity for the computing device such as wireless fidelity Wi Fi cards. Existing wireless cards may not have sufficient memory to store operating instructions e.g. code and driver codes to support wireless networked functionality.

Some embodiments leverage the central management functions of a central server to provide resources that allow wireless boot up of the computing device. By leveraging wireless network support built into a networked system it is possible to allow a remote boot up from a wireless server without rebuilding the BIOS and other information used at boot up.

In some embodiments a secure authenticated remote boot of computing device over a wireless network is performed in a pre boot execution environment PXE using active management technology AMT for remote discovery. In these embodiments a management engine ME may maintain full control of a wireless interface and a wireless connection as booting begins. The ME may relinquish control of the wireless interface after a PXE timeout in response to a shutdown command or once the device has booted. The ME controls the use of an operating system received from a remote location. These embodiments are described in more detail below. In some embodiments a host embedded controller interface HECI application programming interface API is used to communicate with the ME for communicating over the wireless connection the HECI API to serve as a proxy for the wireless interface when managed by the ME. In some embodiments a universal network driver interface UNDI is used as a host embedded controller interface HECI wrapper the PXE to use the UNDI to communicate with the ME for communicating network traffic over the wireless connection. In some embodiments the computing device is a wireless communication device configured to communicate in accordance with an IEEE 802.11 standard. In some embodiments the computing device is a wireless communication device configured to communicate in accordance with an IEEE 802.16 standard. In some embodiments the computing device is a wireless communication device configured to communicate in accordance with a 3GPP standard for long term evolution LTE .

Furthermore the AMT may remotely heal computing assets so as to provide a proactive alert notification of a system problem even in situations where the computer system is powered off. The AMT provides Out Of Band B access to remotely diagnose control and repair the computer system after software OS or hardware failures. The AMT infrastructure may support the creation of setup and configuration interfaces for management applications as well as network security and storage administration.

The hardware architecture of computer system may be resident in firmware and may include a processing unit such a processing unit a graphics and memory controller hub an I O controller hub and a Local Area Network LAN controller . The processing unit includes software agents and code for an OS . The graphics and memory controller hub includes a micro controller which stores and controls Management Engine ME including firmware to implement various services on behalf of management applications. The computer system further includes a FLASH memory which stores the system BIOS for computer system . The system BIOS includes machine readable code used by the ME and a third party data store 3PDS that enables applications to store information as needed in non volatile memory.

The I O controller hub includes filters sensors and Medium Access Control MAC layer controller which are used to interface with I O ports and control communications with the computer system . A LAN controller is communicatively coupled to the I O controller hub and includes OOB unit and wired network interface . Network interface may be an Ethernet interface although this is not a requirement. A WLAN controller is communicatively coupled to the I O controller hub and includes OOB unit and wireless network interface . The computer system includes multiple Double Data Rate DDR memory units such as DDR2 to transfer data on rising and falling edges of a clock signal. Each DDR2 is communicatively coupled to the graphics and memory controller hub .

The AMT functionality further enables management applications to access client computers in a variety of states by accessing the radio in a wireless Network Interface Card NIC . The NIC allows the computer system to access a wireless network such as wireless network .

A specified amount of main memory may be dedicated to execute ME code and store ME run time data such as in a manner similar to a Unified Memory Architecture UMA which allows a graphics processing unit to share a memory system or other computer memory architecture enabling shared memory. In some embodiments the ME stores ME code in a compressed form in FLASH memory and therefore may be accessed without accessing a hard drive not shown . In such embodiments the computer system prevents access of the ME memory range by the processing unit thus adding security to avoid the ability of malicious software to access the ME code.

The ME can access its dedicated memory space even when the computer system is in a powered down state. The graphics and memory controller hub may dynamically switch among various memory power states to allow ME access to FLASH memory . This capability allows for low average power since the memory is on only when it is to be used.

As illustrated ME may also include various firmware and or software for performing AMT applications administration ADMIN services core services management services and network services . ME may also include management engine hardware abstraction layer and threadX kernel .

The ME may employ an external memory such a memory storage device or system having a UMA type memory architecture. The external UMA memory includes a main memory dedicated to execute ME code for ME and to store ME run time data for ME . The use of the external UMA memory may be similar to UMA memories employed in graphics applications. In some examples the external UMA memory may include or be located adjacent to a graphics UMA memory space. In this way the external UMA memory may include an ME memory space and a graphics memory space. From the perspective of the host OS the graphics memory space may appear slightly larger than the ME memory space.

The host OS may include AMT firmware defined by an AMT server application an AMT client application and a routing application . A protocol engine controls communications and AMT processing while a TCP IP unit controls Transmission Control Protocol TCP and Internet Protocol IP handling of communications. TCP operates at a high level and provides ordered delivery of data packets and information from source to destination. IP is used to package datagrams or packets from source to destination for communication in a packet switched network. The suite of protocols for Internet use is referred to as TCP IP. The protocol engine may be designed to handle multiple protocols such as Simple Object Access Protocol SOAP HyperText Transfer Protocol HTTP and Transparent LAN service TLS . The SOAP protocol is a specification for exchanging structured information to implement web services. SOAP may rely on application layer protocols for process to process communications such as Remote Procedure Call RPC or HTTP for message negotiation and transmission. TLS is a service linking networks such as remote Ethernet networks. TLS allows the connected networks to be viewed as one contiguous network from the user perspective.

Additionally the host OS includes a host HECI driver as well as a LAN driver and LAN hardware . The host HECI driver provides an interface for the HECI interface or HECI bus that allows the host OS to communicate directly with the ME . The bi directional variable data rate bus enables communication of system management information and events. The bus may be implemented with four wires a request and grant pair along with a serial transmit and receive data pair. The LAN driver and LAN hardware provide an interface for the host OS and the ME .

The host OS further communicates with the network server via a connection between LAN hardware and LAN hardware . The network server also includes an AMT server application a protocol engine and a LAN driver . The protocol engines and are similar to the protocol engine and may provide complementary functions.

Message flow between a first client pair may continue without regard to the message flow between a separate client pair. Messages may be of various lengths and may be subject to the limitations of the user s receive buffer rather than limitations of the HECI drivers . The HECI drivers and may comprise software or firmware drivers which break messages into packets to support lengthy messages. Flow control is communicated by HECI bus messages and the HECI driver may wait to transmit a message until an associated client has a receive buffer ready to accept the data.

A FLASH memory such as FLASH memory associated with AMT is shared by multiple masters Host ME and LAN . The FLASH memory is a non volatile memory wherein FLASH refers to the ability to electrically erase and program large blocks of the memory array at the same time. The FLASH memory maintains information stored without requiring power. The FLASH protection scheme does not allow any master to perform a direct write to FLASH and read write permissions to each FLASH region are enforced in hardware. Each master has a grant Override register that can override its descriptor permissions giving other masters access to the region they own. A security override strap is used during initial manufacturing and service returns to program or re program the FLASH memory .

The network interface in one example is an HECI API. The HECI API provides a software interface that is used to communicate to MCH including an ME so as to access AMT capabilities. Communication between the local host operating system OS and the ME is accomplished by means of a HECI driver. The HECI function operates bi directionally as either the host OS or AMT firmware can initiate transactions.

The computing device operationally may boot up from the central server or a wireless network. The ME implements AMT functionality for the computing device.

According to an example embodiment when an option is set to enable PXE and the wireless interface is set by the remote IT console to enable AMT the ME continues to have full control of the WLAN interface and connection even when the computing device starts booting. The ME may relinquish control of the WLAN interface after a PXE timeout or on receipt of HECI commands to de initialize or shut down. The commands may be received from BIOS or PXE OPROM . The BIOS or PXE OPROM may directly use the network interface such as a HECI API to communicate with the ME to send and receive the network traffic over the WLAN not shown in . The network interface will serve as a proxy or virtual interface for the WLAN interface that is managed by the ME . The ME will have full control of the WLAN interface and authentication exchange until the time the system boots.

In an example embodiment the network interface is consistent with the HECI protocol having commands given in Table I in accordance with some example embodiments. The HECI protocol includes call made to the ME to initiate AMT actions.

From the null state on an uplink event for the central server on a networked connection considered an uplink event the computing device transitions to the active state . An uplink event for example may be the detection of a connection to a network such as an Ethernet network. In this way when the computing device initially connects to the network a connection is detected as an uplink event. Further while in the null state on an uplink event for the wireless network the computing device transitions to the passive state . The uplink event may be when the computing device detects the wireless network or when the wireless capability of the computing device is turned on. Other uplink events may be implemented according to the computing environment and system configurations.

From the active state on a link down event the computing device transitions back to the null state . Further when authentication to the central server fails such as when the central server implements an AMT mechanism and transitions to the passive state the computing device may also transition back to the null state .

From the passive state on a link down event the computing device transitions to the null state . When the computing device fails to authenticate on the wireless network host the computing device then transitions to the active state .

Returning to decision point when a network connection is not available the computing device receives an uplink event to the wireless network which is referred to as a host server. At decision point when the computing device authenticates on the wireless network an uplink event is processed and the computing device enters a passive mode in which the device will boot from the wireless network. The computing device receives system image information from the wireless network and uses this information to boot the computing device. If the computing device fails to authenticate at decision point the computing device remains in the null mode .

Both embodiments involve the ME relinquishing control of a NIC after the computing device has booted. The triggers used by ME to relinquish control to the host OS after boot include a configurable timeout for the HECI processing or UNDI API triggers e.g. calls to DEINITIALIZE or SHUTDOWN . When the platform of the computing device is connected to both a LAN such as LAN shown in and a WLAN such as the wireless network also shown in one of the networks will be used for PXE boot. In some embodiments connection to the LAN and the WLAN is mutually exclusive at this point. Processing may be based on the Set8021XPXEEnable interface used with a wired or a wireless interface.

In an example embodiment the PXE information stored in the computing device such as PXE OPROM and is used to support AMT and remote connections to the wireless network. In one example API activities are performed to configure PXE support with AMT implementing a wireless network. In one example the computing device issues a call to Set8021XPXEEnable WLAN. The PXE timeout period is set to a default value of 120 seconds. The API sets the PXE WLAN Config flag in the AMT firmware. The computing device then issues a call to Get8021XPXEEnable WLAN

The host booting procedures transitions according to and may be implemented using the following code 

In some embodiments a machine readable medium is comprised of instructions which when implemented by one or more machines cause the one or more machines to receive a registration request from a service provider store a set of information for the service provider in a memory storage unit and transmit an indication of the service provider to at least one service consumer in the wireless communication network.

Unless specifically stated otherwise terms such as processing computing calculating determining displaying or the like may refer to an action and or process of one or more processing or computer systems or similar devices that may manipulate and transform data represented as physical e.g. electronic quantities within a processing system s registers and memory into other data similarly represented as physical quantities within the processing system s registers or memories or other such information storage transmission or display devices. Furthermore as used herein a computing device includes one or more processing elements coupled with computer readable memory that may be volatile or non volatile memory or a combination thereof.

Embodiments may be implemented in one or a combination of hardware firmware and software. Embodiments may also be implemented as instructions stored on a machine readable medium which may be read and executed by at least one processor to perform the operations described herein. A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . A machine readable medium may include but is not limited to FLASH memory optical disks Compact Disks Read Only Memory CD ROM Digital Versatile Video Disks DVD Read Only Memory ROM Random Access Memory RAM Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM magnetic or optical cards propagation media or other type of machine readable media suitable for storing electronic instructions. For example embodiments may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

It should be appreciated that reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Therefore it should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined as suitable in one or more embodiments.

Similarly it should be appreciated that in the foregoing description of embodiments various features are sometimes grouped together in a single embodiment figure or description thereof for the purpose of streamlining the disclosure in order to aid in the understanding of one or more of the various inventive aspects. This method of disclosure however is not to be interpreted as reflecting an intention that the claimed subject matter requires more features than are expressly recited in each claim. Rather as the following claims reflect inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus the claims following the detailed description are hereby expressly incorporated into this detailed description with each claim standing on its own as a separate embodiment of this invention.

Having disclosed embodiments and the best mode modifications and variations may be made to the disclosed embodiments while remaining within the scope of the embodiments as defined by the following claims.

The Abstract is provided to comply with 37 C.F.R. Section 1.72 b requiring an abstract that will allow the reader to ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to limit or interpret the scope or meaning of the claims. The following claims are hereby incorporated into the detailed description with each claim standing on its own as a separate embodiment.

