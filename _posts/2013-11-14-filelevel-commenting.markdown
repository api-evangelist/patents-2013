---

title: File-level commenting
abstract: Various embodiments provide a commenting system for multiple users to provide and share comments to shared content items. For example, users can share a web link to a collection of content items, such as documents, spreadsheets, photos, and any other media, with other users stored in an online content management system. To enable such functionality, the online content management system can expose an application programming interface to enable third-party service providers to develop and attach a comment interface to content items. Accordingly, such a commenting system can provide a comment interface for concurrent display alongside a respective content item in which users can provide comments to shared content items or to use as notes for their personal content items.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09519525&OS=09519525&RS=09519525
owner: DROPBOX, INC.
number: 09519525
owner_city: San Francisco
owner_country: US
publication_date: 20131114
---
The present technology pertains to editing shared content items and more specifically pertains to enabling users viewing and or editing shared content items to provide shared comments for other users to view.

Various applications allow users to view and or edit the same file or content. In order to add comments or view changes to a document however users have been limited to embedding comments in the text of the document or by using a commenting or versioning feature of the native application used to create the file. Furthermore if the user only has read access to the document the user will have to download a copy of the file add their respective comments and send it back to the owner or send the owner comments through some other mechanism such as email.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for providing a comment interface to enable users to add comments to content items. For example a content item such as a document or image can be shared viewed and or edited by multiple users each of whom can provide comments to a commenting interface to share their comments or thoughts with the other users.

A content management system in accordance with various embodiments can make a content item available for retrieval by providing the content item for display on for example a first computing device of a user through a network. The content item can include a comment interface displayable therewith which can be viewable between the first computing device and at least one second computing device through an account with the content management system. Accordingly the user can provide comments to the comment interface that can be viewed on both the first computing device and the second computing device. Further the content item can be shared among other users through the online content management system and each user can provide comments to the comment interface to share their thoughts and comments with other users viewing and or editing the content item.

In one example the comment interface can be provided through an application plug in or any other interface associated with the content management system or other third party application other than the native application of the content item. Accordingly the comment interface being unassociated with the native application of the content item enables comments to be attached to a content item in a manner that does not alter the data in the content item itself. This can enable commenting on content items that are shared between users using different sharing models e.g. read only read write etc. 

Further comments can be provided to a content item via metadata. In one example the online content management system can expose metadata or some other functionality to third party developers through an Application Programming Interface API . Accordingly the third party developers using the API can attach a comment a comment interface for the content item or some other information to a content item without modifying the raw file data.

The comments can be displayed in a variety of ways such as in a comment interface alongside the content of the document. In some cases the comments can scroll independently of the content in the document. Alternatively the comments can be linked to a location in a document and the scrolling of the comments can be linked to the scrolling of the document such that corresponding comments are displayed. Further the comments can be selectively displayable such that the user can choose whether to display the comment interface concurrently with the content item or whether to display the content item without the comment interface.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for enabling users to provide information such as comments metadata or the like to content items viewable by multiples users across multiple computing device platform and file types. In particular users can provide comments to a comment interface associated with a content item such as a document or image which is available for viewing and or editing through an online content management system. In one example the comment interface can be provided through an application plug in or other interface associated with the content management system and in some instances unassociated with the native application of the content item.

Further comments can be provided to a content item via metadata. In one example the online content management system can expose metadata or some other functionality to third party developers through an Application Programming Interface API . As used herein an API is a set of programming instructions and standards for accessing Web based software applications or tools. The online content management system in this example can release an API to the public so that software developers can design products that are powered by services provided by the online content management system. Accordingly the third party developers using the API can attach a comment a comment interface for the content item or some other information or application to a content item without modifying the raw file data.

In accordance with at least one embodiment the online content management system can expose functionality for enabling users to provide comments to content items. In one example a user can choose to provide comments to document by selecting icon which in one example will expand comment interface or section . In this example comment section can be an application provided by a third party service provider that communicates or interfaces with the content item through metadata or an API provided by the online content management system. Accordingly comment section includes in this example text field for a user to provide their comment a share icon to share document with other users and settings icon for changing user and account preferences.

In at least one embodiment a user can provide one or more comments to text field after for example editing document and sharing the document with other users. Accordingly document in this example has been shared with and viewed by other users. In this example there are three users and each has provided comments to an initial question posed by a first user at the top of section . In this example the first user has created document shared document with a second and third user asked the second and third user for their feedback and the second and third user have provided their thoughts in section .

In one example each user could have provided edits to document and explanations for their edits. In one example each of the comments could be linked to a specific location in the document such as to reword or add content to a specific paragraph. Alternatively the comments could be general and about the document as a whole such as about the background color of document . Further both linked comments and general comments could simultaneously be provided to comment section . For example comments to a specific location or section could be linked to the specific location in document such that when a user selects a respective comment they are brought to the location in document associated with the respective comment. Accordingly the general comments when selected would not navigate the user to a location since they are not associated with any particular location.

Accordingly after each user has provided their comments which are received through the API the file associated with document can be synchronized across each of the user s computing devices in order for each user to have access to a most recent version of document including the most recent comments from all shared users. The synchronization can be performed as a push when a respective user saves or closes document thereby pushing the most recent version to each device associated with the users or as a pull when a respective user requests access to document in order to ensure that changes to document and or comment section are reflected across all associated computing devices.

Further local peer to peer synchronization could also be utilized within the scope of various embodiments discussed herein. For example devices associated with the same user or having access to the same shared folder can determine whether they are on the same local area network and if so establish a secure connection e.g. via SSL and effect synchronization through peer to peer transfer of files. The synchronized files may typically only be provided to computing devices associated with a user who provided the files. For example if a particular user registers his tablet computer laptop and smartphone with the content management system then those three devices will synchronize the files with those devices and otherwise make the file available to the user via the user s login e.g. via a web based or app based interface . Accordingly the content management system will not by default make the files available to devices of other users or via logins other than that of the user who provided the files.

As discussed elsewhere herein comment section can be provided across devices platforms and file types. For example the content management system can provide storage retrieval editing and commenting service for content items such as word processing documents spreadsheets presentations videos streaming content images and any other content or file type. Accordingly shows image displayed on browser in accordance with at least one embodiment. In this example image could be part of a photo album shared among a user s friends and family therefore the user s friends and family could provide comments by typing a message in text field of comment section to be shared among the shared users as described above with respect to . Additionally the user could upload image for private storage and safekeeping with the online content management system and provide comments to comment section to jot down notes about particular memories places and the like associated with image or to a particular album in general.

In at least one embodiment the comment section is provided on an interface different from a native application associated with a respective content item. For example the comment section could be an application layer independent from or layered on top of the native application of a respective file type being displayed. In one example the layer could be associated with an application provided by the third party service provider or by a browser plug in associated with the third party service provider when viewed through a web browser. In one example this could be achieved by adding metadata to each content item that is readable by the application provided or the metadata could point to a location with comment data that is retrievable from the third party service provider by the online content management system.

Accordingly a second type of comment can be created by a user. For example a user could pick a location in a file such as a document image or presentation for a comment and then add text to that particular location. For example in file commenting screenshot a single comment could be attached to a respective slide of the document image or presentation at a point labeled A along with the corresponding comment displayed in the comments section. A comment can also identify a particular user that left the comment along with the date and time the comment was provided.

For example developer can develop a comment interface such as discussed elsewhere herein that enables user and or user to provide comments to or alongside content items . In this example the comment interface communicates or interfaces with content items through API and since the comment interface is a layer on top of the native application associated with a respective content item a comment can be provided to the comment interface without modifying the raw file data of the respective content item .

Accordingly in this example both user and user could each or at least user have an account with online content management system which enables both users to upload a content item such as content item for storage and retrieval. In this example content item could be a collaborative word processing document as discussed with respect to which user had originally uploaded through computing device . In this example user utilizing a comment interface provided by developer could insert one or more comments for example posing questions or explaining portions of content item to his coworkers user to whom content item will eventually be presented to for feedback. In one example the comment s are received through the comment interface and data for each comment is stored with online content management system or alternatively the comments can be stored with developer and data pointing to a location of a respective comment stored with developer can be stored with online content management system .

Accordingly user can share content item with user by sending an invitation in the form of for example a link to content item available through an account associated with user . User after accepting the invitation can view content item on computing device or another device and provide one or more comments to the comment interface. After user provides their comment s online content management system synchronizes the provided comment s and any changes made to content item via second computing device or another device with a copy of content item stored with online content management system and or a copy stored locally on computing device and any other devices associated therewith . Accordingly user after the synchronization is performed can view the comment s provided by user by accessing content item though computing device .

In this example third party service provider could be a social network or file sharing application or website for which online content management system exposes API to enable user to automatically share images such as discussed with respect to for example that are uploaded to an album stored with online content management system . In one example content item could be an image and user could share the same with user by uploading the image to online content management system via computing device which is subsequently made available through third party service provider . In this example user via computing device could for example edit the image by applying filters inserting text drawing on the image using a paint feature or the user could comment on the image and the like.

Accordingly after user edits and or comments on the image content item online content management system can synchronize the same with a copy of content item stored with online content management system and or a copy stored locally on computing device . Accordingly user after the synchronization is performed can view the edits and or comments provided by user by accessing content item though computing device .

In this example a content item uploaded to an account of an online content management system is received . The content item in this example can be a word processing document a spreadsheet a presentation file a video streaming content an image and the like digital content. The online content management system in this example exposes metadata of the content item to third parties to provide a comment section for users to insert comments associated with the content item . In one example the metadata is made available to third parties through an API which can be different or the same for various applications associated with a respective content item. In this example the content item is provided for display on a first computing device . Accordingly a comment is received from a user of the first computing device to the comment section provided by the third party . Upon identifying a change to the content item or upon receiving a comment the content item is synchronized with a copy of the content item stored with the online content management system and or a second computing device . Accordingly the content item and the comment can be provided for display on the second computing device .

An exemplary system configuration for sharing documents and providing synchronized comments among users for the shared documents is shown in wherein computing devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through computing devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different computing devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Computing devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple computing devices .

A user can interact with content management system via a client side application installed on computing device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on computing device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple computing devices . For example computing device can upload content to content management system via network . The content can later be retrieved from content management system using the same computing device or some other computing device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more computing devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from computing devices so that computing devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on computing device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more computing devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple computing devices of varying type capabilities operating systems etc. For example computing device can include client software which synchronizes via a synchronization module at content management system content in computing device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes computing device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other computing devices associated with the user s account. For example multiple computing devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple computing devices .

Content management system can include a communications interface for interfacing with various computing devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific computing devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple computing devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content item management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 6 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 6 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 6 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

