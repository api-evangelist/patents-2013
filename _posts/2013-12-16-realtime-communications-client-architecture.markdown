---

title: Real-time communications client architecture
abstract: A distributed services modular client architecture may be used to implement IP-based real time communication services in a flexible manner among a wide variety of different types of chip sets and systems-on-chip. The various services are distributed among one or more processor cores, at least one of which is a low power core, in accordance with a number of factors, including power consumption, media latency, on-time, performance, and other considerations. A processor “core” may refer to a processor itself where the processor has only a single core, and may also refer to a “core” of a multicore processor. The architecture uses a SIP/IMS framework, and is modularized by placing certain services into their own framework so that a particular service may be plugged into the SIP/IMS framework if and when desired, and otherwise omitted. The frameworks may be installed on various processor cores within the chip set or system-on-chip, including in particular the low power core, to allow for more effective power conservation without unduly sacrificing performance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152478&OS=09152478&RS=09152478
owner: ECRIO, INC.
number: 09152478
owner_city: Cupertino
owner_country: US
publication_date: 20131216
---
This application is a continuation of U.S. patent application Ser. No. 13 527 571 filed Jun. 19 2012 which hereby is incorporated herein in its entirety by reference thereto.

This invention relates generally to communications methods and devices and more particularly to a real time communications client architecture for various Internet Protocol networks such as 4G LTE Wi Fi WiMAX and 3G networks.

Many different types of digital electronic devices require a communications capability. The number and type of devices has grown dramatically and each device category manufacturer and service may have a wide range of device platforms and operating systems and multiple application environments and are required to interoperate across many networks and systems. Since applications typically are device and service specific this has limited the availability and use of new functions and capabilities to selected devices. The time and investment required to implement a new capability across an entire complex device portfolio continues to increase as the range and type of devices increases. Developers device suppliers and service providers need a better means to support many device types and models with lower incremental time cost and risk to fully utilize investments and to offer services and value to more customers and markets.

Long Term Evolution LTE is a relatively recent standard developed by the Third Generation Partnership Project 3GPP for wireless communication of high speed data for mobile phones and data terminals. Voice over LTE VoLTE has become the preferred industry choice for providing voice services over LTE. However implementation of LTE on digital electronic devices has been hindered by power consumption issues and in the case of VoLTE long implementation lead times.

One embodiment of the present invention is a real time communications client architecture for a chip set or a system on chip having a plurality of processor cores disposed therein at least one of the processor cores being a communication processor comprising a modular SIP IMS framework installed on a first one of the processor cores and at least one modular framework for a real time communications service installed on a second one of the processor cores and in communication with the modular SIP IMS framework.

Another embodiment of the present invention is a real time communications client architecture for a chip set or a system on chip having a plurality of processor cores disposed therein at least one of the processor cores being a IP communication processor comprising a modular SIP IMS framework a modular VoIP framework a modular video framework a modular RCS framework and a modular SMS over IMS framework the modular SIP IMS framework the modular VoIP framework the modular video framework the modular RCS framework and the modular SMS over IMS framework being distributed across the processor cores in accordance with media latency quality of service and power requirement considerations and operatively in communication with one another.

Real time communications over various Internet Protocol IP networks such as 4G LTE Wi Fi WiMAX and 3G is desirable for many different types of mobile digital devices including for example smartphones feature phones tablets and ultrabooks and other laptops. Such real time communications may be implemented using multiple processor chip sets or systems on chip. shows an illustrative chip set System on Chip SoC which includes a communication processor illustratively a modem baseband processor for example for handling network operations and an application processor for running various user applications. Implemented with limited functionality the communication processor may have lower power consumption than the application processor . An interface in the application processor and an interface in the communication processor facilitate inter processor communication.

Chip sets and systems on chip suitable for communications via IP networks including for example 4G LTE Wi Fi WiMAX and 3G are quite varied. The relative processing power and power consumption of the application processor or of its cores if a multicore processor and the communication processor may vary substantially from chip set to chip set as may the particular implementations of the application processor and the communication processor . The application processor for example may be single core or multi core dual core or quad core for example . If multi core the various cores may be optimized for different purposes for example low latency high quality of service and low power consumption through either low power dissipation or aggressive power management. A given chip set may have one communication processor suitable for several communications protocols or multiple simple communication processors each specializing in a particular communications protocol.

While custom real time communications client architectures may be developed for such chip sets we have found that a distributed services modular client architecture may be used to implement IP based real time communication services including VoLTE video calling and companion rich communications services in a flexible manner among a wide variety of different types of chip sets and systems on chip. In such a client architecture the various services which may also be referred to as functions are distributed among two or more processor cores in accordance with a number of factors including power requirements media latency quality of service and any other considerations as may be desired. The term processor core may for example refer to a single core processor as well as a core of a multicore processor. One or more of the cores in a multicore processor may be a low power core which also is referred to as a battery saver core. The client architecture uses a modular SIP IMS framework with other other services being placed into their own modular frameworks as well so that a particular service framework may be plugged into the SIP IMS framework if and when desired and otherwise omitted. The frameworks may be installed on various processor cores within the chip set or system on chip based on their power demands and profiles media latency constraints and quality of service constraints.

As used herein the term real time communications refers to communications having a latency generally within acceptable norms for the communications application in question in that any perceptible delay between the sender and the receiver are minimal and tolerated. In the case of VoIP for example the latency generally should not exceed about ms.

As used herein the term device platform environment refers to hardware operating system frameworks and combinations thereof created for a device platform.

As used herein the term rich communication refers to various communications service capabilities including but not limited to a voice calling including standard voice Voice over IP calling over IMS and Voice over LTE b Short Message Service SMS over IP Messaging over IMS c packet switched video telephony including two way video calling d situation awareness including real time presence capabilities and location for contacts e enhanced messaging including both standard and advanced IP messaging including conversational messaging and f sharing including real time person to person video image and file sharing.

As used herein the term framework refers to a collection of one or more software components such as application logic controllers ALC engines enablers and protocol stacks for carrying out one or more functions. A framework may but need not contain all of the components needed for carrying out its function provided it has access to the absent components. Components such as engines and enablers for example may be provided outside of the framework through extensions so that they may be shared or direct function calls from an ALC without sharing.

As used herein the term communication processor or CP refers to a chip or part of a chip that manages various radio functions in a network interface. Such a processor may include its own memory such as for example random access memory and may use its own operating system typically a simple real time operating system RTOS written in firmware. Suitable operating systems include for example the Real Time Executive REX operating system available from Qualcomm Incorporated of San Diego Calif. USA and the Nucleus operating system available from Mentor Graphics Corporation of Wilsonville Oreg. USA. While software may be installed on a communication processor in any manner desired including random access memory RAM Flash and other types of memory a particularly advantageous manner of installation when low power operation is desired is to embed the software as read only memory ROM during the manufacturing process.

As used herein the term application processor or AP refers to a chip or part of a chip that runs various user and manufacturer applications under relatively powerful and sophisticated operating systems. Such a processor may include its own memory. In the case of mobile phones for example suitable application processor architectures include the Advanced RISC Machine ARM architecture and various architectures available from Intel Corporation of Santa Clara Calif. USA. Suitable operating systems include for example the Android and Linux operating systems which are available from various companies the Windows operating system available from Microsoft Corporation of Redmond Wash. USA and the iOS operating system available from Apple Inc. of Cupertino Calif. USA.

As used herein the term chipset refers to a group of integrated circuit chips that are designed to function together and are usually marketed as a single product. The chips themselves may be separately packaged or packaged together in a unifying substrate for use as a single component as in the case of a multi chip module for example. Communication between the application processor and communication processor may be through respective fast interfaces which are usually dependent on the chipset manufacturer.

As used herein the term System on Chip or SoC refers to a chip which contains various different types of circuits. In the case of mobile phones for example a SoC may integrate an ARM microprocessor core along with a communication processor a graphical processing unit and random access memory. Communication between the application processor and communication processor may be through respective fast interfaces which are usually dependent on the SoC manufacturer.

As used herein the term multicore processor refers to a single computing component having two or more essentially independent processors or cores for the reading and execution of program instructions. Many options striking various balances between power requirements and performance characteristics are available. ARM Ltd. of Cambridge UK offers big.LITTLE processing using the performance ability of the ARM CORTEX A15 MPCORE processor with the energy efficiency of the Cortex A7 processor and features fast switching between the two to conserve power when the workload is reduced. NVIDIA Corporation of Santa Clara Calif. USA offers a Variable SMP technology using multiple Cortex A9 cores along with a special battery saver core which can be quickly switched to when the workload is reduced. Texas Instruments Incorporated of Dallas Tex. USA offers the OMAP 5 platform with two Cortex A15 high performance cores and two Cortex M4 low power cores and the SMARTREFLEX 3 technologies which help reduce power consumption by adapting voltage and frequency based on device activity. A multi core processor may also include one or more cores implemented as one or more communication processors. A communication processor may also have multiple cores.

As used herein the term application programming interface or API refers to a set of routines data structures object classes and or protocols provided by libraries and or operating system services in order to support the building of applications.

As used herein the term modular refers to a software component which generally accomplishes a specific function in a generally self contained manner with clear logical boundaries representing a separation of concerns relative to other modules. A module s interface expresses the elements which are provided and required by the module and the elements defined in the interface may be detectable by other modules. Communication between modules via their interfaces may be done using message passing or call interfacing for example.

An IP core services stack operates outside of the radio interface and includes core services such as a SIP IMS framework Voice over IP VolP Video framework RCS e RCS framework and SMS over IMS framework . The frameworks and are modular and plug into the SIP IMS framework which also is modular. Other frameworks not shown may be prepared and plugged into the SIP IMS framework as well. The SIP IMS framework for the Internet Protocol Multimedia Subsystem IMS may be a standardized architecture which uses a Voice over IP VoIP implementation based on a 3GPP standardized implementation of the Session Initiation Protocol SIP and runs over the open standard IP protocols. Existing phone systems both packet switched and circuit switched are supported. The SIP IMS framework may include protocol stacks an application controller a start up engine and a user agent engine. The voice video framework may include a VoIP engine supplemental services high definition voice and video calling and may be IR compliant. The RCS e RCS framework may include a presence engine IP messaging engine contact and group engine file transfer engine and a video share engine. The SMS over IMS framework also may be IR compliant.

The SIP IMS framework contains a collection of software components which may include for example engines such as SIP User Agent and IMS Startup and enablers such as IMS Library SIP SigComp Presence XDM MSRP RTP RTCP. Enablers. SIP RTP RTCP and MSRP are also protocol stacks SIP enabler implements SIP Protocol Stack RTP enabler implements RTP Protocol Stack RTCP enabler implements RTCP Protocol Stack and MSRP enabler implements MSRP Protocol Stack.

The VoIP Video framework contains a collection of software components such as a VoIP ALC and a Video ALC. This framework implements functions such as one to one voice call over IP network multi party conference calls and associated supplementary features such as call hold call mute and so forth. Functions may be defined by popular industry forums such as GSMA 3GPP OMA IETF and may be customized by service providers or other vendors in the ecosystem.

The RCS e RCS framework contains a collection of software components such as a RCS e ALC and a RCS ALC. This framework implements functions such as Instant Messaging one to one or multi party chats presence video sharing image sharing and file transfer. Functions may be defined by popular industry forums such as GSMA 3GPP OMA IETF and may be customized by service providers or other vendors in the ecosystem.

The SMS over IMS framework contains a collection of software components such as a SMS ALC. This framework implements functions such as sending and receiving SMS messages over IP network. Functions may be defined by popular industry forums such as GSMA 3GPP OMA IETF and may be customized by service providers or other vendors in the ecosystem.

The frameworks may be divided or combined if desired and some elements of a framework may be moved to other frameworks and even to other processor cores. The VoIP Video framework for example may be divided into a VoIP framework and a Video framework if desired. However care is needed to avoid degradation in performance and quality of the functions provided by the framework.

Operator configuration resource files are customized for each operator and are provided for such parameters as custom timer values domain names compression and security parameters and so forth.

Applications and user interface operates over the frameworks and . The user interface may be prepared by the original equipment manufacturer while the applications may be prepared by the original equipment manufacturer or by third parties.

Advantageously the core service frameworks may be distributed among the application processor and the communication processor to achieve a desired balance of power conservation media latency quality of service and other factors. and show various illustrative distributions of frameworks in a device chipset SoC.

In the distribution modem service such as the 4G LTE protocol stacks shown in codecs and media stacks run on communication processor . The modem service codecs and stacks may be embedded in the communication processor along with the operating system not shown for adequate performance and low power consumption. An operating system not shown for application processor a user interface not shown a SIP IMS framework a VoIP Video framework A RCS e RCS framework a SMS over IMS framework and other applications such as for example various third party user applications not shown are installed on the application processor . Interface in the application processor and interface in the communication processor handle communications between the application processor and the communication processor in various ways well known in the art depending on the manufacturer of the particular chipset or SoC device. This distribution concentrates many services in the application processor so that the communication processor may be simplified.

The concentration of the real time communication modules on the application processor as shown in is particularly suitable for devices where multiple communication services need to co exist and be active at the same time. A use case example would be when the end user is in an active video conference while also either browsing and or texting to contacts. Communication processors typically are not designed to handle such multiple simultaneous communication services without compromising service quality and or performance.

A factor favoring the distribution is to allow the end user to take full advantage of the newer 4G LTE network services without compromising service quality and or performance. Another favorable factor is that these multimedia services are independent of communication processor and network access technology so that different communication processors may be used for accessing different IP networks such as for example 4G LTE Wi Fi WiMAX an 3G. This option also allows the communication processor to be shut down when that network access is not required thus tending to reduce power consumption.

A factor disfavoring the distribution is the increased battery power consumption by the application processor although this may be justified by the various types of services the end user enjoys. Another disfavoring factor is the voice delays in the device could occur because the audio processing resides in the application processor while the network interface resides in the communication processor . However a high speed interface may be used between the application processor and the communication processor so that the delays are reduced to a negligible level.

In the distribution modem service codecs and media stacks along with SIP IMS framework and SMS over IMS framework run on communication processor and may be embedded in the communication processor along with the operating system not shown for adequate performance at reduced power consumption. An operating system not shown for application processor a user interface not shown a VoIP Video framework a RCS e RCS framework and other applications are installed on the application processor . Interface in the application processor and interface in the communication processor handle communications between the application processor and the communication processor in various ways well known in the art depending on the manufacturer of the chipset or SoC device in question. This distribution is advantageous to chipset and SoC manufacturers because many of the relatively simple and low power demand functions are installed on the communication processor for improving power conservation while the advanced functions are installed on the application processor .

In the distribution modem service codecs and media stacks along with SIP IMS framework SMS over IMS framework and a VoIP framework B run on communication processor and may be embedded in the communication processor along with the operating system not shown for adequate performance at reduced power consumption. An operating system not shown for application processor a user interface not shown a Video framework A a RCS e RCS framework and other applications are installed on the application processor . Interface in the application processor and interface in the communication processor handle communications between the application processor and the communication processor in various ways well known in the art depending on the manufacturer of the chipset or SoC device in question. The distribution is similar to the distribution but for the use of separate frameworks for the VoIP and video functions. The VoIP framework B may be separated from the video framework A and designed for low power consumption and thereby is suitable to be installed on the communication processor while the higher performance video framework A may be installed on the application processor which is capable of handling it.

In the distributions shown in and in some communication modules are installed on the application processor while some are installed on the communication processor . This distribution is particularly suitable for devices where for a majority of the time the user uses SMS or voice calls and SMS and only occasionally uses video or RCS services. The high speed interface between the application processor and the communication processor and the RTOS running in the communication processor allows state sharing without compromising quality and performance of the voice calls.

A factor favoring the and distributions is the optimal use of battery power with only a slight burden on the communication processor to share state and maintain quality and performance of voice calls when video or RCS services are used. Another favorable factor of the distribution in particular is to keep SMS and voice services onto an isolated subsystem the communication processor which is protected from interrupts from the rest of the system such as user pressing keys or turning displays ON and so forth. A further advantage is enhanced power savings by allowing the application processor and the screen and screen controller not shown to be turned off during a voice call.

A factor disfavoring the and distributions is the need to carefully synchronize voice and video streams because the voice stream is done in the communication processor while the video stream is done in the application processor . Without suitable care other operations by either the application processor or the modem processor may adversely affect the quality and performance of video calls. Another disfavoring factor is that the network registration status and communication sessions states are maintained by the communication processor so that care is needed in providing for their use by other communication services such as video and RCS to avoid impacting the quality and performance of voice calls. A further disfavoring factor is that the core services such as SMS and voice are tied to a selected set of networks so that if these services are to use other networks supported by other communication processors in the device care needs to be taken to avoid impacting the quality and performance of voice calls.

Another option not shown is to embed all or nearly all real time communication modules in the communication processor. This option is suitable for devices where the application processor does not have support for effective power management or a low power core per se such as a battery saver core. Since the communication processor typically runs a single core and uses a compact real time operating system with very limited system resources such as run time memory stack space and threads care should be taken to embed only the components or modules needed for real time communications and to reduce the number of supported real time communication services.

Application processors having multiple cores are now readily available so that the concentration of the real time communication modules in the application processor as shown in may be a distribution across the multiple cores as shown in and . One of the multiple cores may be a battery saver core which is especially suitable for running the SIP IMS framework. The cores may also have aggressive power management so that a core may be slowed down if high performance is not required or even powered off. In another distribution not shown particularly suitable for devices primarily used for VoLTE and SMS services the VoIP framework and the SMS over IMS framework may be installed on the battery saver core so that when only voice or SMS services are being used the cores other than the battery saver core may be turned off to save battery power.

In the illustrative distribution modem service such as the 4G LTE protocol stacks shown in codecs and media stacks run on communication processor . The modem service codecs and media stacks may be embedded in the communication processor along with the operating system not shown for adequate performance at lower power consumption. An operating system not shown and a user interface not shown for multicore application processor are installed in any suitable manner as is well known in the art. The VoIP Video framework may be installed on a regular core the RCS e RCS framework and the SMS over IMS framework may be installed on a regular core and the SIP IMS framework may be installed on a battery saver core . Other applications not shown various third party user applications may be installed on either the regular cores and or on the battery saver core as appropriate. Interface in the application processor and interface in the communication processor handle communications between the application processor and the communication processor in various ways well known in the art depending on the manufacturer of the particular chipset or SoC device.

In the illustrative distribution modem service such as the 4G LTE protocol stacks shown in codecs and media stacks run on communication processor . The modem service codecs and media stacks may be embedded in the communication processor along with the operating system not shown for adequate performance at low power consumption. An operating system not shown and a user interface not shown for multicore application processor are installed in any suitable manner as is well known in the art. The VoIP Video framework may be installed on a regular core the RCS e RCS framework may be installed on a regular core and the SMS over IMS framework may be installed on a regular core and the SIP IMS framework may be installed on a battery saver core . Other applications not shown various third party user applications may be installed on either the regular cores and or on the battery saver core as appropriate. Interface in the application processor and interface in the communication processor handle communications between the application processor and the communication processor in various ways well known in the art depending on the manufacturer of the particular chipset or SoC device.

As will be appreciated from the attributes advantages and disadvantages described with respect to the distributions of and many factors may be considered and balanced in deciding on the proper distribution of services for the particular type of chipset SOC and purpose of the device. Services which need to be frequently or continuously active and which may be designed for low power operation are suitable for installing on a communication processor or on a battery saver core of a multicore processor. Embedding where possible may reduce power consumption. High performance services such as the video framework and the RCS e RCS framework are suitable for installation on regular cores but may be grouped together in certain ways to take advantage of any power management features offered by one or more of the cores. Illustratively a video framework may be installed on the same regular core as a display controller while a VoIP framework may be installed on a different core or cores so that during a voice call the screen may be turned off and the core on which the video framework and the display controller are installed may be shut down or put into sleep or standby. Advantageously the modular real time communication client architecture is flexible enough to support a great many different distributions so that device manufactures may choose a distribution best suited to their purposes and may implement the choice either at the factory or in the field using Over the Air OTA updates.

While the video framework may be installed on the regular core or battery saver core of an application processor or on a communication processor it is particularly suitable for installation on a regular core of a single or multicore application processor. The video application typically handles all video whether real time or stored although separate applications for real time and stored images may be used if desired. However video may communicate through an interface between the application processor and its own network and neither uses an IMS network nor has had need for the communication processor.

While the RCS eRCS framework may be installed on the regular core or battery saver core of an application processor or on a communication processor it is particularly suitable for installation on a regular core of a single or multicore application processor. RCS is a collection of services including presence instant messaging video and image share chat and file transfer. RCS e is a subset of those services. These are IMS based service and so need an IMS network to deploy. However because RCS services commonly involve interaction with the user and hence activation of the display screen they tend to have high power consumption needs and so are suitable for installation on a regular core possibly along with the display controller.

The SAC includes four interfaces which respectively interact with four different environments. An application interface interacts with one or more applications and one or more application environments such as for example a native application environment for example Android Linux iOS Windows Mobile Symbian and Brew Mobile Platform a procedural runtime environment such as Java and a declarative runtime environment for example AJAX based widget environments like Yahoo Widgets and Webkit Run Time proprietary environments like Adobe s Flash Lite and browsers enabled with AJAX or proprietary plug ins like Microsoft Silverlight and Adobe Flash and Air . An extensions interface interacts with engines and enablers . Device platform environments interface has a capability of interfacing with any one of various device platform environments including various platform drivers for example Android Linux iOS Windows Mobile Brew Mobile Platform and QNX . A service and network interface interacts with services and service infrastructures and with networks .

The SAC provides a set of core functions and capabilities not shown that are shared by the four environments and abstracts the environments from each other which enable interactions between these environments without requiring that the environments be aware of specific aspects of the other environments for the interactions. In a SAC implementation the various frameworks may include share one or more of the core functions. A suitable illustrative set of core functions includes a communication module an extension module a state module a data management module a policy module a signaling module and administration module and a server module.

A communication module includes session management service management network management and quality of service QoS and is responsible for managing resources for channels used to communicate with services and service infrastructure and networks . An application module is the primary interface to applications through application logic controllers and provides deployment and un deployment of applications within the SAC maintains state of the application provides filter criteria used to route information or signals to and from applications maintains a table of registered applications and application mappings resolves conflicts among applications and manages queuing and prioritizing requests from applications to various other modules within the SAC .

An extension module is responsible for managing integration and support of application engines and enablers . The extension module loads an extension for an application when the application manager sends a request for it and may also load any other extensions that the current extension needs. Loading may be done from on platform sources such as memory or storage devices or from a server over the network. The extension module also maintains a table that maps the applications and the extension s they are using.

A state module is responsible for state management including aggregating state and sharing state information among and between various applications such as RCS dialer SMS other applications and video application engines services and service infrastructure and the device platform through the device platform environments interface . The state module interfaces with other managers and interfaces within the SAC to share state information among applications engines device modules and services.

A data management module is responsible for management of data within the SAC and for storage of internal data from various modules of the SAC as well as providing data sharing services from the interface components such as the applications RCS dialer SMS other applications and video and the application engines .

A policy module handles the policy functions of the SAC which are used to provide operational management parameters access control and administer security and privacy policies.

A signaling module is responsible for parsing signals from applications engines device and services and for routing them to appropriate destinations.

An administration module is responsible for keeping track of the internal functions of the SAC . The administration module accesses data and information stored using the data management module and makes it available to an administration application not shown .

A server module is responsible for invoking other modules in the SAC based on requests from any of the modules or the interfaces. The server module is also responsible for performing discovery requests to the SAC to provide capabilities information to applications engines services and device platforms. The server module is also responsible for passing data or signals from the SAC to applications or engines using Inter Process Communication.

The application interface the extension interface the device platform environments interface and the service and network interface contain abstracted application program interfaces API . The SAC relies on the abstracted API s for translating between the various environments. API s are provided in the application interface for example that are abstracted from each supported application programming language for various functions common to the supported application programming language. API s are provided in the device platform environments interface for example that are abstracted from each type of supported platform. In a similar manner the extension interface and the service and network interface contain abstracted API s. Advantageously each of the various environments may use functions in other environments without having to have any particular knowledge of how functions are performed by those other environments.

The application interface includes various Application Logic Controllers ALC s which incorporate various API s including the abstracted API s and application logic. The ALC s which incorporate abstracted API s and which may be referred to as translator API s. The extensions interface which enables the SAC to interact with many different application engines and technology and standards enablers includes other abstracted API s. The device platform environments interface includes various platform drivers PFD which include abstracted API s for supporting integration with various platform resources and functions used by the SAC and the applications and the application engines and the enablers . The services and network interface which allows the SAC to interact with many different services and service infrastructures and many different types of networks legacy networks not shown but may be included if desired includes other abstracted API s.

The application interface is installed on the communication processor and includes various translator ALC s which may be installed either on the communication processor or on the application processor depending on their power consumption and operating time characteristics. A VoIP translator ALC and a SMS translator ALC are designed for low power consumption and are installed on the communication processor . The RSC translator ALC on the other hand is a relatively high power consumption component and so is installed on the application processor . The application interface interacts with one or more application environments such as native environment and other environments which illustratively are installed on application processor and one or more applications such as RCS application dialer application SMS application and other applications which illustratively are installed on the application processor .

The device platform environments interface which is a platform abstraction and porting layer that includes platform drivers PFD is installed on the communication processor .

The service and network interface is also installed on the communication processor and includes API s which abstract variations in services and service infrastructure and in network infrastructure. The service and network interface performs various functions including connection management QoS management session management network bearer management and network protocols.

The extension interface engines and enablers are also installed on the communication processor . The extension interface supports modular and flexible application engine and technology and standards enabler library integration using abstracted API s which a allows for exchange of engines and libraries independent of applications for upgrades and special cases and b supports state data sharing between engines through a common and controlled interface. The extensions interface allows the application engines the enablers are generally stateless to share the state maintained in the SAC . The engines and the enablers may therefore be changed or upgraded without changing the API s used to access them and independent of the applications that use them. Moreover third party technology providers may integrate their own additional application engines and enablers into the SAC through the extensions interface .

Managing user and application data maintaining state transitions providing data packing and management are typical functions of an application engine. Two categories of application engines may be envisioned general purpose and application specific. The general purpose engines are typically used by many applications and application logic controllers or when the system boots up. The engines illustratively shown in include the following categories of engines a basic engines for all or many services such as for example SIP user agent which is used by many SIP applications such as VoIP and IM and IMS startup engine b VoIP engines such as for example VoIP jitter buffer and media control and c RCS engines such as for example IM group and presence . Additional engines may be provided as desired.

Enablers are generally stateless that is they perform functions that do not require state information to be kept and usually operate on a request response model. They generally implement protocols defined by industry standards or specific technologies. The enablers illustratively shown in include the following categories of engines a basic enablers for all or many services such as for example IMS library and SIP b VoIP enablers such as for example SigComp and RTP and c RCS enablers such as for example presence XDM MSRP XCAP and RTCP . Examples of industry standard enablers include modules that perform protocols such as SIP HTTP RTP RTCP SigComp IMS Library functions XDM MSRP presence and device management. Examples of enablers based on proprietary specifications include functions and protocols like location digital identity digital rights and security protocols. Additional enablers may be provided as desired.

The application engines and the enablers may have dual API access in that they may be integrated to and accessed through SAC using API s in the application interface and they may also be accessible directly from an application or using direct access from other application engines when the functions of the SAC are not needed. In some cases engine and enabler stacks may be layered to provide a common set of functions and API s that support multiple methods.

With the video and ALC being installed on the application processor communications not shown by the video across the interface may be done if sufficient bandwidth is available in the interface . Voice and audio synchronization may be performed internally or in the networks. Otherwise as shown in a direct connection such as a PCP IP socket connection may be made between the video and the networks illustratively 4G LTE network 3G network IP network and in some cases even additional networks . In this event voice and audio synchronization may be performed in the networks.

The following example of how a VoLTE call may be made highlights some of the principles describe herein. The user begins by invoking the dialer which runs on the application processor . The dialer which along with dialer ALC may be considered to be a VoIP framework interfaces with the user via a keypad either hardware or virtual and a display to set up the call. Dialer ALC which runs on the application processor communications through the interface to the VoIP translator ALC which actually places the call. The dialer ALC need not have translation capabilities. When the call is established and in progress the communication processor actively maintains the call. However the demands on the dialer on other applications running on the application processor are low so that the application processor upon notification from the communication processor may go into a low power state such as for example by reducing the operating frequency the interrupt cycle and or power to various hardware components such as the display or even into a sleep state.

Several SAC implementations are described in US Patent Application Publication No. US 2009 0222842 published Sep. 3 2009 in the name of Narayanan et al. which hereby is incorporated herein in its entirety by reference thereto.

While the SAC implementation approach which uses messaging is very attractive for many types of devices including in particular 4G LTE enabled smartphones other modular solutions which use other communication techniques between modules such as for example function calls may be suitable for some types of devices. shows an implementation in which the ALC s do not communicate with a SAC core and need not have any translation capabilities but instead use function calls to access the enablers and engines directly. The implementation is based on the distribution shown in although the function call approach may be used for any desired distribution of functions and services.

As shown in the following applications are installed on application processor RCS dialer SMS other applications and video . The following environments are installed on the application processor native environment and other environments . The following ALC s are installed on the application processor RCS ALC dialer ALC SMS ALC other ALC s and video ALC . ALC s installed on the application processor generally but not necessarily are provided by the application vendors.

Function calls are made to specific groups of engines and enablers and certain ALC s installed on the communication processor through fast interface . Such engines enablers and ALC s may be embedded on the communication processor if desired. SMS function calls for example may be made to a SMS ALC which has access to engines illustratively SIP user agent and IMS startup and to enablers illustratively IMS library SIP and SigComp . VoLTE calls for example may be made to a VoIP ALC which has access to engines illustratively SIP user agent VoIP jitter buffer IMS startup and media control and to enablers illustratively IMS library SIP SigComp and RTP . RSC calls from the application processor may be made directly to engines and enables . Engines illustratively include SIP user agent IM IMS startup group and presence . Enablers illustratively include presence XDM MSRP XCAP IMS library SIP SigComp and RTCP . Note that generally speaking similar engines and enablers may be included in different groups that is they are not shared.

With the video and ALC being installed on the application processor direct calls not shown by the video across the interface may be done if sufficient bandwidth is available in the interface . Voice and audio synchronization may be performed internally or in the networks. Otherwise as shown in a direct connection such as a PCP IP socket connection may be made between the video and certain networks in the networks legacy networks not shown but may be included if desired illustratively 4G LTE network 3G network IP network and in some cases even additional networks . In this event voice and audio synchronization may be performed in the networks.

The SAC includes application interface which generally corresponds to the application interface . The application interface includes on the communication processor and includes various translator ALC s which may be installed either on the battery saver core or on one or more cores of of the multicore processor depending on their power consumption and operating time characteristics. Illustratively a VoIP translator ALC and a SMS translator ALC are designed for low power consumption and are installed on the battery saver core . The RSC translator ALC and the video translator ALC the inter core interface and the interface are presumed fast enough to handle the video transfer on the other hand are relatively high power consumption components and so are installed on the regular core and the regular core respectively of the multicore processor . The application interface interacts with one or more application environments such as native environment which illustratively is installed on both of the regular cores and of the multicore processor and other environments which illustratively are installed on regular core and one or more applications such as RCS application dialer application SMS application which illustratively are installed on the regular core and video application and other applications which illustratively are installed on the regular core . Communication to the dialer application and the SMS application is through ALC s and which need not have translation capabilities.

Function calls are made to specific groups of engines and and enablers and and SMS ALC and VoIP ALC installed on battery saver core of the multicore processor through fast inter core interfaces and . Other multicore processor interfaces and are provided for direct communication between the regular cores and . Such engines enablers and ALC s may be embedded in the battery saver processor core if desired. The groups of engines and and enablers and and the SMS ALC and VoIP ALC generally correspond to the groups of engines and and enablers and and the SMS ALC and the VoIP ALC discussed with reference to .

Communications between the battery saver core and the communication processor are handled by interface . The inter core interface and the interface are presumed fast enough to handle the video transfer.

Regardless of the distribution of services chosen in accordance with the balancing of the factors the modular nature of the real time communications client architecture described herein also greatly facilitates software and firmware changes and updates including upgrades to support additional services and or enhancements to existing services and or fix any issues from interoperability testing. In one approach different frameworks for the same services are installed and the framework put into use is selected in any suitable manner illustratively by a configuration file. Low power and high power versions of the same framework may be provided in different cores or processors as appropriate with one being selected as desired. A framework may be stored in one core and transferred to another core as needed using inter core file transfer. Where a framework is selected but not yet installed on the device the new framework may be downloaded to the device. If a configuration file is used it may be set by the device manufacturer or by the carrier where the device is a smartphone for example before delivery of the device to the user or after delivery via a SMS configuration command or even by the operating system itself based on use monitoring and programmed decision making. Applicable specification work is being done by the Open Mobile Alliance Ltd. of Newbury Berkshire UK.

The various embodiments of the invention described herein are illustrative of our invention. Variations and modifications of the embodiments disclosed herein are possible and practical alternatives to and equivalents of the various elements of the embodiments would be understood to those of ordinary skill in the art upon study of this patent document. These and other variations and modifications of the embodiments disclosed herein may be made without departing from the scope and spirit of the invention as set forth in the following claims.

