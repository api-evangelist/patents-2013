---

title: Mapping non-relational database objects into a relational database model
abstract: According to some embodiments, information may be received about a non-relational database object, such as an InfoSet, InfoSet query, or Advanced Business Application Programming (“ABAP”) function for an enterprise resource planning system. The non-relational database object may then be mapped into a relational database model, such as a model associated with a business intelligence platform. As a result, Structured Query Language (“SQL”) inputs from a business intelligence platform may be used create reports based on information in an enterprise resource planning system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152690&OS=09152690&RS=09152690
owner: Business Objects Software Limited
number: 09152690
owner_city: Dublin
owner_country: IE
publication_date: 20131016
---
This application is a divisional application of and claims priority to previously filed U.S. patent application Ser. No. 13 338 451 filed on Dec. 28 2011.

Some embodiments relate to databases such as those supported by a business process platform. More specifically some embodiments relate to systems and methods to map non relational database objects into a relational database model.

In some cases a user interface may be associated with a relational database model such as a table that is organized into rows and columns. For example a user may provide a Structured Query Language input associated with the relational database model and receive business information e.g. sales data purchase order data or information about employees from one or more data sources in the form of a table or report.

Some information however may be stored in connection with non relational database objects. For example various objects might require different Application Programming Interface API techniques to read the appropriate metadata and or to query the data. Moreover there may be no common language associated with the non relational database objects.

Accordingly an efficient mechanism for representing non relational database objects into a relational database model may be addressed by some embodiments herein.

In some cases a user interface may be associated with a relational database model such as a table that is organized into rows and columns. For example a user may provide a Structured Language Query input associated with the relational database model and receive business information e.g. sales data purchase order data or information about employees from one or more data sources in the form of a table or report. By way of example is a block diagram of a system that includes a user interface associated with a relational database model in accordance with some embodiments described herein. A user might enter an input query and receive data from various data sources via a connection server component e.g. the user may send a query to an SQL engine within the connection server component .

Some information however may be stored in connection with non relational database objects . For example these objects might require different API techniques to read the appropriate metadata and or to query the data. Moreover there may be no common language associated with the non relational database objects .

By way of example the relational database model might be associated with a SAP BusinessObjects Business Intelligence platform and the non relational database objects may be associated with an Enterprise Resource Planning ERP system. In this case it might be difficult to allow reporting from the ERP system when it is integrated with the BOE platform.

Note that the connection server component might facilitate communications between the BOE platform and ERP system. According to some embodiments described herein connection server component may support reporting from the ERP system via InfoSets InfoSet queries and or Advanced Business Application Programming ABAP functions. As used herein the term InfoSet might be associated with for example an information provider and or data source e.g. in connection with joins for objects and or time dependent characteristics . Note that an InfoSet may represent a semantic layer over one or more data sources and might not itself be a data target.

Accordingly an efficient mechanism for representing non relational database objects into a relational database model may be addressed by some embodiments herein. Consider for example which illustrates a method that might be performed for example by some or all of the elements of the system described with respect to according to some embodiments. Note that any of the methods described herein may be performed by hardware software or any combination of these approaches. For example a computer readable storage medium may store thereon instructions that when executed by a machine result in performance according to any of the embodiments described herein.

At S information about a non relational database object having a plurality of fields may be received wherein the non relational database object represents one of an InfoSet or an InfoSet query. The non relational database object might be associated with for example an ERP system.

At S a table associated with the non relational database object may be created. At S the non relational database object may be mapped into a relational database model by mapping each field to a column of the table. The relational database model might be associated with for example a BOE platform. According to some embodiments the table may then be used to facilitate generations of a report e.g. responsive to a user input .

By way of example InfoSets and queries might represent objects for ad hoc reporting and may be organized inside local and or global work areas. Each InfoSet may further be assigned to one or several user groups and each query may be created inside a user group and belong to that user group . According to some embodiments such objects may be represented into a relational data base model that is composed of three levels 

 2 a schema where every user group may be mapped into a schema and all the user groups of a work area may be under the database that represents this work area and

 3 a table level where every InfoSet is mapped into a table. Note that all InfoSets of a work area may be under the qualifier representing that work area. According to some embodiments an artificial schema e.g. named InfoSet may be provided and each InfoSet query may be mapped into a table. The InfoSet queries of a work area may be under the qualifier that represents that work area. Moreover the InfoSet queries of a user group may be under the schema that represents that user group.

In this way the fields of InfoSets may be mapped into columns of the corresponding table. Similarly the fields of an InfoSet query may be mapped into columns of the corresponding table. Note that an InfoSet or InfoSet query might include one or more selection fields e.g. fields on which user can put a filter when executing the query . According to some embodiments described herein an optional input column may be provided in a table to be consumed by upper level applications. That is when a non relational database object comprises an InfoSet query that includes at least one selection field associated with a filter the selection field may be mapped to an optional input column of the table. Note that each field other than the selection fields may instead be mapped to a normal column of the table.

Consider for example which illustrates a display representing InfoSets and InfoSet queries in accordance with some embodiments. In particular shows how these objects may represented and exposed in an information design tool. As a result of embodiments described herein the mapping algorithm may reduce any effort for an authoring tool to connect to these objects . Note that the InfoSet query includes fields SPFLI AIRTIME SPFLI CARRID etc. each of which may be mapped to table columns. Moreover the hierarchical nature of the display may let a user access multiple objects and or fields simultaneously.

In addition to InfoSets and InfoSet queries some embodiments described herein may be associated with ABAP functions. For example is a flow diagram illustrating various aspects of the present disclosure according to some embodiments.

At S information about a non relational database object having a plurality of import parameters and a plurality of export parameters may be received. Moreover the non relational database object may represent an ABAP function. Moreover the non relational database object might be associated with an ERP system and the relational database model may be associated with a BOE platform. According to some embodiments the ABAP function includes at least one changing parameter that is translated into both an import parameter and an export parameter.

The ABAP function may then be mapped into a relational database model. In particular at S at least one multi field import parameter may be flattened into a set of single field import parameters. Similarly at S at least one multi field export parameter may be flattened into a set of single field export parameters. For example a parameter ISthat has two fields x and y may be flattened into ISand IS each with a single field .

At S a table may be created such that it contains a column for i each import parameter including the set of single field import parameters ii each export parameter including the set of single field export parameters and iii an attribute identifier. According to some embodiments a report may then be generated in accordance with the mapping of the ABAP function into the relational database model.

According to some embodiments the mapping described herein further comprises the creation of a primary key for first table composed of each import parameter and the attribute identifier. Moreover when the ABAP function is associated with an output table parameter the mapping may further comprise creating a second table for the output table parameter the second table containing a column for i each import parameter associated with the ABAP function ii all of the fields of the table and iii one reference identifier attribute to reference the primary key of the first table. Note that the ABAP function might be associated with a plurality of output table parameters in which case a separate table may be created for each output table parameter. Further in some cases an output table parameter may be nested within another table.

According to some embodiments ABAP functions also called function modules may be arranged such that procedures are grouped by function groups. Moreover every ABAP function might be associated with several parameters types 

Moreover the import export and changing parameters can be of various types a primitive ABAP type a structure of any type e.g. primitive or not or a table of other types e.g. a primitive type a structure or another table . According to some embodiments described herein an ABAP function may be represented or mapped into relational data base model that is composed of three levels 

 3 a table level where tables representing an ABAP are under the schema of the corresponding function group.

In order to represent or map an ABAP function into tables according to some embodiments the changing and table parameters may be considered twice once as import parameters and once as export parameters. In this way the model may be simplified such that an ABAP function will only have import and export parameters.

According to some embodiments all input tables may be considered as input structures. Note that functions that allow reporting from an ERP system are not usually associated with input tables. Consider an ABAP function F with the following parameters 

where IPand ISrepresent respectively input primitive parameters and input structure parameters. EP ES ETrepresent output primitive parameter output structure parameters and output table parameters. In this case the mapping of these ABAP functions into tables may be associated with the following three main rules.

First all structures in input or output parameters may be flattened. That is given a structure parameter ISthat has two fields x and y ISmay be replaced by ISand ISas parameters.

Second one table may be created to map the main function. This table may contain IP . . . IP IS . . . IS where IS . . . ISare flattened following the first rule . These columns may be indicated as input columns which are the columns of a table on which an equality condition must be given when querying the table. If an import parameter is optional then the corresponding input column may be an optional input column. If the import parameter is mandatory then the corresponding input column may be a mandatory input column. This table also contains EP . . . EP ES . . . ES where ES . . . ESare flattened following the first rule . Finally the table may contain one attribute identifier. The primary key of this table may be composed of for example IP . . . IP IS . . . ISand the identifier.

Third for every output table parameter or a nested output table one table may be created and may include IP . . . IP IS . . . IS all the fields of the table and one created identifier attribute. According to some embodiments one created REF ID attribute may reference the identifier of the containing table. Moreover the primary key of the table may be composed of IP . . . ISand the identifier. Moreover a foreign key may reference the key of the containing table.

Consider for example illustrates tables T T mapping to a function FunctionA in accordance with some embodiments. Given in this example the ABAP function FunctionA has one import primitive type parameter I and one import structure parameter S wherein S has two primitive fields S  and S . FunctionA also has one export primitive type parameter E and two export table parameters T and T. T is defined from the structure TS which has three primitive fields TS  TS  TS  and T is defined from the structure TS which has two primitive fields TS  TS .

Table FunctionA contains all input parameters I S  SI  and the output parameter E. The primary key is the combination of ID I S  and S .

Table T contains I S  SI  and the fields of T the primary key is the combination of ID I S  S  and a foreign key references the table FunctionA. 

Table T contains I S  SI  and the fields of T the primary key is the combination of ID I S  SI  and a foreign key references the table FunctionA. 

Note that all three tables have the same input columns I S  and S  illustrated using italic font in . Note that this mapping algorithm may have several advantages. For example since it repeats input columns in all the tables each table can be independently queried if desired to represent a subset of an ABAP Function. Moreover the primary keys and foreign keys that are defined on the tables issued from the same ABAP function which may permit reconstituting the global output of an ABAP function.

Referring again to note that the SQL engine may be provided for the relational database model . is a flow diagram illustrating various aspects of the present disclosure according to some embodiments. At S an interface may receive from an end user an SQL query e.g. associated with a BOE platform or input associated with a non relational data source e.g. an ERP system . The SQL input may be for example associated with i projection ii filtering iii ordering iv grouping v an aggregate function vi a nested query and or vii joining on a primary key and foreign key constraint.

At S an SQL engine coupled to the interface may translate the input into calls to the non relational data source based at least in part on a querying object type associated with the input. The querying object type might comprise for example i an InfoSet ii an InfoSet query or iii an ABAP function. The SQL engine may then forward the translated calls to the non relational data source at S. That is SQL engine may detect based on the querying object type a subset of the input that can be handled by the non relational data source.

Note there may be no one query language available to access InfoSets queries and ABAP functions. Instead there may be ad hoc interfaces to query each of these objects. To allow a query of ERP objects in a way similar to a classical relational data source some embodiments may provide a SQL that is a sub set of the typical SQL 92 standard. In this way a user may send an SQL query the same way as he or she would with a classical relational data source. The SQL engine may depending on the type of object the SQL query is targeting translate the SQL query into calls to InfoSet query and or to ABAP functions. The querying capability provided by an SQL engine might include for example projection filtering an order by operation a group by operation aggregate functions nested queries and or joining on primary key foreign key constraints to allow joining tables that are issued from the same ABAP function .

Note that all of these operations might not be supported by an underlying system. As a result depending on the querying object InfoSet query or ABAP function the SQL engine may detect that a subset of the query can be processed by an ERP server and only forward these operations. The other operations may handled by the SQL engine. In this way users of BOE products may not need to care about the capability of the ERP server in connection with InfoSets InfoSet queries and or ABAP functions. According to some embodiments the SQL engine may be transparent to end users.

The processes described herein may be performed by any suitable device or apparatus. is one example of a platform according to some embodiments. The platform may be for example associated with some or all of the elements described in connection with system of . The platform comprises a processor such as one or more commercially available Central Processing Units CPUs in the form of one chip microprocessors coupled to a communication device configured to communicate via a communication network not shown in . The communication device may be used to communicate for example with one or more remote devices. The platform further includes an input device e.g. a mouse and or keyboard to enter SQL queries and associated parameters and an output device e.g. a computer monitor to display reports and or tables .

The processor also communicates with a storage device . The storage device may comprise any appropriate information storage device including combinations of magnetic storage devices e.g. a hard disk drive optical storage devices and or semiconductor memory devices. The storage device stores a program and or SQL Engine for controlling the processor . The processor performs instructions of the programs and thereby operates in accordance with any of the embodiments described herein. For example the processor may receive information about a non relational database object such as an InfoSet InfoSet query or ABAP function for an ERP system. The non relational database object may then be mapped by the processor into a relational database model such as a model associated with a BOE platform. As a result SQL inputs from the BOE platform may be used create reports based on information in the ERP system.

The programs may be stored in a compressed uncompiled and or encrypted format. The programs may furthermore include other program elements such as an operating system a database management system and or device drivers used by the processor to interface with peripheral devices. As used herein information may be received by or transmitted to for example i the platform from another device or ii a software application or module within the platform from another software application module or any other source.

In some embodiments such as shown in the storage device stores the database . The database may for example comprise a database that contains business information such as the data described in connection with BOE platforms and or ERP systems. Note that the databases mentioned herein are only examples and additional and or different information may be stored therein. Moreover various databases might be split or combined in accordance with any of the embodiments described herein.

Thus some embodiments may provide algorithms to map InfoSets queries and ABAP functions into relational tables and or an SQL engine or driver may enable querying these objects in a transparent way for a user. Moreover some embodiments provide an algorithm to map one ABAP function into several relational tables and enable joins between the tables issued from the same function to reconstitute the original ABAP function result. Moreover ABAP function import parameters may be represented as input columns and optional import parameters may be represented as optional input columns while mandatory import parameters are represented as mandatory input columns .

The following illustrates various additional embodiments of the invention. These do not constitute a definition of all possible embodiments and those skilled in the art will understand that the present invention is applicable to many other embodiments. Further although the following embodiments are briefly described for clarity those skilled in the art will understand how to make any changes if necessary to the above described apparatus and methods to accommodate these and other embodiments and applications.

Although specific hardware and user interface configurations have been described herein not that any number of other configurations may be provided in accordance with embodiments of the present invention e.g. a relational database model connection server component data sources and non relational database objects may be remote from each other or co located . Applicants have discovered that embodiments described herein may be particularly useful in connection with certain types of business information. Note however that other types of information may also benefit from the invention.

The present invention has been described in terms of several embodiments solely for the purpose of illustration. Persons skilled in the art will recognize from this description that the invention is not limited to the embodiments described but may be practiced with modifications and alterations limited only by the spirit and scope of the appended claims.

