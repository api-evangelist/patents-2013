---

title: Method and system for modeling of system content
abstract: A method and system of managing content at a network site can allow easier use by business users. A higher level of abstraction can be used to allow business users to create their own objects that may reference or contain other objects or records as managed by a content management system. Business users do not have to learn programming code in order to work those objects, which are content types. A graphical user interface (“GUI”) can be used to help the business users to create, modify, and delete content types. The GUI and the ability for business users to the create content types greatly shortens the time between receiving software to operate a network site and launching content at that network site.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08959538&OS=08959538&RS=08959538
owner: Open Text S.A.
number: 08959538
owner_city: Luxembourg
owner_country: LU
publication_date: 20130618
---
This application is a continuation of U.S. patent application Ser. No. 12 023 733 filed Jan. 31 2008 entitled METHOD AND SYSTEM FOR MODELING OF SYSTEM CONTENT FOR BUSINESSES which is a continuation of and claims priority from U.S. patent application Ser. No. 10 434 936 filed May 9 2003 issued as U.S. Pat. No. 7 415 484 entitled METHOD AND SYSTEM FOR MODELING OF SYSTEM CONTENT FOR BUSINESSES which relates to U.S. patent application Ser. No. 10 434 935 filed May 9 2003 issued as U.S. Pat. No. 7 941 453 entitled METHOD AND SYSTEM FOR DEPLOYMENT OF CONTENT USING PROXY OBJECTS. All applications listed in this paragraph are fully incorporated herein by reference.

This invention relates in general to methods and systems for managing content and more particularly to methods and systems of managing content at a network site to allow content types to be defined and modified in a manner that reflects the way a business uses and thinks about its content.

Content management at web sites is becoming increasingly complicated as more content is used at those web sites. Companies are finding that managing the content is proving to be a daunting task. The organization of content and information is constantly changing. Within an older web site all information for a content object may be self contained does not reference another content object . A problem is that the content management systems used for those older sites do not understand the relationships among the content items and consequently provide effectively no help whatsoever in managing those relationships.

In the past an object type called a record was an example of this generic content object at the tuple granularity. A record may include 1 a reference to a tuple row within a table of a database and 2 metadata e.g. state information . Companies creating web sites using these records have typically found that they are very limited in real life. Complex relationships may occur between data and there is no practical way to manage all the rows that may get returned for a relationship. For example an article may contain a reference to authors. However the authors may span across many rows within one or more databases.

Users of content management software at a business may also find the software to be user hostile i.e. not user friendly . The coding for types of objects may include references to persistent storage media. Database schemas each database may have a different schema tables rows file addresses or other information for obtaining information needed to the published at a web sites would need to be known. An employee of the business may need extensive training in programming and know where and how to retrieve information needed to create effectively classes from which others may instantiate objects. The business s ability to launch content may be limited or delayed because that employee with programming and information retrieval knowledge is performing too many tasks because most other employees working with the content would be unable to perform such tasks. Alternatively the business may hire many of such employees but only at great expense. Further the training of such employees may have emphasized tailoring information for the systems rather than for the people that have to deal with that information.

A need exist to allow an enterprise to manage content according to the domain s own vocabulary. A further need exists to allow business users a more active role in defining content attributes and requirements without needing to know a programming language or database administration.

A method and system of managing content at a network site can allow easier use by business users. A higher level of abstraction can be used to allow business users to create their own objects that may reference or contain other objects or records as managed by a content management system. Business users do not have to learn programming code in order to work those objects which are content types. A graphical user interface GUI can be used to help the business users to create modify and delete the content types. The GUI and the ability for business users to create content types greatly shorten the time between receiving software to operate a network site and launching content at that network site.

In one set of embodiments a method of managing content at a network site can comprise generating a content type and instantiating a data object from the content type. The generation of the content type can be performed via an application programming interface. The application programming interface can provide access to an application services layer that overlies a content management system.

In another set of embodiments a data processing system readable medium can having code embodied therein. The code can comprise an instruction for reading information for a content type and an instruction for generating a structured definition of the content type using the information.

In still other sets of embodiments a system for modeling content can comprise a content management layer and an application services layer over the content management layer. The system can further comprise an application programming interface to the application services layer. The application programming interface may be configured to allow a user to send a content type to the content management layer via the application programming interface and application services layer.

The foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as defined in the appended claims.

Skilled artisans appreciate that elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example the dimensions of some of the elements in the figures may be exaggerated relative to other elements to help to improve understanding of embodiments of the present invention.

Reference is now made in detail to the exemplary embodiments of the invention examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts elements .

Method and systems can be used to generate content types at a relatively higher level of the abstraction compared to conventional methods and systems used for creating templates. An application programming interface API may be used with an application services layer that overlies a content management system CMS . A graphical user interface GUI can be a web based content type generating tool that is coupled to the API. The GUI can allow users who may have little if any computer programming knowledge to generate modify and delete content types. The content types may use the vocabulary and business rules used by a particular enterprise with which the users work. Business data objects may be instantiated from the content types. In one embodiment the content types may include attributes a workflow access controls and potentially other information. The content types may be based on a referenced model or a containment model as will be described later in this specification.

A business user can quickly generate and use content types much faster than conventional templates. For example programmers would write content management applications for the templates. The programmers need to know Java or another programming language. Unlike templates the content types may specify workflow and access controls for business data objects instantiated from the content types. The workflow allows business data objects to be processed according to the defined workflow. Access controls may be used to allow the proper access for those specified in or monitoring the workflow. The ability for business users to generate modify and delete content types using the GUI significantly shortens the time between receiving content management software to operate a network site and launching content at that network site. Such a method and system provides a truly out of the box solution to content management.

A few terms are defined or clarified to aid in understanding the descriptions that follow. A network includes an interconnected set of server and client computers over a publicly available medium e.g. the Internet or over an internal company owned system. A user at a client computer may gain access to the network using a network access provider. An Internet Service Provider ISP is a common type of network access provider.

The term business content type is intended to mean a content type defined in terms of a user s business context.

The term business data object is intended to mean an instantiation of a business content type. Business data objects may be instantiated by content contributors who may be business users.

The term business user is intended to mean a person having little if any training in computer programming and writing code in a programming language.

The term channel is intended to mean a hierarchical navigation of content on a site. A channel can also be used to display content in applications.

The term content type is intended to mean a structured definition of an object used to instantiate other objects. The definition may comprise attributes and related data including workflow security status or other information. The content types can be used for instantiating business data objects.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a method process article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such method process article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

Before discussing embodiments of the present invention an exemplary hardware architecture for using embodiments of the present invention is described. illustrates an exemplary architecture and includes CMS content delivery system CDS and actor computer each bidirectionally coupled to internal network .

Each of CMS and CDS is a server computer and is bidirectionally coupled to a corresponding database and respectively. Each of databases and may contain objects and metadata regarding those objects in tables within those databases. A database server not shown may lie between any one or more of the databases and and the server computers and . More or fewer databases may be used and a single database may be shared by more than one of server computers and . For simplicity the database server can be considered part of a database.

Actor computer is a client computer as the term is used in client server relationships. Actor computer can include a desktop computer a laptop computer a work station a personal digital assistant a cellular phone or nearly other device capable of communicating over network . Other actor computers not shown may also be bidirectionally coupled to internal network . Individuals using the actor computers may include content developers editors content reviewers webmasters information technology specialists and the like. Many of the actors are business users.

Within each of CMS and CDS a plurality of computers not shown may be interconnected to each other over internal network or a combination of internal and external networks. For simplicity a single system is shown for each of CMS and CDS . Other systems e.g. page generator etc. may be part of CMS and CDS or additional systems that are bi directionally coupled to internal network .

Although not shown a visitor computer which is a client computer may be bidirectionally coupled to the CDS via an external network e.g. the Internet . Note that is a simplification of a hardware configuration. Many other alternative hardware configurations are possible and known to skilled artisans.

The CMS can include central processing unit CPU read only memory ROM random access memory RAM hard drive HD or storage memory and input output device s I O . I O can include a keyboard monitor printer electronic pointing device e.g. mouse trackball etc. or the like. CDS can include a server computer comprising CPU ROM RAM HD and I O . CDS may have one or more content delivery software components a page generator software component a content management software component an applications software component and the like. Actor computer can comprise a CPU ROM RAM HD and I O .

Each of the computers in may have more than one CPU ROM RAM HD I O or other hardware components. For simplicity each computer is illustrated as having one of each of the hardware components even if more than one is used. The content typically in the form of objects and database records and its metadata if any may be located within any or all of CMS CDS and databases and .

Each of computers and is an example of a data processing system. ROM and RAM and HD and and databases and can include media that can be read by CPU or . Therefore each of these types of memories includes a data processing system readable medium. These memories may be internal or external to computers or .

Portions of the methods described herein may be implemented in suitable software code that may reside within ROM or RAM or or HD or . The instructions in an embodiment of the present invention may be contained on a data storage device such as HD . illustrates a combination of software code elements and that are embodied within data processing system readable medium on HD . Alternatively the instructions may be stored as software code elements on a DASD array magnetic tape floppy diskette optical storage device or other appropriate data processing system readable medium or storage device.

In an illustrative embodiment of the invention the computer executable instructions may be lines of compiled C Java or other language code. Other architectures may be used. For example the functions of any one of the computers may be performed by a different computer shown in . Additionally a computer program or its software components with such code may be embodied in more than one data processing system readable medium in more than one computer.

In the hardware configuration above the various software components e.g. content delivery page generator content management or the like may reside on a single server computer or on any combination of separate server computers. In alternative embodiments some or all of the software components may reside on the same server computer. For example the content delivery software component and the page generator software component could reside on the same server computer.

Communications between any of the computers in can be accomplished using electronic optical radio frequency or other signals. For example when a user is at actor computer actor computer may convert the signals to a human understandable form when sending a communication to the user and may convert input from a human to appropriate electronic optical radio frequency or other signals to be used by systems or . Similarly when an operator is at CMS its server computer may convert the signals to a human understandable form when sending a communication to the operator and may convert input from a human to appropriate electronic optical radio frequency or other signals to be used by actor computer or systems or .

Attention is now directed to descriptions of managing content at a network site. Business content types can be created by business users without an extensive knowledge of a programming language. The business content types can be defined in terms that are easier to understand by the business users without affecting how the data are handled by CMS .

In one embodiment different levels of abstraction can be used to separate the management of data within persistent data sources from content types used in instantiating business data objects where the business data objects may use the data within the persistent data sources. includes an illustration of different logical layers for content and its management. Persistence layer can include all objects records metadata for the objects and records and other data collectively data used at the network site. The data can reside in a variety of persistent data sources. The data may be located within different persistent data sources include databases unstructured content e.g. text files image files etc. structured content e.g. XML documents integration sources e.g. Enterprise Resource Planning ERP Customer Relationship Management CRM Software Configuration Management SCM etc. other content repositories and third party aggregation sources e.g. news wire services etc. .

Content management system CMS can control data within persistence layer that are used at the network site. Application services layer overlies CMS and provides an interface to CMS that allows operations to be performed on data within persistence layer . API overlies application services layer . Other APIs to application services layer may be present but are not shown in .

The interfaces from application services layer to GUI and CMS to application services layer may be generic. With such a configuration other user interfaces not shown to API may be added with little additional complexity. Also other software components not shown above CMS and at the same level as application services layer may be easily added.

GUI can be coupled to API and allows business users to generate modify and delete higher level objects i.e. objects that reference or contain other data within persistence layer to be generated in a manner consistent with how an enterprise thinks about its content. Because the content types are objects that reside at a higher level compared to records and objects at leaf nodes i.e. objects that do not refer to other objects GUI can allow business users to generate modify or delete content types without having to know a programming language. GUI can be a user friendly web based modeling tool that may be used after a little training and in some cases less than an hour of training. The time from installation of the methods and system described herein to launch of content can be performed much quicker and at a fraction of the cost since programmers are not required and time to generate the content types is faster than coding even if the programmers were to generate the content types . The content types essentially replace conventional templates that required programmers to code. Further unlike conventional templates the content types may have an associated workflow and access controls to allow for a more automated development processing deployment of content and a role based monitoring system for monitoring the business data objects instantiated from the business content types.

GUI may allow business users at actor computer to define business content types in terms of the business s needs and in the business s own vocabulary. The business content type which is an object type can comprise an XML document of a structured definition of the content type. A business user can model the content type based on the content structure desired by the business user. The business user may specify business rules that a business data object created from the content type will need to follow who has what access to business data objects.

GUI may present a business user at actor computer with one or more entry forms. Each attribute in the entry form can include a configurable control with an eXtensible Style Language Transformation XSLT . GUI may allow the content types to model complex database relationships such as one to one employee image of employee one to many product category SKUs for products within the product category and many to many articles authors .

The business content type may have its dependencies managed by containment reference or a combination of them. For containment all data for a business data object can be created updated deleted versioned associated staged put through a workflow and published deployed as a single entity. As an example a business content type may contain several different records that are parts of different databases. For reference all objects referenced within a business data object instantiated from the content type may or may not be processed together. If a referenced object has already been deployed it may not be re deployed when the business data object referencing it is deployed.

GUI can be configured to include many extensibility points. For instance an XML Schema Definition XSD can be added. XSD can be a structured definition for a valid XML document in lieu of a Document Type Definition DTD . XSD allows a user to define complex data types for the document. The content type can be generated so that it overrides a content management applications presentation for a Java Server Page JSP . Custom controls may be added to allow data selection from other data sources. A default workflow process can be associated with each content type.

Attention is now directed to that includes an exemplary process flow for managing content at a network site. The method can comprise storing data within the persistence layer block generating or modifying a business content type block instantiating a business data object using the business content type block processing the business data object using a workflow block and deleting the business data object block . Each operation will be explained below in more detail.

Note that not all the activities described in the process flow diagram are required that an element within a specific activity may not be required and that further activities may be performed in addition to those illustrated. After reading this specification skilled artisans will be capable of determining what activities can be used for their specific needs.

Attention is now directed to details of managing content at a network site. Referring to the method can comprise storing data within persistence layer block . The data may originate within the business managing the network site or may come from a third party. The data comprises the information that will form the content delivered by the network site. The data can comprise other information that is not published at the network site e.g. the enterprise s internal records . Databases and their schemas and repositories with files and other data are typically designed to work best with the particular hardware and software configuration of the network site. Referring to the data should be stored in a manner in which CMS and CDS can work quickly efficiently and without any significant errors. Therefore names and locations of data within persistence layer may be dictated by hardware and software considerations and may not be user friendly or even make sense to business users. In one embodiment content and metadata regarding that content may be stored in different persistent data sources.

The method can also comprise generating or modifying a business content type block . The business content type may be generated or modified using GUI as will be described with respect to window views later in this specification. During generation or modification of the business content types a business user at actor computer can use GUI to create or edit attributes. For example an article content type can include attributes such as a title a byline an image text and the like.

During the generation or modification of the business content type the business user may also specify workflow security status or potentially other information. The workflow may define business rules to be followed when a business data object is instantiated from the business content type. The workflow may designate who may create the business data object who may be editors and approvers and potentially when and how to publish or deploy the content corresponding to the business data object. Security can be used to designate access privileges for activities such as create modify read only delete and the like. When the information for the business content type has been input the business content type may be automatically saved by CMS as a structured definition of the content type in XML.

After the business content type has been generated or modified the method can further comprise instantiating a business data object using the business content type block . Using the article example the business data object may include an article data object instantiated from the article type content type. The article identifier may be automatically generated. GUI may allow a content contributor to input a title an author an image and text. The author information may include an identifier that is an author business data object backed by data in an author information database. The business data object can reference an image file that includes an image related to the subject matter of the article or a photograph of the author. The image may be persisted in a different persistent data source compared to the author information file source versus database .

The method can comprise processing the business data object using a workflow block . The workflow can define business rules for the business data object from the time it is developed to the time it is published. Each stage of the workflow may have policies to be followed when performing a specific action such as development editing publishing and the like.

If the data is ever obsolete the business data object may be deleted. The method can further comprise deleting the business data object block in . When the business data object is deleted the data is no longer accessible at the network site. The examples below are used to illustrate how GUI is used for generating or modifying content types instantiating business data objects and tracking tasks. More than one GUI may be used for the different functions defining content types versus instantiating business data objects versus monitoring status of business data objects . Windows of GUI for generating or modifying content types are illustrated in . Each of the figures will be described in more detail.

Content editor provides the user a place to register a page to override the look and feel of the default generated form and to enter the data for a content instance object of the specified type . The user may have layout or look and feel requirements dictated by their organization and will need to override the default form.

Validation schema allows the user to register an XSD file with the content type for server side validation of the data entered at content instance creation time usually via the generated GUI form . Verification of validation scheme may be accomplished by having the user create a pre persistence listener to validate the object against the XSD. The pre persistence listener class can be another example of engineered extensibility in the system.

Type definition can be a new class that allows the user to register a Java class with the content type object. In this manner the new class can inherit from a pre existing class. The purpose of type definition is to provide custom logic inside of the new class yet still provide the same interface that the GUI tools use.

If the information for the business content type is acceptable OK tile can be activated. Alternatively if information for the business content type is not acceptable a business user may activate cancel tile . In still other instances a business user may activate apply tile or activate help tile if the business user needs more assistance. When the business content type is saved the information is automatically serialized within a structured definition expressed in XML.

Each of the attributes may include attribute name which can be a user friendly name that business users may change to match the vocabulary of business users or content contributors. This name does not need to be in a form that a computer program would require to operate. Each attribute may also include XML name . This name will need to be in a form consistent with XML because an XML definition of the content type is generated using XML name . Therefore the name may not have any spaces or may be otherwise limited. The attribute may include variable type . As illustrated in the types include integer and character string. In another embodiment other variable types such as float double or the like may be used. When a character string is used length may be specified. For integers the length may not be applicable. However for strings this may be nearly any finite number. In this specific example the string lengths are either 255 characters long or 1024 characters long.

Each attribute may include widget which may also be considered a control. In this specific example the article identifier will use a widget that sequentially numbers the articles. For the title and summary a text widget will allow a single line of text to be typed when a business data object is instantiated from this content type. The body includes a text area widget. The author can be chosen using a select widget that can display authors using a pull down menu. An image for the article may be selected using a file widget that will be used to select a file that contains an image.

A business user can designate whether each attribute will be searchable whether any of the attributes will be a default label for a subsequently created business data object which attributes would be displayed in a summary of a subsequently created business data object and what portions of the information may be visible . More or fewer variables for each attribute may be used as desired.

A business user may click on any of the items illustrated under name . include windows and respectively for the author and image attributes. Referring to the author can be represented by an integer data type. Widget type is currently listed as a selection list. If desired a business user could change the widget to a different type of widget. For example the select list widget may be replaced by a text widget so that name of the author could be typed by a content contributor. For a text widget the data type may be changed to a character string and a limit the length of the character string may be input. With the select list the business user may need to access a pre existing table in a database having information of authors. If so definition and project path may need to be selected.

Referring to the image has a string data type and has widget type similar to widget type . Widget type is currently set to be a file. The business user can also designate valid extensions allowed for the image files. In this specific example valid extensions may be .jpg or .gif files. The business user may select browser root . Browser root can be used as the default directory from which image files may be selected. In this specific example browser root would be within a folder entitled SampleData. 

At this point a business content type for an article may be generated. The article content type example is based on a referenced model. When a business data object is instantiated from the business content type the objects referenced within the business data object may or may not be processed together. If one of the referenced objects has already been deployed it will not be re deployed when the business data object is deployed.

Each of the individual products is contained within the product category. In other words the business data object and all other data from persistence layer that are contained or nested within it are treated as a single unit. In other words the business data object will be processed through the workflow and deployment as a single unit.

At this point in the process a business content type has been defined. Note that the entries which will be defined in the business data object will be contained within a product data object.

A business user can instantiate a business data object from a business content type such as the example as illustrated in . Window in may be displayed to a content contributor who wants to instantiate a business data object using the product content type. The content contributor can enter product name which in this case is a name of a product category. The content contributor may enter product description . Block includes a display of the products currently contained within the database. Note that block includes the SKU identifier SKU name SKU description color and price as previously described in . Products may be added removed or edited.

When the add or edit tablet is activated window as illustrated in may be displayed. SKU name SKU description color and price may be entered or modified for each product in the product category. When finished the add tablet may be activated. Otherwise the cancel tablet may be activated.

The embodiments can provide an out of the box content management solution. The time to install and configure a content management system and launch content from a network site can be reduced because programmers do not have to write code for the content types. After the software is installed the business users can start generating or modifying content types quickly. Therefore content contributors may start instantiating business data objects from the content types in a shorter time period.

Part of the method and system can be achieved by using different levels of abstraction. By creating a higher level of objects which can be the business content types those objects can be used without needing to know how data is managed by CMS . Therefore business users may operate at a higher level and not have to understand the complexities of how content is managed by CMS or even understand a programming language. Business user can be work at the higher level and use naming conventions and rules that that makes sense to the business users.

Also business content types may be generated and modified using a GUI designed for ease of use from the perspective of business users working with the content types. The GUI can be configured to let a business user add or remove attributes and reference nearly any number of other data in different persistent data sources without knowing a programming language. The attributes can have names that are more descriptive and easier to use by the business users that will need to work with the business data objects created from the business content types. In effect the business user is creating a template without having to write code.

Unlike templates the content types may also include definitions for workflow security status and potentially other functions. The content types can be edited using the GUI at any time. The same or other business users can use another GUI to instantiate business data objects from the content types defined using the GUI.

In the foregoing specification the invention has been described with reference to specific embodiments. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of present invention.

Benefits other advantages and solutions to problems have been described above with regard to specific embodiments. However the benefits advantages solutions to problems and any element s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential feature or element of any or all the claims.

