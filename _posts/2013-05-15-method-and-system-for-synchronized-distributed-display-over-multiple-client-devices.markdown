---

title: Method and system for synchronized distributed display over multiple client devices
abstract: Portable interactive devices of audience members are remotely operated to substantially “simultaneously” respond to a signal from an origin, e.g., a central server, despite variation in latencies among the devices in order to produce a shared experience. The audience members are reached through varying communication links. Latencies vary among portable interactive devices and among carriers. A firing time for the portable interactive devices is selected to occur at a time in the future. An execution time at which a respective portable interactive device is commanded to operate is a function of the firing time minus the latency control signal reaches clients in a venue in an audience or at a remote location simultaneously despite the varying latencies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09357005&OS=09357005&RS=09357005
owner: 
number: 09357005
owner_city: 
owner_country: 
publication_date: 20130515
---
This patent application claims priority of Provisional Patent Application 61 648 593 filed May 18 2012 Provisional Patent Application 61 670 754 filed Jul. 12 2012 Provisional Patent Application 61 705 051 filed Sep. 24 2012 Provisional Patent Application 61 771 629 filed Mar. 1 2013 Provisional Patent Application 61 771 646 filed Mar. 1 2013 Provisional Patent Application 61 771 690 filed Mar. 1 2013 and Provisional Patent Application 61 771 704 filed Mar. 1 2013 the disclosures of which are each incorporated by reference herein in its entirety.

The present subject matter relates to a system method and non transitory machine readable medium for execution on a digital processor producing a synchronized experience for multiple client devices in communication paths subject to differing latencies.

There are many applications in which one or more servers communicate with a large number of clients. It may be desirable to have these devices operate in synchronism. There are many different results which can be achieved from synchronization.

U.S. Pat. No. 8 090 878 discloses a method and system for synchronizing many clients to one central server. In this arrangement the central server must download client software to each electronic device to be synchronized. The client software allows the electronic device to perform data synchronization with the server. After the synchronization is complete the client software may be removed from the electronic device. Downloading the client software to each client device is a cumbersome process. After the client software is removed from each electronic device synchronization is no longer provided.

United States Published Patent Application Number 2010 0074278 discloses a network element which synchronizes a number of clocks within a system and supports multiple independent timing domains. The network element must act as a master clock to which other clocks are slaved. The network cannot account for initial time differences among the clocks.

Reliable and convenient synchronization of multiple client devices such as would be useful in a shared experience has not been provided.

Briefly stated in accordance with the present subject matter portable interactive devices are remotely operated to substantially simultaneously respond to a signal from an origin despite variation in latencies among the devices in order to produce a shared experience. The origin may comprise a central server. In the present description simultaneously refers to the width of a preselected time window within which target devices will respond to the signal. The audience members are reached through varying communication links. Links may include Wi Fi and cell phone carriers. Latency as used in the present description describes the time it takes for a signal from a server to reach a circuit point in a respectable portable interactive device which is responsive to the signal. Latencies vary among cell phone models and carriers. The present subject matter allows a server to send a control signal that will reach clients in a venue and an audience or at a remote location simultaneously despite the varying latencies.

The server sends signals and collects the range of offsets of the various devices through use of a timing device such as a Network Time Protocol NTP server. A firing time is selected at which all client devices will execute a command. Further forms of the present subject matter may provide additional feedback from the client devices e.g. smartphones to the server to more precisely control the simultaneous response.

Events triggered at the firing time may include sending messages and alerts to all clients causing all the phones to vibrate and flashing the photo flashes of all the phones in synchronism. In a further form messages and alerts are sent to client devices as well as commands. The devices query the server in order to determine the time offset from the host.

The operation may be repeated continually in order to provide dynamic response to changing conditions and to accommodate new devices coming online in the network. An evolving experience is provided to the users.

Communicating with an audience is a relatively recent phenomenon. A concert performance control system may wish to communicate with audience members over portable interactive devices e.g. smartphones. The present subject matter overcomes significant problems in achieving an enhanced audience experience.

One application of the present subject matter is to produce simultaneous outputs from a plurality of client devices. One example of a plurality of client devices is a group of portable interactive devices e.g. cell phones each having a display. A composite display distributed over the plurality of devices may be designed so that an optical effect in a venue is achieved. For example a central system could command that every device display a logo of a band that is currently performing. Alternatively different displays could be commanded at the same time for subgroups of devices. The present subject matter provides for synchronization of responses of the portable interactive devices so that the desired effect is achieved. The operation to synchronize responses is preferably performed over successive operating cycles.

The venue may include a stage audience area a control room and a media system which may be located in the control room . The media system receives audio video and intelligence from sources and may be operated to perform control room functions such as mixing selecting and processing. A video program is shown on a display .

The media system is used to couple outputs from a video source a sound source and other intelligence source . The video source may comprise one or more television cameras . In the present illustration a media source includes the video source sound source and other intelligence source . The sound source comprises audio output from a live performance provided by a performer or performers coupled by transducers such as microphones. Alternatively one or more of the video source the sound source and other intelligence source may comprise sources of streaming content prerecorded content stored data or currently processed content from any source. These sources may be local remote or both.

In one preferred form the display is a screen that comprises a backdrop for the stage . The display could comprise an array of screens over which the video program is distributed. In another form often used in arenas the display could comprise a display unit which includes a plurality of monitors on one support with each monitor facing in a different direction. Examples of the display unit are available under the trademark Jumbotron .

The media system is operated by a VJ . The VJ may comprise one or more personnel or a programmed computer. It is not essential that the control room be located at the venue . The media system provides content to a concert network controller . The concert network controller may both receive and transmit information. The concert network controller provides an input to a display link which is coupled by a patch panel to the display unit .

The concert network controller may also comprise a Wi Fi hotspot providing and receiving signals to and from an audience area . As further described below content may be provided both to and from audience members . The concert network controller may also interact with remote participants .

The concert network controller is preferably wirelessly connected to an event server which can provide communications between remote participants and the concert network controller . The event server is coupled to a content editor which interacts with a staging server . The staging server may be coupled to the remote participants by a network for example the Internet . The Internet may utilize Network Time Protocol NTP servers . The event server the content editor and the staging server are collectively referred to as a communications server .

Communications will be provided between a target system and a source system. In the present description source system is a device that wishes to send a message to a target system. The target system is a device that is configured to receive sent messages in its operating system via a network connection sub system. Systems may include portable interactive devices or the central server . The business logic running on the device can operate as the target or the source system at any moment. Operating as a source system or target system for a particular messaging transaction does not preclude operating as the other system for a different messaging transaction simultaneously.

In a nominal application thousands of portable user devices may communicate with the concert network controller . The communication will provide interaction for intended uses of the system . This alone could strain resources and require expensive T1 access lines of a quality exceeding that of the commercial grade DSL capacity normally utilized within a concert venue. Providing such capacity would be both expensive and impractical. Additionally users have the option to operate their portable user devices in order to access the Internet and to access cell phone services. It is important to limit bandwidth requirements to accommodate a large number of portable user devices . This can be accomplished by disabling access to applications that are not part of the entertainment functions of the system . For purposes of the present description the applications contributing to functioning of the system are referred to as business logic.

Latencies can range from a time period approximating zero up to several seconds or minutes or more. In the present system a firing time is selected so that portable interactive devices will react to the signal from the communications networks at the same time. The reactions occur simultaneously. More specifically the reactions occur within a time window of preselected width. A nominal value for the width of a window e.g. 0.1 second is generated as further described below. Implementation of a selectable firing time is further discussed below.

The platform supports transmission of command execution messages to both remote participants and the at venue participants . The at venue participants utilize mono cast Internet Protocol IP and multi cast User Datagram Protocol UDP to transmit messages over the captive Wi Fi network which requires the deployment of a stand alone Wi Fi network suitably architected for the venue. Handling the potentially hundreds of thousands of remote users is generally not possible since it is common for venues to provide consumer grade DSL Internet connections. The large load that such a large number of users would place on the main venue server namely the event server would also be untenable. Instead all messages destined for external participants are handled by a separate staging server that need not be installed in or resident at the venue itself. The staging server may instead be resident at an external service provider which can dynamically scale to match the required external participant user load. The external service can comprise cloud service from providers such as Rackspace or Amazon AWS.

When sending messages to internal users the event server will send one additional message to the staging server specially structured so the staging server will subsequently send that message to all registered external participants. In this way single messages from the event server can be broadcast to an arbitrary number of external users without placing any additional burden on the at venue infrastructure.

A number of different software packages may be used in order to command actions at client devices from a server. One application is Remote Professional from mobileways.de. This app performs such functions as making calls from the computer via the client device. Another form of software is embodied in an application called MyMobiler. This software enables a computer to select and open applications on a smartphone. An Android app called AirDroid by Sand Studio enables control of smartphone apps from a connected computer.

As seen in the portable interactive devices query the communications server for any new commands which have been issued during a current operating cycle. illustrates sending a command to show the preselected display at the firing time. As seen in each portable interactive device tracks time via a central clock . Each portable interactive device monitors the central clock so that it will fire the preselected time after it receives the command A . Preferably there is a central clock within each portable interactive device . Commanded actions could alternatively or additionally include receiving messages and alerts flash the device s flash lamp and vibrate the phone. As seen in each portable interactive device executes the command to display the band logo.

At block each portable interactive device receives and recognizes time offsets from each NTP host server . This is important since latency will vary from one communications path to another. On the Internet time transfer delays are a function of variable parameters such as the level of server traffic and network bottlenecks. NTP is designed to compensate for some but not all network time delays between the host servers and each client portable interactive device . Across local area networks NTP can yield precision of simultaneity within a few milliseconds. Latency may be measured in a number of different ways. The portable interactive device may send a time tagged signal to each NTP host server . To compute latency the portable interactive device may compare its own clock time to Internet time when a response is received. Other techniques are available.

At block the acceptability of the deviation is measured. For example the acceptable deviation could be defined by an offset time included in the signal sent to the portable interactive devices in . Alternatively a maximum acceptable latency could be predefined and included in the application installed on the portable interactive device . If the deviation is not acceptable operation returns to block where offset time is again measured. If the deviation is acceptable operation proceeds to block at which commands are obtained from the central server . This corresponds to the steps illustrated in above.

At block the portable interactive device compares current time with the firing time. If the current time is later than the firing time a failure is detected. Operation proceeds to block where a failure message with latency is sent to the central server and the device is entered into the failsafe mode at block . At block the device monitors current time to determine if the firing time has been reached. When the current time equals the firing time at block the command is performed. Operation returns to block where the portable interactive device will look for the next command at the communications server in a next operating cycle.

The central clock also allows solution of problems in traditional distributed multiplayer gaming. In a shooting game in which players are instructed to draw and shoot their weapons as soon as they see a special signal appears either on the big screen at the venue or on their respective portable user devices . A timestamp signal from the central clock may be associated with each BANG message. A winner is determined by comparison of time stamps rather than by the arrival time of their BANG messages at the central server . The effect of sporadic latencies which have plagued the prior art are minimized or eliminated.

As seen in operation is launched at block . At block Internet status is checked. If there is no connection operation proceeds to block . The controller enters the above described failsafe mode. When the Internet connection is available operation proceeds to block where the central server gets time offset signals from each NTP host server . Acceptability of the deviation is compared at block to an acceptable level i.e. a level that does not exceed a preselected tolerance. If the deviation is not acceptable operation returns to block to see if operation may proceed with an acceptable latency.

If the deviation is acceptable operation proceeds to block . At that point the central server waits for commands from the control room . After a command is received the command is sent to the communications server at block . Operation then returns to block where the central server waits for a command during a next operating cycle.

In accordance with the present subject matter the message structures of may be implemented in new ways. Preparation of messages requires construction and de construction of objects with several types of operating parameters many of which are irrelevant to the operation of business logic. Creation and transmission of messages within the application space can be accomplished without requiring knowledge of the message construction or de construction process.

Message aware applications are provided with high level objects implementing a standard interface for accessing per message and common message parameters. This interface behaves as a familiar access method on the object providing interrogation of messages for fields such as individual names fields setting of named fields interrogation and setting of common fields access to error conditions or other fields which may be included among fields through .

Once constructed the framework provides a simple mechanism to initiate transmission of the message to a set of targets. Ways of defining sets of targets are further described below. The framework further provides simplified access to received messages also further discussed below. In the communications server messages are placed into an outgoing transmission queue received messages are placed into the incoming queue and delivered to the appropriate business logic as defined by the message.

The controller only framework includes provision to segregate client portable interactive devices and other devices into arbitrary groupings based on any provided metric. The grouping may be based on types of hardware accessible information regarding users or other indicators. Standard metrics include device role e.g. primary controller Jumbotron OCS or client gender age location within a venue device type e.g. iOS Android or HTML5 device family e.g. iPhone 3G iPhone5 iPad or the like and randomly selected set members.

In addition the framework allows the creation collection and persistence of arbitrary metrics for use as segregation criteria. Individual devices can be added or removed from any grouping as desired. Groups are independent and can overlap in any manner desired. Once defined the grouping can be used as targets for specific commands.

Once received by portable interactive devices commands are queued and executed according to the timing of the individual received message. Portable interactive devices register simple handlers for each type of command expected which are then invoked at the appropriate time and without business logic intervention. Client device business logic is provided all message information including per message specific data to affect the desired operation. Business logic can implement any type of operation without regard to how and when the message was received. Messages received by portable interactive devices after the assigned execution time are returned by the framework to the originator for off line analysis.

Specific time messages are executed at a specific moment in time as indicated as part of the sent message. This is the most common form of message in the present system and enables the synchronized execution of commands. The stated time of execution is relative to the standard clock . Each device has its offset from this standard clock and executes the command at that appointed time. Messages received or processed after their assigned execution are logged and sent back to the sender with diagnostic information.

The present system creates a relationship between the time at which a command is issued and the time at which the command will be executed. When constructed messages can be assigned time dependent execution values of upon receipt upon receipt with priority a time in the future after receipt or a specific time. The point in time in the future beyond receipt may be set by data provided with the message. Received messages are each time stamped upon arrival and executed at the future time.

In one illustration in which latencies range from 0 to 15 seconds the system may be programmed to command a firing time that is 20 seconds later than the time at which a command is provided from the central server . A portable interactive device for which a latency of 15 seconds has been measured can be commanded to respond 5 seconds after a command is received. A portable interactive device for which a latency of 9 seconds has been measured can be commanded to respond 11 seconds after a command is received. The portable interactive devices will use their internal clocks to count to a firing time.

There are several major hurdles preventing the general adoption of synchronous event driven applications in the mobile space. First among these is the inherent clock drift and time delta between different devices even those on the same carrier s network and in the same location . Mobile devices can be as much as several minutes off between adjacent devices. Additionally the clock drift experienced by an individual device can be noticeable over timeframes as short as tens of minutes. While this does not affect typical mobile device operations such as email Facebook or web browsing it will completely destroy the shared visceral experience provided by the present system platform. The present system framework enables third party developers to tap into the excitement and action of live events by using a proprietary RESTful API to hook into the messaging topological and demographic data provided to deploy new and unique apps.

To counter the clock synchronization problem the current platform library automatically computes clock deltas between all participating devices against a common master clock and maintains very close synchrony for the duration of the event. This auto negotiation is managed by the library itself without any work needing to be done by resource consuming applications. Dependent upon close clock synchronization is the ability of commands to be executed simultaneously at a designated time in the future by all participating devices or all participating devices in a particular group.

To support this requirement all command execution objects in the present system implement a common execute method that adds the contained command to an internal queue of commands that are scheduled to be executed at the scheduled time. The framework provides additional methods to remove repeat or change a given command as well as a call back so that the system can be notified when a given command has been executed.

Another major hurdle is the central distribution of messages. An individual mobile device while remarkable for its power and size does not have the processing capacity required to manage and maintain communications between potentially several tens of thousands of devices active at any given venue. The system provides a sophisticated back end that enables application development teams to utilize functions of business logic deployment the aforementioned synchronized command execution abstracted database table definition and creation generalized table access supporting all CRUD operations selective message transmission based on role physical location age device type capability custom registration historical demographic retrieval etc. The deployment infrastructure allows dynamic deployment of new functions without requiring a server restart synchronized command execution automatically places a future command execution timestamp on each outgoing message to be handled by the client side library. In addition both mono cast and multi cast message groupings can be created depending on the specific needs of the application.

A final hurdle for any application is the client side software to handle the client side business logic and render the results. The front end foundation provides an abstract environment for the acceptance initiation and processing of messages. The framework provides a scaffold which handles reception of messages and makes them available to the specific application business logic as events to be processed. The application developer is free to concentrate on the business of implementing functionality. The present system provides needed commands for decoding incoming messages time synchronism or sending new messages.

By using both the back end and front end foundation framework mobile application developers can create never before imagined applications because the foundational components are already written.

The system presented provides support for the following areas clock drift message transmission message construction command execution command timing device family segregation data access configuration and capabilities.

Devices present within a given environment may deviate from a standard clock by many seconds even those connected via the same cellular tower or other technology. While sufficient for most device centric operations it is insufficient for the closely time synchronized operations possible within the system environment. To counter this inherent time difference the System framework provides a standard clock with low latency access mechanisms and a back ground correction process to keep the device clock within a certain configurable window.

Device operating systems do not typically expose low level access to the system clock to effect an actual change to the time setting. This is not a problem since the system requires only knowledge of the time delta between the standard clock and the device clock the delta is stored within the system foundation and is used for the synchronized execution of commands.

As the clock on each device is inaccurate even over the period of several hours the system foundation will resynchronize the delta periodically to keep within a predetermined maximum time delta. A more precise delta requires the re synchronization of the clock on a more rapid schedule to ensure minimal drift. This time delta is configurable within the framework and is transmitted to participating devices upon registration or upon change of the value at the central location.

The system framework provides simplified access to data stored by the back end. Business logic is isolated from database mechanisms and can request specific data as needed. The data access framework supports the creation of arbitrary data elements groupings commands etc. for later reference by name. This can be used to send a specific complex or often used command or to define a grouping of devices.

The system framework supports configurable items that are transmitted to the affected devices automatically upon registration event start change to the item or on demand. Standard items are maximum clock drift video effect fade period and device family parameter limits such as frames second camera and screen resolution etc.

When transmitted any device specific items are included to ensure the business logic is able to properly operate on the different platforms.

The system framework has a capabilities database for known devices. The database is continually updated with new devices. Capabilities allow the devices to fail gracefully when a command parameter is unable to be executed due to physical device limitations. The capabilities framework provides default sensible behavior for features unavailable on a given platform.

The previous description is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the invention. For example one or more elements can be rearranged and or combined or additional elements may be added. A wide range of systems may be provided consistent with the principles disclosed herein.

