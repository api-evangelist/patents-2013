---

title: System for managing audio/video streams using non-avb application layer structures in listener devices of an avb network
abstract: A system that includes a talker, a listener, and a controller may communicate over an Ethernet Audio/Video Bridging network. The controller may communicate control messages to manage data streams between the talker and the listener through one or more application layer interfaces of the talker and the listener. Based on the control messages, the talker and the listener may communicate using a Stream Reservation Protocol to reserve connection for, or remove connection from, the data streams. The talker and listener may communicate the success of reserving or removing the connections to the controller through the application layer interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08977759&OS=08977759&RS=08977759
owner: Harman International Industries, Incorporated
number: 08977759
owner_city: Northridge
owner_country: US
publication_date: 20130819
---
This application is a continuation application of U.S. Non Provisional application Ser. No. 13 174 100 filed Jun. 30 2011 now U.S. Pat. No. 8 516 130 . The contents of U.S. Non Provisional application Ser. No. 13 174 100 now U.S. Pat. No. 8 516 130 are hereby incorporated by reference in their entirety.

This invention relates to an Ethernet Audio Video Bridging AVB network and more particularly to managing data streams on the AVB network through control messages sent through high level application layer interfaces.

Audio video A V data may be transmitted in a network system from one endpoint to another endpoint. Before the A V data is sent control signals may be sent over the network in order to establish a path over which the A V data may travel from the one endpoint to the other. Similarly control signals may be used to remove the path between the endpoints.

A system that includes a talker a listener and a controller may communicate over an Ethernet Audio Video Bridging AVB network. The controller may be configured to manage the flow of one or more data streams between the talker and the listener. To manage the flow of the data streams the controller may communicate control messages to the talker and or the listener. In one example system the control messages may be Function Block FBlock control messages used in accordance with a Media Oriented Systems Transport MOST standard. The control messages may be communicated through one or more application layer interface modules of the talker and or the listener. Upon receipt of the control messages the application layer interface module may be configured to use one or more functions described in or used in accordance with a Stream Reservation Protocol SRP to manage the flow of the data streams over the AVB network. To use the functions the application layer interface module may communicate with one or more state machine modules and or one or more SRP stack modules.

The controller may manage the flow of the data streams by providing one or more control messages to the talker and the listener to create the data streams and or to remove connection from the data streams. When the talker receives a control message to create a data stream the talker may communicate the message to the state machine module. The state machine module may be configured to register one or more attributes with the SRP protocol stack module which may trigger one or more events at the listener to notify the listener of the data stream. The talker may be configured to send a status message to the controller through the application layer interface module indicating whether the talker is able to create the data stream.

Upon receipt of the success message the controller may be configured to send a connect message to the listener to connect to the data stream. The listener may receive the connect message through the application layer interface module of the listener. The application layer interface module may communicate the connect message to the state machine module. Upon receipt of the connect message and upon determining one or more events triggered by the talker the state machine module may perform one or more functions to determine whether the listener is able connect to and or establish connection to the data stream. The state machine module may also be configured to register one or more attributes with the SRP protocol stack module which may trigger one or more events at the talker notifying the talker of the listener s ability to connect to the data stream. The listener may also send a status message to the controller through the application layer interface module of the listener indicating whether the listener is able to connect to the data stream. Upon determining one or more listener events triggered by the listener s registration the state machine module of the talker may perform functions to establish connection with the listener and send the data stream to the listener.

The controller may also be configured to send control messages to the talker and the listener to remove connection from the data stream. The controller may be configured to send a disconnect message to the listener through an application layer interface of the listener. Upon receipt of the disconnect message the state machine module of the listener may be configured to perform one or more functions to disconnect from the data stream including deregistering one or more listener attributes with the SRP stack module. The listener may be configured to send a status message to the controller through the application layer interface indicating whether the listener was able to remove connection from the data stream. Upon receipt of the status message from the listener the controller may be configured to send a message to the talker through an application interface of the talker to remove the data stream. Upon receipt of the message the state machine module of the talker may be configured to perform one or more functions to remove the data stream including deregistering one or more talker attributes with the SRP stack module. The talker may be configured to send a state message to the controller through the application layer interface indicating whether the talker was able to remove the data stream.

Other systems method features and advantages will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems method features and advantages be included within this description be within the scope of the invention and be protected by the following claims.

Demand for connectivity between network devices continues to increase at a fast rate. In many systems a greater number of devices are being manufactured which have network connection and or communication capabilities. For example in some automobiles components not previously considered connective are being manufactured with connective capabilities. Parts such as brakes throttle and or various other parts may be manufactured as Ethernet Audio Video Bridging Ethernet AVB enabled devices which may communicate through an Ethernet AVB network. In some systems Ethernet AVB networks may be used to connect one or more devices with audio and or video data streams being sent wireless and or through a wireline such as an Ethernet cable.

In other systems the devices may be connected and or communicate with each other over a network using mediums other than Ethernet cables such as a fiber optic cables. An example network that uses a medium other than an Ethernet cable is a Media Oriented Systems Transport MOST network. Devices connected in a MOST network may communicate with each other using the MOST vehicle bus standard which uses time division multiplexing as an underlying transport mechanism to communicate A V data between devices. In a system that communicates using the MOST vehicle standard control of the A V data sent over the network may be performed using Function Block FBlock control signals. FBlock control signals may be sent and or received by the devices in the MOST network at an application layer of the devices. At the application layer the devices may have an interface for sending and receiving the FBlock control signals. The interface may be referred to as an FBlock interface. The FBlock interface may communicate with other applications and or modules in the same or a different layer within the device to send receive and or process the FBlock control signals.

The MOST network using fiber optic cables may be replaced with the Ethernet AVB network using Ethernet cables where the underlying transport mechanism includes prioritized packet switching rather than time division multiplexing. Where the MOST network is replaced with the Ethernet AVB network it may be desirable to still control the flow of A V data using FBlock control signals.

The role of the controller may be to control the flow of the data stream between the talker and the listener or the talker listener. The controller may control the flow of the data stream by sending one or more messages to the talker the listener and or the talker listener to create a connection and or remove the connection of the data stream between the talker and the listener or the talker listener. The messages may be communicated to the talker the listener and or the talker listener through a high level application layer of the talker the listener and or the talker listener. Alternatively or in addition the role of the controller may be to identify and or determine which of the talkers are of importance relevant to and or expected to be used by a listener. The role of the client may be to determine an input such as a user input indicative of the creation or the removal of the connection of the data stream and communicate the input to the controller.

The electronic devices and or may be configured to perform different roles in different situations or at different times. For example in one situation one of the electronic devices may be configured to be a talker. In a different situation that electronic device may be configured to be a listener. Alternatively the roles that the electronic devices and or may be configured to perform may be fixed. For the following description the electronic devices and in the system have been designated the roles as previously described. In an alternative system other roles may be designated. The system may include one or more talkers and one or more listeners and one or more talker listeners one or more clients and or one or more controllers . Each component of the system including the talkers the listeners the talker listeners the clients and the controllers may be in communication with one or more of the other components over the network .

One or more of the talkers and the listeners and the talker listeners the clients and or the controllers may be or may include hardware software and or a combination of hardware and software to implement part or all of the functionality of the system . One or more of the talkers and the listeners and the talker listeners the clients and or the controllers may be or may include one or more processors such as one or more central processing unit CPU and or may be in communication with one or more processors such as a processor of a field programmable gate array FPGA . More or fewer components may be included in other examples.

One or more of the talkers and the listeners and the talkers listeners and or the controllers may be connected to each other through or using the network . Alternatively or additionally one or more of the talkers and the listeners and the talkers listeners and or the controllers may be connected to each other directly. For example one or more of the talkers and the listeners and the talkers listeners and or the controllers may be connected to each other using a wireline such as an Ethernet cable and or a wireless network. Various other connections are possible.

The network may be include and or communicate through or with an Ethernet AVB network. The network may include one or more bridges which may communicate with one or more devices communicating through and or connected with the network. The one or more bridges may communicate with the network and or devices connected to the network through or using various protocols such as Ethernet AVB protocols designated by the IEEE. For example one or more bridges may communicate with the network and or devices connected to the network through or using Ethernet AVB protocols such as IEEE 802.1AS 2001 gPTP for network timing and synchronization IEEE 802.1Qav 2009 for queuing and forwarding streaming data IEEE 802.1Qat 2010 SRP for reserving data stream bandwidth in a network and or IEEE 1722 2011 related to a possible data streaming format. Various other protocols may be used. Alternatively or additionally the network may be include and or communicate through or with wide area networks WAN such as the Internet local area networks LAN campus area networks metropolitan area networks or any other wireless and or wireline networks that may allow for data communication. The network may be divided into sub networks. The sub networks may allow access to all of the components connected to the network or the sub networks may restrict access between the components connected to the network . The network may be regarded as a public or private network and may include for example a virtual private network an encryption or any other security mechanism employed over the public Internet or the like. Various other types of networks are possible.

One or more of the talkers and the listeners and and or the talker listener may be connected to the network in any configuration that supports data transfer. This may include a data connection to the network that may be wired or wireless. One or more of the talkers and the listeners and and or the talker listeners may be connected to an Ethernet AVB network and or to each other through or with an Ethernet connection such as using a cable or wireless connection to an Ethernet AVB network. Various other connections may be possible.

The system may include one or more talker systems or talkers and . In small communication networks the system may have only a small number of talkers such as twenty or less. In other larger communication systems the system may include hundreds thousands or potentially millions of talkers. Various numbers of talkers are possible.

The talkers and may or may not be or include a portion or all of the features of a computer system such as a computer system shown in and described later. The talkers and may be Ethernet AVB enabled and or compatible. The talkers and may be configured adapted operable and or enabled to communicate through and or with an Ethernet AVB network using one or more standards or protocols. An example of a protocol associated with communications between a talker and a network may be the stream reservation protocol specified in IEEE 802.1Qat 2010. Alternatively or additionally various other protocols such as Multiple MAC Registration Protocol MMRP IEEE 802.1AS 2011 gPTP IEEE 802.1Qav 2009 and or IEEE 1722 2011 may be used.

The talkers and may be configured adapted operable and or enabled to send information and or data through the network . For example talkers and may be configured and or adapted to send a stream of information that includes data commands and or command signals through using or across an Ethernet AVB network. Information and or data sent by talkers and through the network such as through an Ethernet AVB network may be received by other devices connected with the network such as listeners and and or talker listeners .

The talkers and may perform various functions and or be connected with or include various components. For example a talker may be connected with the network and an input device such as a musical instrument or microphone. Information and or data may be sent to received by and or otherwise input to the talker or a device connected with the talker . For example a user may play an instrument or sing into a microphone connected with the talker and information and or data about the instrument singing and or voice may be received by the talker .

While the talkers and in the network communication system may be and may be described as the physical devices themselves such as a microphone it should be appreciated that in some systems the talker may be or may include a computer or other electronic controlling device which may be used and or operate to control the talker such as a microphone such as some or all of the features of a computer system shown in and described later. In these systems the computer or other electronic controller device may be AVB enabled and or communicate directly with the network . In addition the computer or other electronic controller device may communicate in various ways with the physical device and or another device such as with a wired or wireless connection. Various other alternatives are possible.

The talker may process the information and or data received in various ways. For example the talker may transform any signal received such as the musical signal from an analog signal to a digital signal. In other systems a computing device may perform processing of received information and or data and may send the processed information and or data to the talker . Various other processing functions may be performed by the talker and or devices in communication with the talker .

The talker may transmit send output and or advertise processed information and or data to the network such as in with and or using a data stream and or Ethernet AVB signal. For example the talker may advertise a data stream encompassing data related to music played by a user on a device connected with the talker onto an Ethernet AVB network. The information and or data advertised by the talker on the network may be received by other devices such as by various listeners and and or talker listeners . Various other functions may be performed by the talker .

Each talker and may have one or more talker attributes. Talker attributes may specify include and or otherwise identify characteristics about the talker and or a data stream advertised by a talker . For example a talker attribute may indicate and or advertise that the talker may have a data stream such as an audio video and or command data stream that the talker will multicast over the network . A talker attribute may specify how much bandwidth a data stream advertised by a talker may require in order to be transmitted through the network . The amount of bandwidth specified may be used by bridges and or switches in the network to determine if there is enough bandwidth capability to reserve the amount of bandwidth at each switch in the path between the talker and the listener . In one example the listener may not be concerned with the amount of bandwidth because one or more of the switches and or bridges may indicate a failure due to bandwidth constraints before the listener receives bandwidth information specified in the attribute. Alternatively or in addition a talker attribute may specify how long it may take information and or data sent from the talker to reach a listener which may be referred to as a latency or latency period. Alternatively or in addition a talker attribute may specify a destination address. In one example the destination address may not be unique to a particular listener such as the listener . The destination address may be a multicast destination that allows any listeners such as listeners to receive and or process the data stream being advertised once the reservation is in place and transmission has begun. Alternatively the destination address may be unique to a particular listener.

Alternatively or in addition a talker attribute may specify a unique stream identifier ID for the stream advertised by the talker . A talker attribute may specify include and or identify various other pieces of information and or data. One talker attribute may include multiple pieces of information and or data such as information about a bandwidth required for download and or a unique stream ID of the talker. In some systems each talker attribute may be related to only one piece of information and or data and each talker and may have multiple talker attributes. In other systems each talker and has only one talker attribute which specifies multiple pieces of information and or data about the talkers. Various combinations are possible.

Talker attributes may include a Talker Advertise TA and or a Talker Failed TF . As mentioned a talker attribute may specify a stream ID for a stream that the talker produces or wants to produce. The stream ID may be a unique sequence of characters and or numbers which may only be assigned to one stream. In some systems no two streams may have the same stream ID. An assignment and or identification of a unique stream ID of a talker may then be used by devices such as the listener to identify a stream for which the device wants to attach itself. For example the listener may receive over an Ethernet AVB network a message such as an advertisement that includes a unique stream ID and may based on an identification of the unique stream ID request attachment to the stream associated with the unique stream ID. Various other uses of the stream ID are possible. The unique stream ID may be a 64 bit stream ID or various other stream IDs may be used. The talker may be configured to assign a unique stream ID to a stream at a time that the talker is manufactured such as by a manufacturer after manufacture such as at a time that the talker connects with the network such as by a controller and or at various other times.

One or more talker attributes may be stored in one or more of talkers and listeners and talker listener and or controllers . For example a unique stream ID of a talker may be sent to and or received by a controller which may record and or store the unique stream ID of the talker and or forward the unique stream ID of the talker to one or more listeners and such as through with or using a non SRP protocol. Various other uses and functions of talker attributes are possible.

A stream advertisement may be a signal and or other transmission from a talker which may be passed through the network . A stream advertisement sent by a talker may indicate that the talker has a data stream that it can cannot will or will not send multicast and or otherwise transmit over the network . The stream advertisement may include a Talker Advertisement TA or a Talker Failed TF . The TA may be an advertisement for a stream that has not encountered any bandwidth or other network constraints along the network path from the talker. The TF may be an advertisement for a Stream that is not available to the Listener because of bandwidth constraints or other limitations somewhere along the path from the talker. If a bridge or switch along a path from the talker to listener does not have sufficient bandwidth or resources available the bridge or switch may change the TA message to a TF message before forwarding it toward the Listener.

The stream advertisement may include details about the data stream such as one or more talker attributes that may be sent with and or included in a stream advertisement advertised and or output by the talker . For example the stream advertisement may include a unique stream ID of the data stream being advertised by the talker using the stream advertisement. The stream advertisement sent by the talker may be transmitted across the network to and or received by one or more devices e.g. one or more listeners in communication with the network. In some systems the stream advertisement is sent to all devices on the network .

One or more listeners and or talker listeners may receive the stream advertisements. If one of the listeners wishes to receive the data stream being advertised by the TA the listener may send a Listener Ready LR signal to a bridge the network and or talker . The signal may be a request to attach to the data stream via the stream ID included in the stream advertisement. When an Ethernet AVB bridge or switch in the AVB network receives the LR signal from the listener the bridge will match the LR with the TA and allow the data stream referenced by the stream advertisement to be sent to the requesting listener. One or more listeners may request and or attach to the same data stream via one stream ID. One of the listeners may request and or attach to more than one data stream via the stream IDs of each requested data stream. Other variations are possible.

One or more stream advertisements may be sent and or accessed individually and or alone with through and or using the network . One or more stream advertisements may be sent to accessed by and or received by one or more receiving devices on the network such as listeners talker listeners and or controllers . Various other uses and functions of stream advertisements and or talker attributes are possible.

In small networks the system may have only a small number of listeners such as twenty or less. In other larger communication systems the system may have hundreds thousands or potentially millions of listeners. Various numbers of listeners are possible.

The listeners and may or may not be or include a portion or all of the features of a computer system such as a computer system shown in and described later. The listeners and may be Ethernet AVB enabled and or compatible. The listeners and may be configured adapted operable and or enabled to communicate through and or with an Ethernet AVB network using one or more standards or protocols such as the stream reservation protocol identified in IEEE 802.1AS 2011 gPTP IEEE 802.1Qav 2009 IEEE 802.1Qat 2010 SRP and or IEEE 1722 2011. Alternatively various other protocols such as a MMRP may be used.

Listeners and may be configured adapted and or operable to receive information that includes data across through and or using the network . For example a listener may be configured and or adapted to receive a data stream passing across a network such as an Ethernet AVB network. The information and or data received by a listener and may be for example the information and or data sent by the talker and information and or data sent by a controller and or various other information and or data sent through and or using the network . In some systems the listeners and may register for and or receive a data stream from one or more of the talkers and . Registration for and or receipt of a data stream may or may be received by the listeners and with a guaranteed bandwidth. Various other possibilities exist.

Listeners and may perform various other functions and or include or be connected with various other components. For example a listener may be connected with a network and an output device such as a speaker or television monitor. Information and or data may be gathered and or otherwise received by the listener through the network . For example information and or data about notes played on a musical instrument may be transmitted through the network by the talker and may be received by the listener . The listener may process the information and or data received through the network . The listener may output processed information and or data to the speaker. For example the listener may output information and or data related to the signal received through the Ethernet AVB network to the speaker.

While the listeners and in the network communication system may be and may be described as physical devices themselves such as a speaker it should be appreciated that in some systems the listener may be or may include a computer or other electronic controlling device which may be used and or operate to control the listener such as a speaker such as some or all of the features of a computer system shown in and described later. In these systems the computer or other electronic controller device may be AVB enabled and or communicate directly with the network . In these systems the computer or other electronic controller device may communicate with the physical device and or a different device in various ways such as with a standard wired or wireless connection. Various other alternatives are possible.

Each listener and may have one or more listener attributes. A listener attribute may be for example a Listener Ready a Listener Asking Failed and or a Listener Ready Failed attribute. These attributes may or may not contain a single piece of information such as a stream ID that the listener may want to attach to.

One or more listener attributes may be sent with through and or using the network . One or more listener attributes may be sent to accessed by and or received by one or more receiving devices on the network such as talkers and talker listeners and or controllers . One or more listener attributes may be stored in one or more of talkers and listeners and talker listeners and or controllers . One or more listener attributes may be used to connect a listener with a data stream and or talker. Various other uses and functions of listener attributes are possible.

The listener attributes may specify include and or otherwise identify characteristics about the listener . Listener attributes may for example exist and or be used outside of a stream reservation protocol stack within a talker or a listener and or may be used to inform devices on the network about the attributes of the listener. For example a listener attribute may specify what talkers a listener may be interested in. A listener attribute may specify a unique listener ID for the listener which may for example uniquely identify the listener to other devices on the network . A listener attribute may identify one or more capabilities of the listener such as bandwidth that the listener has available a type of data stream that the listener may be interested in and or capable of processing and or various capabilities of the listener . A listener attribute may additionally or alternatively specify various other pieces of information and or data about the listener . One listener attribute may include multiple pieces of information and or data. In some systems each listener attribute may be related to only one piece of information and or data and each listener and may have multiple listener attributes. In other systems each listener and has only one listener characteristic which specifies multiple pieces of information and or data about the listeners. Various combinations are possible.

Talker listeners may be configured adapted operable and or enabled to send and receive information and or data through the network . A talker listener may include the capabilities and functions of a talker and a listener . In some systems all devices connected with the network may be talker listeners . In other systems some or none of the devices connected with the network may be talker listeners . While the following discussion may only refer to talkers and listeners individually it should be appreciated that in some systems functions and attributes of talkers and and or listeners and discussed may be accomplished by talker listeners . Various combinations are possible.

The system may include one or more controllers . The controller may or may not be or include a portion or all of the features of a computer system such as a computer system shown in and described later. The controller may be Ethernet AVB enabled and or compatible. The controller may be configured adapted operable and or enabled to communicate with and or through an Ethernet AVB network such as according to through and or with a one or more standards or protocols such as the stream reservation protocol outlined in IEEE 802.1Q. Alternatively various other protocols such as a MMRP may be used.

The controller may be or comprise an application level interface that is configured to communicate directly or indirectly with the talkers the listeners and the talker listener and the client . The controller may be configured to manage and or control a connection of a data stream between two or more devices such as between the talker and the listener . The controller may be configured to communicate with a client . The client may be a device that desires to establish and or tear down a data stream between two devices. For example the client may be a remote control. The remote control may be configured to issue a command such as a Play command to the controller which instructs the controller to establish a connection between a Digital Versatile Disc DVD player and a television and or speakers in order to play a DVD. In the controller may communicate with the client directly or through the network . Various other communications and interactions between the controller and talkers and and or listeners and are possible. In addition in some examples such as when the talkers listeners and listener talkers are self configured the controller and or the client may be omitted.

The client may be configured to send messages to and or receive messages from the controller . For example the client may be configured to provide instructions to the controller to control the creation and or removal of a data stream such as an AVB data stream between the talker and the listener . Other messages may include instructions to query functions of application layer interfaces to administer a notification matrix of the application layer interfaces to check whether entries of the client and or the controller are present in the notification matrix to describe the version of the application layer interface divided into the major version the minor version and the build number and or to generate an array of all existing AVB connections. The client may provide the instructions by providing a message through an application layer interface of the client . An example application layer interface is an FBlock interface. The controller may include an application level interface through which the controller may receive the instructions from the client .

In response to receiving instructions to create a data stream between the talker and the listener the controller may be configured to translate the instructions into appropriate commands to the talker and or the listener . For example in response to receiving the instructions from the client the controller may be configured to send a message referred to as an Allocate message to the talker to instruct the talker to set up a data stream. The message from the controller to the talker may be communicated from the application layer interface of the controller to the application layer interface of the talker . The Allocate message may include various parameters including a SourceNr parameter indicating the source of the data stream. The talker may have a list of available sources that may be streamed. By selecting a particular source from the list the talker may be configured to allocated the bandwidth for the selected source. As an example the talker may be configured to stream a stereo audio stream and a 5.1 surround encoded audio stream. The stereo audio stream may be designated as source and the 5.1 surround encoded audio stream may be designated as source . If the talker selects SourceNr the talker may allocate bandwidth for the stereo audio stream. If the talker selects SourceNr the talker may allocate bandwidth for the 5.1 surround encoded audio stream. The parameters may also include one or destination addresses to which the data stream is to be sent a presentation delay of the data stream a rank of the data stream e.g. a first indicator may indicate an emergency rank and a second indicator may indicate a non emergency rank a virtual local area network VLAN identifier used for the data stream and or a class of the data stream e.g a first indicator may indicate class A and a second indicator may indicate class B .

In response to the receiving the Allocate message the talker may be configured to respond to the controller that the talker is able to source a data stream by providing a Success Message to the controller . The Success Message may include various parameters including a SourceNr parameter which indicates the number of data source and a Stream ID that uniquely identifies the stream that the talker will source. The talker may also be configured to respond to the controller that the talker is unable to create a data stream by providing a Failure Message to the controller . The Failure Message may include error information pertaining to the why the talker is unable to create the data stream. The talker may communicate the Success Message and or the Failure Message by communicating the messages through the application layer interfaces of the talker and controller respectively.

In addition in response to receiving the Allocate message the talker may be configured to register a talker advertise TA attribute in order to announce to the listener that the talker is supplying a data stream. In one example the talker may be configured to register the TA attribute in order to make the announcement in accordance with through and or using the Stream Reservation Protocol SRP as described in IEEE 801.1Qat 2010. In order to register the TA in response to receiving the Allocate message at the application layer interface the application layer interface may be in communication with a talker SRP stack . As shown in the application layer interface may be in communication with the talker SRP stack via a talker state machine . The talker state machine may comprise one or more algorithms that the talker may use to transition between various states. The talker state machine may communicate with the application layer interface and or the talker SRP stack to receive one or more inputs or events and transition from one state to another state based on the received input or event and the current state of the talker and or talker state machine determined by the state machine . In addition or alternatively the talker state machine may be configured to provide the SRP stack with one or more messages such as a Talker Advertise message and or a Talker Failed message that may be propagated throughout the network using the SRP stack . In some examples one or more actions performed using the talker state machine may trigger a SRP event at the listener . In one example the action performed may comprise a database change.

When the application layer interface of the talker receives the Allocate message from the controller the application layer interface may communicate the Allocate message to the talker state machine . Upon receiving the Allocate message the talker state machine determines the current state and performs one or more actions corresponding to the received Allocate message and the current state. In one example the current state may comprise an Initial State. In the Initial State the talker state machine has not received notification to create a data stream or waiting for notification of a registration from the listener to create the data stream. When receiving the Allocate message in the Initial State the talker state machine may be configured to communicate with the talker SRP stack and issue a query. When the talker state machine issues a query the talker state machine may inform the talker SRP stack of a stream IDs for a stream that the talker is interested in creating. Without issuing a query the talker may not determine a Listener Ready event LR that is associated with the stream ID. After the query is issued any LR registered in SRP by the listener for that stream ID may be determined by the talker .

After receiving the Allocate message the talker state machine may also be configured to register a TA attribute. In one example the talker may register the TA attribute after the talker issues a query. Registering the TA attribute may announce to the network that the talker is able to reserve the bandwidth and or resources that are necessary to reserve the stream. When the talker registers the TA attribute the SRP stack may notify the listener of the registration and the stream for which it is being registered. For example when the talker registers the TA attribute a TA event TA may be triggered at the listener . After the talker state machine registers the TA attribute the talker state machine may transition from the Initial State to a Waiting State where the talker state machine may wait for an event triggered by a listener registration such as a LR event. In addition after the TA attribute registration the talker may be configured to send a Success message to the controller indicating that the talker is able to source a data stream. The talker may be configured to send the Success message to the controller when the talker state machine transitions from the Initial State to the Waiting State. In addition the talker may send the Success message to the controller by sending the Success message through the application layer interface of the talker . In one example the Success message to the controller includes the stream ID for the stream that the talker has reserved.

In response to receiving the Success message from the talker the controller may be configured to send a message to the listener that instructs the listener to connect to the stream that the talker is sourcing or has determined to source. The message from the controller to the listener may be referred to as a Connect message. In one example the Connect message includes the stream ID provided by the talker to the controller in the talker s Success message. In one example the controller may communicate the Connect message to the listener through the application layer interface of the controller to the application layer interface of the controller.

In response to receiving the Connect message the listener may be configured to register a listener ready LR attribute in order to announce to the talker that the listener is able to connect to the data stream. In one example the listener may be configured to register the LR attribute in order to make the announcement in accordance with through and or using the Stream Reservation Protocol SRP as described in IEEE 801.1Qat 2010. In order to register the LR in response to receiving the Connect message at the application layer interface the application layer interface may be in communication with a listener SRP stack . As shown in the application layer interface may be in communication with the listener SRP stack via a listener state machine . The listener state machine may comprise one or more algorithms that the listener may use to transition between various states. The listener state machine may communicate with the application layer interface and or the listener SRP stack to receive one or more inputs or events and transition from one state to another state based on the received input or event and the current state of the listener and or the listener state machine . In addition or alternatively the listener state machine may be configured to provide the SRP stack with one or more messages such as a LR message a Listener Ready Failed LRF message and or a Listener Asking Failed LAF message that may be propagated throughout the network using the SRP stack . In some examples one or more actions performed using the listener state machine may trigger a SRP event at the talker . In one example the one or more actions performed may comprise a database change.

When the application layer interface of the listener receives the Connect message from the controller the application layer interface may communicate the Connect message to the listener state machine . Upon receiving the Connect message the listener state machine may determine the current state of the listener state machine and perform one or more actions corresponding to the received Connect message and the current state. In one example the current state may comprise an Initial State. In the Initial State the listener state machine has not received notification to connect to a data stream or is not waiting for notification of a registration from the talker for connecting to the data stream. When receiving the Connect message in the Initial State the listener state machine may be configured to communicate with the listener SRP stack and issue a query. By issuing a query the listener state machine may inform the listener SRP stack of the stream IDs in which the listener is interested in receiving registration changes for. In one example the listener state machine may use the stream ID that was included in the Connect message when issuing the query. Without issuing the query the listener may not determine a TA event for the stream ID. After the query is issued any TA registered in the listener SRP stack the talker SRP stack or any other SRP stack in the system that may register a TA for that stream ID may be provided to the listener .

After the listener state machine issues the query the listener state machine may transition from the Initial State to a Waiting State where the listener state machine may wait for an event triggered by a talker registration such as a TA event TA . For example when the talker registers a TA the registration may trigger a TA event at the listener state machine . In one example the TA registration may not trigger the TA event at the listener until the listener state machine issues a query to the listener SRP stack . When the listener state machine determines the TA message from the listener SRP stack the listener state machine may perform a series of actions. In one action the listener state machine processes information received in the TA message. Processing the TA message may include retrieving a destination address DA of the stream which may be necessary for programming an Ethernet adapter of the listener to receive frames addressed to that multicast address.

In another action the listener state machine may start an audio video transport protocol AVTP engine of the listener. Without starting the AVTP engine no media or at least less than all of the media may be recognized or processed by the listener even though media may be streaming over the network and delivered to the listener . For example if the listener registered a LR attribute the registration may trigger a LR event at the talker state machine causing the talker to begin streaming the data stream. Without starting the AVTP protocol engine the listener may not recognize the stream. In addition an Ethernet adapter may be programmed during the start of the AVTP protocol. To program the Ethernet adapter the DA determined during the TA process action may be used. Starting the AVTP engine may include initiating a separate module and or may include enabling execution of an existing module.

In another action the listener may be configured to register the LR attribute. The listener may register the LR attribute to announce to the network and or the talker that the listener may connect is reserving or has reserved connection to the data stream. Registering the LR attribute may trigger an LR event LR at the talker and in response the talker may be configured to send the data stream over the network . As explained above the listener may be configured to register the LR event after starting the AVTP engine so that the listener may recognize the media stream that the talker determined to transmit due to receiving the LR event.

The listener may be further configured to transition from the Waiting State to a Monitoring State. In one example the listener may be configured to transition from the Waiting State to the Monitoring State after registering the LR attribute. The Monitoring State may be considered a normal operation state of the listener when a streaming media connection is established between the talker and the listener . In the Monitoring State the listener may be monitoring for indications that the stream to which it is connected and or for which has made the reservation for has terminated either normally or abnormally. The state machine may be monitoring the stream itself or messages received through the application layer interface the listener SRP stack and or other components or modules of the listener that may be configured to monitor and or detect a stream s termination. As an example in the Monitoring State the listener state machine may be monitoring for a Talker Failed event TF which may be an indication of an abnormal termination of the stream s reservation. A TF event may be issued due to an emergency priority stream taking up bandwidth that the stream had been using. As another example in the Monitoring State the listener state machine may be monitoring the stream for a Talker Deregister event TalkerDeregister which may indicate a normal termination of the reservation by the talker . As another example the listener state machine may be monitoring for a Disconnect event Disconnect which may be a message or command from the controller that the client and or the controller no longer wants the listener to listen to the stream.

After registering the LR attribute and before during or after transitioning from the Waiting State to the Monitoring State the listener may be configured to send a Success message to the controller which may indicate that the listener has successfully connected to and or reserved reservation for the data stream. The listener may be configured to issue the Success message through the application layer interface of the listener to the application layer interface of the controller . In response to receiving the Success message from the listener the controller may be configured to provide a response to the client that indicates to the client that the talker and the listener were able to establish a connection for streaming the data stream.

In one example the listener may also be configured to issue a Failure message to the controller indicating the listener is unable to connect to and or reserve reservation for the data stream and or that the listener s connection to and or reservation for the data stream was terminated. The listener may be configured to send the Failure message to the controller through the application layer interface of the listener to the application layer interface of the controller . The Failure message may include information related to one or more errors associated with why the listener was unable to connect reserve reservation for or continue to be connected to and or reserve reservation for the data stream. In response to receiving the Failure message from the listener the controller may be configured to provide a response to the client that indicates to the client that the talker and the listener were unable to establish a connection for streaming the data stream.

The listener may be configured to send the Failure message when the listener state machine is configured in the Waiting State and or the Monitoring State. In addition or alternatively the listener may be configured to send the Failure message in response to a Talker Failed event. In one example as mentioned above a Talker Failed event may be triggered by an abnormal termination of the stream s reservation such as by an emergency priority stream taking up bandwidth that the stream had been using. If the listener state machine is configured in the Waiting State when the Talker Failed message is received the listener state machine may be configured to register a Listener Asking Failed LAF attribute indicating that the listener is unable to connect or no longer able to reserve connection to the stream. The listener state machine may further be configured to log one or more errors indicating why the listener is unable to connect or is no longer able to reserve connection to the stream. The listener state machine may further be configured to remain in the Waiting State. After registering the LAF attribute and or logging the one or more errors the listener may be configured to send the Failure Message to the controller .

Alternatively if the listener state machine is in the Monitoring State then in response to receiving the Talker Failed message the talker state machine may be configured to initially stop the AVTP engine in order to disconnect from the data stream. After stopping the AVTP engine the listener state machine may then be configured to register the LAF attribute and log one or more errors associated with receiving the TF event and or registering the LAF attribute. The listener state machine may also be configured to transition from the Monitoring State to the Waiting State. After registering the LAF attribute and or logging the one or more errors and before during or after transitioning from the Monitoring State to the Waiting State the listener may be configured to send the Failure Message to the controller .

After registering the LR attribute by the listener state machine a LR event LR may be triggered. For example a LR signal associated with the LR event may be propagated through the listener SRP stack of the listener and or the talker SRP stack of the talker and received by the talker state machine . When the talker state machine receives the LR event the talker state machine may be in the Waiting State. Upon receipt of the LR event and in the Waiting State the talker state machine may be configured to start the AVTP engine of the talker . When the talker state machine starts the AVTP engine the talker may begin streaming the data stream over the network and connection of the data stream may be established between the talker and the listener . Because the listener has already started its own AVTP engine the listener may recognize the media stream that it is being received from the talker .

The talker may be configured to begin streaming a data stream and establish connection with the listener upon receipt of an LR event when the talker state machine is configured in a state other than the Waiting State. For example the talker may be configured to establish connection with the listener upon receipt of an LR event when the talker state machine is configured in a Failed State. In the Failed State the talker is not streaming a data stream to the talker because the talker has received notification such as by receiving a LAF event that the listener is not able to reserve connection to the data stream. Upon receipt of the LR event the listener indicates to the talker that the listener is able to connect to the data stream. Upon receipt of the LR message the talker state machine starts the AVTP engine to establish connection with the listener and transitions to a Ready State where the talker may operate under notice that the listener is able to connect to the stream.

In the example above the talker state machine is initially configured in the Failed State. The talker state machine may be configured in the Failed State because the talker received notice that the listener is not able to accept the stream. When the listener determines it may not accept the stream the listener may register a LAF attribute which may trigger a LAF event at the talker . When talker state machine receives the LAF event the talker state machine may be configured in the Ready State. Upon receipt of the LAF event the talker state machine may be configured to stop the AVTP engine to stop streaming the data stream. The talker state machine may also be configured to log one or more errors associated with the LAF event. In addition the talker state machine may be configured to transition from the Ready State to the Failed State.

In some systems such as the system shown in there may be more than one listener such as listeners of system . Where the system includes more than one listener the Ready State may indicate that all of the listeners are able to accept the data stream. Similarly where the system includes more than one listener the Failed State may indicate that none of the listeners are able to accept the stream. Where the system includes more than one listener there may be a third state that indicates at least one listener is able to accept the stream and also at least one listener is unable to accept the stream. For example in system if listeners and each register a LR attribute indicating that the listeners can accept the stream and if listener registers a LAF attribute indicating that the listener is unable to accept the stream then the talker state machine may be configured to be in the third state. The third state may be referred to as a Ready Failed State. A registration of at least one LR attribute and a registration of at least one LAF attribute may trigger a Listener Ready Failed event LRF .

The talker state machine may be configured to transition to the Ready Failed State. When the talker state machine transitions to the Ready Failed State the talker state machine may be configured to start the data streaming and or maintain the data streaming because at least one listener is able to accept the stream. Also in the Ready Failed State the talker state machine may be configured to log one or more errors because at least one listener is unable to accept the stream. For example if the talker state machine is in the Waiting State and receives a Ready Failed event the talker state machine may be configured to start the AVTP engine log an error and then transition from the Waiting State to the Ready Failed State. Similarly if the talker state machine is configured in the Ready State and receives a LRF event the state machine may be configured to log an error and transition from the Ready State to the Ready Failed State. Likewise if the talker state machine is configured in the Failed State and receives a LRF event the talker state machine may be configured to start the AVTP engine log an error and transition from the Failed State to the Ready Failed State.

The talker state machine may also be configured to transition from the Ready Failed State. For example when the talker state machine receives a LR event the talker state machine may be configured to transition from the Ready Failed State to the Ready State. As another example when the talker state machine receives a LAF event the talker state machine may be configured to stop the AVTP engine long any errors associated with the LAF event and transition from the Ready Failed State to the Failed State.

The talker state machine and or the listener state machine also may be configured to transition to their respective Waiting States in response to receiving a deregister event. The talker state machine may receive a Listener Deregister event ListenerDeregister . The Listener Deregister event may be triggered in response to the listener state machine deregistering one or more attributes such as deregistering a LR attribute. The listener state machine may deregister an attribute in response to a normal or natural termination of a connection to a data stream. An example of a normal or natural termination may be a user initiated termination in order to change streams. Another example may be a system initiated termination in order for the device to enter a low power sleep state. Similarly the listener state machine may receive a Talker Deregister event TalkerDeregister . The Talker Deregister event may be triggered in response to the talker state machine deregistering one or more attributes such as deregistering a TA attribute. The talker state machine may deregister an attribute in response to a normal or natural termination of supplying the data stream. An example of normal termination of supplying the data stream may be a user initiated termination due to a media change such as removal of a Compact Disc audio source for the stream.

The listener state machine may be configured to receive a Talker Deregister event when the listener state machine is configured in the Monitoring State. When the listener state machine receives a Talker Deregister event the listener state machine may be configured to stop the AVTP engine of the listener . The listener state machine may also be configured to deregister a listener attribute such as a LR attribute. Deregistering the listener attribute may trigger the Listener Register event at the talker state machine which may cause the talker state machine to stop the AVTP engine of the talker and or transition to the Waiting State. After the listener state machine deregisters the listener attribute the listener state machine may be configured to transition from the Monitoring State to the Waiting State.

The talker state machine may be configured to receive a Listener Deregister event when the talker state machine is configured in any one of the Ready State the Ready Failed State or the Failed State. When the talker state machine is configured in the Ready State and the talker state machine receives a Listener Deregister event the talker state machine the talker state machine may be configured to stop the AVTP engine of the talker and transition from the Ready State to the Waiting State. When the talker state machine is configured in the Ready Failed State and the talker state machine receives a Listener Deregister event the talker state machine may be configured to stop the AVTP engine of the talker and transition from the Ready Failed State to the Waiting State. When the talker state machine is configured in the Failed State and the talker state machine receives a Listener Deregister event the talker state machine may be configured to transition from the Failed State to the Talker State.

The client may also be configured to send instructions to the controller to remove the connection of the data stream between the talker and the listener . The client may be configured to send the instructions to remove the connection through the application layer interface of the client.

In response to receiving the instructions from the client to remove the connection of the data stream the controller may be configured to send a message to the listener that instructs the listener to disconnect from the data stream. The message sent from the controller to the listener may be referred to as a Disconnect message. The Disconnect message may be sent from the application layer interface of the controller to the application layer interface of the listener .

In response to receiving the Disconnect message the listener may be configured to remove the connection from the data stream. When the listener receives the Disconnect message the listener state machine may be configured in either the Waiting State or the Monitoring State. When the Disconnect message is received and the listener state machine is in the Waiting State the listener state machine may be configured to deregister one or more registered LAF attributes. If the listener state machine has not registered any LAF attributes then an action to deregister a LAF attribute may not be taken. After deregistering the LAF attribute or determining that there are no registered LAF attributes to deregister the listener may transition from the Waiting State to the Initial State.

When the Disconnect message is received and the listener state machine is in the Monitoring State the listener state machine may be configured to stop the AVTP engine to stop the flow of the data stream. The listener state machine may also be configured to deregister one or more registered LR attributes. If the listener state machine has not registered any LR attributes then an action to register a LR attribute may not be taken. After deregistering the LR attribute or determining that there are no registered LR attributes to deregister the listener state machine may issue an end query function to the listener SRP stack . By issuing the end query function to the listener SRP stack the listener state machine may remove from the listener SRP stack any registrations pertaining to the stream ID associated with the stream from which the listener has been instructed to disconnect. The end query may be issued so that the listener SRP stack no longer notifies the listener state machine of registrations for which the listener is no longer interested.

After issuing the end query function the listener state machine may be configured to transition from the Monitoring State to the Initial State. In addition after the listener state machine stops the AVTP engine and deregisters any LR attributes and or issues the end query and or transitions from the Monitoring State to the Initial State the listener may send a Success message to the controller indicating that the listener successfully disconnected from the stream. The listener may send the Success message through the application layer interface of the listener and to the application layer interface of the controller .

In response to receiving the Success message from the listener the controller may be configured to determine whether there are other listeners in the system that need to be instructed to disconnect from the stream. For example referring back to the system if the listener sends a Success message to the controller the controller may determine to send a Disconnect message to the listener . In an alternative system the controller may be configured to send a Disconnect message to each listener simultaneously. In another alternative system the controller may determine whether to send a Disconnect message to the listener and or the listener before receiving a Success message from the listener .

After receiving Success messages from all of listeners e.g. the listener in the system the controller may be configured to send a message to the talker that instructs the talker to remove the stream. The message to the talker to remove the stream may be referred to as a Deallocate message. The controller may send the Deallocate message to the talker through the application layer interface of the controller . The talker may receive the Deallocate message through the application layer interface of the talker .

In response to receiving the Deallocate message the talker may be configured to remove the data stream. When the talker receives the Deallocate message the talker state machine may be configured in the Waiting State the Ready State the Ready Failed State or the Failed State. When the talker receives the Deallocate message the talker state machine may be configured to transition to the Initial State regardless of the state in which the talker state machine is currently. For example when the Deallocate message is received and the talker state machine is in the Waiting State the talker state machine may be configured to transition from the Waiting State to the Initial State. When the Deallocate message is received and the talker state machine is in the Ready State the talker state machine may be configured to stop the AVTP engine and the flow of the data stream. The talker state machine may also be configured to deregister one or more registered talker attributes. If the listener state machine has not registered any talker attributes then an action to deregister a talker attribute may not be taken. After deregistering the talker attribute or determining that there are no registered talker attributes to deregister the talker state machine may transition from the Ready State to the Initial State.

When the Deallocate message is received and the talker state machine is in the Ready Failed State the talker state machine may be configured to stop the AVTP engine and the flow of the data stream. The talker state machine may also be configured to deregister one or more registered talker attributes. If the listener state machine has not registered any talker attributes then an action to deregister a talker attribute may not be taken. After deregistering the talker attribute or determining that there are no registered talker attributes to deregister the talker state machine may transition from the Ready Failed State to the Initial State.

When the Deallocate message is received and the talker state machine is in the Failed State the talker state machine may be configured to deregister one or more registered talker attributes. If the listener state machine has not registered any talker attributes then an action to deregister a talker attribute may not be taken. After deregistering the talker attribute or determining that there are no registered talker attributes to deregister the talker state machine may issue an end query function to the talker SRP stack . By issuing the end query the listener state machine may remove from the talker SRP stack any registrations pertaining to the stream ID associated with the stream for which the talker has been instructed to disconnect. The end query may be issued so that the talker SRP stack no longer notifies the talker state machine of registrations for which the talker is no longer interested. After the talker state machine issues the end query the talker state machine may transition from the Failed State to the Initial State.

After deregistering the talker attribute and before during or after the talker state machine transitions from the Waiting State the Ready State the Ready Failed State or the Failed State the talker may send a Success message to the controller indicating that the talker successfully disconnected the stream. The talker may send the Success message through the application layer interface of the listener and to the application layer interface of the controller .

In response to receiving a success message from the talker the controller may be configured to send a message to the client indicating that the stream is disconnected. The message from the controller to the client may be sent through the application layer interface of the client . The message may be received by the client through the application layer interface of the client .

In one example the TA or LR events may be changed as they propagate over the network through the talker SRP stack and or the listener SRP stack . In one example the system may include components other than endpoints such as the talker and or the listener the controller and or the client . For example the system may include components such as switches and or bridges. The switches and or bridges may be responsible for determining if there is sufficient bandwidth to set up a new reservation through a given path. Where the system includes switches and or bridges a bandwidth calculation may be performed by each switch and or bridge that receives a TA or LR event. As long as the switch or bridge determines that there is sufficient bandwidth the reservation is made in the switch or bridge and the TA or LR continues propagating. If there is not sufficient bandwidth for the stream to pass through the switch or bridge towards the target such as the talker or the listener the switch or bridge will register a TF instead of the TA or a LAF instead of the LR which will then continue propagating toward the listener or talker. During a time period that one or more registrations are active the registrations may be periodically repeated and or propagated so that other devices on the network such as the talker the listener the client and or the controller know that the registrations are still wanted. When one or more conditions change anywhere in a reserved path in such a way that bandwidth requirements for a stream can no longer be met the switch identifying the changed conditions i.e. the bottleneck switch may change one or more listener registrations for the links with insufficient bandwidth and then propagate the changed listener registrations. For example if there are multiple listener registrations for the stream and if a switch or bridge in the path between the listener and talker determines that there is enough bandwidth for one or more but not all of the listener registrations for the stream the switch or bridge converts the LR or LAF into a LRF instead and the LRF is propagated to the talker .

Alternatively or in addition the talker and or the listener may be configured to send a Failure message to the controller that is independent of any actions performed by the talker state machine and or the listener state machine . The failure message may be based on a failure that arises through a condition in the system that are unrelated to the state machines such as full network queues or memory allocation failures. By reporting such failures to the controller the talker and or the listener may provide a way of notifying the system of the failures so that the failures may be recovered at an upper level of the system such as at the application layer.

The application layer interfaces and or may be may include and or may be referred to as an application layer module an application layer interface module an application layer and or an application layer stack. The application layer interfaces and or may include software hardware or some combination thereof executable by a processor. The application layer interfaces and or may perform one or more administrative tasks for the respective system components and or and or may coordinate and or orchestrate one or more components to ensure that the respective system components and or performs tasks for which the system components and or may be implemented.

The talker SRP stack and or the listener SRP stack may alternatively be may include and or may be referred to as a SRP module a SRP stack module a SRP layer module a SRP and or a SRP application. The talker SRP stack and or the listener SRP stack may include software hardware or some combination thereof executable by a processor. The talker SRP stack and or the listener SRP stack may communicate with and or include memory and or a database which the talker SRP stack and or the listener SRP stack may use to store information and or data such as information about data streams received. The memory and or database accessible and utilized by the talker SRP stack and or the listener SRP stack may be a part of the talker SRP stack and or the listener SRP stack or may be a separate component of the talker and or the listener such as memory and or memory . The memory and or the memory may include and or store instructions for operation and or functions to be performed by the SRP stack and or the SRP stack . Various other examples are possible.

The talker state machine and or the listener state machine may comprise computer instructions computer code digital logic other software hardware or any combination thereof a part of which may be stored in the memory the memory and or any other storage device internal or external the talker and or the listener and that is executable by one or more processors.

The memory and or the memory may include but is not limited to computer readable storage media such as various types of volatile and non volatile storage media including but not limited to random access memory read only memory programmable read only memory electrically programmable read only memory electrically erasable read only memory flash memory magnetic tape or disk optical media and the like. In one example the memory and or the memory may include a cache or random access memory for a processor such as processor of computer system described later. In alternative examples the memory and or the memory is separate from a processor such as a cache memory of a processor the system memory or other memory. The memory and or the memory may be an external storage device or database for storing data. Examples include a hard drive compact disc CD digital video disc DVD memory card memory stick floppy disc universal serial bus USB memory device or any other device operative to store data. The memory and or the memory may be operable to store instructions executable by a processor. The functions acts or tasks illustrated in the figures or described may be performed by a programmed processor executing the instructions stored in the memory and or the memory . The functions acts or tasks are independent of the particular type of instructions set storage media processor or processing strategy and may be performed by software hardware integrated circuits firm ware micro code and the like operating alone or in combination. Likewise processing strategies may include multiprocessing multitasking parallel processing and the like.

The talker SRP stack and or the listener SRP stack may include be connected with and or be in communication with attribute databases respectively. In one example the attribute data base and or the attribute database may comprise a MSRP attribute database. The attribute database and or the attribute database may represent a memory which may resemble and or be similar to the memory and or the memory a data storage bank and or various other components. The attribute databases and or the attribute database may or may not be or include one or more features of a computer system such as a computer system shown in and described later. The attribute database and or the attribute database may have an application programming interface API which may be designed to notify an upper layer application whenever a new attribute such as a talker attribute and or talker stream ID is registered on the network and or received by the talker SRP stack and or the listener SRP stack .

As mentioned the talker may have talker attributes and or the listener may have listener attributes. The attribute database and or the attribute database may represent a database including and or storing one or more talker attributes and or listener attributes. For example the attribute database may include attributes for the talker and or the attribute database may include the attributes for the listener on or connected with the network . The attribute database and or the attribute database may store or identify where the talker and or listener is how much bandwidth a data stream from the talker may require how much bandwidth may be available for a listener a unique stream ID for the talker and or listener and or various other pieces of information and or data. The attribute database and or the attribute database may for example store information and or data indicating that the talker with a first unique stream ID is connected with an Ethernet AVB network identifying what information and or data to request from the network and or controller to obtain and or register for the data stream from the talker and what percentage of an Ethernet connection will be used if the listener has registered for and or begins receiving the data stream from the talker . Information and or data received by the attribute database and or the attribute database such as one or more data streams from the network may be transmitted output sent and or passed from the talker SRP stack and or the listener SRP stack to the application layer interface and or the application layer interface .

In some systems the attribute database of the talker and or the attribute database of the listener may be created and or updated from a separate and or collective attribute database. This separate and or collective attribute database may represent one database for both the talker and the listener . Referring back to the system shown in where there are multiple talkers and or multiple listeners this separate and or collective attribute database may represent one database for multiple or all of the talkers and and or all of the listeners and . For example a separate and or collective MSRP attribute database may be attached and or in communication with the network and or may store information and or data about one or more talkers and and or listeners and . Alternatively or in addition each talker and and or each listener and may include an attribute database and or may have access to the separate and or collective MSRP attribute database.

The attribute database and or the attribute database may be a copy of and or include information from the separate and or collective attribute database. In such systems the separate and or collective attribute database may be continuously updated or updated at various other intervals. In some systems the separate and or collective attribute database may collect and or update information based on information and or data about data streams received and or stored in each of the SRP attribute databases . Updates may be sent by the separate and or collective attribute database to the attribute database and or the attribute database at various intervals such as every 10 15 seconds or so. In these systems the attribute database and or the attribute database may be the same.

In an alternative example the attribute database and or the attribute database may not be included in the talker and or the listener but may exist separately and or be in communication with the talker and or the listener. In another alternative example parts of a separate and or collective attribute database may be extracted from an external database and stored in volatile memory in the talker and or the listener when the talker and or the listener is powered up. Various other examples functions and or features of the attribute database and or the attribute database are possible.

At block in response to receiving instructions from the client to create the data stream the controller may be configured to send an Allocate message to the talker that instructs the talker to create the data stream. The Allocate message may be sent from the application layer interface of the controller over an Ethernet AVB network layer of the system to an application layer interface such as a FBlock interface of the talker. The Allocate message may include various parameters including a SourceNr parameter indicating a number of data source one or more destination addresses to which the data stream is to be sent a presentation delay of the data stream a rank of the data stream e.g. a first indicator may indicate an emergency rank and a second indicator may indicate a non emergency rank a virtual local area network VLAN identifier used for the data stream and or a class of the data stream e.g a first indicator may indicate class A and a second indicator may indicate class B .

At block the controller determines whether the talker can create the data stream. The controller may determine whether the talker can create the data stream based on receiving a response message from the talker and identifying whether the response message is a Success message or a Failure message. The response message may be sent through the application layer interface of the talker. The Success Message may indicate that the talker is able to create the data stream. The Success Message may be sent by the talker to the controller after and or during the talker performing a series of actions including issuing a query to a SRP stack in the talker and or the system registering a Talker Advertise attribute and or transitioning from an Initial State to a Waiting State for a Listener Ready event. The Success Message may include a stream ID that identifies the data stream that the client is able to create. The Failure Message may or may not be related to whether the talker has the resources and or the bandwidth to create the data stream. For example the Failure Message may be unrelated and may be received by the controller if a failure arises through a failure condition in the system such as full network queues or memory allocation failures. If the controller receives the Failure message from the talker then the controller may determine that the talker is unable to create the stream and reports the failure to the client at block . The method may then proceed back to block where the controller waits for another instruction from the client. If the controller receives the Success message from the listener the method may proceed to block .

At block in response to receiving the Success message from the listener the controller may be configured to report a Success message to the client indicating that the talker and the listener are able to establish a connection for the data stream. The message from the controller to the client may be sent through the application layer interface of the controller and received at the application layer interface of the client. The method may then proceed to block where the controller waits for another instruction from the client.

At block in response to receiving instructions from the client to remove the data stream from the client the controller may be configured to send a Disconnect message to the listener that instructs the listener to disconnect from the data stream. The Disconnect message may be sent from the application layer interface of the controller over an Ethernet AVB network layer of the system to an application layer interface such as a FBlock interface of the listener. At block the controller receives a message from the listener that the connection was removed. The message may be sent from the listener through the application layer interface of the listener. Before and or concurrently with sending the message to the controller the listener may perform a series of steps including stopping the AVTP engine of the listener deregistering if any listener attributes issuing an end query to an SRP stack to remove any registrations associated with a stream ID for which the listener is no longer interested in and transitioning from a Monitoring State to a Listening State.

At block after receiving the message from the listener the controller may determine if more listeners are to be disconnected from the stream. If there are more listeners to be disconnected from the stream then the method proceeds back to block where the controller determines another listener and sends the listener instructions to disconnect from the stream. Alternatively the listener may determine all of the listeners to be disconnected from the stream prior to sending one or more messages to the listeners to disconnect from the stream. After identifying all of the listeners the controller may then send all of the disconnect messages to all of the listeners concurrently. Alternatively the controller may not send all of the Disconnect messages to all of the listeners concurrently but nevertheless may send a Disconnect message to another listener before receiving a response from the initial listener.

When the listener determines that all of the listeners have responded that they have disconnected from the stream then at block the controller may be configured to send a Deallocate message to the talker that instructs the talker to remove the stream. The Deallocate message may be sent from through application layer interface of the controller and be received at an application layer interface of the talker. The application layer interface of the talker may be a FBlock interface. The talker may perform a series of actions to remove the connection including stopping the AVTP engine of the listener deregistering any talker attributes issuing an end query function to a SRP stack and or transitioning to an Initial State. At block the controller may receive a message from talker that removal of the stream was successful. The method returns back to block where the controller waits for instructions from the client.

After the talker sends the Success message to the controller at block the listener may be configured to receive a Connect message from the controller. The Connect message may be received through a high level application layer interface such as a FBlock interface of the listener. The Connect message may include the stream ID that the talker sent to the controller. After receiving the Connect message the listener may be configured to transition from an Initial State to a Monitoring State. In order to transition from the Initial State to the Monitoring State the listener may be configured to perform a series of actions including issuing a query to a SRP stack process a received Talker Advertise event start the AVTP engine of the listener and or register a listener attribute.

After the talker registers a Listener Ready attribute then at block the receives a Listener Ready event indicating that the listener registered the Listener Ready attribute starts the AVTP engine of the talker and transitions from the Waiting State to the Ready or Ready Failed State. When starting the AVTP engine and transitioning to the Ready or Ready Failed State a connection between the talker and the listener has been established and the data stream may flow from the talker to the listener.

At block the talker may register a Talker Advertise TA attribute. Registering the TA attribute may announce to the Ethernet AVB network that the talker is able to reserve the bandwidth and or resources that are necessary to reserve the stream. When the talker registers the TA attribute the SRP stack may notify the listener of the registration and the stream for which it is being registered. After the talker registers the TA attribute at block the talker may transition from the Initial State to a Waiting State where the talker waits for an event triggered by a listener registration such as a LR event. In addition after the TA attribute registration the talker may be configured to send a Success message to the controller indicating that the talker is able to create the data stream. The talker may send the Success message to the controller by sending the Success message through the application layer interface of the talker. The Success message to the controller may include the stream ID for the stream that the talker has reserved.

At block the listener may receive a Connect message from the controller that instructs the listener connect to the stream. The connect message may include the stream ID that the talker included in the Success message to the controller. The listener may receive the Connect message through a high level application layer interface such as a FBlock interface. At block in response to receiving the Connect message the listener may transition from the Initial State to the Waiting State where it waits for notification of the registration of the TA attribute by the talker. At block the listener receives a message that the talker registered the TA attribute. The listener may receive the notification through the SRP stack. When the talker registered the TA attribute at block the registration may trigger a TA event which notifies the listener of the TA attribute registration at block . At block the talker processes the TA message. Processing the TA message may include retrieving a destination address DA of the stream which may be necessary for programming an Ethernet adapter of the listener to receive frames addressed to that multicast address.

At block the listener may start the AVTP engine in order to recognize and or process the data stream. At block the listener registers a Listener Ready LR attribute. The listener may register the LR attribute to announce to the network and or the talker that the listener may connect is reserving or has reserved connection to the data stream. At block the listener may transition from the Waiting State to a Monitoring State. In the Monitoring State the listener may be monitoring for indications that the stream to which it is connected and or for which has made the reservation for has terminated either normally or abnormally. The listener may monitor the stream itself or messages received through the application layer interface the SRP stack and or other components or modules of the listener that may be configured to monitor and or detect a stream s termination. In one example the listener may be monitoring for a Talker Failed event TF which may be an indication of an abnormal termination of the stream s reservation. As another example the listener may be monitoring for a Talker Deregister event TalkerDeregister which may indicate a normal termination of the stream s reservation. As another example the listener may be monitoring for a Disconnect event Disconnect which may be a message or command from the controller that the client and or the controller no longer wants the listener to listen to the stream. At block the listener may also be configured to send a Success message to the controller indicating that the listener successfully connected to and or reserved reservation for the data stream. The listener may be configured to issue the Success message through the application layer interface of the listener.

Although the controller and or the client may determine that a connection for a data stream can be established after the controller receives the Success message from the listener the talker may not form the connection and or begin streaming the data until it receives notification of a Ready registration from the listener. At block the talker receives a Ready event. The Ready event may be triggered when the listener registered the Listener Ready attribute. In an alternative example method where there is more than one listener if a switch or bridge in the AVB network determines that there is sufficient bandwidth for at least one but not all of the listeners to receive the stream then the switch or bridge may convert the Ready event to a Ready Failed event. The talker may receive the Ready event of the Ready Failed event through the SRP stack.

In response to receiving the Ready event or the Ready Failed event at block the talker starts the AVTP engine and the data stream may flow from the talker to one or more listeners that registered a Listener Ready attribute associated with the stream ID of the stream. At block if the talker received a Ready Failed event the talker may log one or more errors associated with the one or more listeners that were not able to accept the data stream. At block the talker transition from the Waiting State to the Ready or the Ready Failed State depending on the listener event received by the talker at block . After starting the AVTP engine and or transitioning to the Ready or Ready Failed State the connection of the data stream between the talker and the listener is established and the data stream is successfully flowing from the talker to the listener.

At block the talker may receive a Deallocate message from the controller which may instruct the controller to remove the data stream. The talker may receive the Deallocate message from controller in response to the listener sending the Success message to the controller. The talker may receive the Deallocate message through a high level application layer interface such as a FBlock interface of the talker. In response to receiving the Deallocate message the talker may stop the AVTP machine deregister any registered talker attributes and transition from the Ready or the Ready Failed State to the Initial State.

At block the listener may transition from the Monitoring State to the Initial State. In addition the listener may send a Success message to the controller indicating that the listener successfully disconnected from the stream. The listener may send the Success message through the application layer interface of the listener.

At block in response to receiving the Success message from the listener the talker may receive a Deallocate message from the controller that instructs the talker to remove the stream. The talker may receive the Deallocate message through the application layer interface of the talker. At block the talker may stop the AVTP engine of the talker which may stop the data stream from streaming through the network. At block the talker deregisters one or more registered talker attributes. If no attributes are registered then an action to deregister a talker attribute may not be taken. After deregistering the talker attribute or determining that there are no registered talker attributes to deregister at block the talker may transition from the Ready State to the Initial State. Also at block the talker may send a Success message to the controller indicating that the talker successfully disconnected the stream. The talker may send the Success message through the application layer interface of the talker. After stopping the AVTP engine of the talker deregistering any talker attributes and or transitioning to the Initial State the connection of the data stream between the talker and the listener is successfully removed.

The talkers the listeners the head unit and the controller may be in communication with one or more of each other by communicating over the network . The network may be an Ethernet AVB network. Data streams transmitted from the talkers to the listeners may be sent over one or more Ethernet cables comprising the Ethernet AVB network. To reserve and or remove a reservation for a stream between the talkers and the listeners the network may use the Stream Reservation Protocol as described in IEEE 802.1Qat 2010. The SRP may be used by communicating through a SRP stack that is included in or accessible by the components of the system. The control signals for controlling the data streams may also be sent over the Ethernet cables. In addition the control signals may be initiated generated received and or processed at a high level application layer of the system . The control signals may be communicated over the Ethernet AVB network to and from the application layer through application layer interfaces. Each of the DVD player CD player radio front speaker amplifier rear seating display rear speaker amplifier and or head unit have an application layer interface. In one example the application layer interface comprises an FBlock interface. Where the components of the system have an FBlock interface the controls signals sent over the network may comprise FBlock control signals. The controller may be configured to send and or receive control signals such as FBlock control signals to each of the components and of the system . The controller may be or may include an application layer interface to send and or receive the control signals.

An exemplary operation of the system may include a driver of the automobile that wishes to start a DVD for a passenger in a rear seat of the automobile. To start the DVD the driver may press a Play button that is in communication with the head unit . The head unit recognizing that the Play button was pressed sends a Play command to the controller that instructs the controller to create a A V stream between the DVD player and the rear seating display . The controller upon receiving the instructions from the head unit sends an Allocate message to the DVD player instructing the DVD player to create a stream. Upon receipt of the Allocate message the DVD player or a talker operable with the DVD player may perform one or more actions using one or more state machines to create the stream. For example the DVD player may query the SRP stack of the DVD player so that the DVD player may be notified of any registrations associated with the stream. The DVD player may register a Talker Advertise attribute with the SRP stack to announce the DVD player s creation of the stream and then the DVD player may transition to a Waiting State where it waits to receive a Listener Ready event due to a Listener Ready registration from the rear seating display operating as a listener. The DVD player may also send a Success message to the controller . The DVD player may send the Success message to the controller through an application layer interface such as an FBlock interface of the DVD player . The Success message may include a stream ID identifying the stream that the DVD player wants to create.

The controller may receive the Success message from the DVD player and in response may send a Connect message to the rear seating display including the stream ID in the Connect message. Upon receipt of the Connect message the rear seating display using a state machine may issue a query to a SRP stack so that the SRP stack receives notification of any talker attribute registrations associated with the stream ID of the stream that the rear seat display wants to be connected to. In addition the rear seat display may receive a Talker Advertise event through the SRP stack due to the Talker Advertise registration performed by the DVD player. Upon receipt of the Talker Advertise event the rear seating display may process the Talker Advertise event start the AVTP engine of the rear seating display so that the rear seating display can recognize the media stream sent by the DVD player register a Listener Ready attribute to announce that can accept the media stream and then transitions to a Monitoring State where the rear seating display monitors the media stream or signals sent through the SRP stack or the application layer interface.

When the rear seating display registered the Listener Ready attribute a Listener Ready event may be propagated through the SRP stack and received by the DVD player . When DVD player identifies the Listener Ready event the DVD player may start the AVTP engine to start the media flow and then transitions to a Ready State where the DVD player operates under the configuration that all of the listeners can accept the media stream and in which a connection of the media stream between the DVD player and the rear seating display is successfully established.

The above operation is merely exemplary and other operations may be performed on the system or other systems involving talkers and listeners in an Ethernet AVB environment in accordance with the above descriptions.

One or more of the talkers such as talker and listeners and talker listeners and or controllers shown in may be and or may include a portion or all of one or more computing devices of various kinds such as the computing device in . illustrates an example of a general computer system designated . Any of the components from the system and or the system may include a portion or all of the computer system . For example in some examples the computer system may include only a processor and memory. The computer system can include a set of instructions that can be executed to cause the computer system to perform any one or more of the methods or computer based functions disclosed. The computer system may operate as a standalone device or may be connected e.g. using a network to other computer systems or peripheral devices.

In a networked deployment the computer system may operate in the capacity of a server or as a client user computer in a server client user network environment or as a peer computer system in a peer to peer or distributed network environment. The computer system can also be implemented as or incorporated into various devices such as a personal computer PC a tablet PC a set top box STB a personal digital assistant PDA a mobile device a palmtop computer a laptop computer a desktop computer a communications device a wireless telephone a land line telephone a control system a camera a scanner a facsimile machine a printer a pager a personal trusted device a web appliance a network router switch or bridge or any other machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine. In a particular example the computer system can be implemented using electronic devices that provide voice audio video or data communication. Further while a single computer system is illustrated the term system shall also be taken to include any collection of systems or sub systems that individually or jointly execute a set or multiple sets of instructions to perform one or more computer functions.

In the example computer system may include a processor e.g. a central processing unit CPU a graphics processing unit GPU or both. The processor may be a component in a variety of systems. For example the processor may be part of a standard personal computer or a workstation. The processor may be one or more general processors digital signal processors application specific integrated circuits field programmable gate arrays servers networks digital circuits analog circuits combinations thereof or other now known or later developed devices for analyzing and processing data. The processor may implement a software program such as code generated manually i.e. programmed .

The term module may be defined to include a plurality of executable modules. As described herein the modules are defined to include software hardware or some combination thereof executable by a processor such as processor . Software modules may include instructions stored in memory such as memory or another memory device that are executable by the processor or other processor. Hardware modules may include various devices components circuits gates circuit boards and the like that are executable directed and or controlled for performance by the processor .

The computer system may include a memory such as a memory that can communicate via a bus . The memory may be a main memory a static memory or a dynamic memory. The memory may include but is not limited to computer readable storage media such as various types of volatile and non volatile storage media including but not limited to random access memory read only memory programmable read only memory electrically programmable read only memory electrically erasable read only memory flash memory magnetic tape or disk optical media and the like. In one example the memory includes a cache or random access memory for the processor . In alternative examples the memory is separate from the processor such as a cache memory of a processor the system memory or other memory. The memory may be an external storage device or database for storing data. Examples include a hard drive compact disc CD digital video disc DVD memory card memory stick floppy disc universal serial bus USB memory device or any other device operative to store data. The memory is operable to store instructions executable by the processor . The functions acts or tasks illustrated in the figures or described may be performed by the programmed processor executing the instructions stored in the memory . The functions acts or tasks are independent of the particular type of instructions set storage media processor or processing strategy and may be performed by software hardware integrated circuits firm ware micro code and the like operating alone or in combination. Likewise processing strategies may include multiprocessing multitasking parallel processing and the like.

As shown the computer system may or may not further include a display unit such as a liquid crystal display LCD an organic light emitting diode OLED a flat panel display a solid state display a cathode ray tube CRT a projector a printer or other now known or later developed display device for outputting determined information. The display may act as an interface for the user to see the functioning of the processor or specifically as an interface with the software stored in the memory or in the drive unit .

Additionally the computer system may include an input device configured to allow a user to interact with any of the components of system . The input device may be a number pad a keyboard or a cursor control device such as a mouse or a joystick touch screen display remote control or any other device operative to interact with the computer system .

In a particular example as depicted in the computer system may also include a disk or optical drive unit . The disk drive unit may include a computer readable medium in which one or more sets of instructions e.g. software can be embedded. Further the instructions may embody one or more of the methods or logic as described. In a particular example the instructions may reside completely or at least partially within the memory and or within the processor during execution by the computer system . The memory and the processor also may include computer readable media as discussed above.

The present disclosure contemplates a computer readable medium that includes instructions or receives and executes instructions responsive to a propagated signal so that a device connected to a network can communicate voice video audio images or any other data over the network . Further the instructions may be transmitted or received over the network via a communication port or interface and or using a bus . The communication port or interface may be a part of the processor or may be a separate component. The communication port may be created in software or may be a physical connection in hardware. The communication port may be configured to connect with a network external media the display or any other components in system or combinations thereof. The connection with the network may be a physical connection such as a wired Ethernet connection or may be established wirelessly as discussed later. Likewise the additional connections with other components of the system may be physical connections or may be established wirelessly. The network may alternatively be directly connected to the bus .

The network may include wired networks wireless networks Ethernet AVB networks or combinations thereof. The wireless network may be a cellular telephone network an 802.11 802.16 802.20 802.1Q or WiMax network. Further the network may be a public network such as the Internet a private network such as an intranet or combinations thereof and may utilize a variety of networking protocols now available or later developed including but not limited to TCP IP based networking protocols.

While the computer readable medium is shown to be a single medium the term computer readable medium may include a single medium or multiple media such as a centralized or distributed database and or associated caches and servers that store one or more sets of instructions. The term computer readable medium may also include any medium that is capable of storing encoding or carrying a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the methods or operations disclosed. The computer readable medium may be non transitory and may be tangible.

In an example the computer readable medium can include a solid state memory such as a memory card or other package that houses one or more non volatile read only memories. Further the computer readable medium can be a random access memory or other volatile re writable memory. Additionally the computer readable medium can include a magneto optical or optical medium such as a disk or tapes or other storage device to capture carrier wave signals such as a signal communicated over a transmission medium. A digital file attachment to an e mail or other self contained information archive or set of archives may be considered a distribution medium that is a tangible storage medium. Accordingly the disclosure is considered to include any one or more of a computer readable medium or a distribution medium and other equivalents and successor media in which data or instructions may be stored.

In an alternative example dedicated hardware implementations such as application specific integrated circuits programmable logic arrays and other hardware devices can be constructed to implement various modules or parts of modules included in the system. Applications that may include the apparatus and systems can broadly include a variety of electronic and computer systems. One or more examples described may implement functions using two or more specific interconnected hardware modules or devices with related control and data signals that can be communicated between and through the modules or as portions of an application specific integrated circuit. Accordingly the present system encompasses software firmware and hardware implementations.

The system described may be implemented by software programs executable by a computer system. Further in a non limited example implementations can include distributed processing component object distributed processing and parallel processing. Alternatively virtual computer system processing such as cloud computing can be constructed to implement various parts of the system.

The system is not limited to operation with any particular standards and protocols. For example standards for Internet and other packet switched network transmission e.g. TCP IP UDP IP HTML HTTP may be used. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly replacement standards and protocols having the same or similar functions as those disclosed are considered equivalents thereof.

While various embodiments of the invention have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly the invention is not to be restricted except in light of the attached claims and their equivalents.

