---

title: Method and apparatus for geographic document retrieval
abstract: A geographic document retrieval method (GDR) can be executed by a computer system to index, retrieve and rank geographical documents. Textual and spatial attributes of geographical documents are indexed separately using inverted index and spatial index, respectively. Spatial attributes of a document are represented as one or more contiguously closed regions of arbitrary shapes. Upon receiving an input query carrying a geographic representation of a location using arbitrary regions, the GDR method retrieves one or more documents by executing an overlap test between arbitrary regions from the query and the arbitrary regions associated with the documents.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09210540&OS=09210540&RS=09210540
owner: xAd, Inc.
number: 09210540
owner_city: New York
owner_country: US
publication_date: 20130419
---
The present application claims the benefit of priority from U.S. Provisional Application No. 61 724 295 entitled Method and Apparatus for Probabilistic User Location filed on Nov. 8 2012 U.S. Provisional Application No. 61 724 298 entitled Method and Apparatus for Dynamic Fencing filed on Nov. 8 2012 and U.S. Provisional Application No. 61 724 299 entitled Method and Apparatus for Geographic Document Retrieval filed on Nov. 8 2012 each of which is incorporated herein by reference in its entirety. The present application is related to commonly assigned U.S. Patent Application entitled Method and Apparatus for Probabilistic User Location filed on even date herewith and to U.S. Patent application entitled Method and Apparatus for Dynamic Fencing filed on even date herewith each of which is incorporated herein by reference in its entirety.

The present disclosure is related to location based mobile applications and more particularly to geographical document retrieval in location based mobile applications.

Hyperlocal advertising is the ability to deliver precise relevant and timely advertising to consumers based on estimate of their location at the moment of delivery. Nowadays with the advent of smartphones and tablets hyperlocal advertising is becoming increasingly popular among online marketers as a vehicle of choice to deliver their messages to targeted mobile audiences on mobile devices. Various industry experts predict over 1.5 trillion mobile consumer page views a month translating to hundreds of billions of ad impression opportunities a month or billions a day. There are currently an estimated 20 million stores and small businesses located in the US alone.

Geo Fencing or location based targeting involves sending information or push notifications to consumers who enter virtual perimeters set around physical places. Such technologies allow an advertiser to create a virtual fence around a point or place of interests. For example an advertiser can pinpoint a store and deliver a specific advertisement ad to anyone who comes within a pre defined geographic area around that store. Ads delivered through geo fencing typically yield higher hit rate and better return of investment for advertisers since they re more contextual.

A geographic document retrieval method GDR can be executed by a computer system to index retrieve and rank geographic documents. In one embodiment a method of indexing geographical documents comprises separating textual attributes and spatial attributes associated with each of the geographical documents indexing the textual attributes using inverted index and indexing the spatial attributes using spatial index. In certain embodiments the spatial attributes include one or more contiguously closed regions of arbitrary shapes and the method further compeises for each respective contiguously closed region computing a smallest rectangle that contains the respective contiguously closed region. In certain embodiments the spatial index includes a boundingBox field corresponding to the smallest rectangles and a shape field corresponding to geometry of the contiguously closed regions each of which can be stored in a respective V tree.

In certain embodiments a method of retrieving geographical documents comprises receiving a query having a set of spatial clauses and at least one other clause the set of spatial clauses representing one or more contiguously closed geographical regions of arbitrary shapes retrieving at least one first document whose spatial index matches the set of spatial clauses selecting at least one second document from the at least one first document the at least one second document having inverted index that matches the at least one other clause in the query and ranking the at least one second document.

In certain embodiments the at least one first documents are selected by computing a bounding box for each of the one or more contiguously closed geographical regions and searching for geographical documents whose bounding boxes intersect the bounding box for each of the one or more contiguously closed geographical regions the geographical documents being stored in a computer readable medium. It is then determined whether any of the geographical documents whose bounding boxes intersect the bounding box for each of the one or more contiguously closed geographical regions has one or more contiguously closed geographical regions overlap any of the one or more contiguously closed regions represented by the query. The geographical documents having one or more contiguously closed geographical regions that overlap with any of the one or more contiguously closed regions represented by the query are returned as the one or more first documents.

In certain embodiment each of the at least one second document is ranked based on a set of features of the associated regions that overlaps with the regions from the query referred hereafter as the overlapped regions .

Thus in certain embodiments geographic information of a document is represented as arbitrary regions. Upon receiving an input query carrying a geographic representation of a location using arbitrary regions instead of traditional input types such as integers or strings the GDR method retrieves one or more documents by executing an overlap test between arbitrary regions from the query and the arbitrary regions associated with the documents. Examples of arbitrary regions represented in the query can be probable mobile user locations or locations of interests in the context of mobile advertising applications and examples of the geographical documents can be text graphic audio and or video advertisements.

Although the present disclosure uses hyper local ad serving as exemplary applications of GDR GDR can be applied to other areas such as location based searches location based directory searching or browsing to name a few. In one embodiment GDR responds to queries with regions of interest and retrieves objects associated with a geographical region that intersects with at least one of the regions of the query. Possible applications include but are not limited to 

In one embodiment GDR comprises storeing and indexing geographic documents with associated arbitrary geographical regions combining inverted indexes with spatial indexes in order to execute queries that combine spatial operators applied to arbitrary shapes applying an OVERLAP operator to retrieve geographic documents having associated arbitrary geographical regions overlapping geographical regions specified in queries and or ranking documents based on a set of features of overlapped regions with arbitrary shapes.

In one embodiment GDR indexes documents with their associated locations e.g. business locations additional target locations and or points of interest makes use of geo spatial data of local businesses location profiling consumer behavior data and leverages probable user locations. The local businesses are businesses whose advertisements are being served. Location profiling can be for example business categories and demographics predominant in a region or area. Consumer behavior data can include for example mobile search queries mobile application and browser page views user clicks on ads secondary actions on ads and landing pages where a click would take the user to . Probable user locations can be represented by one or more arbitrary regions in a map which are associated with probability densities.

Thus fine grained document selection based on probable locations of a mobile user is made possible by GDR which is also designed for high performance i.e. low round trip latencies as measured in miliseconds high bandwidth or throughput as measured by queries per second etc. high scalability i.e. ability to scale the deployment automatically and seamlessly as traffic levels and dollars spent increase and high effectiveness as measured by click through rates and secondary action rates.

A computer system e.g. a server computer executing a software program can be used to carry out a GDR method according to certain embodiments. is a block diagram of an example of such a computer system which includes a processor a memory one or more data stores input output devices such as keyboard mouse touchscreen one or more display devices such as a monitor a wired and or wireless connections to a network such as a local area network and or a wide area network e.g. the Internet . The software programs can be stored in a computer readable medium such as a data store and or other portable computer readable medium that is not shown . When loaded in the memory and executed by the processor the software programs cause the processor to carry out GDR method described herein. In one embodiment location based documents information and historical aggregate data collected from many requests from mobile devices are also store in the data store . The one or more data stores can be computer readable media local to the processor and or coupled to the processor via a local or wide area network.

As shown in the computers servers coupled to the Internet may include one or more computers servers that is used to execute the software programs to carry out GDR according to certain embodiments. They may also include one or more computers servers associated with a mobile publisher one or more computers servers associated with an on line marketer and other computers servers .

A traditional document request arriving at a server e.g an ad request in online advertising includes two typical location inputs for querying an index of geographic documents an user location of interest and a maximum distance threshold. The user location is typically a piece of location information a lat long coordinate zip code city state or IP address that represents the location where the user is at the moment of the request or where the user is interested in the maximum distance threshold is the maximum distance as measured from the user location of the documents that the user may be interested in looking at.

In all known systems in the industry today this distance parameter is a configurable constant e.g. 5 miles or 10 miles which once configured is applicable to all ad requests. It is possible to build a real time online module that once queried would return a dynamic value for this parameter e.g. for some queries it would return 2 miles while for others it would return 3 miles . Either solution associates a distance parameter for each ad request irrespective of the local advertisements eligible for the request. This is static fencing. Using a simple analogy static fencing treats location based ad selection as having a fisherman the user cast a net of 10 meters of diameter in the water fishes within 10 meters can be caught while those beyond 10 meters can continue to swim free.

Dynamic fencing turns this picture around. Instead of specifying a distance input per request dynamic fencing associates geographic regions of arbitrary shapes and sizes with a document or advertisement eliminating any need for a real time online look up of the distance parameter per request and allowing fine grain matching and selection of documents or ads. Using the same analogy as above each local advertisement is now a fisherman who casts one or more nets of arbitrary shapes or sizes. The fish is caught as it swims into any of the one or more nets.

Dynamic fencing is further described in the co pending commonly owned U.S. Patent Application entitled Method and Apparatus for Dynamic Fencing. filed on even date herewith.

The user location input represents an estimated location of the user or a location the user is interested in. Data types that represent such location are latitude and longitude a coordinate with two real numbers referred hereafter as LL in short or an IP address 4 octets referred hereafter as IP in short or a zip code an integer or string referred hereafter as ZC in short or a city state a text string referred hereafter as CS in short . While they continue to be widely used in the industry these data types are inadequate for the needs of modern fine grain geographic document retrieval in particular hyper local ad retrieval because of the following reasons 

Probabilistic user location overcomes these limitations by representing user location input as a collection of arbitrary regions. It breaks down the artificial boundaries introduced by ZC and CS. Probabilistic user location is further described in the co pending commonly owned U.S. Patent Application entitled Method and Apparatus for Probabilistic User Location filed on even date herewith.

As shown in in one embodiment the one or more servers executing the software programs to carry out GDR may provide one or more software engines or application programming interfaces API including for example an interface engine and a GDR engine . In a further embodiment the one or more servers executing the software programs may also include a location engine to generate probabilistic user locations regions of arbitrary shapes where a mobile user if likely to be in and or a fencing engine for generating dynamic fences i.e. regions of arbitrary shapes to be associated with geographic documents.

In one embodiment a region with arbitrary shape R is a set of one or more contiguous closed regions R r r . . . r where each contiguous region rhas an external boundary eand possibly a set of one or more internal boundaries i k k . . . k also called holes. Each boundary b external or internal is defined by a sequence of points b seqp p . . . p. A point p has two coordinates latitude and longitude. The external boundaries of two contiguous closed regions that belong to the same arbitrary region can only touch on a single point. Likewise an internal boundary of a contiguous closed region can only touch another internal boundary on a single point. Finally an internal boundary of a contiguous closed region can only touch the external boundary of the region on a single point.

In certain embodiments regions with arbitrary shapes are used to describe a location associated with an indexed document i.e. the location targets for an advertisement as well as the input location of the query i.e. the probable location of the user to whom the advertisement is directed .

In certain embodiments inverted indexes are data structures used to retrieve documents based on its content. An inverted index can have any of four main internal data structures 

In certain embodiments a spatial index is used to retrieve documents based on its content. The main difference is that the content indexed has two or more dimensions. In one embodiment in the context of advertising the geographical area targeted by advertising campaigns is a region with arbitrary shape defined previously in this document. The query that represents the location of the user is also a region with arbitrary shape computed by the location engine where each contiguous region represents one possible location of the user. In such context the spatial index retrieves ads whose targeting campaigns intersect the location of the user.

There are two main type of methods for indexing using spatial data point access methods or PAMs are used to index points and spatial access methods or SAMs can index points and regions. In one embodiment the R tree as SAM is used for geographical document retrieval. However any other SAM can be seamlessly used with the claims in this document.

In certain embodiments an adequate information retrieval query language for mobile advertising systems can be a flat conjunction with 

The operator getGeometricRepresention of a location implements the method of probabilistic user location described above and in the co pending commonly owned U.S. patent application entitled Method and Apparatus for Probabilistic User Location filed on even date herewith.

In one embodiment a conventional method of storing textual attributes in inverted indexes can be used. Further details about how documents are indexed and retrieved are discussed below with respect to certain embodiments.

The method further comprises using the columns shapeId and boundingBox to insert the bounding boxes of the closed regions in a SAM and storing the columns shapeId docId and shape in a forward index as shown in .

In certain embodiment a method of executing a query for geographical documents comprises an application program interface API for executing a spatial cursor which encapsulates the access to the spatial index. A cursor API of certain embodiments comprises 

When the query processor receives a query it initializes a spatial cursor iterator. The iterator computes the bounding boxes of all contiguous regions of the query. Next the spatial cursor searches the SAM for all the geographical documents whose bounding boxes intersect the bounding boxes of the query. Next it inserts in a heap the IDs of the documents whose bounding boxes overlap the query. Note that the overlap test above is applied to the bounding boxes which are approximations of the actual geometry of the contiguous regions of both query and geographical documents. The overlap test between the full geometry of the contiguous regions is postponed to the calls to next methods explained below.

When a next method is called it removes the lowest docId from the heap and executes an overlap test between the contiguous regions of the query and the contiguous regions of the geographic document. If there is no overlap between query and document regions the document is discarded and the process is repeated for the next document in the heap. If there is overlap the next method returns true. After the next method returns true the getDocID and getOverlapStats methods should be ready to return information about the latest geographical document to overlap the query. When the heap is empty the next method returns false which means that the end of the cursor has been reached. Note that when the next docID method is called in addition to the logic above it discards all the documents whose ID is lower than docID.

Conceptually the overlap operator tests whether the intersection between regions with arbitrary shapes that represent the query and the geographic document is empty or not. If it is empty the document is discarded and the spatial cursor moves to the next candidate document. If it is not empty the spatial cursor computes the overlap statistics to be returned by the getOverlapStats method and returns the document.

In one embodiment the implementation of the overlap operator relies on using the bounding boxes of each contiguous closed region to filter out the vast majority of cases where query and document regions are disjoint. shows four examples of how pairs of contiguous closed regions and their respective bounding boxes overlap. The bounding boxes and of the regions and respectively do not overlap. Therefore the regions and themselves don t overlap. The bounding boxes and of the regions and respectively overlap. So do the bounding boxes and of the regions and respectively and the bounding boxes and of the regions and respectively. Thus a full intersection test between the regions and is required in order to evaluate if the regions overlap or not. The same is true for regions and and regions and . The full intersection tests would reveal that only regions and in overlap.

In one embodiment the full intersection test can be executed using two basic tests point in polygon and the intersection between two polylines. Exemplary program codes associated with the two basic tests are provided in the following 

As shown by the program codes above first an overlap algorithm tests if the external boundaries of both regions intersect line . If yes the algorithm returns true. Next it tests if one point of the external boundary of A is inside the external boundary of B and vice versa lines and . If both tests fail then both regions are separate from each other consequently the algorithm returns false line . Next it tests if a point of the external boundary of region A is inside the internal boundaries of the region B and vice versa lines and . If yes the algorithm tests if the external boundary of region B intersects the internal boundary of A if yes it returns true line otherwise it returns false line . The same test is repeated between a point of the external boundary of region B and internal boundaries of region A lines to . Finally if a point of the external boundary of one region is inside of the external boundary of the other region but it is not inside any of the internal boundaries of that same region the algorithm returns true lines and .

The pointInPolygon and polylinesIntersect algorithms in the overlap algorithm need access to the external and internal boundaries of regions which are stored in V trees. shows a graphical representation of a sequence of points that forms a circle stored in a V tree according to certain embodiments. The V tree is a balanced tree that stores the points of the polyline in its leaf nodes. Note that the V tree preserves the order of the points in the polyline. The polyline is initially split into four main sequences of points stored under branches A B C and D. Branches are recursively subdivided until they can fit into a leaf node.

The overlap statistics has well documented algorithms with complexity O N log N . Where N is the maximum value between the number of points of each polyline and the number of intersections between both polylines.

In one embodiment the query is executed using zig zag algorithms also known as interleaved linear scans to join the results of the spatial cursor with cursors that traverse the posting lists in the inverted index. For example the query conjunction below 

When more than one documents are retrieved by the Zig Zag algorithm ranking is performed to select one of the document for providing to the mobile user. In certain embodiments ranking of documents ads is based on an objective function F that uses three different sets of features 

In certain embodiments the spatial features listed below can be used by machine learning models to rank documents that are retrieved by the Zig Zag algorithm 

In certain embodiment one of the following two different approaches to modeling the objective function F can be used 

The problem with the second approach is that it could be difficult to include user feedback of clicks calls during learning with the documents that are actually presented to the user the best document by matching strength need not necessarily be presented to the user every time and hence one could be forced to work with a subset of impressions where the feedback is always available to the document with best matching score. The problem with the first approach is that the number of features to be learnt simultaneously is increased as there are many spatial features often somewhat contradictory to each other along with a few features from other two components. In one embodiment the first approach is used initially since it involves only one model development.

A another issue to address in the model development is the nature of impact of the 3 components. Independently each of the 3 components of the overall objective function has a direct correlation with the metric. However it is more difficult to compare two ads where a first document is retrieved with a high value of user region and a low value of matching score and a second document is retrieved with a low value of user region and a high value of matching score. Since it is not clear whether this relationship is linear or non linear a more general approach should be followed and the objective function can be defined as follows 

With these assumptions an objective function for ranking could be defined as where k is the only parameter to learn given the probabilities and eCPMs to this model as inputs and the form of the function helps give different weights to these components.

