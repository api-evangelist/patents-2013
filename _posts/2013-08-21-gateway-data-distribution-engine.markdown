---

title: Gateway data distribution engine
abstract: Implementations include a method, system, and apparatus for receiving, from a user communicably connected to a network, a selection of one or more gateway service data categories; receiving, from the user, a selection of an operating platform of a mobile device operable to be communicably connected to the network; generating a configuration file comprising a selection of gateway service data associated with one or more gateway service data categories and the operating platform selection; generating a data store file and a development library associated with the operating platform selection; transferring the configuration file, the data store file, and the development library to a repository communicably connected to the network; and generating an application template comprising the configuration file, the data store file, and the development library, wherein the mobile application is developed on the mobile device from the application template while the mobile device is communicably disconnected from the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09015651&OS=09015651&RS=09015651
owner: SAP SE
number: 09015651
owner_city: Walldorf
owner_country: DE
publication_date: 20130821
---
This application is a continuation of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 13 196 550 filed Aug. 2 2011 which claims priority under 35 U.S.C. 119 to Chinese Patent Application No. 201110143066.2 filed May 30 2011. Both previous applications are incorporated by reference as if fully set forth herein.

This disclosure relates to facilitating the development of software applications on mobile computing devices and more particularly facilitating the development of software applications on mobile computing devices which are offline from a network.

Current gateway services typically support only online service consuming which means network access can be mandatory and required when people want to access data from the gateway services. As a consequence when a network connection is not available the gateway services may not be reachable and people cannot access relevant data. This can be unacceptable in a business environment where business users want to work on both transactional data and analytical jobs independent of the network connection.

In addition gateway services are often representational state transfer REST services in that they use the extensible markup language XML as the main data format. Therefore the readability of the data can be hindered as compared to tabular data e.g. row based data or grid based data . Moreover developers may not be able to determine the responsive data schemas and data content as well as the data relationship behind them.

In one general embodiment a method performed with a computing system for developing a mobile application includes receiving from a user communicably connected to a network a selection of one or more gateway service data categories receiving from the user a selection of an operating platform of a mobile device operable to be communicably connected to the network generating a configuration file comprising a selection of gateway service data associated with one or more gateway service data categories and the operating platform selection generating a data store file and a development library associated with the operating platform selection transferring the configuration file the data store file and the development library to a repository communicably connected to the network and generating an application template comprising the configuration file the data store file and the development library wherein the mobile application is developed on the mobile device from the application template while the mobile device is communicably disconnected from the network. Other embodiments include corresponding systems apparatus computer programs and tangible non transitory storage media.

These and other embodiments can optionally include one or more of the following features transferring the selected gateway service data to the repository receiving from the user a request for the application template and exporting the application template from the repository to the mobile device while the mobile device is communicably connected to the network exporting the application template from the repository to the mobile device through an application development environment receiving via the network a synchronization request from the mobile application developed on the mobile device from the application template and in response to the synchronization request exporting an updated data store file to the mobile device exporting substantially all of the gateway service data associated with the selected one or more gateway service data categories to the mobile device receiving a request from the mobile device for a data table of a plurality of data tables within the gateway service data generating the updated data store file comprising the requested data table receiving from the user a selection of one or more database functionalities from a plurality of database functionalities and generating the development library including the selection of one or more database functionalities receiving a selection of a predetermined set of one or more database functionalities from a plurality of database functionalities receiving from the user a selection of an existing configuration file.

Various embodiments of a gateway data distribution engine according to the present disclosure can include one or more of the following features. For example a gateway data distribution engine can allow partner developers or content consultants to get and store or configure data from gateway services into dedicated database files independent of the mobile device when network access is available. As a result partner developers or content consultants can take full advantage of generated database file to view metadata check row based detail item data and further analyze the data relationship when the network is not required. Furthermore the present disclosure can open a lot of common interfaces for developers to build online offline custom applications based on the service data. Therefore application developers can focus on the business logic and new features provided by mobile vendor while accessing reading offline database authorized transparently. Further it is still configurable to get necessary gateway tables data in a desired sequence and content consultants can focus on data distribution logic according to end user business role and function.

Various implementations of a gateway data distribution engine according to the present disclosure can also include one or more of the following features. For example a gateway data distribution engine can enable business users to work on analytical jobs independent of the network connection. Other features including providing additional channels to access the gateway services facilitating partners to build enhanced mobile application providing a framework for application developers to access the database transparently and for content consultants to configure the database on demand by request supporting viewing of the database semantic easily for developers improving performance for data access leveraging on the client capability providing for cross application analysis via joint tables and providing transparent data access on different mobile devices. Further features include for example both online consumption and offline usage comprehensive database views and interfaces are used instead of XML sources dynamical generated dedicated database from gateway REST services providing a framework for application developer to access database transparently and for content consultant to configure database on demand by request and no limit of support for a variety of mobile devices.

These general and specific aspects can be implemented using a device system or method or any combinations of devices systems or methods. The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

In some embodiments a gateway data distribution engine according to the present disclosure can facilitate development of a mobile application for one or more mobile devices while such devices are communicably decoupled from a communication network. For example the gateway distribution engine generates an application template. The application template acts as a basis for development for mobile applications on the mobile device. To generate the application template the gateway data distribution engine receives a selection of gateway service data categories and a selection of an operating platform of the mobile device. The gateway data distribution engine generates a configuration file based on the selection of the gateway service data category and the operating platform selection. The gateway data distribution engine further generates a data store file and a development library based on the operating platform selection. The gateway data distribution data engine then transfers the configuration file the data store file and the development library to a repository. The application template is generated to include the configuration file the data store file and the development library such that the mobile application can be developed on the mobile device from the application template while the mobile device is communicably disconnected from the network.

In some implementations and as shown in the server includes a processor an interface a memory and a gateway data distribution engine GDDE . The memory can store hosted applications and or files such as a configuration file a data store file and or a development library file described further below.

At a high level the server comprises an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . Specifically the server illustrated in is responsible for receiving application requests from one or more client applications associated with the clients of environment and responding to the received requests by processing the requests in the associated hosted application and sending the appropriate response from the hosted application back to the requesting client application . In addition to requests from the external clients illustrated in requests associated with the hosted applications can also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single server environment can be implemented using two or more servers as well as computers other than servers including a server pool. Indeed server can be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further illustrated server can be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

The interface is used by the server for communicating with other systems in a client server or other distributed environment including within environment connected to the network e.g. client as well as other systems communicably coupled to the network . Generally the interface includes logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface can include software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

Each of the one or more hosted applications is any application program module process or other software that can execute change delete generate or otherwise manage information according to the present disclosure particularly in response to and in connection with one or more requests received from the illustrated clients and their associated client applications described further below. In certain cases only one hosted application can be located at a particular server . In others a plurality of related and or unrelated hosted applications can be stored at a single server or located across a plurality of other servers as well. In certain cases environment can implement a composite hosted application . For example portions of the composite application can be implemented as Enterprise Java Beans EJBs or design time components can have the ability to generate run time implementations into different platforms such as J2EE Java 2 Platform Enterprise Edition ABAP Advanced Business Application Programming objects or Microsoft s .NET among others. Additionally the hosted applications can represent web based applications accessed and executed by remote clients or client applications via the network e.g. through the Internet .

Further while illustrated as internal to server one or more processes associated with a particular hosted application can be stored referenced or executed remotely. For example a portion of a particular hosted application can be a web service associated with the application that is remotely called while another portion of the hosted application can be an interface object or agent bundled for processing at a remote client . Moreover any or all of the hosted applications can be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the hosted application can be executed by a user working directly at server as well as remotely at client . In some instances the server can comprise a web server where the hosted applications represent one or more web based applications accessed and executed via network by the clients of the system to perform the programmed tasks or operations of the hosted application .

The GDDE provides access to data from gateway services independent of the connection of the mobile devices to the network e.g. whether connected or not connected to the network . More specifically the GDDE allows access and storage of gateway service data into dedicated database files on the mobile device independent of access to network . As a result application developers can utilize the generated database file to view metadata check row based detail item data and further analyze the data relationship when the network is not required. Furthermore the GDDE can facilitate application developers to build online offline mobile applications based on the service data. Thus application developers can access read offline database files transparently. Further it is still configurable to obtain necessary gateway tables data in a desired sequence 

Each client can be any computing device operable to connect to or communicate with at least the server and or via the network using a wireline or wireless connection. Further as illustrated by client each client includes a processor a memory a graphical user interface GUI and an application development environment . The memory can store the client applications . In general each client comprises an electronic computing device operable to receive transmit process and store any appropriate data associated with the environment . It will be understood that there can be any number of clients associated with or external to environment . For example while illustrated environment includes three clients and alternative implementations of environment can include a single client communicably coupled to the server or any other number suitable to the purposes of the environment . Additionally there can also be one or more additional clients external to the illustrated portion of environment that are capable of interacting with the environment via the network .

Further the term client and user can be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each client is described in terms of being used by a single user this disclosure contemplates that many users can use one computer or that one user can use multiple computers. As used in this disclosure client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client can include a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of the server and hosted application or the client itself including digital data visual information the client application or the GUI . Both the input and output device can include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of the clients through the display namely the GUI .

The GUI is operable to interface with at least a portion of the environment for any suitable purpose including generating a visual representation of the client application in some instances the client s web browser and the interactions with the hosted application including the responses received from the hosted application received in response to the requests sent by the client application . Generally through the GUI the user is provided with an efficient and user friendly presentation of data provided by or communicated within the system. The term graphical user interface or GUI can be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore the GUI can represent any graphical user interface including but not limited to a web browser touch screen or command line interface CLI that processes information in environment and efficiently presents the information results to the user.

In general the GUI can include a plurality of user interface UI elements some or all associated with the client application such as interactive fields pull down lists and buttons operable by the user at client . These and other UI elements can be related to or represent the functions of the client application as well as other software applications executing at the client . In particular the GUI can be used to present the client based perspective of the hosted application and can be used as a web browser or using the client application as a web browser to view and navigate the hosted application as well as various web pages located both internal and external to the server some of which can be associated with the hosted application . For purposes of the present location the GUI can be a part of or the entirety of the client application while also merely a tool for displaying the visual representation of the client and hosted applications actions and interactions. In some instances the GUI and the client application can be used interchangeably particularly when the client application represents a web browser associated with the hosted application .

Generally the network facilitates wireless and or wireline communications between the components of the environment i.e. between the server and the clients as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network but not illustrated in . The network is illustrated as a single network in but can be a continuous or discontinuous network without departing from the scope of this disclosure so long as at least a portion of the network can facilitate communications between senders and recipients. The network can be all or a portion of an enterprise or secured network while in another instance at least a portion of the network can represent a connection to the Internet. In some instances a portion of the network can be a virtual private network VPN such as for example the connection between the client and the server . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network can communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network can also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

As mentioned above the server and the client include processors and respectively. Although each illustrated as a single processor and in two or more processors can be used according to particular needs desires or particular embodiments of environment . Each processor can be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor and executes instructions and manipulates data to perform the operations of the server and the client respectively and specifically the one or more plurality of hosted applications or the one or more plurality of client applications respectively. Specifically the server s processor executes the functionality required to receive and respond to requests from the clients and their respective client applications as well as the functionality required to perform the other operations of the hosted application .

Regardless of the particular implementation software can include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible medium operable when executed to perform at least the processes and operations described herein. Indeed each software component can be fully or partially written or described in any appropriate computer language including C C Java Visual Basic ABAP assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software can instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment processor executes one or more hosted applications on the server .

As mentioned above the server and the client include memory and respectively. The memory can include any memory or database module and can take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. The memory can store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the server and its one or more hosted applications or the clients and their one or more client applications . Additionally memory can include any other appropriate data such as VPN applications firmware logs and policies firewall policies a security or access log print or other reporting files as well as others.

Environment can further include a repository . The repository can store the configuration file the data store file and or the development library file described further below

While is described as containing or being associated with a plurality of elements not all elements illustrated within environment of can be utilized in each alternative implementation of the present disclosure. Additionally one or more of the elements described herein can be located external to environment while in other instances certain elements can be included within or as a portion of one or more of the other described elements as well as other elements not described in the illustrated implementation. Further certain elements illustrated in can be combined with other components as well as used for alternative or additional purposes in addition to those purposes described herein.

The GDDE can include or be communicably coupled with a web configuration layer a repository layer a data distribution layer and a synchronization layer . The web configuration layer facilitates a determination of one or more gateway services that can be provided by the GDDE . The web configuration layer can also employ the data provided in the gateway services. The web configuration layer can further provide an interface e.g. GUI for input of custom configurations. The web configuration layer as illustrated includes a data selection management component a version control management component and a common interface management component .

The data selection management component can be dynamically generated according to a selection provided by a user e.g. selection via the GUI . The data selection management component connects to the GDDE to obtain a service hierarchy such as object name display name category and other levels within the hierarchy. This information can be displayed in a tree like list which can be selected by users through a web interface such as the GUI . An XML parser not shown can be employed to select the data from the response from the GDDE such as an XML response from the gateway .

The illustrated version control management component manages each user s selection of the data from the GDDE as each user can have different selections at each time. Additionally the service provided by the GDDE can include new versions or new features thus the version control management component facilitates users e.g. of the mobile devices choosing a particular version as the base selection. Further upon employing the version control management component the user can choose to either start from a new selection of data or edit from an existing selection of data. Moreover the selection information can be stored as a new configuration file or overwritten on an existing configuration file. A repository e.g. one or more repositories on the repository layer can store the configuration files of the GDDE thus allowing checking of a history of the service provided by the GDDE .

The common interface management component provides transparent access to the database with necessary functionalities. The common interface management component provides functionality such as read table join select delete or add rows to build a library according to the device type e.g. device type of the mobile devices .

The repository layer provides storage and display of data stored in one or more databases e.g. data tables from the services provided by the GDDE . In some implementations the data is displayed in relational views. Furthermore the database can be configurable by request. The illustrated repository layer can be a data persistent layer that maintains the data in a cloud repository according to a user s selection and has the data selection information passed to it. Further the data collection process can be triggered to get data through the GDDE and stored in the repository layer . The illustrated repository layer is connected to the web configuration layer the data distribution layer and the synchronization layer .

Specifically in one example embodiment the data collection process includes two steps. In one step a table schema is dynamically read and parsed from the service provided by the GDDE . Attributes name type key flag and other information can be collected to create the corresponding table of the table schema . The table schema can be reloaded when the user s selection is changed or a data sync is requested. The table schemas can be accessed by the data distribution layer to generate the data. In another step similar to the creation of the table schema dynamic data includes data rows of specific tables that are read and parsed dynamically from the service provided by the gateway . However the tables each employ differing URLs. Furthermore as a result of the URLs not including attribute type information in the response from the gateway corresponding schema information can be used again to detect the right type for each attribute.

The illustrated data distribution layer connects to the web configuration layer the repository layer the synchronization layer and the application development environment . The data distribution layer includes a configuration file a data store file and a development library file . The data distribution layer provides control of a type of the data store file that can be imported into the application development environment and how the configuration file and library file appear via the GUI.

The illustrated configuration file provides instructions to the application on the mobile device including which data tables are to be synced and which services from the gateway should be connected during the sync phase. The configuration file employs the user s data selection and device information provided at the mobile device at application run time. Thus the configuration file includes the information generated in a structured format.

The illustrated data store file provides both online and offline consumption. Moreover the data store file provides support of an unlimited variety of types of mobile devices . Specifically different device systems such as mobile devices use and support different database systems. Therefore a corresponding data store file is generated for each specified device on which the mobile application is developed. For example device systems can include Windows Mobile Android iPhone and Symbian. Corresponding database systems include SqlCe SQLite SQLite and RDbNamedDatabase respectively.

The illustrated development library file allows transparent access to the database and development of applications for the mobile devices . To that end the data distribution layer imports the three files the configuration file the data store file and the development library file as a project template into the application development environment . Thus the applications for the mobile devices can be developed based on this project template.

The illustrated synchronization layer is a bi direction channel to exchange data with the repository layer . The synchronization layer enables the offline application stored on the mobile device to update the minimum data i.e. the necessary data when connected to the network such as network . After the application is developed and deployed to the mobile device the mobile device can utilize the service provided by the GDDE offline e.g. when the network is unavailable . When the network is online i.e. available the mobile device can also request data synchronization for the application. The synchronization layer includes a complete download module and an ad hoc update module .

The illustrated complete download module provides downloading of all the service data from the gateway from the application on the mobile device . Further the application will check the configuration file to obtain the data selection information and the device information. The application can also communicate with the data distribution layer to request a new a data store file . In this case the data store file can be directly downloaded to the mobile device .

The illustrated ad hoc download module provides direct communication with the repository layer to obtain the most current data for a specified table. In response the data distribution layer can be requested to generate a new but smaller data store file that only includes the updated table. Moreover the data store file can be downloaded to the mobile device and the data can be read and overwritten on the original database.

In one example operation of the computing environment the GDDE may facilitate the generation of the application template to e.g. build a mobile application on the mobile device . For instance a user may first select gateway service data that may be desired or required to build the mobile application. For example the user may choose one or more gateway service data from different categories e.g. CRM services ACM services EAM services in a list through a web interface such as a web interface presented through the application development environment .

Next the user through a separate or similar web interface may choose a device type such as Windows Mobile Android iPhone Symbian or other type. Since in some embodiments each operation platform may use a different database system and development resources the users may choose the device type on which the application will be developed.

Next the user through a separate or similar web interface may choose one or more database functionalities e.g. access database and other functions . For instance in some embodiments the user may be presented groups of functions to choose from with each group including several functions. One or more groups may include a set of standard database functionality configurable . Such groups may include a default group which the GDDE may select if no selection is made by the user.

For instance the GDDE may provide multiple common interfaces or functionalities. However not all of these functionalities may be necessary for a specified development requirement. Thus the user may choose which functionalities should be included in the library package with which they can develop custom applications.

Next specified gateway service data i.e. based on the user s selection may be downloaded to a repository e.g. a dedicated database on repository layer for example in a cloud network through the REST requests. In some embodiments an xml parser may translate the response xml into the repository of a certain database format which includes both dynamic table schema and table data according to user selection .

Next the GDDE may generate and store a configuration file for example on the data distribution layer at the configuration management . In some embodiments the configuration file may contain data selection information service version information and device information. The configuration file may be generated in order to keep such information on the mobile device after application deployment.

Next the GDDE may generate and store a data store file for example on the data distribution layer at the data store file management . The data store file may include the user selection of the device type. In some embodiments each device system may use a certain kind of data store system thus the data store file may have different data formats.

Next the GDDE may generate and store a development library for example on the data distribution layer at the development management library . The development library may be based on the selected device type and desired common functionalities. This library may further be used during the development phase which will help partner developers to build up the application with basic functions.

Next the GDDE may generate an application template including the configuration file data store file and or development library. The template may then be imported via the application development environment in order to for example facilitate development of the mobile application while the mobile device is disconnected communicably from the GDDE .

Tabbed portion also include a version tab . In some embodiments the version tab may provide the user with an interface with the version control management . In some embodiments as described above version control may be provided because each user e.g. of each mobile device may have different selections at each time which are managed. In the version tab the user may choose to either start from a new data selection or edit from an existing selection. The user may also save the selection information as a new configuration file or overwrite the existing file.

The illustrated tabbed portion also includes an interface tab . In some embodiments the interface tab may allow a user to choose specific database functionalities choose specific sets of functionalities that can be grouped together and or not choose anything in which standard functionalities may be selected.

A selection of an operating platform of a mobile device operable to be communicably connected to a network is received . For example in some aspects step can include each mobile device employing a differing operating platform that uses a different database system and development resources. Thus the correct operating platform is to be selected for the particular mobile device such that the application can be correctly developed for the particular mobile device .

A configuration file is generated including gateway service data and the operating platform selection . For example in some aspects step can include the configuration file containing data selection information service version information and device information. The configuration file is generated to maintain such data on the mobile device after deployment of the application. In some implementations the configuration file can be stored at the data distribution layer . Further the mobile devices can access the data distribution layer using the application development environment .

A data store file and a development library associated with the operating platform selection is generated . For example in some aspects step can include the GDDE generating a corresponding data store file based on the device type that is selected. Each device system employs a particular data store system thus the data store file is selected accordingly. The GDDE can also generate the development library file based on the device type that is selected and desired common functionalities. The development library file can be employed during the development phase to facilitate developing the application with basic functions. In some implementations a user can choose which functionalities are included in the development library file .

The configuration file the data store file and the development library are transferred to a repository . For example in some aspects step can include after generating the configuration file the data store file and the development library files importing the files as a template via the application development environment .

An application template is generated that is used to develop mobile applications . For example in some aspects step can include necessary data schemas and commonly used database functions interfaces that are integrated into the application template. Access to the network e.g. the network is not required during generation of the application template.

A request for the application template is received . The application template is exported from the repository to the mobile device . The application template may be used for example by a developer to develop a mobile application on a mobile device currently disconnected from a network e.g. network or other communication networks . illustrates a GUI that an application developer can employ when not connected to the network such as network . The GUI includes a data manager a database table listing and a solution manager . The data manager as illustrated includes a list of one or more databases that are accessible to the developer. As illustrated the database table listing shows the content of a selected database table e.g. here table es04purchase order list.sdf of database Gateway full.sdf . The solution manager as illustrated lists the configuration file data store file and or development library that are imported as the application template.

A synchronization request can be received . For example in some aspects step can include the GDDE receiving the synchronization request. If the synchronization request is received an updated data store file is exported to the mobile device . Specifically illustrates a GUI of the data store file that shows synchronization of the application with the database when the mobile device is connected to the network e.g. the network . For instance the GUI may show the user which specific database tables have been updated e.g. through a check mark through the synchronization process.

A number of implementations have been described. Nevertheless it will be understood that various modifications can be made. For example other methods described herein besides those or in addition to those illustrated in can be performed. Further the illustrated steps of method can be performed in different orders either concurrently or serially. Further steps can be performed in addition to those illustrated in method and some steps illustrated in method can be omitted without deviating from the present disclosure. Accordingly other implementations are within the scope of the following claims.

