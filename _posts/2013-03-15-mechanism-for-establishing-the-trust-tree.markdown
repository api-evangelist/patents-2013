---

title: Mechanism for establishing the trust tree
abstract: Example implementations described herein are directed to a trust tree that allows third party applications to operate on sensitive user data within the confines of a protected environment. The environment storing the sensitive user data prevents the third party application from receiving sensitive user data through use of an overlay, while preserving the function of the third party application. This permits the value of the application to be provided to a user without the risk of the application violating the user's privacy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08898800&OS=08898800&RS=08898800
owner: Google Inc.
number: 08898800
owner_city: Mountain View
owner_country: US
publication_date: 20130315
---
Aspects of the example implementations relate generally to data management and more specifically to managing access and display protocols for sensitive data.

Users often utilize third party applications and grant permission to sensitive user data e.g. personal user information such as name address phone number etc. based on difficult to understand or noisy permission negotiations. This may result in various applications gaining access to sensitive data that is not needed to provide the promised service to the user. The situation can be further complicated by applications that request a class of user data e.g. need name to greet user but then use the user data for nefarious or alternate purposes e.g. sell name to marketing list .

In an example the user utilizes an application to conduct an online interaction e.g. blog comment liking a social media post posting a photo etc. which is tagged with user information. The online interaction may be hyperlinked back to the user s social media or other account. A web crawler may traverse the online interaction back to the user s account and thereby extract personal information that the user may not have intended to reveal to the application. Further the application may also extract sensitive data from the user s account from the online interaction.

Consider the related art example of wherein a user is running a third party application within a social media website in a web browser . Another user Abel Smith initiates an online interaction within the third party application and inadvertently reveals his account address in a hyperlink associated with his name e.g. the third party application requiring the information from Abel Smith without the information being required to run the application mishandling of permissions etc. such that when a user hovers over Abel Smith s name his account page is revealed.

The third party application may then traverse Abel Smith s webpage and potentially extract sensitive user data about Abel Smith that was not intended through the online interaction. Further if the online interaction is generally made public third party web crawlers may crawl Abel Smith s account page and also extract sensitive user data that was not intended to be made public through the online interaction or data mining applications can obtain information based on the online interaction e.g. average age of friends etc. .

Aspects of the example implementations may include a server which involves a hashing unit configured to provide one or more hashes for information associated with a user to one or more entities an authentication unit configured to verify a requesting entity that provides at least one of the one or more hashes for information associated with the user and a decoding unit configured to provide the information associated with the user and corresponding to the at least one of the one or more hashes for display in a device that runs an application associated with a verified requesting entity.

Aspects may further include a computer readable storage medium storing instructions for executing a process. The instructions may include providing one or more hashes for information associated with a user to one or more entities verifying a requesting entity that provides at least one of the one or more hashes for information associated with the user and providing the information associated with the user corresponding to the one or more hashes for display in a device that runs an application associated with a verified requesting entity.

Aspects of the present application may further include a method which may involve providing one or more hashes for information associated with a user to one or more entities verifying a requesting entity that provides at least one of the one or more hashes for information associated with the user and providing the information associated with the user corresponding to the one or more hashes for display in a device that runs an application associated with a verified requesting entity.

In example implementations a trust tree is utilized to allow third party applications to operate on sensitive user data within the confines of a protected environment. The environment prevents the ability to export the sensitive data to an external server or device.

Devices that invoke the application which contain the online interactions interact with a server which may operate an overlay on the application to display parts of the user data e.g. user name etc. through the use of hashes. The hashes can also be implemented such that the sensitive user data is parceled into individual subsets if only certain sensitive user data is required to execute the application e.g. a hash specifically for user name a hash for user address etc. .

Though example implementations described herein use hashes in the examples the use of hashes is not intended to be limiting to hashes but rather to serve as an example of utilizing obfuscation in place of sensitive user information and can be replaced by other methods of obfuscation or cryptographic functions e.g. encryption of the user data encryption keys etc. depending on the desired implementation of one of ordinary skill in the art.

Unique hashes can be provided to each application for the same sensitive user information such that each third party application is given a different hash e.g. such that the hash is unique to both the user data and to a particular third party application . Multiple third party applications would thereby receive different hashes for the same sensitive user data which reduces the chances of a particular hash being linked to a particular user data. Hashes can also be based on a user identifier e.g. user account name and the third party application wherein the overlay can use the hash to authenticate and receive the sensitive user data through the overlay.

Applications that are managed by the server and therefore fall within the trust tree e.g. social media sites video sharing sites search engines etc. can thereby manage the sensitive information through the use of overlays to prevent the actual sensitive user data from being leaked to a third party application or to a web crawler or visitor to a website. For example if a third application requests a name and a website for display within an application operating under the trust tree the server can provide an overlay for the application operating under the trust tree for use in displaying the name and a website.

Further the server can make determinations e.g. through search engine through request from the third party application etc. with respect to one or more application requirements of the third party application and then parcel sensitive user data accordingly. For example if the third party application only requires the name of the user to operate the application and further requests the link to associate the name to the account page not needed for the operation of the application then the server can parcel the sensitive user data and provide a hash for the user name and not provide any information for the web page.

Instead the server may modify a hyperlink to the account page by using the provided hash through the overlay or by other methods depending on the desired implementation. In other example implementations the hyperlink may be blank or erased e.g. the name is rendered un clickable by the overlay etc. which can be determined for example by policy settings of the server or of the particular user account e.g. show only to friends show only to user devices etc. 

When an overlay is invoked by a user device operating on an application within the trust tree the overlay can decrypt the hashes in real time for display. An authentication process can also be utilized to determine if the sensitive data should be displayed based on for example policy settings of the server or of the particular user account. For example the overlay may request the server for decryption wherein the server can verify the entity running the overlay and the hash being provided and compare the entity and the hash to a policy setting e.g. of the server of the user account etc. . If the authentication is valid then the sensitive data can be displayed through the overlay without conveying the information to the third party application.

Further applications and websites can be configured to enable or disable the overlay. This can ensure for example that the overlay is not employed if a web crawler attempts to access a cached version of a website within the trust tree through a search engine. The applications and websites within the trust tree can further be configured to have the overlay enabled or disabled depending on the entity accessing the application or website and the policy setting of the user account or the server.

In the example of the account address can be modified by using the hash in place of the actual account name e.g. if the server determines that the information is not necessary for execution of the application etc. which points to a non existent site. When the user clicks the link to the account address through the overlay the overlay may translate that link into the actual account address link and forward the user to the correct address. In other example implementations depending on the user settings or other desired implementation a click of the link may forward the user to the non existent address instead.

In this manner the third party application only receives hash information and not the actual sensitive user data which is not revealed unless an overlay is employed by a user or application within the trust tree. In other example implementations the overlay can authenticate the hash and the device or application attempting to obtain the sensitive user data and provide the sensitive data for display though the overlay if authenticated or display the same results as that of if the authentication fails. In other example implementations the results can also be left un displayed as if the online interaction did not take place.

In the example of the third party application is accessed outside of the trust tree e.g. a cache site the third party application site etc. by a web crawler. However as shown in the example of because only hashed information was provided to the third party application the web crawler can only view the hashes and cannot view or obtain the sensitive user data. Similarly in an implementation where authentication of the hashes and the requesting device application is utilized the same result can occur if authentication fails. Such an implementation not only prevents leakage of sensitive data to outside third parties but also may assist in preventing data mining as only hashes are displayed to data mining programs and not actual sensitive user data.

Upon invocation by a device running the application at the hash is sent back to the server by a server provided overlay on the third party application which authenticates the received hash and the entity sending the request at . The server then decrypts the hash for display on the device e.g. in real time through the overlay as the application is running if the authentication is valid and the resulting data is displayed.

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual that can be used to provide input e.g. buttons touch screen interface keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like .

Output device interface may include a display television monitor printer speaker braille or the like. In some example implementations input user interface and output device interface can be embedded with or physically coupled to the computing device . In other example implementations other computing devices may function as or provide the functions of input user interface and output device interface for a computing device .

Examples of computing device may include but are not limited to highly mobile devices e.g. smartphones devices in vehicles and other machines devices carried by humans and animals and the like mobile devices e.g. tablets notebooks laptops personal computers portable televisions radios and the like and devices not designed for mobility e.g. desktop computers other computers information kiosks televisions with one or more processors embedded therein and or coupled thereto radios servers and the like .

Computing device can be communicatively coupled e.g. via I O interface to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or another label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and network in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including signal media and storage media. Signal media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Storage media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other non volatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions in some example computing environments. Computer executable instructions can be retrieved from signal media and stored on and retrieved from storage media such as computer readable storage mediums e.g. flash memory random access memory hard disk drives etc. . The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. One or more applications can be deployed that include logic unit application programming interface API unit input unit output unit hashing unit authentication unit decoding unit and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example hashing unit authentication unit and decoding unit may implement one or more processes as shown in and depending on the implementation e.g. as a server . The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some example implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit hashing unit authentication unit and decoding unit . For example hashing unit may be configured to provide one or more hashes for information associated with a user to one or more entities and use the API unit to communicate with the authentication unit to authenticate the hashes and the requesting entity as described in the above example implementations. Decoding unit may via API unit interact with the hashing unit to decode the hash for display for use in an overlay.

In some instances logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit authentication unit recovery unit and random number generator unit in some example implementations described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

An example of one or more devices may be computing device described above in . Devices may include but are not limited to a computer e.g. personal or commercial a device associated with a vehicle a mobile device e.g. smartphone a television a mobile computer a server computer computing devices storage devices . Any of devices may access one or more services from and or provide one or more services to one or more devices shown in environment and or devices not shown in environment .

A user may control a device as explained above to implement the example implementations via network . Information associated with the example implementations may be stored at storage device or respectively for example.

In situations in which the systems discussed here collect personal information about users or may make use of personal information the users may be provided with an opportunity to control whether programs or features collect user information e.g. information about a user s social network social actions or activities profession a user s preferences or a user s current location or to control whether and or how to receive content from the content server that may be more relevant to the user.

In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a user s identity may be treated so that no personally identifiable information can be determined for the user or a user s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a user cannot be determined. Thus the user may have control over how information is collected about the user and used by a content server.

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be implemented in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

