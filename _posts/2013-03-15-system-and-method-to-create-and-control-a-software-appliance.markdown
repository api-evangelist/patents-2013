---

title: System and method to create and control a software appliance
abstract: A system and Method to create and control a software appliance across a wired or wireless connection, such method allowing users to select and store app packages containing control apps and Appliance apps the latter of which are deployed and launched on a selected Software Appliance. The resulting approach provides for improved personalization of the App experience when deployed between a mobile device and a Software Appliance that is installed on a device that is traditionally a shared resource such as a Television.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09092289&OS=09092289&RS=09092289
owner: DESIGN NET TECHNICAL PRODUCTS, INC.
number: 09092289
owner_city: Smithfield
owner_country: US
publication_date: 20130315
---
This application is related to and claims priority from earlier filed provisional patent application Ser. No. 61 749 007 filed Jan. 4 2013 the entire contents thereof is incorporated herein by reference.

Manufacturers of products or Platforms such as automobiles and televisions often have memory limitations that required them to choose only selected Apps to include on their products. While internet access may permit them to alter these selections from time to time the space limitation remains a factor. The popularity of apps also changes over time and as a result there is an ever changing selection of apps which results in tremendous inconsistency in capabilities throughout the evolution of a product family.

Some manufacturers have tried to solve this problem by providing more memory to accommodate more apps while others allow users to add apps to a product but these approaches further clutter the user interfaces of products that are shared by family members and all fall short of a providing a personalized solution that is tailored to an individual user.

Our invention can coexist with the traditional approaches described above and it also provides a new back door connection between a personal mobile device and the target App Platform or player device. This connection provides a means to upload a desired App from the mobile device to the App Platform to launch this App on the Platform and then to control the App from the mobile device or from the Platform s supplied remote controls. This connection also provides a means to add Apps that provide access to live events on the target App Platform or player device including the ticketing viewing and purchasing of items related to the event.

A system and method to create and control a software appliance across a wired or wireless connection such method allowing users to select and store app packages containing control apps and Appliance apps the latter of which are deployed and launched on a selected Software Appliance.

The ApNetix System operates by first pairing a mobile device running the ApNetix App Manager with a Playback Device running the ApNetix Software Appliance. Upon opening an ApNetix mobile device app the Mobile App Manager launches the mobile device app then transfers an Appliance App to the Software Appliance on the Playback Device and finally the Software Appliance launches the Appliance app on the Playback Device. The mobile device App may then be used to control the Appliance App the Mobile App Manager may exchange history and status information with the Software Appliance and the Software Appliance may recognize control input from the Playback Device remote control s . This combination of capabilities provided by the ApNetix Application Programming Interface API results in a powerful system that may be used to launch a wide variety of apps from the mobile device to ApNetix enabled Televisions and other ApNetix enabled playback devices.

Due to the portable and flexible nature of the ApNetix architecture most any computing processor equipped device may run either the mobile or the playback application programs so the roles of mobile device and playback device may in fact be performed by anything from a desktop computer or a tablet computing device to a mobile phone or a mobile media player.

A typical ApNetix Life Cycle is outlined in . This assumes that the ApNetix Appliance and Mobile Device are on the same wired or wireless network. It further assumes that a mobile device is being used to control and launch the ApNetix App and that a Television set with ApNetix capability is running the ApNetix Software Appliance to deliver the Appliance App to the user. The example beings with Step when the ApNetix Software Appliance is booted during the TV set power up sequence and the Appliance Container becomes available to listen for mobile devices wanting to pair with it. The first user interaction begins with the User selecting an ApNetix Appliance on the network on his mobile device then selecting an application compatible with the ApNetix Appliance. This leads to the Appliance App being presented to the user on their TV.

Note that ApNetix devices may also be linked by other means including Bluetooth USB Firewire or by other means that are familiar to those trained in the art.

An ApNetix Software Appliance is an operating environment or a software platform to allow native Apps or ApNetix Apps to be loaded on ApNetix enabled televisions projectors computers tablets automobiles exercise machines and more. These devices are essentially computing devices with RAM an OS and storage which act as a host to the ApNetix Software Appliance.

The ApNetix Software Appliance also known as the ApNetix Appliance or the Appliance also allows most web enabled apps to run on enabled host devices TV DVR Projector Computer etc. and it provides an API allowing connectivity to the host device internet connection and its remote control device as well as connectivity using smartphones computers or tablets.

An ApNetix Appliance must be installed onto the computer or display device by the manufacturer or the user. Once installed the user may use their smartphone tablet or other computing device to connect to their Appliance enabled device and launch a desired app.

The ApNetix Software Appliance must be launched to enable its services to be available. During the ApNetix Appliance boot process the ApNetix Appliance services are started . Its services include Announcement where the Appliance responds to a discovery inquiry on the network Pairing which permits a user to complete a public or private session with the Appliance Security which manages the access control rights for the session Database which supports the dynamic exchange of history information between the Application User History and the Mobile App Manager Database App Management which launches apps which conform to the EULA and provides interfaces to the Mobile App Manager and to the interface for the Playback Device Remote Controls ApNetix API which provides the interfaces used to connect to the Playback Device including data exchange and event triggering between the Software Appliance and the Appliance App ticketing advertisements targeted ads etc. Search which enables the Mobile App Manager to access program information from the Appliance and Networking which provides for connectivity with the Mobile App Manager and for connectivity between the launched Appliance application and its hosting website.

The ApNetix Appliance also provides an HTML Application Container which is the sandboxed application environment into which the Software Appliance App Package is launched. This Application Container exposes an ApNetix API a JavaScript API a Networking interface Search interface and a means of exchanging User History information with the Mobile App Manager.

An ApNetix Appliance App is delivered in an App Package that may contain a script or an executable program that is launched by and within an ApNetix Software Appliance HTML Application Container . The purpose of the Appliance App is to provide the user with access to one or more services examples of which include Web services such as Netflix Hulu or YouTube local services which may include photo browsers music or movie collections Pay Per View content including live events such as concerts comedy shows educational offerings such as classes tutoring musical instruction and the like and conferences or presentation tools such as PowerPoint Photoshop or the like. An Appliance app generally functions independently from the smartphone or tablet from which it was launched but it maintains connectivity with the original launch device s Mobile App Manager when that device is available. Appliance apps may also serve in strictly a slave mode. An example of a slave device is a mobile screen mirror app where the mobile device screen is duplicated on the Appliance screen.

The Mobile Manager provides a platform of ApNetix services that reside on the mobile or launching host device. These services are accessed through an API that provide for content search pairing with a remote Appliance retaining of history information via the database managing security Appliance management for communications with and control of remote appliances networking for access to the Appliance and to the Internet for performing updates content searches announcement and pairing . The Mobile Manager resides upon a smartphone or tablet which has RAM an OS and flash storage and is executed on the operating system of that type of device.

The mobile manager includes an Application Client Container which provides an operating environment in which the ApNetix services may be delivered to the various ApNetix Apps. This operating environment provides for the exchange of user history information with the Software Appliance it provides a JavaScript API interface for launching an app it provides for search within the application s content database and it exposes a select segment of the ApNetix API .

An ApNetix Mobile App Package includes a mobile app program plus an Appliance App Package . A typical use case would require the user to select an ApNetix Mobile App Package from their mobile product app store and downloading and installing the App Package in a familiar fashion. One key difference between this App Package and a traditional app is that this app comes with an embedded ApNetix Appliance Package that will be launched on a linked remote Appliance when the ApNetix App is opened.

An ApNetix Mobile App is delivered in a Mobile App Package and it serves to initiate the launch of a related Appliance App on a linked remote Appliance. As an example of how this works if a user installed the Netflix ApNetix App on their smartphone when the Netflix icon is selected the Netflix Appliance App will be sent to a linked Appliance on the HDTV and Netflix will open. The Mobile app may then behave as a mouse pad or it may be used to search for content on Netflix and or across other installed applications or the mobile screen may carry the same content. The mobile App may also communicate with the Appliance to exchange data including user history demographics and the like.

The ApNetix Mobile App is capable of searching for content across all installed ApNetix applications. ApNetix Mobile Search also utilizes a social search feature that locates content based on social feeds a user has linked with their ApNetix account including Twitter Facebook and the like. Social search functionality includes searching for content or related content that peers have watched searching for content or related content that the user has watched searching based on users or groups that the user follows searching based on updates comments or other information that the user has shared or received.

Each search also returns LiveGuide results that are retrieved from the live event database. Live search results may include results geared toward the user based on user history and social search as well as events based on time date or proximity.

In addition to social search for content and live events ApNetix also provides social broadcasting. This allows users to share content services that they are using on their linked social feeds. For example if a user purchased a ticket to watch a musical concert the user may share that they purchased a ticket for a concert that is X days away they may share when it begins and throughout the show they can share concert information comments concert memorabilia CDs music downloads and the like.

The ApNetix Mobile App pushes an App to the television or other appliance directly from a mobile device to initiate the launch of a related Appliance App on a linked remote Appliance. Since the App is always delivered from the mobile device it will deliver reliable results everywhere including in schools businesses or before public audiences. Apps that load via a web link may be blocked on a particular network schools businesses etc. they may be hacked to produced an undesired result or they may simply deliver an unfamiliar result as a result of updates or changes.

App Developers may choose how the mobile device may be used with the App after the App is launched. Use may include remote control with mouse type functions Interactive Augmented control providing additional content related to the content running on the Appliance screencast providing the same or similar screen on both the mobile device and the Appliance and custom use an App Developer may program desired capability for mobile device after launching the App on the Appliance.

ApNetix live event tickets may be posted by venues and offered for sale. Users may purchase tickets via LiveGuide direct search on the web or mobile App venue ticket site online ticket reseller or ticket reseller location. Ticket payments may be processed by internet service providers or by traditional means such as credit card cash and the like. ApNetix offers simplicity by following a self service business model for posting events sending live streams to users and purchasing tickets.

When the user launches the Mobile Manager on the mobile device the Mobile Manager presents two options for announcing itself on the network QR Code or other 2D barcode Display or Poll Network.

If the user selects the QR code option the Display QR Code command will be broadcasted to the network . If the user selects the Poll Network option an Appliance Announcement command is broadcasted to the network . Each appliance that responds to the command is added to a list of available appliances in the mobile manager and may be paired using the unique device name unique pairing numbers or other available means.

The Announcement service on the Appliance listens for Mobile Managers on the network. The appliance waits until an announcement is received . If when receiving the announcement the appliance is already exclusively paired no response will be sent . If the appliance is not already paired the announcement will be processed. The announcement can either request the appliance to display a QR code or just respond with basic appliance information in a packet . If a QR code is requested the appliance will display a QR code on a corner of the display . The mobile manager permits a user to use the camera on the mobile device to scan the QR code to identify the network name of the desired display device running the ApNetix Appliance and thus to connect to complete pairing.

If the announcement was an Appliance Announcement command the appliance sends an Announcement Response packet to the mobile manager.

Each appliance that responds to the Mobile Manager announcement is added to the appliance list in the Mobile Manager. When the user selects an appliance from this list the appliance is notified that a Mobile Manager is attempting a connection . If the device is non exclusively paired the user will be prompted to disconnect the existing connection prior to pairing . Pairing can be performed with options such as whether or not to exclusively pair the devices.

During pairing a secure connection is negotiated . After the Mobile Manager and ApNetix appliance are paired the appliance responds with a detailed list of capabilities . The Mobile Manager may use these capabilities to display a list of compatible ApNetix applications.

Once paired the pairing service waits for a disconnection request . Note that a mobile device may remain paired for a fixed time interval which represents the duration of a program or session even if the mobile device is asleep or unavailable so long as that mobile device has not issued a disconnect command and so long as the time interval has not expired. On disconnect the appliance window closes and the appliance AutoReturns to the default input signal if AutoReturn capability is supported by the playback device.

When the user selects an ApNetix application on the Mobile Manager the Appliance is notified that an application upload is pending. The Appliance is already paired with the Mobile Manager and the Appliance applications available for upload are filtered based on compatibility with the paired appliance type. This ensures that the selected Appliance application is compatible with the target Appliance in the display system. If during this process the Appliance becomes unpaired an error will be reported.

During the upload of the Appliance App both the application and personalization information is uploaded. This is referred to as application data. Progress during the upload is tracked on the appliance and optionally displayed on the appliance output and on the mobile app manager s display. Once the application data is uploaded the application is personalized based on user preferences and personal history. For security purposes personalization information is stored in volatile memory only and is not persistent. Once the application is personalized the appliance invokes AutoStart to immediately run the application without the need to change inputs on the appliance . Once the mobile user interface and the application are running each end of the paired interface processes the bi directional ApNetix API .

When the user closes the ApNetix app AutoReturn is invoked to return the video to the original input .

This Remote Control Service provides an interface to control the ApNetix Appliance from a remote control that is compatible with and or provided by the TV or display device manufacturer. This permits a viewer to use their traditional remote controls to perform available functions such as play pause stop fwd rew once the ApNetix App has been launched from the viewer s mobile device. This capability may be optionally supported by ApNetix Apps.

This service is always listening for a TV remote command and if the current session is not exclusively paired private then remote commands will be processed and translated to JavaScript API commands to permit remote control functions to operate normally.

If however the current session in exclusively paired then the only function recognized is the remote s EXIT function as a means to terminate an exclusive pairing with a mobile device. Terminating in this manner will remove the Appliance Application and will remove user history and end with AutoReturn which closes the App window on the Appliance.

The Mobile Manager is designed to search across multiple installed ApNetix Applications to retrieve the location of desired content quickly from multiple content providers.

To begin a search the user initiates the search by keying the desired keywords in the Mobile manager search field . Optional filters may be selected to improve results before the search is initiated and a results list begins to form. Searching results are produced as a result of our API calls using database links provided by each ApNetix App provider. Once search results are complete the user may select the desired result from the list which will launch the associated application service with a parameter to load the desired program .

ApNetix offers streaming video with an unparalleled Quality of Service. Live Stream Quality LSQ metrics are optimized for perceived stream continuity versus bitrate errors dropped frames and the like. Live Stream Carriers CDNs may actively bid to supply the requested stream resolution format and LSQ at the lowest cost. Content Delivery Networks CDNs will offer transcoding services to deliver streams in the various resolutions and formats required by popular stream playback devices. Stream Delivery Software monitors Live Stream Quality LSQ throughout the duration of each event to generate a LSQ score representing the quality of each stream. The LSQ score may be used as a metric to award subsequent streams to Content Delivery Network Service Providers.

ApNetix stores user history including content history securely and only on the mobile device. For security purposes when an app is launched on a software appliance the personalization information is stored in volatile memory only and is not persistent. Users can opt in to make their user history shareable between their ApNetix apps and they can also opt in to give LiveGuide access to their user history.

Many of these interfaces rely on embedded services to deliver a full featured solution that allows the user to enjoy a personalized experience on his or her ApNetix capable Television. API functions provide a common set of commands used to implement a number of operations including the following 

While the ApNetix technology delivers a major impact to facilitate a unique connectivity between a mobile device and a Television it also has applications in delivering business presentations to an ApNetix Projector or HD Television in delivering a desired ApNetix app to a health club display during a workout in connecting ApNetix Apps to an automobile display for use in navigation music playback and the like and in electronic signage where the ApNetix display becomes an intelligent sign platform. The applications of ApNetix technology are virtually limitless and the API will grow as new demands arise.

The following Table includes the Basic Application Programming Interfaces which will be supported on all devices. This will be a living list that expands as new features are implemented in Software Appliances and in the Mobile Manager however the basic functionality will always support the ability to download an ApNetix App Package to one device then to dynamic load the child Appliance App to an ApNetix equipped TV or display device. These are example commands and the invention is not limited to this list.

Extended Application Programming Interfaces that may be supported include Picture in Picture PIP and video conferencing using a camera on a mobile device or an IP camera.

The Extended Application Programming Interface also extends the capabilities of Apps that are limited by design for example Apps that do not allow payments independent of the App may process payments on the Appliance instead.

It would be appreciated by those skilled in the art that various changes and modifications can be made to the illustrated embodiments without departing from the spirit of the present invention. All such modifications and changes are intended to be covered by the appended claims.

