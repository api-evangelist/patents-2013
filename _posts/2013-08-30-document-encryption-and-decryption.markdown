---

title: Document encryption and decryption
abstract: A document encryption and decryption system for selectively encrypting and decrypting files and any other items and method for same to protect or secure its contents by helping to prevent unauthorized individuals from viewing data in human-perceivable or readable form. The encryption system includes remote authentication to verify a user's credentials stored on a remote database hosted by a web server. The encryption system further includes remote delete to automatically delete encrypted items stored on the user's computer, handheld or portable device, smartphone, and any other computing device of any kind when it logs onto a network if the user's computer or computing device is reported lost, stolen, or otherwise compromised. Decryption keys allow selective decryption of encrypted items that are on the computer or computing device of any kind. A Windows Communication Foundation service helps with authenticating the users with the encryption key and login process stored and processed by the web server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924724&OS=08924724&RS=08924724
owner: Securencrypt, LLC
number: 08924724
owner_city: Jackson
owner_country: US
publication_date: 20130830
---
The instant application is a continuation of U.S. patent application Ser. No. 12 931 770 filed Feb. 10 2011. This application claims priority to U.S. Provisional Patent Application Ser. No. 61 337 744 filed Feb. 10 2010. The disclosures of the applications are incorporated herein by reference.

The present invention relates to an encryption system for encrypting and decrypting files and method for same.

In known types of encryption typically used to mask data files to confidentially transfer data over an internet and or to store data e.g. store on a personal computer an encryption key is used to encrypt the data file in an attempt to protect its contents from view by an unauthorized individual. In typical encryption of data is used to decrypt the data file allowing the decrypting person to then access and view the contents of the data file. Such prior art encryption typically has an application downloadable from a website to a personal computer.

One common problem with known encryption and decryption is that it is difficult and time consuming for a user to install requires training is not easily implemented and is typically cumbersome to use typically requiring several steps in order to encrypt a data file e.g. 4 5 steps to navigate using the computer s mouse when attempting to set up for encryption decryption and or to encrypt decrypt the file itself.

Another common problem with conventional encryption applications is that the authentication data e.g. password s name address secret answer and the like are stored on the user s personal computer allowing for a computer hacker or other unauthorized or malicious individual to break the protection and have access to the user s credentials. For example a malicious person could try to obtain credentials by using back door hacking methods bypassing or otherwise overcoming any firewalls and other security protections and to decrypt the data files. Typical encryption also does not help to prevent such unauthorized individuals from embedding the key thereby allowing unauthorized access to the data file. In addition it is also well known that any protection algorithm can be broken in a certain amount of time e.g. time can vary from hours to years and thousands of years. Thus security features like computer logins can be ineffective.

Yet another common problem is that the encryption key and decryption key is not associated or tied to the particular user s computer itself allowing for an unauthorized individual to hack into the data files remotely using another computer and without having been sent the decryption key and or password from the encrypting user. Typical known encryption also does not allow for remote deletion of encrypted files when the user s personal computer or laptop computer is lost or stolen. This presents a serious security risk to personal information stored on the lost or stolen computer. For example it is well reported that employees in the public and private sector have had laptops stolen which held social security numbers and other highly personal and confidential information potentially resulting in large risks to individuals national security and the like.

Another common problem with typical encryption is that it does not automatically re encrypt a data file upon a user closing out of the data file allowing its contents to be viewed by an unauthorized individual e.g. by computer hacking remotely in a wireless communication environment.

Accordingly there exists a need to develop an affordable encryption system that is more effective easier to use provides secure user authentication and automatic remote deletion of files.

In accordance with the present invention an encryption system and method for encrypting and decrypting any type of file to protect or secure its contents by helping to prevent unauthorized individuals from viewing data in human perceivable or readable form. In the event that a hacker or other unauthorized party tries to access information on a computer they will not be able to easily view or read the encrypted information. It will appear to them as a jumbled series of letters numbers and symbols. Thus encrypted information can be useless to any intruder who is after personal sensitive and or private information. A decryption key allows encrypted files stored and or emailed or otherwise transmitted to be selectively decrypted.

Even with anti virus in use the encryption system user would further benefit from the security of encryption to help protect information in the case of theft hackers and or sabotage. This is because anti virus protects the computer from viruses but does nothing to prevent hackers and the like from accessing the user s information or to help prevent anyone from stealing or sabotaging the computer files.

The encryption system comprises at least one computer at least one computer operating system at least one application at least one program e.g. encryption based software usable by person s with even basic computer skills and at least one encryption system web server. The encryption system includes a program in dot.net C SQL and the like to interact with any computer operating system. Utilizing a combination of links ribbons and user friendly designs the encryption system has improved usability e.g. the encryption system can allow an easier true one click encryption than conventional encryption. The encryption system has Plug ins for applications in the Microsoft Office Suite. It is understood however that Plug ins for other applications can be used including Macintosh and the like. Thus the encryption system can include plug ins e.g. Microsoft Office Suite plug ins and Internet Explorer IE ActiveX and the like and encrypts files directly from the application e.g. Word PowerPoint Excel Outlook and the like and can be compatible with various operating systems e.g. Microsoft Office 2003 2007 2010 Windows Mobile Macintosh Windows Internet Explorer BlackBerry OS Android OS and the like. The encryption system also includes remote authentication to verify a user s credentials registered to the user s computer stored in a remote database on a host server or web server. The encryption system further includes remote delete to automatically delete encrypted files stored on or otherwise tied to the user s computer when the computer is connected to the internet if the user reports the computer as lost or stolen.

Once the exclusive Remote Delete feature for the personal computer laptop computer smartphone and the like is activated remote delete will delete all encrypted files from a hard drive or storage device immediately upon connection to the internet. Thus the remote delete allows the user to delete all encrypted files from their computer in the event that the computer is lost or stolen.

The remote authentication process helps to defend a user s login from password cracking . There are many inexpensive password cracking programs available to anyone that can defeat a password stored on a computer. The encryption system can help secure and protect a user s log in credentials by storing all credentials remotely on the secure web server e.g. log in username password computer serial number encryption key and any combination thereof all stored remotely on the web server. Additionally the encryption system security can be enhanced by the user having to be logged into the same computer that they installed the application on connect to the encryption system web server authenticate the application and apply a user created password to access encrypted documents and emails. Remote authentication can require that the user authenticate their user account with the encryption system web server whenever they log into the application.

Further areas of applicability of the present invention will become apparent from the detailed description provided hereinafter. It should be understood that the detailed description and specific examples while indicating the preferred embodiment of the invention are intended for purposes of illustration only and are not intended to limit the scope of the invention.

The following description of the preferred embodiment s is merely exemplary in nature and is in no way intended to limit the invention its application or uses.

Referring to the Figures generally encryption used herein includes encryption that allows for selectively converting sending and or storing encrypted files to protect or secure the file contents by helping to prevent unauthorized individuals from viewing files in human perceivable or readable form. Decryption used herein included decryption that allows for selectively decrypting files to be viewed in human perceivable or readable form. The description herein assumes a basic understanding of encryption and decryption by the reader.

It is understood that the term file used herein includes but is not limited to any type of file folders documents data plaintext electronic mail emails attachments music photos digital images videos graphics scanned items spreadsheets displays personal information contact lists directories confidential or privileged information text messages mobile phone messages calendars notebooks and any other file of any kind and combinations thereof. Additionally it is understood that any operating environments and or systems and or configurations described herein in which the invention may be implemented is not intended to limit the invention its application or uses and that other computing systems environments and or configurations may be used. The term computer can include any type of computer including but not limited to personal computers laptop computers handheld or portable devices such as smartphones e.g. Droid BlackBerry Nokia and HTC mobile phones portable media players portable gaming consoles Global Positioning Units GPS and any other computing device of any kind are all contemplated.

Optionally redundant backup web servers and or redundant internet connections can be used to help ensure a user can log in at anytime for remote authentication and performing encryption and decryption. It is further understood that the web server can typically include additional components or elements e.g. processors processing units network connections control circuitry routers hard drive and or storage device s database s hardware software and the like and that these additional components or elements have been omitted from so as to not clutter the drawing. It is understood that the computer typically includes additional components e.g. processors processing units monitors network connections e.g. for connecting to Internet local area network and or intranet USB ports BUS user interfaces input devices hard drive and or storage device s flash drives and the like can execute Web browsers e.g. Windows Internet Explorer and that these additional components have been omitted from so as to not clutter the drawing. A user interface can comprise any input component such as touch screens buttons mice keyboards and any other graphical user interface and combinations thereof.

The program can obtain and transmit predetermined credentials e.g. identification numbers of the personal computer associated with the program and of the user via a network such as the internet to the web server for remote authentication and or remote deletion of encrypted files using wireless or wired communication or any other type of data communication network. If the user credentials and computer are authenticated e.g. the computer identification matches with what is pre registered for a specific user in at least one web server database DB the user can selectively encrypt decrypt and or open the file as will be explained in greater detail below. Encrypting the file transforms the file contents into a series of letters numbers symbols and or combinations thereof that is not human perceivable or readable to help secure its content from an unauthorized party. Any encrypted files on the computer remains unperceivable until decrypted. Decrypting the file transforms the file contents back into readable or perceivable form. Additionally any previously encrypted file can be automatically re encrypted upon the user closing out of the file and or logging off which helps to protect its contents from an unauthorized party e.g. helps protect against computer hacking remotely in a wireless communication environment.

Any encrypted files on the computer remain unreadable or unperceivable until decrypted even if the computer is lost stolen or otherwise compromised. If the user reports the computer as lost or stolen the encrypted files will automatically be deleted remotely via remote delete when the computer is first connected to the Internet thereby helping to prevent encrypted files from ever being seen or read by a thief or other undesired party.

Additionally the user can optionally selectively send encrypted files to at least a second user s computer e.g. sending an email and or text message to another person s email address and or phone number accessible on any computer via the network and the receiving party can selectively decrypt the file contents into readable or perceivable form using an authorized key to decrypt. The second computer can be any computer type e.g. typically includes any computer or computing device type as set forth above relative to computer and typically substantially includes at least the components or elements set forth above relative to the computer . While two computers are illustrated it is understood that fewer or greater than two can be used.

Referring to the figures generally the program can be formed in dot.net C SQL and the like frameworks operable to be compatible with and interact with any computer operating system e.g. Microsoft Windows 7 XP Vista and 2003 Windows Mobile BlackBerry OS Android OS and the like and to selectively perform functions. By way of non limiting example the encryption system has Plug ins for applications in the Microsoft Office Suite and the like e.g. such as Microsoft Office Microsoft Word Microsoft Excel WinZip Microsoft PowerPoint Microsoft Access Microsoft Outlook Windows Internet Explorer ActiveX and the like to perform encryption and decryption of files. It is understood however that plug ins for other applications can be used e.g. Adobe Photoshop QuickTime media players Acrobat Reader Intuit QuickBooks and the like.

The program can utilize up to at least about Advanced Encryption Standard AES 512 bit encryption e.g. at least AES 256 bit robust encryption and can include a box product physically inserted into the computer to load onto a user s computer and or downloadable from a network such as the internet.

If the user obtains a new computer it is understood that the user can transfer all of the encrypted files to a new computer and decrypt them using the user s original account and password. The user can also have at least two computers tied to the user s account allowing encryption decryption of files from numerous computers using identical authentication credentials e.g. username password and the like.

Referring to generally and more particularly to there is depicted a portion of a flowchart illustrating the steps performed for encrypting and or decrypting files in accordance with certain embodiments. The operations illustrated can be implemented in at least the computer environment of the encryption system . There are depicted various types of application plug ins e.g. Word Outlook shell extension s Internet Explorer ActiveX that can be in data communication with a graphical user interface GUI . Information and actions available to the user can be through graphical icons visual indicators and the like. When an action is requested at block it must be determined whether or not the program is running at first act . It is understood that the requested action can originate from the program interface shell extension and or Office application and the like. If the program is running at first act and the user is logged in at second act then a message processor determines the requested action that is received from the program user interface shell extension s and or Office application s . The file can be processed by encrypting it decrypting it and or opening an unencrypted file See .

For file processing at block the user can request encryption decryption and or opening an unencrypted file. When the user s requested action is encryption shown generally at if the file is not determined to be a folder at act e.g. is not a folder containing greater than one file therein the file is encrypted at block . A report is sent to the web server confirming that the file was encrypted for that computer identification ID e.g. computer serial number to which the user is logged in login is associated and an announcement that the requested action is finished and the next state to enter is made at act . If the file is determined to be a folder act and while the number of files are determined to be greater than zero at act each file in the folder will be encrypted at block . A report is sent to the web server confirming that the files were encrypted for that computer ID and an announcement that the requested action is finished and the next state to enter is made act .

For file processing at block if the user s requested action is decryption shown generally at and if the file is not determined to be a folder at act e.g. is not a folder containing greater than one file therein the file is decrypted at block . A report is sent to the web server confirming that the file was encrypted for that computer ID and an announcement that the requested action is finished and the next state to enter is made act . If the file is determined to be a folder at act and while the number of files are determined to be greater than zero at act each file in the folder will be decrypted at block . A report is sent to the web server confirming that the files were encrypted for that computer ID and an announcement that the requested action is finished and the next state to enter is made act .

For file processing at block if the user s requested action is to open a file shown generally at in and if the file is not determined to be encrypted at act the file is opened at act allowing the user to read its contents and work with and or save down the file unencrypted and or request encryption. If the file is determined to be encrypted act the file will be decrypted at block . The file reference will be saved in the memory at act and the file can be encrypted upon the user logging out. The file is opened act allowing the user to read its contents and work with the file and an announcement that the requested action is finished and the next state to enter is made act . The computer user s request that a file be processed is finished at block .

By way of non limiting example the user can input number and letter characters and calculations into a Microsoft Excel document and click on an encryption key operably disposed in a toolbar or dropdown menu to request or command that the file be encrypted to help mask the data from being viewable by an undesired party. Preferably the encryption key is a one click to encrypt key. Another example is a user creates a new email message in Outlook and requests encryption preferably with a one click to encrypt key prior to sending. Another example is a user creating a smartphone message e.g. on a Droid and requests encryption preferably with a one click to encrypt touch screen button. Yet another non limiting example is a registered party receives an encrypted email and clicks a decrypt key to decrypt its contents preferably with a one click to decrypt key.

Referring to generally and more particularly to there is depicted a flowchart illustrating the steps performed for remote authentication and remote deletion for authenticating credentials prior to encrypting decrypting and or deleting files if the computer is reported lost or stolen implemented in the encryption system . If the program was determined not to be running first act shown in the program can be started at block by first determining whether the program is running from a universal serial bus USB at act . If it is running from the USB drive the USB drive identification is retrieved at act and the computer identification is determined at act . If it is not running from the USB drive the central processing unit CPU identification is retrieved at act and the computer identification is determined act . Once the computer identification is determined act e.g. computer serial numbers and the like automatically obtained parallel processes implement the remote authentication and remote deletion . Additionally the user must be logged in to open and or view encrypted files and to decrypt. Thus if the user is not determined to be logged in act shown in the remote authentication and remote deletion processes are entered starting at blocks and respectively .

A remote authentication login screen allows the user to enter the authentication user credentials and the web server authenticates the entry at act e.g. matches entered credentials with stored credentials on the web server database. It is understood that authentication can require that at least the computer identification that was determined act correspond with the user credentials entered by the user on the login screen e.g. user credentials and computer identification matches stored credentials on the web server database. If it is determined that the login was not successful at act the user is directed back to the login screen . If the user logs in on the login screen using the user s credentials and the web server authenticates the information using the database at the login can be determined to be successful act and the logged in user and key information e.g. encryption key and or decryption key can be stored in the memory at act . The user is notified of all connected applications e.g. Office Applications that the user logged in and the web server sends the user the key at act . It is understood that user credentials can include personal information name address secret answer password s and the like.

It is understood that an optional Remember me feature can be used as will be explained in greater detail below shown in which can save the user s credentials and use them for a set time e.g. Remember me for the current day. The credentials together with the login date are encrypted and can be stored in a registry. For the same credentials the program can generate different encrypted strings based on the moment when the login is performed which makes it more difficult for a hacker to determine the encryption algorithm. Preferably the Remember me credentials and login date and or time are held remotely on the web server .

The user authentication authorization decision can be taken on the web server side and the communication between the program and the web server is encrypted. Another important protective benefit is that the web server authentication act database is only accessible from the server network where it resides so it helps to prevent being broken into by outside hackers due to its isolation. Additionally the encryption system helps to protect the user s credentials personal data because the web server authentication act database is hosted in a more secure environment on the web server . This is beneficial over conventional encryption which stores the authenticating data on the user s computer which allows a malicious person to try to break any protection and have access to the user credentials e.g. by breaking or cracking the protection algorithm over time. It is understood that a network such as an internet connection is required to authenticate to the web server so that the login credentials stored on the web server instead of the user s computer can be verified and to help keep the password s safe from hackers and spyware if the computer is compromised.

Once the user is notified of all connected applications and the key is sent act a wait state block can be entered followed by the message processor determining the requested action that is received from the program user interface shell extension s and or Office application s . The file s can be processed by encrypting decrypting and or opening an unencrypted file See .

Remote deletion implements automatic deletion of encrypted files when a reported lost or stolen computer is connected to the internet. The user can have the computer marked as lost stolen or otherwise compromised e.g. by calling a support center and providing user credentials and or secret answers s . Once activated remote delete will delete all encrypted files from a hard drive and or storage device substantially immediately upon connection to the internet. The compromised computer s identification is automatically determined upon connecting to the internet. When connected to the internet if it is determined that the computer identification is marked as lost or stolen at act the files will automatically be deleted. A list of files for remote deletion is obtained at act e.g. these can include a list of encrypted files on the hard drive. Optionally the user can additionally define other paths for being deleted from the stolen computer e.g. D My Documents unencrypted files and the like . If the number of files to delete is determined to be greater than zero at act the file will be deleted at act . If it is determined that the file was successfully deleted at act a report is sent to the web server confirming that the file was successfully removed. If it is determined that the file was not successfully deleted act a report is sent to the web server confirming that the file was not successfully removed and deletion is again attempted. The remote delete continues until the number of files to remove is zero.

It is understood that if a user used their credentials for more than one computer the user can identify which computer ID should be marked for Remote Delete . After a predetermined period of time the user that reported the computer as lost or stolen can receive a report of the files that were removed from the computer . It is understood that the web server does not automatically keep store copy or have access to the encrypted files. In the event the encrypted documents were backed up e.g. backed up on a flash drive the user can decrypt them once the user contacts the consultant to connect the user account with a new computer .

By way of non limiting example if a user s smartphone is stolen the Remote Delete process can remotely delete all text messages contacts emails and the like that are on the compromised smartphone. Any backed up encrypted documents can be recovered and selectively decrypted when the user gets a new smartphone.

Referring to there is shown a portion of a flowchart illustrating the optional remember me feature which can save the user s credentials and use them for a predetermined amount of time e.g. the current day for remote authentication block . If the remember me feature is determined to be in use at act the user s credentials are obtained from a registry e.g. a Windows registry. Preferably the user s credentials and login date and or time are selectively stored and obtained from the web server . If the credentials are determined to be expired at act the user logs in on the login screen at act using the user s credentials and the web server authenticates the information using the database at act . If it is determined that the login was not successful at act the user is directed back to the login screen act . If the credentials are determined not to be expired act the web server authenticates the information using the database . If the login is determined to be successful act the logged in user and key information e.g. encryption key and or decryption key can be stored in the memory at act and the user is notified of all connected applications e.g. Office Applications that the user logged in and the web server sends the user the key at act . A wait state is entered after authentication and if remote deletion was not required e.g. the computer was not reported as stolen the message processor determines the requested action as explained above in greater detail.

If it is determined that the user is logged in act a message is shown notifying and confirming that the current document will close at act . The document is then encrypted at act . The windows message communication channel block remains active and waits for additional input block . If a document is already encrypted and the user desires to open the encrypted document block and if it is determined that the user is not logged in at act a login request is sent act to the web server for remote authentication as set forth in greater detail above. If it is determined that the user is logged in act the user can browse for the encrypted document at act to open. The document is then decrypted at act . The document is displayed to the user at act and a Windows message is sent for opening the document at act in human perceivable or readable form. The windows message communication channel block remains active and waits for additional input block .

If a user desires to decrypt and view an email block and if it is determined that the user is not logged in at act a login request is sent at act to the web server for remote authentication as set forth in greater detail above and the email is added to the processing queue at act for encryption. Once it is determined that the user is logged in act and if it is determined that the email is not encrypted at act a message is shown that the email is not encrypted at act . If it is determined that the user is logged in act and if it is determined that the email is encrypted act and if it is determined that the sender did not send a key at act a message is displayed that there is no sender key to decrypt . If it is determined that the user is logged in act and if it is determined that the email is encrypted act and if it is determined that the sender did send a key at act then the key is used or applied to try to decrypt the email and or attachments. If it is determined that the email cannot be decrypted with the key at act a message is displayed that the key is invalid at act and a window is displayed for selectively typing in a key at act . If it is determined that the user did not type in a key at act a message is displayed that the email cannot be decrypted at act and the process moves to the wait state at . If it is determined that the user did type in a key act then it is determined whether or not the email can be decrypted with the key act e.g. with the key sent by the sender and or with the key manually typed in at act . If it is determined that the email can be decrypted with the key act the email is decrypted at act and the decrypted email is displayed at act . The process moves to the wait state at for additional requests to perform actions.

Referring to generally there is shown a flowchart illustrating a process for establishing the web server connection between at least the computer and web server to implement remote authentication using a Windows Communication Foundation WCF service in accordance with certain embodiments of the invention. Generally this process is implemented before traffic is allowed to get through such that the remote connection must be authorized before there is access to the web server . Typically the WCF service is used to authenticate users with the encryption key and login process stored and processed by the web server through WCF. Typically the WCF service and computer ID can be used to identify and remote delete a compromised computer. Typically the remote authentication and WCF service can be used to encrypt and or decrypt. The process starts shown as block and moves to a parallel process wherein a WCF method is invoked at act e.g. Basic WCF Service and a cleanup process is performed starting at act . Generally the web server validates user logins. Typically every time a user requests that an action be performed e.g. email encryption the web server must authenticate the users login and or the user has to re establish the connection e.g. internet connection and be re authenticated e.g. the user must re instate their login if timed out. Preferably the user s authentication credentials are stored and processed by the web server every time a request is made such that credentials e.g. username and password are not held locally on the computer and authentication is processed every time a user wants to perform an action e.g. encrypt a file. This is a significant benefit over conventional arrangements that allow caching of credentials locally and ongoing connections which can be retrieved by computer hackers e.g. using hacker based software. Generally the WCF service connection is an application programming interface API .

The cleanup process enables a user to cleanup an invalid entry during authentication. By way of non limiting example if a user enters an invalid username the web server can establish what the login error is and communicate the defect to the user e.g. notify the user that the username and or password is invalid. If it is determined that a cleanup is required at act the cleanup is performed at act prior to waiting a predetermined interval block to determine if additional cleanup is necessary. If it is determined that no cleanup is required act wait an interval begins shown at block .

The WCF method is invoked act as an application programming interface API not local to the user computer . If it is determined that the WCF method does not need authorization at act the requested action is performed and a response is determined at act . The response is then given at act e.g. encryption complete and the process is moved to end block . If it is determined that the WCF method needs authorization act and the user inputs a valid login at act the requested action is performed and a response is determined at act . The response is then given at act and the process moves to end block . If the login session is not determined to be valid act an error message is issued at block and response is given act and the process moves to end block . The WCF Service can be used to authenticate users with authentication processes e.g. with an encryption key and login process stored and processed by the web server through the WCF based up predetermined verification parameters.

Referring to generally the WCF service is an API in a .NET function or framework e.g. Microsoft .NET framework for guiding connections to selectively restrict or allow communications with the web server in order to allow encrypting and or decrypting of files is illustrated in accordance with certain embodiments. The Basic WCF Service shown generally at is a process that guides the applications that are part of the system to communicate with the proper WCF Service. Thus the Basic WCF Service does not handle the communication per se but instead tells an application which URL to use. Generally the first call made by the application is to the Basic WCF Service . Typically this is a non continuous onetime process e.g. and or for a predetermined period of time unless the user changes the address from the settings section. The Basic WCF Service will return the WCF uniform resource locator URL of the main WCF Service shown generally at . This is beneficial when there are users running an old version e.g. program versions and also users running newer or latest versions. The Basic WCF Service can take the current application version and the application code which can be unique per application and not per version and also optionally a tag to identify the WCF Service that can communicate with them. A benefit of the Basic WCF service is to guide an application to use the service that works for it e.g. rather than having to overwrite the service if modifications are made to the service. If any changes are made on the web server side both old and the latest applications can be used. Preferably the Secured Query Language SQL is SQL 2008 shown generally at .

Referring to generally there is shown a flowchart illustrating the process of returning the WCF URL. Typically for any application that the Basic WCF Service does not find a match between AppCode and version the Basic Service will return NULL when no match can be found. It is understood that the application can try to use the default service URL. Beginning at start if it is determined that the AppCode Version and Tag operably matches at act the process moves to end block . If it is determined that the AppCode Version and Tag do not match act to predetermined parameters but that it is determined that AppCode and Version operably match at act the process moves to end block . If it is determined that the AppCode Version and Tag do not match act and it is determined that AppCode and Version do not match act and if it is determined that is AppCode Null Version e.g. Null version that matches all for which a version cannot be matched with a version column the process moves to end block . If it is determined that the AppCode Version and Tag do not match act and it is determined that AppCode and Version do not match act to predetermined verification parameters and if it is determined that is not AppCode Null Version a Return NULL is made shown generally at and the process moves to end block and access can be granted.

By way of non limiting example to identify and remote delete a lost or stolen computer the WCF and gathered hardware ID can be used. By non limiting example the process of using the remote authentication and WCF service can be used to encrypt and decrypt files e.g. on mobile devices.

Referring to the Figures in general the exclusive encryption system can be usable to anyone with basic computer skills to use powerful encryption e.g. AES 256 Bit encryption with a single click AES robust encryption and the like. By non limiting example with a single click a user can select encryption of files and folders they want to encrypt. Thus the encryption system is much easier to use than conventional encryption that is complicated time consuming and difficult to use. Although the program can be more simply installed and easier to use than conventional programs powerful protection is provided e.g. provided using AES 256 bit robust encryption standards adopted by the National Institute of Standards and Technology. An additional benefit is the decrease in training time such that a user and or employer experiences minimum training and easier implementation.

The encryption system can use links ribbons widgets and the like and combinations thereof to improve user interface e.g. to provide a user friendly interface allowing easy one click encryption by a user clicking an encryption key located in the toolbar of an application. By way of non limiting example an encryption key of the encryption system can be embedded or integrated into the menu toolbar of Microsoft Office allowing a user to click the encryption key to encrypt the email message and attachments before transmitting it to a second party. Additionally by non limiting example a user can compress a smartphone button to chose encryption to encrypt a text message for sending or select an encryption button on a smartphone touch screen e.g. touch an encryption button on a Motorola Droid touch screen.

It is further contemplated that self decrypting can be used wherein files are compressed and encrypted with a password. The files can be reduced made smaller in size so that they can be sent securely via email or stored in another location e.g. a zip or flash drive. This is particularly beneficial if the user is travel and or will not have access to the internet to ensure that the files will be encrypted while on the go. When the user wants to access the encrypted information the user enters the user password s . Self decrypting can also be used to selectively send a package of encrypted files folders to anyone. Self decrypting packages are zipped and then encrypted. The intended recipient of the package e.g. party receiving the email with encrypted files can decrypt the package using the password the user entered when creating the package. By the user providing the receiving party with the password the second party will be able to decrypt the package and view the data.

The encryption system can optionally use file encryption rather than full disk encryption. Full disk encryption is known to encrypt an entire hard drive which takes extensive time and space and the user could also experience a slowdown in normal computer processes. The encryption system of the present invention allows a user to choose which files e.g. folders documents emails text messages and the like are important to encrypt such that space is not taken on the hard drive and to give the user flexibility.

Storing customer client and patient information on a user s laptop or personal computer requires security of important private information that will protect all electronic information and data. The encryption system can help aid the user in compliance with privacy and confidentiality laws service provider requirements industry standards customer client patient confidentiality and any other type of Federal and State privacy confidentiality laws and regulations e.g. the Health Insurance Portability and Accountability Act HIPAA HITECH Act Sarbanes Oxley Act SOX Public Company Accounting Reform and Investor Protection Act the Visa Payment Card Industry Document Security Standards VISA PCI DSS Basel Accords Basel II and the like. By encrypting files the user improves protection of valuable data from being hacked used or accessed by anyone. In addition the encryption system does not use valuable system resources or take up additional hard drive space for encryption. The program can run quietly in the background without burdening the user s system resources. Running in the background of the user s computer also helps to keep their information private protected and unreadable.

The description of the invention is merely exemplary in nature and thus variations that do not depart from the essence of the invention are intended to be within the scope of the invention. Such variations are not to be regarded as a departure from the spirit and scope of the invention.

