---

title: Disabling the self-referential appearance of a mobile application in an intent via a background registration
abstract: Systems and methods for disabling the self-referential appearance of a mobile application in an Intent via a background thread are disclosed. On the Android platform, an application such as a mobile application for providing access to a cloud environment or cloud based service including cloud-based storage and/or collaborative services, can serve as both a source and a target for a given Intent. In one implementation, such a mobile application that can receive and send the same Intent, can include a background service that detects when the Intent is about to be issued, and unregisters the application to prevent the application from receiving the Intent. When a target application for handling the Intent is identified, the background service re-registers the application to receive the Intent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09195519&OS=09195519&RS=09195519
owner: Box, Inc.
number: 09195519
owner_city: Los Altos
owner_country: US
publication_date: 20130311
---
The present application claims priority to and benefit from U.S. Provisional Patent Application Ser. No. 61 697 477 titled Disabling The Self Referential Appearance Of A Mobile Application In An Intent Via A Background Registration filed on Sep. 6 2012 the content of which is incorporated by reference herein.

The Android operating system Android OS relies on a rich inter application messaging system called Intents for communication between mobile applications on a mobile device. The messaging system promotes collaboration between applications by allowing applications to leverage existing data or services from each other. An Intent can be used to request a functionality from another application or broadcast an event. For example a restaurant directory application can ask one application to launch a restaurant website another application to call a restaurant another application to display directions to a restaurant and so on.

The following description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure can be but not necessarily are references to the same embodiment and such references mean at least one of the embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms may be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way.

Consequently alternative language and synonyms may be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

Embodiments of the present disclosure include systems and methods to disable the self referential appearance of a mobile application in an Intent via background registration.

The disclosed systems and methods prevent a mobile application from ever seeing itself in a dialog or chooser using Intents and make sure that no illogical situations such as a mobile application sharing to itself can occur. To remove the mobile application as an option while inside itself but not in general the disclosed systems and methods temporarily hide the application. Therefore right when a user begins an action which triggers an Intent whereby the current or source mobile application e.g. the mobile application to access a cloud environment or a cloud platform might appear as a target application the mobile client can utilize create or initiate a background thread to unregister the mobile application for the Intent about to be launched and schedule or reschedule the mobile application to re register the application for the same Intent after a delayed amount of time e.g. some short time a few milliseconds or seconds later .

The dynamic registration unregistration allows the mobile application to retain the benefits of being registered but avoid being seen while inside itself to avoid user confusion. Note that this implementation can be useful for all Intents not just specific ones. It solves the problem without needing to rebuild any further user interface elements or custom dialogs. In some instances the use of a custom Intent can work and can be integrated into the present solution. However custom Intents may not cover all the use cases across all the kind of applications. Furthermore custom Intents can be a more fragile solution and might prevent legitimate uses of Intents for basic functionality like sharing.

Various aspects of the cloud based platform and the systems and methods for disabling the self referential appearance of a mobile application in an Intent via a background registration will now be described. In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server and or notification server . Client devices will typically include a display and or other output functionalities to present information and data exchanged between among the devices and or the host server and or notification server .

For example the client devices can include mobile hand held or portable devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a PDA a smart phone e.g. a BlackBerry device such as BlackBerry Z10 Q10 an iPhone Nexus 4 etc. a Treo a handheld tablet e.g. an iPad iPad Mini a Galaxy Note Galaxy Note II Xoom Tablet Microsoft Surface Blackberry PlayBook Nexus 7 10 etc. a phablet e.g. HTC Droid DNA etc. a tablet PC a thin client a hand held console a hand held gaming device or console e.g. XBOX live Nintendo DS Sony PlayStation Portable etc. iOS powered watch Google Glass a Chromebook and or any other portable mobile hand held devices etc. running on any platform or any operating system e.g. Mac based OS OS X iOS etc. Windows based OS Windows Mobile Windows 7 Windows 8 etc. Android Blackberry OS Embedded Linux platforms Palm OS Symbian platform Google Chrome OS and the like. In one embodiment the client devices host server and app server are coupled via a network . In some embodiments the devices and host server may be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad motion detector e.g. including 1 axis 2 axis 3 axis accelerometer etc. a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or a combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used in the disclosed technology by various users or collaborators e.g. collaborators for accessing through network a web based collaboration environment or online collaboration platform e.g. hosted by the host server .

The collaboration platform or environment hosts workspaces with work items that one or more users can access e.g. view edit update revise comment download preview tag or otherwise manipulate etc. . A work item can generally include any type of digital or electronic content that can be viewed or accessed via an electronic device e.g. device . The digital content can include .pdf files .doc slides e.g. Powerpoint slides images audio files multimedia content web pages blogs etc. A workspace can generally refer to any grouping of a set of digital content in the collaboration platform. The grouping can be created identified or specified by a user or through other means. This user may be a creator user or administrative user for example.

In general a workspace can be associated with a set of users or collaborators e.g. collaborators which have access to the content included therein. The levels of access e.g. based on permissions or rules of each user or collaborator to access the content in a given workspace may be the same or may vary among the users. Each user may have their own set of access rights to every piece of content in the workspace or each user may be different access rights to different pieces of content. Access rights may be specified by a user associated with a work space and or a user who created uploaded a particular piece of content to the workspace or any other designated user or collaborator.

In general the collaboration platform allows multiple users or collaborators to access or collaborate efforts on work items such each user can see remotely edits revisions comments or annotations being made to specific work items through their own user devices. For example a user can upload a document to a work space for other users to access e.g. for viewing editing commenting signing off or otherwise manipulating . The user can login to the online platform and upload the document or any other type of work item to an existing work space or to a new work space. The document can be shared with existing users or collaborators in a work space.

A diagrammatic illustration of the online collaboration environment and the relationships between workspaces and users collaborators are illustrated with further reference to the example of . A diagrammatic illustration of a workspace having multiple work items with which collaborators can access through multiple devices is illustrated with further reference to the example of .

In one embodiment the host server of cloud based services and or cloud storage such as an online or web based collaboration environment is able to track or monitor the devices used by users to access content or activities. In one implementation such tracking or monitoring may be performed upon receiving explicit permission or authorization from users.

In one embodiment client devices communicate with the host server and or notification server over network . In general network over which the client devices the host server and or notification server communicate may be a cellular network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol Open System Interconnections OSI FTP UPnP iSCSI NSF ISDN PDH RS 232 SDH SONET etc.

The network can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and may appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Digital Advanced Mobile Phone Service D Amps Bluetooth Wi Fi Fixed Wireless Data 2G 2.5G 3G 4G IMT Advanced pre 4G 3G LTE 3GPP LTE LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA UMTS TDD 1 RTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks or messaging protocols.

The web based platform for collaborating on projects or jointly working on documents can be used by individual users and shared among collaborators. In addition the collaboration platform can be deployed in an organized setting including but not limited to a company e.g. an enterprise setting a department in a company an academic institution a department in an academic institution a class or course setting or any other types of organizations or organized setting.

When deployed in an organizational setting multiple workspaces e.g. workspace A N may be created to support different projects or a variety of work flows. Each workspace may have its own associate work items. For example work space A may be associated with work items work space B may be associated with work items and work space N may be associated with work items . The work items and may be unique to each work space but need not be. For example a particular word document may be associated with only one work space e.g. work space A or it may be associated with multiple work spaces e.g. Work space A and work space B etc. .

In general each work space has a set of users or collaborators associated with it. For example work space A is associated with multiple users or collaborators . In some instances work spaces deployed in an enterprise may be department specific. For example work space B may be associated with department and some users shown as example user A and workspace N may be associated with departments and and users shown as example user B .

Each user associated with a work space may generally access the work items associated with the work space. The level of access may depend on permissions associated with the specific work space and or with a specific work item. Permissions may be set for the work space or set individually on a per work item basis. For example the creator of a work space e.g. one of user A who creates work space B may set one permission setting applicable to all work items for other associated users and or users associated with the affiliate department for example. Creator user A may also set different permission settings for each work item which may be the same for different users or varying for different users.

In each work space A B . . . N when an action is performed on a work item by a given user or any other activity is detected in the work space other users in the same work space may be notified e.g. in real time or in near real time or not in real time . Activities which trigger real time notifications can include by way of example but not limitation adding deleting or modifying collaborators in the work space uploading downloading adding deleting a work item in the work space creating a discussion topic in the work space.

Specifically items or content downloaded or edited in accordance with the techniques described in the present disclosure can be cause notifications to be generated. Such notifications can be sent to relevant users to notify them of actions surrounding a download an edit a change a modification a new file a conflicting version an upload of an edited or modified file.

In one embodiment in a user interface to the web based collaboration platform where notifications are presented users can via the same interface create action items e.g. tasks and delegate the action items to other users including collaborators pertaining to a work item for example. The collaborators may be in the same workspace A or the user may include a newly invited collaborator. Similarly in the same user interface where discussion topics can be created in a work space e.g. work space A B or N etc. actionable events on work items can be created and or delegated assigned to other users such as collaborators of a given work space or other users. Through the same user interface task status and updates from multiple users or collaborators can be indicated and reflected. In some instances the users can perform the tasks e.g. review or approve or reject etc. via the same user interface.

Each of users and may individually use multiple different devices to access and or manipulate work items in the work space with which they are associated with. For example users may be collaborators on a project to which work items are relevant. Since the work items are hosted by the collaboration environment e.g. a cloud based environment each user may access the work items anytime and from any physical location using any device e.g. including devices they own or any shared public loaner device .

Work items to be edited or viewed may be accessed from the workspace in accordance with the platform and or application independent mechanisms. Users may also be notified of access edit modification and or upload related actions performed on work items by other users or any other types of activities detected in the work space . For example if user modifies a document one or both of the other collaborators and can be notified of the modification in real time or near real time or not in real time. The notifications can be sent through any of all of the devices associated with a given user in various formats including one or more of email SMS or via a pop up window in a user interface in which the user uses to access the collaboration platform. In the event of multiple notifications each notification may be depicted preferentially e.g. ordering in the user interface based on user preferences and or relevance to the user e.g. implicit or explicit .

For example a notification of a download access read write edit or upload related activities may be presented in a feed stream among other notifications through a user interface on the user device according to relevancy to the user determined based on current or recent activity of the user in the web based collaboration environment.

In one embodiment a notification feed stream includes updates when an invited user accepts an invitation and or successfully creates a new account through receipt of an invitation from an existing user. The invited user upon creation of the new account receives the account having enhanced features. The new user can automatically be connected to the existing user who sent the invitation. The system can also automatically prompt both users to query they wish to be collaborators in a common work space.

In the Android operating system OS a mobile application can receive and respond to an Intent sent by another mobile application. Intent is a communication mechanism using which applications communicate with each other in the Android platform. An Intent can be sent implicitly or explicitly. An explicit Intent can be delivered to a specified application while an implicit Intent can be delivered to any application that can handle the Intent. An Intent can be sent to various components including an activity e.g. visible portion of an application a service e.g. runs in the background and has no visible portion and a broadcast receiver e.g. listens to an Intent sent to multiple applications .

An application can receive an Intent when the application or a component thereof is registered for the Intent. For example when an Intent is sent by an application the operating system OS searches for applications or components of the applications that are registered to receive the Intent or registered to receive an Intent having a specific action and or data type. If the OS finds only one application that can answer the Intent the OS can deliver the Intent to that application. Alternately if the OS identifies multiple applications that can handle the Intent the OS can display a dialog box or chooser that allows a user to choose an application to perform a desired operation for example.

An application can register for an Intent via an Intent filter. The OS can find suitable applications that handle an Intent based on Intent filters defined in the applications. An Intent filter can describe the capabilities of an application s components e.g. activity service or broadcast receiver . For example an Intent filter can specify the type e.g. category action data of Intent that an activity a service or a broadcast receiver of an application can respond to. When the OS receives an Intent of the type declared in the Intent filter the OS can deliver the Intent to the corresponding component of the application. An application can also create a receiver to listen to application events and set up an Intent filter for the receiver. When the event represented as an Intent is received the a method corresponding to the receiver can be called. An Intent filter can be defined statically in the Android configuration file e.g. the manifest file or dynamically in code.

Referring to a mobile application can communicate with other mobile applications on a mobile device via an inter application communication i.e. Intents . In one implementation a mobile application can both send and answer an Intent. For example a file sharing application can share out and share in. In other words the file sharing application can handle sharing of files to other applications as well as accepting files shared by other applications. Thus whenever the file sharing application sends an Intent to share a file the file sharing application and any other applications that can handle the Intent can appear on a chooser. Since the file sharing application is both the source application and a potential target application the situation can be a source of confusion.

User interfaces and are example user interfaces of mobile application . When a user requests an operation or a functionality e.g. to open a file from the mobile application an Intent can be sent out by the application to find an application that can handle the Intent. Several applications e.g. and may respond to the Intent. In one implementation the same application can also respond to the Intent. As illustrated by user interface the application that issued the Intent to open a file is also identified as one of the applications that can be used to open the file which can lead to confusion. In user interface the appearance of the application on the dialog box is disabled via a background service. As depicted only applications and are identified as potential targets for opening a file from application .

The framework layer includes framework application programming interfaces APIs that are used by the core applications but can also be used in applications to take advantage of the mobile device hardware access location information store data in internal or external storage on the mobile device run background services add notifications e.g. to the status bar and the like. All applications are supported by a set of services and systems. For example the view system can be used to build application user interface elements such as lists text boxes buttons and the like. Content providers allow applications to access data from other applications or share their own data. A resource manager provides access to non code resources such as localized strings graphics and layout files. A notification manager enables applications to display custom alerts in the status bar. An activity manager manages the lifecycle of applications and provides common navigation elements. The framework layer may include additional components that have not been specifically described.

A set of core and other libraries are used by various components of the mobile device platform and provides many of the functionality. Example core libraries include media libraries that support playback and recording of audio video and images surface manager that manages access to the display subsystem and seamlessly compounds 2D and 3D graphic layers from multiple applications a web browser engine that powers browsers and an embeddable web view e.g. LibWebCore 3D libraries e.g. OpenGL ES 1.0 APIs libraries for bitmap and vector font rendering SQLite which is a powerful and lightweight relational database engine available to all applications system C library and the like.

Each mobile application can run in its own process with its own instance of the Virtual Machine such as the Dalvik VM . The Dalvik VM for example executes files in the Dalvik Executable .dex format which is optimized for minimal memory footprint. The OS or the kernel is the Linux kernel that acts as an abstraction layer between the hardware and the rest of the stack including the application layer the framework layer the libraries and the virtual machine . The kernel supports core system services such as memory and process management network stack driver model and security. The kernel includes drivers for display camera USB keypad Wi Fi and the like and an inter process communication IPC layer that includes a binder driver to provide an IPC mechanism to facilitate communication e.g. exchange of data between processes within an application intra application communication and between applications inter application communication . The IPC mechanism includes the Intent mechanism using which the IPC layer sends Intents to communicate data. The IPC layer via the Intent mechanism can start an activity bring another activity to the front start or stop a service query and obtain results from a content provider e.g. a data storehouse deliver Intents to broadcast receivers and the like.

The mobile device can be any of the client devices described above. The mobile device can include for example a bus and a memory among other components. The memory may include an application Intent status manager a user interface module a communication module and other device modules .

The bus is a subsystem for transferring data between the components of the mobile device . For example the bus facilitates the transfer of data between the memory and other components of the mobile device such as the processor and or the input output components that utilize the data.

As used herein a module a manager a handler a detector an interface or an engine includes a general purpose dedicated or shared processor and typically firmware or software modules that are executed by the processor. Depending upon implementation specific or other considerations the module manager handler or engine can be centralized or its functionality distributed. The module manager hander or engine can include general or special purpose hardware firmware or software embodied in a computer readable storage medium for execution by the processor. As used herein a computer readable medium or computer readable storage medium is intended to include all media that are statutory e.g. in the United States under 35 U.S.C. 101 and to specifically exclude all media that are non statutory in nature to the extent that the exclusion is necessary for a claim that includes the computer readable storage medium to be valid. Known statutory computer readable mediums include hardware e.g. registers random access memory RAM non volatile NV storage to name a few but may or may not be limited to hardware.

One embodiment of the application Intent status manager may detect a condition where an application can appear as an option for performing a desired operation while inside itself. The application Intent status manager can resolve the self referencing condition by temporarily hiding the application so that the operating system cannot identify the application as an option for performing the desired operation.

The application Intent status manager can include one or more modules such as an application Intent detector module and an application Intent registration status modifier module .

In one implementation the application Intent detector module can detect when a user begins to use an Intent for performing a desired operation where the current mobile application might appear as a target application. In one implementation the event that is detected can include any event intercepted from a user s interaction with the application. For example when a user selects a file in a mobile application for opening exporting collaborating editing processing manipulating and the like in another mobile application the application Intent detector module can detect the user interaction as an event.

In one implementation if any of the events from a mobile application can cause an Intent to be issued where the mobile application itself can appear as a target the application Intent detector module can trigger the application Intent registration status modifier module to register or unregister the application to allow or prevent the application from receiving the Intent.

The application Intent registration status modifier module in one implementation can be implemented as a background service. The background service can run on its own thread in the background to unregister the application for the Intent about to be launched. The application Intent registration status modifier running as a background thread can schedule re registering of the application for the same Intent a short time later. The time delay between the unregistering and registering can be configurable in one implementation. In one implementation for example the time delay can be long enough for the chooser or dialog to load and display a list of target applications that can handle the Intent. In another implementation if there is only one target application that can handle the Intent the time delay may be long enough for that target application to be selected and or loaded. In some implementations the time delay can range between a few seconds e.g. 30 seconds to a fraction of a second depending on the processing speed of the mobile device.

The user interface module may generate user interfaces relating to the mobile application. For example the user interface module may generate a user interface for the chooser or dialog e.g. user interface in to display target applications that can handle an Intent for selection by a user. The user interface module may include a rendering engine for rendering user interface graphics for display on the mobile device. In another implementation the application Intent status manager may not have a visible user interface available for user interaction.

The communication module can facilitate communication between the mobile device and any of the host server the notification server and the like using any of the communication protocols supported by the mobile device and the servers. The other device modules can include other modules such as a GPS module for determining and providing location information text input module for accepting and processing inputs provided using different input mechanisms of the mobile device and the like for handling various functions of the mobile device . Additional or less components modules engines can be included in the mobile device and each illustrated component. For example although not discussed the memory can include an Intent creator module that can create and send Intents for performing specific operations such as starting an activity or a service or triggering a broadcast receiver using the underlying IPC mechanism of the Android platform.

The host server of the web based or online collaboration environment can generally be a cloud based service. The host server can include for example a network interface an upload request processor having a drag drop manager and an upload engine having a multi file upload manager and or a folder upload manager . The host server can also include a user interface module having a navigation manager and or an uploaded content access module .

One embodiment of the host server further includes a notification engine having for example a feed stream updator and a recipient selector . Additional or less components modules engines can be included in the host server and each illustrated component.

The network interface can be a networking module that enables the host server to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface can include one or more of a network adaptor card a wireless network interface card e.g. SMS interface WiFi interface interfaces for various generations of mobile communication standards including but not limited to 1G 2G 3G 3.5G 4G LTE etc. Bluetooth a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

One embodiment of the host server includes the upload request processor which can receive detect process identify parse translate and or determine an upload request. An upload request can be submitted by a user through a user interface of the collaboration platform to upload one or multiple items.

The user can identify the files content or work items to be uploaded to the host server one by one and queue up multiple items e.g. including but not limited to files folders documents images audio etc. to be uploaded in a single request. The user can also select all of the items to be uploaded in a single action e.g. via highlighting or otherwise selecting of icons corresponding to each of the items . In one embodiment the upload request is generated via a drag and drop action of the multiple work items to be uploaded to the host server into a portion of a user interface. Drag and drop activated uploaded requests can be detected handled received processed and or otherwise managed by the drag drop manager .

In one embodiment the upload request is generated via a drag and drop action of a single folder which includes the multiple work items to be uploaded to the host server . For example the upload request can be generated when a folder having the multiple items on a client device that is to be uploaded is identified through the user interface. In some instances the folder can include additional folders in a folder hierarchy of multiple items.

In some instances the user can generate an upload request by activating the upload feature in a tab on a user interface and initiate uploading by selecting e.g. clicking on or otherwise activating a button tab. Once selected another user interface or a pop up window may appear allowing the user to navigate through files or folders to select the items to be uploaded.

Once upload requests have been detected and processed the upload engine can upload the requested item or multiple requested items. The upload engine can in one embodiment upload a single item or multiple items e.g. sequentially or simultaneously to the host server . A multiple item upload may be initiated via a single step or multi step user request. A multi file upload request can be handled processed and executed for example through the multi file upload manager .

In one embodiment the multi file upload manager receives an identification of each of the multiple files to be uploaded e.g. from the upload request processor and sequentially prepares each individual file for uploading and uploads each file independently. For example the upload manager can compress one of the multiple files individually upload it to the host server and decompress the file when uploaded and proceed to perform the same steps with the next file. Preprocessing a file can include for example analyzing the file size and type to determine if it is acceptable valid and or to identify how best to compress the file. Post processing can include for example performing one or more of decompressing the file validating the file size and name checking permissions potentially scanning for malicious software and or moving to permanent storage. The step of moving to storage can further include one or more of adding the file metadata to the database creating thumbnails creating previews indexing for search encrypting the file and or storing in multiple locations for redundancy. Note that the above processes can occur in any order or synchronously in any combination with one another. The process continues until all items in the request have been uploaded to the host server . The upload may automatically progress from one file when completed to the next one in sequence when the user initiates a multi file upload request.

In one embodiment the upload engine uploads multiple items in a folder hierarchy based on a single request to upload a folder which has a hierarchy of folders inside for example via the folder upload manager . In one embodiment the folder upload manager compresses the multiple items in the folder hierarchy in a single process into a single item and uploads the single item in a single upload process rather than one by one to the host server . After the merged file of multiple items has been uploaded the folder upload manager can decompress and subsequently parse the single upload of the single item into the original individual files that were stored as multiple items in the folders in the hierarchy. By merging multiple files into one and performing a single compression and decompression step the uploading process can be expedited since the overhead in time to compress and decompress multiple files is mostly eliminated. Some additional benefits of bulk uploading allow the following overhead to be partially or wholly eliminated repeatedly creating TCP connections for each upload repeatedly checking the same permissions and storage quotas when processing the files on the server.

One embodiment of the host server includes the user interface module which preserves or enhances user experience before during or after an upload request. For example the user interface module can allow the user to engage in other activities in the collaboration platform while an upload is in progress so as to prevent the user from having to wait for the completion to work in the platform.

In one embodiment during the upload of a single file before completion the user can generally navigate away from the user interface through which the upload request was submitted for example via the navigation manager in the user interface module . In other words while a file or item upload is in progress the user can navigate to other pages to perform other actions or initiate additional actions on the current page without interrupting stopping or pausing the in progress upload.

Similarly when a multi file or multi item upload request is in progress the user can also navigate away from the user interface which the upload request was submitted prior to completion of the uploading of each of the multiple items to the host server . Navigation between pages during an upload of multiple files can also be managed by the navigation manager . For example the upload of the multiple items can continue to proceed and is not interrupted if the user accesses a link on the user interface causing another user interface to launch in a browser. To enable bulk uploading a new browser window is opened so it operates independently of user navigation. In addition the web application for uploading and access of the collaboration environment is pageless meaning it can be updated asynchronously without a browser page refresh. This allows navigation and to start new uploads in other folders which can be added to the upload queue.

In addition during a multi file upload an item of the multiple items that has been uploaded to the host server available for access through the user interface even when some of the multiple items have not yet been uploaded to the host server via the upload content access module for example. Thus during an active upload individual files which have completed uploading can be accessed or interacted with by the user in the collaborative environment without having to wait for the full upload to complete.

In some instances the item which has been uploaded to the host server is manipulatable by the user through the user interface without a need for browser refresh. This enhances the user experience by allowing the user to work on the file or otherwise interact with it once it has been uploaded without waiting for other files to finish uploading. For example the user can view edit preview or comment on the item that has been uploaded prior to completion of uploading all of the multiple items in an upload request. In one embodiment buffer space in memory for storage of the individual work items are created in response to the upload request such that when individual items have been uploaded they can be moved into the created buffer space and subsequently permanent storage. When the file is in permanent storage the user can then access and work on the individual item while others are still being uploaded. In one embodiment metadata for the file can be created before it is fully uploaded or processed allowing faster user interaction. However to actually interact with the file content full content search download or preview the file generally needs to be processed as usual and be stored in permanent storage.

One embodiment of the host server includes a notification engine . The notification engine can for example update a feed stream to include an updated feed to indicate that an item or multiple items have been uploaded for example via the feed stream updator . The users that are notified can be selected for example by the recipient selector and can include collaborators or the user or other users meeting a criterion. In some instances the feed stream is updated in real time or near real time relative to when the upload of the item completed. For real time updating the notification engine can utilize another server or another engine in the same server which provides push functionality.

The notification engine can generally notify users which can be collaborators of the user who performed the activity in the work space via one or more of many mechanisms including but not limited to email SMS voice message text based message RSS feed etc. as described in detail with further reference to related co pending U.S. patent application Ser. No. 13 152 982 filed on Jun. 3 2011. The contents of which are incorporated herein by reference in its entirety.

In one embodiment the notification is depicted through a web browser used by the other user to access the web based collaboration environment for access in real time or near real time to when the activity was performed by the user. When notifying a user in real time through a web browser the notification engine can utilize a push enabled service to ensure real time notification. In one embodiment the notification is sent by a component or another server which implements push technology. For example the notification can be sent via the notification server shown in the example of . The push enabled service can be implemented via long poll or HTTP streaming for example by the notification server or another component device which may be internal to or external to the host server . For example the host server can utilize other push servers including third party push servers to implement push technology such as but not limited to mobile platform push systems and services e.g. via smart phones or tablets or other portable devices such as iPhone Android phones Blackberry iPad Galaxy or other tablets etc. .

At block a request to perform a desired operation is received from a user of a mobile application. The request can be an event that is represented as an Intent or can cause an Intent to be issued depending on the implementation. The Intent can be passed on to mobile applications that have registered with the OS to receive the Intent and can perform the desired or requested operation. In one implementation the mobile application can detect a request or an event by listening to or monitoring user interaction with the mobile application.

Before an Intent is sent out the mobile application starts a service on a separate thread to dynamically change the application s registration status for the Intent. At block the mobile application dynamically or programmatically unregisters from the Intent. The registering can decouple the application from the Intent such that the application cannot receive the Intent. The unregistering in one implementation disables or disconnects the receiver component of the mobile application for the Intent such that the receiver and thereby the application can no longer receive the Intent. When an application is not registered to receive an Intent the application cannot be identified as a target for performing the requested operation.

In the main thread of the mobile application at block the application sends an Intent to request other applications to perform the requested operation e.g. open a file . In one implementation the Intent can be received by one or more applications that have registered to receive the Intent. At block one or more applications that can handle the Intent are identified as potential targets. In one implementation the applications capable of handling the Intent can be identified based on the registration status of the applications for the Intent. As previously described applications can register to receive Intents of certain types by declaring the types in an Intent filter. At block if more than one application is identified as capable of handling the Intent a chooser or dialog may be launched to display the list of applications for user selection. Alternately if only one application is identified as a potential target application the identified application can be loaded without further input from the user.

At block the service thread waits for a scheduled short period of time while the applications that can handle the Intent are identified and a chooser or dialog is loaded and displayed for user selection. Following a short time delay that can run from a few seconds to a fraction of a second at block the service thread dynamically re registers the application to receive the same Intent.

In one implementation for example the user can share a file from the target application back to the mobile application by sending the same Intent. As the service thread re registers the application in the background after a short time delay the application can identify itself as being able to handle the Intent to the OS and can appear as an option on a chooser for user selection.

In alternative embodiments the machine operates as a standalone device or may be connected e.g. networked to other machines. In a networked deployment the machine may operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine may be a server computer a client computer a personal computer PC a user device a tablet PC a laptop computer a set top box STB a personal digital assistant PDA a cellular telephone an iPhone an iPad a Blackberry a processor a telephone a web appliance a network router switch or bridge a console a hand held console a hand held gaming device a music player any portable mobile hand held device or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and computer systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disks optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

The network interface device enables the machine to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface device can include one or more of a network adaptor card a wireless network interface card a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

The network interface device can include a firewall which can in some embodiments govern and or manage permission to access proxy data in a computer network and track varying levels of trust between different machines and or applications. The firewall can be any number of modules having any combination of hardware and or software components able to enforce a predetermined set of access rights between a particular set of machines and applications machines and machines and or applications and applications for example to regulate the flow of traffic and resource sharing between these varying entities. The firewall may additionally manage and or have access to an access control list which details permissions including for example the access and operation rights of an object by an individual a machine and or an application and the circumstances under which the permission rights stand.

Other network security functions can be performed or included in the functions of the firewall can be for example but are not limited to intrusion prevention intrusion detection next generation firewall personal firewall etc. without deviating from the novel art of this disclosure.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling of connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the disclosure is not intended to be exhaustive or to limit the teachings to the precise form disclosed above. While specific embodiments of and examples for the disclosure are described above for illustrative purposes various equivalent modifications are possible within the scope of the disclosure as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the disclosure provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the disclosure can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments of the disclosure.

These and other changes can be made to the disclosure in light of the above Detailed Description. While the above description describes certain embodiments of the disclosure and describes the best mode contemplated no matter how detailed the above appears in text the teachings can be practiced in many ways. Details of the system may vary considerably in its implementation details while still being encompassed by the subject matter disclosed herein. As noted above particular terminology used when describing certain features or aspects of the disclosure should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the disclosure with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the disclosure to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the disclosure encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the disclosure under the claims.

While certain aspects of the disclosure are presented below in certain claim forms the inventors contemplate the various aspects of the disclosure in any number of claim forms. For example while only one aspect of the disclosure is recited as a means plus function claim under 35 U.S.C. 112 6 other aspects may likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claims intended to be treated under 35 U.S.C. 112 6 will begin with the words means for . Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the disclosure.

