---

title: Distributed service chaining in a network environment
abstract: An example method for distributed service chaining in a network environment is provided and includes receiving a packet belonging to a service chain in a distributed virtual switch (DVS) network environment, wherein the packet includes a network service header (NSH) indicating a service path identifier identifying the service chain and a location of the packet on the service chain, evaluating a service forwarding table to determine a next service node based on the service path identifier and the location, with a plurality of different forwarding tables distributed across the DVS at a corresponding plurality of virtual Ethernet Modules (VEMs) associated with respective service nodes in the service chain, and forwarding the packet to the next service node, with substantially all services in the service chain provided sequentially to the packet in a single service loop on a service overlay.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407540&OS=09407540&RS=09407540
owner: CISCO TECHNOLOGY, INC.
number: 09407540
owner_city: San Jose
owner_country: US
publication_date: 20130906
---
This disclosure relates in general to the field of communications and more particularly to distributed service chaining in a network environment.

Data centers are increasingly used by enterprises for effective collaboration and interaction and to store data and resources. A typical data center network contains myriad network elements including hosts load balancers routers switches etc. The network connecting the network elements provides secure user access to data center services and an infrastructure for deployment interconnection and aggregation of shared resource as required including applications hosts appliances and storage. Improving operational efficiency and optimizing utilization of resources in data centers are some of the challenges facing data center managers. Data center managers want a resilient infrastructure that consistently supports diverse applications and services and protects the applications and services against disruptions. A properly planned and operating data center network provides application and data integrity and optimizes application availability and performance.

An example method for distributed service chaining in a network environment is provided and includes receiving a packet belonging to a service chain in a distributed virtual switch DVS network environment where the packet includes a network service header NSH indicating a service path identifier identifying the service chain and a location of the packet on the service chain evaluating a service forwarding table to determine a next service node based on the service path identifier and the location with a plurality of different forwarding tables distributed across the DVS at a corresponding plurality of virtual Ethernet Modules VEMs associated with respective service nodes in the service chain and forwarding the packet to the next service node with substantially all services in the service chain provided sequentially to the packet in a single service loop on a service overlay.

Turning to is a simplified block diagram illustrating a communication system for distributed service chaining in a network environment in accordance with one example embodiment. illustrates a network generally indicated by an arrow comprising a distributed virtual switch DVS . DVS can include a service controller . A plurality of service nodes SN e.g. SNs may provide various network services to packets entering or leaving network . A plurality of virtual machines VMs may provide respective workloads WLs e.g. WL on DVS for example by generating or receiving packets through DVS . One or more virtual Ethernet modules VEMs e.g. VEMs may facilitate packet forwarding by DVS . In various embodiments DVS may execute in one or more hypervisors in one or more servers or other computing and networking devices in network . Each hypervisor may be embedded with one of VEMs that can perform various data plane functions such as advanced networking and security switching between directly attached virtual machines and uplinking to the rest of the network. Each VEM may include respective vPaths that can redirect traffic to SNs before DVS sends the packets into WLs .

Note that although only a limited number of SNs WLs VEMs and vPaths are provided in the FIGURE for ease of illustration any number of service nodes workloads VEMs and vPaths may be included in communication system within the broad scope of the embodiments. Moreover the service nodes and workloads may be distributed within network in any suitable configuration with various VEMs and vPaths to appropriately steer traffic through DVS .

Embodiments of communication system can facilitate distributed service chaining in network . As used herein the term service chain includes an ordered sequence of a plurality of services provided by one or more SNs e.g. applications virtual machines network appliances and other network elements that are configured to provide one or more network services in the network. A service may include a feature that performs packet manipulations over and beyond conventional packet forwarding. Examples of services include encryption decryption intrusion management firewall load balancing wide area network WAN bandwidth optimization application acceleration network based application recognition NBAR cloud services routing CSR virtual interfaces VIPs security gateway SG network analysis etc. The service may be considered an optional function performed in a network that provides connectivity to a network user. The same service may be provided by one or more SNs within the network.

According to some embodiments a user e.g. system administrator can configure the service chain and provision it directly at an applicable workload e.g. WL . Service controller may segment the user configured service chain in DVS . According to various embodiments VEMs may generate headers for forwarding packets according to the configured service chain such that substantially all services in the service chain may be provided in a single service loop irrespective of the number of services with respective VEMs making independent decisions e.g. without referring to other VEMs or other network elements about the next hop decisions in the service chain packet forwarding. As used herein the term service loop refers to a path of the packet from a starting point e.g. WL through various service nodes e.g. SN SN SN of the service chain until termination at the starting point e.g. WL . The service chain traffic may be steered over network in a service overlay .

As used herein the term service controller includes a process e.g. instance of a computer program that is executing that can provision services at one or more service nodes according to preconfigured settings. The preconfigured settings may be provided at the service controller by a user through an appropriate command line interface graphical user interface script or other suitable means. The term VEM includes one or more network interfaces at least some portions of switching hardware and associated firmware and software and one or more processes managing the one or more network interfaces to facilitate packet switching in a switch including a distributed virtual switch e.g. DVS . VEMs may be named as service VEMs when they provide connectivity to service nodes and as classifier VEMs when they provide connectivity to the workloads that function as the initial node in a service chain.

Service overlay encompasses a level of indirection or virtualization allowing a packet e.g. unit of data communicated in the network destined to a specific workload to be diverted transparently e.g. without intervention or knowledge of the workloads to other service nodes as appropriate. Service overlay includes a logical network built on top of existing network the underlay . Packets are encapsulated or tunneled to create the overlay network topology. For example service overlay can include a suitable header called a network service header NSH with corresponding source and destination addresses relevant to the service nodes in the service chain.

For purposes of illustrating the techniques of communication system it is important to understand the communications that may be traversing the system shown in . The following foundational information may be viewed as a basis from which the present disclosure may be properly explained. Such information is offered earnestly for purposes of explanation only and accordingly should not be construed in any way to limit the broad scope of the present disclosure and its potential applications.

Service chaining involves steering traffic through multiple services in a specific order. The traffic may be steered through an overlay network including an encapsulation of the packet to forward it to appropriate service nodes. The services in the chain are typically of two types agent full services and agent less services. Agent full services host an embedded agent owned by a network infrastructure provider to abstract the underlying network details in inserting services. The embedded agent exposes application programming interfaces APIs to the services to enable interaction with the underlying network infrastructure for service insertion including communication of metadata to the services and utilizing advanced infrastructure capabilities e.g. offloads . Agent less services integrate with the underlying infrastructure in their native forms through respective network interfaces. Although agent less services lose the ability to utilize advanced infrastructure capabilities it eases integration of services. Given the benefits of either type of service any service chaining architecture should desirably support both types of service in a service chain. The traffic steering mechanism executes either completely in the network infrastructure or both in the network infrastructure and the agents that execute in the respective service nodes .

Existing service insertion architectures such as vPath support both agent full and agent less services. However typical service chaining includes either agent full services or alternatively agent less services the service chains do not include both agent full and agent less services in the same service chain. In addition the service chains are orchestrated in a centralized fashion in the network infrastructure. The centralized model of service chaining is termed hub n spoke or in and out a network node switch router intercepting and classifying the traffic requiring services acts as the hub while the spokes extend from the central node to the services e.g. via additional switches and routers on an overlay . Service chaining architecture in such schemes are geared primarily for agent full services. Further some service chaining architectures require the services to participate in service forwarding through the embedded agent. A major drawback of the hub n spoke service chaining scheme is performance degradation due to the centralized nature of the architecture. Moreover there does not exist a scheme that chains agent less and agent full services while maintaining the service forwarding solely in the network infrastructure.

Communication system is configured to address these issues and others in offering a system and method for distributed service chaining in a network environment. Embodiments of communication system may facilitate a distributed method of service chaining that chains both agent full and agent less services in the same service chain without participation of services in service forwarding. Each VEM may serve as an originator of respective network service headers NSHs for service overlay . As used herein the term network service header includes a data plane header e.g. metadata added to frames packets. The NSH contains information required for service chaining and metadata added and consumed by SNs and WLs . Examples of metadata include classification information used for policy enforcement and network context for forwarding post service delivery . According to embodiments of communication system each NSH may include a service path identifier identifying the service chain to which a packet belongs and a location of the packet on the service chain which can indicate the service hop NSH aware node to forward the packet on service overlay . The service path identifier and the location of the packet can comprise any suitable text number or combination thereof. In an example embodiment the service path identifier is a 24 bit number and the location may be specified by an 8 bit number.

According to various embodiments a user may configure e.g. provision arrange organize construct etc. the service chains at service controller . Service controller may discover location of service nodes . In some embodiments the service chain may be provisioned by service controller in a port profile at respective vPaths associated with specific workloads that instantiate the service chains thereby binding the service policy including the service chain with the network policy included in the port profile. In other embodiments when service chains are instantiated at classifier VEM associated with the initiating workload service controller may be notified of the service chain instantiation. Service controller may assign a path identifier to each instantiated service chain. Service controller may populate service forwarding table entries indicating the next service hop for respective service chains identified by corresponding path identifiers. Service controller may program service forwarding tables at appropriate VEMs based on service node discovery information.

Merely for illustrative purposes and not as a limitation assume a service chain provisioned at WL as follows WL SN SN SN. In other words a packet originating at WL may be steered to SN serviced accordingly then to SN then to SN and finally returned to WL . VEM may generate an NSH including the Internet Protocol IP or Media Access Control MAC address of VEM at which WL is located as a source address and an IP MAC address of SN as the next service hop. Destination VEM at which SN is located may inspect the NSH and take suitable actions depending on whether SN includes an agent e.g. agent full or does not include an agent e.g. agent less . If SN is agent less VEM may cache the information included in the NSH in a flow table. If SN is agent full the packet may be forwarded to the agent as appropriate.

According to various embodiments after the packet is suitably serviced at SN VEM may intercept the packet and lookup the next service hop. The NSH may be updated to indicate the next service hop as SN rather than WL for example . The packet may be forwarded on service overlay to the next service hop where VEM may intercept the packet and proceed appropriately.

Embodiments of communication system may decentralize the service forwarding decisions with each VEM making appropriate next service hop decisions. Embodiments of communication system may facilitate termination or re origination as appropriate of service overlay with seamless integration of agent full and agent less services. Any kind of network e.g. enterprise service provider etc. may implement embodiments of communication system as appropriate.

Further the service forwarding decision at any of VEMs may be limited to the next hop of the service chain rather than all hops of the service chain. For example the next service hop decision at the classifier VEM e.g. VEM may determine the first SN e.g. SN in the service chain and may send the traffic on service overlay to the first SN e.g. SN . The NSH may be written to indicate the source as WL and next service hop as SN . The service VEM e.g. VEM at SN may simply allow the traffic on service overlay to pass through to SN .

After the service is delivered at the SN e.g. SN the SN e.g. SN may simply send the serviced traffic back on service overlay to where traffic came from e.g. WL or VEM . For example SN may write the NSH to indicate the source as SN and destination as VEM . The return traffic may be intercepted by the service VEM e.g. VEM next or closest to the SN e.g. SN . The intercepting service VEM e.g. VEM may make the service forwarding decision determining the next SN e.g. SN in the service chain and re originating the NSH to the next SN e.g. SN . The NSH may be rewritten to indicate the source as VEM and destination as SN .

The process of service forwarding can continue from VEMs to SNs until all SNs in the service chain deliver services. The forwarding decision may be based on the presence or absence of an agent at SN . For example assume merely for example purposes and not as a limitation that SN is agent less VEM may notice that NSH indicates a destination of SN which is agent less. VEM may terminate service overlay and perform translation to send the traffic to SN . After SN delivers the service it may simply send the original payload packet out which may be received by VEM for translation back onto service overlay . VEM may intercept SN s traffic and determine the next service hop as SN which for example purposes may be agent full and on the same VEM as SN . VEM may re originate NSH to SN . After the service is applied SN may simply re originate the NSH back to VEM .

The service VEM e.g. VEM intercepting the return traffic from the last SN e.g. SN in the service chain may determine the end of service chain. If the last VEM e.g. VEM is capable of forwarding the payload traffic it may simply forward it on the underlay network e.g. network . If on the other hand the payload traffic can only be forwarded by classifier VEM e.g. VEM the NSH may be re originated by the last VEM e.g. VEM back to the classifier VEM e.g. VEM . VEM may receive the serviced packet on service overlay and may determine that all services on the service chain are delivered. VEM may forward the original payload packet serviced by the service chain natively or on the underlay network e.g. network as appropriate.

In some embodiments for example as in a service provider network environment that represents a non homogeneous environment the network infrastructure including DVS may be owned and operated by the provider WLs may belong to the tenants of the provider and SNs may be hosted by the provider on behalf of the tenant or hosted by the tenants themselves or by other third parties. In some embodiments for example wherein the service provider hosts SNs on behalf of the tenant NSH of service overlay may use the IP MAC addresses of VEMs and SNs for source and destination addresses.

In some other embodiments for example wherein the tenants host SNs traffic over service overlay may be forwarded in two hops 1 provider overlay and 2 tenant overlay. In provider overlay origination and termination of service overlay may be implemented within the network infrastructure including DVS and associated VEMs . Hence the end points of the provider overlay may comprise VEMs . For example turning to the example of service chain one of the provider overlay hops may stretch from VEM to VEM . In tenant overlay the origination may occur in the network infrastructure and the termination may be a local destination. Continuing the example of service chain one of the tenant overlay hops may stretch from VEM to SN . The tenant overlay source address can be local to respective VEMs e.g. VEM allowing for overcoming the tenant and provider address domain packet forwarding issues across the service provider network.

Embodiments of communication system can provide a method to decentralize the service forwarding decisions across the network infrastructure enabling overlays to be re originated within the network infrastructure while allowing the agent full service nodes to be agnostic to service chaining. Embodiments of communication system can enable service chains that can have agent full as well as agent less services as part of the same service chain. Embodiments of communication system can also provide a method for maintaining the provider and tenant address space separation while allowing the service chains to cross the provider tenant network boundary.

According to various embodiments of communication system service chains can be realized in a distributed fashion across the network infrastructure without a centralized bottleneck while keeping the agent full services agnostic to service forwarding decisions. Service chains may contain both agent full and agent less services while being agnostic to service forwarding decisions. Service chaining performance may stay constant and may not degrade with the number of services in the service chain. Service chains may involve services that are hosted by either the provider or the tenant without departing from the scope of the embodiments providing a clean service chaining implementation in both enterprise and service provider environments among other network environments .

Turning to the infrastructure of communication system the network topology can include any number of servers virtual machines switches including distributed virtual switches routers and other nodes inter connected to form a large and complex network. A node may be any electronic device client server peer service application or other object capable of sending receiving or forwarding information over communications channels in a network. Elements of may be coupled to one another through one or more interfaces employing any suitable connection wired or wireless which provides a viable pathway for electronic communications. Additionally any one or more of these elements may be combined or removed from the architecture based on particular configuration needs. Communication system may include a configuration capable of TCP IP communications for the electronic transmission or reception of data packets in a network. Communication system may also operate in conjunction with a User Datagram Protocol Internet Protocol UDP IP or any other suitable protocol where appropriate and based on particular needs. In addition gateways routers switches and any other suitable nodes physical or virtual may be used to facilitate electronic communication between various nodes in the network.

Note that the numerical and letter designations assigned to the elements of do not connote any type of hierarchy the designations are arbitrary and have been used for purposes of teaching only. Such designations should not be construed in any way to limit their capabilities functionalities or applications in the potential environments that may benefit from the features of communication system . It should be understood that communication system shown in is simplified for ease of illustration.

The example network environment may be configured over a physical infrastructure that may include one or more networks and further may be configured in any form including but not limited to local area networks LANs wireless local area networks WLANs VLANs metropolitan area networks MANs wide area networks WANs VPNs Intranet Extranet any other appropriate architecture or system or any combination thereof that facilitates communications in a network. In some embodiments a communication link may represent any electronic link supporting a LAN environment such as for example cable Ethernet wireless technologies e.g. IEEE 802.11x ATM fiber optics etc. or any suitable combination thereof. In other embodiments communication links may represent a remote connection through any appropriate medium e.g. digital subscriber lines DSL telephone lines T1 lines T3 lines wireless satellite fiber optics cable Ethernet etc. or any combination thereof and or through any additional networks such as a wide area networks e.g. the Internet .

In various embodiments services nodes represent a specific functionality e.g. provision of a specific service and may be embodied in one or more physical appliances. For example some services nodes e.g. service nodes and may be provided in a common network element whereas some other service nodes e.g. and may be stand alone network elements that are configured to exclusively provide the respective specific service. Note that although only five service nodes are illustrated in any number of service nodes and corresponding services may be provided within the broad scope of the embodiments.

In various embodiments workload may be separate computing devices running applications e.g. server client applications in client server network architecture . In other embodiments workload may be separate virtual machines on the same or different computing devices e.g. server blades in a data center . In some embodiments workload may include server blades configured in one or more chassis. DVS may include physical and virtual switches and can include any suitable network element capable of receiving packets and forwarding packets appropriately in a network environment. Any number of workload may be active within network within the broad scope of the embodiments.

VEMs can include virtual interfaces e.g. virtual equivalent of physical network access ports that maintain network configuration attributes security and statistics across mobility events and may be dynamically provisioned within virtualized networks based on network policies stored in DVS as a result of VM provisioning operations by a hypervisor management layer. VEMs may follow virtual network interface cards vNICs when VMs move from one physical server to another. The movement can be performed while maintaining port configuration and state including NetFlow port statistics and any Switched Port Analyzer SPAN session. By virtualizing the network access port with DPs transparent mobility of VMs across different physical servers and different physical access layer switches within an enterprise network may be possible. vPaths may provide intelligent traffic steering e.g. flow classification and redirection and fast path offload for policy enforcement of flows. vPaths may be configured for multi tenancy providing traffic steering and fast path offload on a per tenant basis. Although only three vPaths are illustrated in any number of vPaths may be provided within the broad scope of the embodiments of communication system .

In one example embodiment service controller may be an application coupled with a management module e.g. virtual supervisor module VSM of DVS . In another embodiment service controller may be a stand alone application e.g. provisioned in a suitable network element separate and distinct from DVS and communicating therewith through appropriate communication links. In some embodiments service controller may be provisioned in the same local area network as workload . In other embodiments service controller may be provisioned in a different local area network separate and remote from workload . Service controller may include a graphical user interface GUI based controller or a CLI based controller or a combination thereof.

Turning to is a simplified block diagram illustrating example details that may be associated with an embodiment of communication system . An example service chain is illustrated in the figure starting at WL proceeding to SN then to SN then to SN then to SN and lastly to WL WL SN SN SN SN WL. Service controller may program service forwarding tables at respective VEMs . Each service forwarding table may include a path identifier ID and a next service hop information. Some SNs may include an agent . For example SN may include agent . Note that the configuration described herein is merely for example purposes and is not intended to be a limitation of embodiments of communication system .

The packet from WL may be encapsulated with the NSH at classifier VEM based on information in service forwarding table . The packet may be forwarded on service overlay to the next service hop namely SN . VEM may decapsulate the NSH and forward the packet through interface to SN which may be agent less. SN may service the packet and rewrite the packet header to indicate the destination address of VEM and send the packet out through interface . VEM may intercept the packet and re originate the NSH based on information in service forwarding table . The destination is written to be the IP MAC address of SN . VEM may forward the packet to SN transparently e.g. without decapsulation of the NSH via interface as SN includes agent . After being serviced the packet may be returned to VEM via interface . VEM may intercept the packet and re originate the NSH based on information in service forwarding table . The destination may be written to be the IP MAC address of SN and the packet forwarded to VEM on service overlay .

VEM may decapsulate the packet and forward the packet to SN over interface . SN may service the packet appropriately and attempt to return it to VEM over interface . VEM may intercept the packet and re originate the NSH based on information in service forwarding table . The destination may be written to be the IP MAC address of SN and the packet forwarded to SN over interface . SN may service the packet appropriately and attempt to return it to VEM over interface . VEM may intercept the packet and re originate the NSH based on information in service forwarding table . In some embodiments the destination may be written to be the IP MAC address of WL and the packet forwarded to WL over network or the appropriate interface. In other embodiments the destination may be written to be the IP MAC address of classifier VEM and the packet forwarded to WL on service overlay as appropriate.

Turning to is a simplified block diagram illustrating example details that may be associated with an embodiment of communication system . Data traffic may be communicated on underlay network and service traffic e.g. packets subject to being serviced at various SNs may be communicated on service overlay . An example data traffic path may comprise communication between WL and WL and the service traffic path may comprise communication from WL to SN to SN to SN and back to WL WL SN SN SN WL. Assume merely for example purposes and not as a limitation that SN and SN are agent full including respective agents and and SN is agent less.

Service controller may configure multiple paths e.g. a forward path and a return path on each service forwarding table . Each path may indicate the service path identifier that indicates e.g. identifies the specific service chain a location on the service chain indicated by a service index and a next service node on the service chain. For example at service forwarding table on VEM a first path may be configured as P seq SN indicating service chain identified by service path identifier P with a service index seq corresponding to the location of the packet on service chain P and a next service node of SN e.g. when the packet arrives at VEM on service chain P with service index seq send it to SN . A second path at service forwarding table on VEM may be configured as P seq end indicating the service chain identified by service path identifier P with a service index seq corresponding to the end of the return service traffic path at VEM e.g. when the packet arrives at VEM on service chain P with service index seq end the service path .

At service forwarding table on VEM the first path may be configured as P seq SN indicating the service chain identified by service path identifier P with a service index seq corresponding to the location seq of the packet on the service chain and next service node of SN e.g. when the packet arrives at VEM on service chain P with service index seq send it to SN . The second path at service forwarding table on VEM may be configured as P seq SN indicating the service chain identified by service path identifier P with a service index seq corresponding to the location seq of the packet on the service chain and the next service node of SN e.g. when the packet arrives at VEM on service chain P with service index seq send it to SN .

At service forwarding table on VEM the first path may be configured as P seq SN indicating the service chain identified by service path identifier P with a service index seq corresponding to the location seq of the packet on the service chain and the next service node of SN e.g. when the packet arrives at VEM on service chain P with service index seq send it to SN . The second path at service forwarding table on VEM may be configured as P seq SN indicating the service chain identified by service path identifier P with a service index seq corresponding to the location seq of the packet on the service chain and the next service node of SN e.g. when the packet arrives at VEM on service chain P with service index seq send it to SN . The third path at service forwarding table on VEM may be configured as P seq VEM indicating the service chain identified by service path identifier P with a service index seq corresponding to the location seq of the packet on the service chain and the next service node of VEM e.g. when the packet arrives at VEM on path P with service index seq send it to VEM .

Turning to is a simplified block diagram illustrating details of an example VEM according to an embodiment of communication system . An incoming packet may include NSH a transport header and a payload . A receive module at VEM may receive packet . A decapsulate module may decapsulate the transport header and NSH and inspect the contents thereof. An encapsulate module may lookup service forwarding table and determine the next service hop to send packet . Service forwarding table may be programmed by service controller with appropriate entries.

If packet is to be sent to an agent full service node for example which includes agent encapsulate module may encapsulate packet with another NSH and retain transport header and payload to generate outgoing packet . If packet is to be sent to an agent less service node encapsulate module may remove transport header and generate outgoing packet without NSH . A transmit module may transmit outgoing packet to appropriate SN . A processor and a memory element may facilitate the operations described herein.

Turning to is a simplified block diagram illustrating an example service forwarding table entry according to an embodiment of communication system . Example service forwarding table entry may include a field comprising the service path ID and a service index. Field may include the next service node on the path identified by the service path ID and the service index of field .

Turning to is a simplified block diagram illustrating an example service overlay packet format according to an embodiment of communication system . Example service overlay packet format may include NSH transport header and payload . NSH may comprise four 32 bit context headers e.g. service shared context service platform context network shared context and network platform context and an additional header comprising the 24 bit service path identifier and 8 bit service index.

Turning to is a simplified flow diagram illustrating example operations that may be associated with an embodiment of communication system . At service controller may discover locations of service nodes in DVS . At when service chains are instantiated at classifier VEMs e.g. at WLs service controller may be notified of the service chain instantiation. At service controller may assign respective path identifiers to each service chain. At service controller may populate service forwarding tables with appropriate entries. At service controller may program e.g. install implement execute etc. service forwarding tables at respective VEMs based on service node discovery information.

Turning to is a simplified flow diagram illustrating example operations that may be associated with an embodiment of communication system . At a determination may be made at VEM whether incoming traffic is on service overlay for example the determination may be informed by the presence or absence of NSH . If traffic is on service overlay at the path identifier and service index information may be obtained from NSH . At service forwarding table may be consulted to determine next service node or tuple . At a determination may be made whether next service node is local to VEM . If next service node is local to VEM a determination may be made at whether service node is agent less. If service node is agent less at traffic may be forwarded natively e.g. without NSH with service header metadata mapped to appropriate VLAN tags. If service node is agent full at another NSH may be imposed with appropriate path identifier and service index as determined from service forwarding table . At transport header with appropriate source and destination may be imposed to forward packet to next service node and the packet frame may be appropriately forwarded. Turning back to if next service node is not local to VEM the operations may step to and continue thereafter.

Turning back to if the traffic is not on overlay a determination may be made at whether the traffic is from an agent less service node. If not indicating that the traffic is from WL at the traffic may be appropriately classified and the service path may be determined e.g. service path identifier and service index identified . The operations may step to and continue thereafter. On the other hand at if the traffic is from an agent less service node at the flow may be looked up in appropriate tables and the service path identifier and service index may be determined. The operations may step to and continue thereafter.

Note that in this Specification references to various features e.g. elements structures modules components steps operations characteristics etc. included in one embodiment example embodiment an embodiment another embodiment some embodiments various embodiments other embodiments alternative embodiment and the like are intended to mean that any such features are included in one or more embodiments of the present disclosure but may or may not necessarily be combined in the same embodiments. Note also that an application as used herein this Specification can be inclusive of an executable file comprising instructions that can be understood and processed on a computer and may further include library modules loaded during execution object files system files hardware logic software logic or any other executable modules.

In example implementations at least some portions of the activities outlined herein may be implemented in software in for example DVS . In some embodiments one or more of these features may be implemented in hardware provided external to these elements or consolidated in any appropriate manner to achieve the intended functionality. The various network elements e.g. DVS service controller may include software or reciprocating software that can coordinate in order to achieve the operations as outlined herein. In still other embodiments these elements may include any suitable algorithms hardware software components modules interfaces or objects that facilitate the operations thereof.

Furthermore DVS described and shown herein and or their associated structures may also include suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment. Additionally some of the processors and memory elements associated with the various nodes may be removed or otherwise consolidated such that a single processor and a single memory element are responsible for certain activities. In a general sense the arrangements depicted in the FIGURES may be more logical in their representations whereas a physical architecture may include various permutations combinations and or hybrids of these elements. It is imperative to note that countless possible design configurations can be used to achieve the operational objectives outlined here. Accordingly the associated infrastructure has a myriad of substitute arrangements design choices device possibilities hardware configurations software implementations equipment options etc.

In some of example embodiments one or more memory elements e.g. memory element can store data used for the operations described herein. This includes the memory element being able to store instructions e.g. software logic code etc. in non transitory media such that the instructions are executed to carry out the activities described in this Specification. A processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example processors e.g. processor could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by a processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM an ASIC that includes digital logic software code electronic instructions flash memory optical disks CD ROMs DVD ROMs magnetic or optical cards other types of machine readable mediums suitable for storing electronic instructions or any suitable combination thereof.

These devices may further keep information in any suitable type of non transitory storage medium e.g. random access memory RAM read only memory ROM field programmable gate array FPGA erasable programmable read only memory EPROM electrically erasable programmable ROM EEPROM etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. The information being tracked sent received or stored in communication system could be provided in any database register table cache queue control list or storage structure based on particular needs and implementations all of which could be referenced in any suitable timeframe. Any of the memory items discussed herein should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. 

It is also important to note that the operations and steps described with reference to the preceding FIGURES illustrate only some of the possible scenarios that may be executed by or within the system. Some of these operations may be deleted or removed where appropriate or these steps may be modified or changed considerably without departing from the scope of the discussed concepts. In addition the timing of these operations may be altered considerably and still achieve the results taught in this disclosure. The preceding operational flows have been offered for purposes of example and discussion. Substantial flexibility is provided by the system in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the discussed concepts.

Although the present disclosure has been described in detail with reference to particular arrangements and configurations these example configurations and arrangements may be changed significantly without departing from the scope of the present disclosure. For example although the present disclosure has been described with reference to particular communication exchanges involving certain network access and protocols communication system may be applicable to other exchanges or routing protocols. Moreover although communication system has been illustrated with reference to particular elements and operations that facilitate the communication process these elements and operations may be replaced by any suitable architecture or process that achieves the intended functionality of communication system .

Numerous other changes substitutions variations alterations and modifications may be ascertained to one skilled in the art and it is intended that the present disclosure encompass all such changes substitutions variations alterations and modifications as falling within the scope of the appended claims. In order to assist the United States Patent and Trademark Office USPTO and additionally any readers of any patent issued on this application in interpreting the claims appended hereto Applicant wishes to note that the Applicant a does not intend any of the appended claims to invoke paragraph six 6 of 35 U.S.C. section 112 as it exists on the date of the filing hereof unless the words means for or step for are specifically used in the particular claims and b does not intend by any statement in the specification to limit this disclosure in any way that is not otherwise reflected in the appended claims.

