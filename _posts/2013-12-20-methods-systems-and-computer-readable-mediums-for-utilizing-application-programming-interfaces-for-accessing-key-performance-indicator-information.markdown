---

title: Methods, systems, and computer readable mediums for utilizing application programming interfaces for accessing key performance indicator information
abstract: Methods, systems, and computer readable mediums for implementing an attribute into a network system are disclosed. According to one method, the method includes collecting raw data from a network node and defining a performance indicator definition associated with the collected raw data. The method can also include integrating the performance indicator definition into an attribute monitoring entity, and injecting the entity into a repository during system runtime.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09521052&OS=09521052&RS=09521052
owner: VCE Company, LLC
number: 09521052
owner_city: Richardson
owner_country: US
publication_date: 20131220
---
The subject matter described herein relates to monitoring network system performance. More specifically the subject matter relates to methods systems and computer readable mediums for accessing key performance indicator information via application programming interfaces API .

cloud networks and other industries e.g. telecommunication finance sales marketing services etc. for monitoring system performance. KPIs can be scattered at different granularities hierarchies and categories of managed system objects. Collecting and managing KPI data can be difficult because a network system can be large in size with numerous tiers and sections making data collection a challenging task. Furthermore preserving and presenting the data to consumers is an equally daunting task. In addition introducing new KPI definitions or updating the current KPIs within the network system requires shutting down the system causing service delays and high maintenance costs. As such complex and big cloud networks are difficult and expensive to monitor and maintain due to the difficulty in managing the KPIs.

In accordance with this disclosure methods systems and computer readable mediums for implementing an attribute monitoring entity into a network system are disclosed. According to one embodiment the subject matter described herein can comprise a method for implementing an attribute monitoring entity into a network system. The method can include collecting raw data from a network node defining a performance indicator definition associated with the collected raw data integrating the performance indicator definition into an attribute monitoring entity and injecting the entity into a repository during system runtime.

The subject matter described herein discloses methods systems and computer readable mediums for accessing key performance indicator information. Although the subject matter can be used to implement metadata and KPIs as described for the examples herein other software entities associated with a computer network may also be implemented without departing from the scope of the disclosed subject matter. As used herein a KPI may be a software entity utilized by a network system e.g. system with both hardware and software components for collecting and monitoring raw data e.g. system performance data .

In some embodiments raw data can be collected from network nodes associated with a database system. As used herein the term node refers to a physical computing platform including one or more processors and memory. The collected systems data can be processed by a data management module configured to generate an attribute monitoring entity AME for the database. For example the generated attribute monitoring entity can comprise performance indicators configured to monitor specific performance aspects of the database. The attribute monitoring entity can be injected into the data during run time thus allowing dynamic modeling and updating of the performance indicators. As used herein injecting refers to adding incorporating into inserting or modifying to include an entity into a repository.

Reference will now be made in detail to exemplary embodiments of the subject matter described herein examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In some embodiments hardware based units can be communicatively connected to database system and configured to provide raw data such as system performance data to database system . For example hardware based units can be configured to collect and process raw data from network nodes CISs and provide processed raw data to database system . As illustrated in hardware based units can comprise a data management modules configured to collect and process the raw data. For example data management modules can be Central Vblock Systems Management CVM modules which can comprise model collector modules configured to collect raw data from a data stream or a network node. It should be noted that other data sources can also be conveniently utilized to provide raw data to data management module as the example used here is provided to explain an example of the subject matter and is not intended as a limitation.

In some embodiments data management module can comprise a key performance indicator KPI collector e.g. a KPI collection module configured to process the raw data. KPI collector can be configured to receive raw data from model collectors and process the received raw data as needed. For example model collector can provide to KPI collector raw data about the amount of storage space available on a converged infrastructure system CIS such as a Vblock Systems manufactured by VCE Company LLC of Richardson Tex. Upon receiving such information KPI collector can calculate a key performance indicator related to the remaining raw capacity on the CIS by applying a mathematical formula to the received raw data. In another example a KPI related to a remaining raw space percentage of the CIS can be defined by dividing the received raw data by the total raw storage space available on CIS and then multiply the resulting ratio by one hundred. Whereas used herein the term remaining raw capacity can refer to the amount of storage space available on CIS . In other embodiments KPI collector can be configured to calculate the total bandwidth used over a specified period of time or the average count of unavailable nodes. Once processed data can be inserted into a repository or database associated with database system and will be available for remote access.

In some embodiments KPI collector can collect raw data from one or more CISs e.g. CISs and or other data feeds. A KPI aggregation engine not shown can be associated with data management module and configured to aggregate KPI values collected from the various data feeds. The aggregation of KPI values can be performed based on predefined metrics and or aggregation functions such as calculating the average maximum minimum sum number of occurrences or standard deviation of the collected KPI values. For example for an order handling process in which order approval could be manual or automatic a user can define an instance level metric named ManualOrderApprovalTime . This metric can be configured to calculate the time for each manual order approval by subtracting the time stamp of the event indicating that manual approval was required from the time stamp of the order approval or rejection . The user can then define a KPI that calculates the average value of these metrics using a target of 48 hours and optionally ranges for unacceptable acceptable and excellent manual order approval times. In other embodiments data management module can also include a KPI rollup engine not shown configured to roll up KPI data to different time granularities. For example KPI data collected on hourly basis can be aggregated and rolled as daily KPI data by the KPI rollup engine. Similarly KPI rollup engine can also be configured to rollup daily KPI data into weekly data and roll up weekly data into monthly data and so forth. In addition hardware based unit can also include one or more system libraries SLIBs e.g. SLIBs configured to provide operation procedures to the database hardware.

In some embodiments raw data from previously unknown data sources can be collected upon a user s request. For example a new metric available capacity previously undefined to a network system e.g. no model or driver available within the system for the new metric can be integrated into a key performance indicator upon a user s request. The new metric and the KPI can be inserted into the network system as part of a metadata entity. In such a scenario the network system can be configured to collect data from data sources previously unknown to the system but requested by the user such as a storage array that is not a part of the system and process the collected data as instructed by the metadata. As such via the insertion of metadata entity the network system is configured to not only collecting raw data for metrics that are known to the system but also capable of mining new data from previously unknown data sources.

In some embodiments a key performance indicator can be defined within a metadata entity. As used herein a metadata entity can be a software entity containing at least one KPI definition as illustrated in . For example a user can define within a metadata entity a system attribute to monitor raw data to collect and network nodes to be collected. Furthermore specific data processing configurations such as mathematical formulas can be implemented in the metadata entity to define a new key performance indicator. For example a metadata entity can direct a network system to initially collect raw data about remaining storage spaces from a network node e.g. CIS . The metadata entity can define a KPI definition to monitor the network node s free storage space percentage. The KPI definition can comprise a mathematical formula that can instruct the system to divide the collected raw data value by the entire amount of storage space available on the network node and then multiply that value by one hundred.

In some embodiments the KPI definition can also comprise additional information such as a KPI identification ID number indicating the functions the KPI is designed to perform. Furthermore the metadata entity can be injected into database system during run time and the system can be configured to monitor the KPI definition in a manner defined in the metadata entity. This configuration can advantageously allow a user to dynamically create access and modify data on the fly because a metadata entity can be inserted or injected while a system is running. Conventionally a database system will need to create one or more database tables in order to monitor a system attribute e.g. KPI . As an example in order to monitor power consumption associated with a network node the database system will need to create a table as illustrated in Table 1 below to collect and store power consumption data. The created database table can include a column designated moname which can store data utilized to identify a system component from which power consumption data may be collected. The database table of Table 1 can also include a column designated Consumed Power for storing the collected power consumption data.

However in the event a user wishes to monitor central processor unit CPU usage associated with the same network node one or more columns would have to be added to the database table for storing both the raw data related to CPU usage and a computed CPU usage value. Notably adding columns to an existing database table can require turning off the services e.g. turning off services to other applications such as closing one or more active sessions and connections of the database system in order to modify one or more parameters e.g. change parameters values to expand the database table associated with the database system schema. As used herein the terms database system schema or schema refer to a set of definitions and parameters described in a formal language supported by the database management system designed to describe the entire configuration of the database system including tables interdependencies indexes and the like associated with the respective database system. In addition in the event that a user wishes to collect data associated with a new system attribute from a new network component an entirely new database table comprising new columns would need to be created for accommodating the collection and storage of the new system attribute data. The creation of a new database table will similarly require turning off the services of the database system to update and or modify the database system schema.

In some embodiments one aspect of the subject matter presented herein is configured to allow a database system to collect and store new system attribute data e.g. KPIs without turning off the services of the database system. In some embodiments an attribute monitoring entity e.g. metadata comprising one or more KPI definitions can be injected into a repository associated with database system . The attribute monitoring entity can be utilized by database system to collect and store the new system attribute data from respective network nodes. For example exemplary KPI definitions as illustrated in can include one or more fields indicating which network node to collect attribute data from e.g. componentTagname and or how to process the collected data e.g. formula measureType aggregationType and the like . Database system can instruct e.g. via an API KPI service modules e.g. data management module to collect and process system attribute data as defined in the KPI definition. Furthermore database system can store new system attribute data as defined in the attribute monitoring entity without modifying existing database tables. In some embodiments the process data can be designated with a numerical identifier and a database table comprising at least one generic column and associated with the repository can be utilized to store the processed data according to the numerical identifier. For example an exemplary KPI definition can include a field designated kpiid that is configured to identify the system attribute data being collected. For example Consumed Power can be designated with number 34 and CPU power consumption can be designated with number 44 . The KPI definition can also include a field designated value designed to store system attribute values in a generic fashion e.g. numerical values . In this scenario system attribute data can be stored in a database table comprising of generic columns. As such different types of system attribute data can be saved to the same database table because the table columns can accept any generic data value. Therefore because the database table does not need to be altered to accommodate new system attribute data no schema change is required and as such no system shutdown is required. Thus a user seeking to monitor new system attribute can instead write code e.g. new KPI definitions without a fixed schema for database system . Furthermore this configuration can lower the overall system maintenance cost by auto aging stored data. A metadata entity inserted or injected into the data can comprise a timing parameter configured to expire and phase out data after certain period of time. When the predefined time duration has elapsed the KPI data can be automatically removed from the database. Furthermore additional capacity can be conveniently extended with the configuration as illustrated. For example when demand for system capacity increases a new hardware based unit including at least one data management module can be readily connected to database system . It should be noted that integrating a KPI definition into a metadata entity as disclosed herein is to explain an example and is not intended as limitation as the general scope of the disclosed subject matter can be conveniently applied to create other software entities for attribute monitoring purposes.

In some embodiments this KPI definition can be further defined by an alias freeRaw and a label Free Raw and a detailed description of the KPI within a description field . Furthermore a mathematical formula can be incorporated to instruct a network system to process the received raw data. One exemplary mathematical formula may comprise remainingRawCapacity 1073741824.0 remainingRawCapacity GB 

As illustrated in exemplary mathematical formula remainingRawCapacity can represent the collected remaining raw capacity value and the value can be divided by the number of bytes in a GigaByte 1073741824 bytes to convert the raw capacity value into a GB format accompanied by a displaying unit of GB as defined in KPI definition .

The KPI definition can also indicate to the system that the mathematical operation will require the network system to perform a COUNT type measurement a SUM type aggregation and or an AVG average type rollup.

At step performance indicators such as KPI definitions can be defined based on the received raw data. In some embodiments the KPI collector can calculate a key performance indicator by applying a mathematical formula to the received raw data. For example a KPI related to remaining raw space percentage of the CIS can be defined by dividing the received raw data by the total raw storage space available on the CIS and then multiply the resulting ratio value by one hundred. In yet another example KPI collector can be configured to calculate the total bandwidth used over a specified period of time or the average count of Unavailable nodes.

At step the performance indicator can be integrated into an attribute monitoring entity. For example an attribute monitoring entity such as a metadata entity can be configured to comprise at least one KPI definition. The metadata entity can also be configured to allow a user to adjust KPI definition parameters and or insert new KPI definitions.

At step the attribute monitoring entity can be injected into a repository associated with a database system. In some embodiments an attribute monitoring entity e.g. metadata includes one or more KPI definitions. A KPI definition may include parameters identifying the type of raw data that is to be collected where to collect the raw data how to process e.g. what mathematical formula to apply the collected raw data and the like. In some embodiments a new KPI definition can be integrated into metadata to instruct the database system to collect and process new raw data from new data sources in order to generate new KPI information. A user can instruct the database system to collect new KPI information by creating e.g. write codes for and inserting metadata with a new KPI definition into the database system e.g. in some embodiments injecting metadata into a database schema . As such the entire network system would not need to be shut down to update the database schema for the database system to collect new raw data. Rather the user can dynamically insert a new attribute monitoring entity e.g. metadata into the database schema with no system downtime.

As indicated above the subject matter described herein can be implemented in software in combination with hardware and or firmware. For example the subject matter described herein can be implemented in software executed by a processor. In one exemplary implementation the subject matter described herein can be implemented using a computer readable medium having stored thereon computer executable instructions that when executed by a processor of a computer control the computer to perform steps. Exemplary computer readable mediums suitable for implementing the subject matter described herein include non transitory devices such as disk memory devices chip memory devices programmable logic devices and application specific integrated circuits. In addition a computer readable medium that implements the subject matter described herein can be located on a single device or computing platform or can be distributed across multiple devices or computing platforms. As used in the present disclosure the term module refers to hardware firmware or software in combination with hardware and or firmware for implementing features described herein.

While the systems and methods have been described herein in reference to specific aspects features and illustrative embodiments it will be appreciated that the utility of the subject matter is not thus limited but rather extends to and encompasses numerous other variations modifications and alternative embodiments as will suggest themselves to those of ordinary skill in the field of the present subject matter based on the disclosure herein. Various combinations and sub combinations of the structures and features described herein are contemplated and will be apparent to a skilled person having knowledge of this disclosure. Any of the various features and elements as disclosed herein may be combined with one or more other disclosed features and elements unless indicated to the contrary herein. Correspondingly the subject matter as hereinafter claimed is intended to be broadly construed and interpreted as including all such variations modifications and alternative embodiments within its scope and including equivalents of the claims.

