---

title: Mechanism to dereference layered URI in web browsers using JavaScript
abstract: An apparatus comprising a processor configured to compose a plurality of protocol stacks, and dereference a layered URI using at least one of the plurality of protocol stacks. Also, a computer program product comprising computer executable instructions stored on a non-transitory medium that when executed by a processor cause the processor to perform the following receive a layered URI, and call a URI dereference extension, wherein the dereference extension is configured to construct a protocol stack, wherein the protocol stack comprises a first connector, a second connector, and a binder, and wherein the first and second connectors are selected from a plurality of connectors based on the URI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407682&OS=09407682&RS=09407682
owner: Futurewei Technologies, inc.
number: 09407682
owner_city: Plano
owner_country: US
publication_date: 20130128
---
Web browsers are increasingly used as platforms for two way client server and peer to peer architecture communications both in traditional electronic documents and increasingly in audio video communications. Such communications may use layered Uniform Resource Identifiers URIs employing a variety of protocol stacks e.g. Transmission Control Protocol TCP User Data Protocol UDP Hypertext Transfer Protocol HTTP Stream Control Transmission Protocol SCTP WebSocket WS Datagram Congestion Control Protocol DCCP etc.

When a link containing a conventional URI is clicked browsers are instructed to retrieve the representation of the resource at the URI. However layered URIs may be problematic for certain web applications. For example a HyperText Markup Language HTML webpage may contain the following multi level URI in a link according to the following code This is my camera. The first level of this URI is an HTTP level and the second level is an Extensible Messaging and Presence Protocol XMPP level. If the executing browser does not inherently support XMPP when the link is clicked the browser may not recognize the referenced authority xmpp bob example.com e.g. because the XMPP library is defined in JavaScript. Consequently the browser may not know the association between the authority and the XMPP library. Browsers generally cannot submit forms to URIs without knowing how to contact the authority of the URI. As the result HTTP requests may not be invokable from built in HTML interactions existing in the browser. Rather web applications may have to write their own code to handle all such URIs in HTML pages e.g. to dereference URI and submit forms. This may create an extra burden on developers for using protocol bindings.

The various communications protocol stacks are generally hidden from web applications as no standardized JavaScript Application Programming Interfaces APIs are defined for them. It has historically been resource prohibitive for web browsers to support all such combinations concurrently. Consequently web developers have generally had to either a wait for browsers to implement support for such protocols which may lead to increased web browser footprints or b write JavaScript to take over hyperlink interactions from the web browsers which may increase JavaScript size and thereby reduces performance . The ability to use a layered URI may provide certain flexibility to web developers e.g. by permitting innovation while avoiding interoperability problems.

In one aspect the disclosure includes an apparatus comprising a processor configured to compose a plurality of protocol stacks and dereference a layered URI using at least one of the plurality of protocol stacks.

In another aspect the disclosure includes a computer program product comprising computer executable instructions stored on a non transitory medium that when executed by a processor cause the processor to receive a layered URI and call a URI dereference extension wherein the dereference extension is configured to construct a protocol stack wherein the protocol stack comprises a first connector a second connector and a binder and wherein the first and second connectors are selected from a plurality of connectors based on the URI.

In yet another aspect the disclosure includes a method for dereferencing layered URIs comprising receiving a layered URI at a user agent calling a URI dereference extension constructing a protocol stack using the URI dereference extension wherein the protocol stack comprises a first connector a second connector and a binder wherein the first connector and the second connector are instantiated based on the URI and wherein the binder is instantiated based on the first connector and the second connector dereferencing the URI with the URI dereference extension and changing at least one state of the user agent using the dereferenced URI.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

The disclosure describes systems and methods to permit web applications to dynamically dereference layered URIs in web browsers using JavaScript without pre composed protocol stacks e.g. by permitting web browsers to dynamically assemble protocol stacks from the JavaScript to access the resources identified by the layered URIs. Using the disclosed systems and methods may reduce the web browser footprint since only core transport stacks require implementation may reduce JavaScript code size since only message formatting is required may improve interoperability and performance since web applications may mix and match protocols at runtime and may permit web applications to experiment with new protocols and architectures using JavaScript without changing browsers.

Connectors and binders may be created and registered with a user agent using JavaScript. Techniques for creating and registering connectors and binders may be apparent to those of skill in the art and may be used separately or in connection with other known techniques. For example one JavaScript snippet may contain an instruction to get an HTTP connector e.g. connector of from a user agent e.g. a browser e.g. var connector1 new HTTPConnector . Another snippet may contain an instruction to implement a second connector e.g. connector of namely by creating a new XMPP client with an XMPP library e.g. loaded into the browser by a remote web server e.g. var xmpp new XMPP talk.google.com . Another snippet may contain an instruction for creating a connector for XMPP in JavaScript e.g. var connector2 new Connector XMPP . Yet another snippet may contain instructions to implement a third connector e.g. connector of namely by creating a WS from a user agent e.g. var socket new websocket . . . and by creating a connector for the WS in JavaScript e.g. var connector3 new Connector socket . Still another snippet may contain an instruction for creating and implementing a first binder e.g. binder of for binding the second and third connectors e.g. var binder12 new Binder connector2 connector3 . Another snippet may contain an instruction for implementing a fourth connector e.g. second complex connector of comprising the first binder e.g. var connector12 new Connector binder12 . Yet another snippet may contain instructions for creating and implementing a second binder e.g. binder of e.g. var binder01 new Binder connector0 connector12 and a new connector e.g. first complex connector of e.g. var connector01 new Connector binder01 . Still another snippet may contain an instruction for informing the user agent of the HTTP XMPP connector e.g. Connectors.register http xmpp connector01 . Since the Connector objects are exchanged between the user agent and User JavaScript the Connector interface should be agreed upon by all browsers and all web applications. For this reason standardization may be desired.

As stated under XMPP generally requires an underlying two way communication protocol. Consequently although not explicitly set out in the URI XMPP may establish the needed two way connection using WS other embodiments may employ alternate protocols. Thus at block an XMPP stanza may be passed by the XMPP connector to the XMPP WS binder of block which at block sends a WS message to the WS connector of block . The WS connector of block may pass a WS message at block to a receiving user having a correspondingly constructed URI dereference extension. Upon receipt of the WS message the XMPP WS binder of block may extract the XMPP stanza of block from the WS message and send it to the XMPP connector of block . Similarly the XMPP connector may extract the HTTP XMPP stanza of block from the XMPP stanza of block and may pass the HTTP XMPP stanza to the HTTP XMPP binder of block . The HTTP XMPP binder may send the HTTP response of block to the HTTP connector of block . The HTTP connector may process the HTTP response and may send the payload data of block to the URI dereference extension of block . At block the DOM may update based on the payload data.

The components described above may be implemented on any general purpose computer component such as a computer or network component with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. illustrates a typical general purpose network component suitable for implementing one or more embodiments of the components disclosed herein. The network component includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM input output I O devices e.g. cameras microphones display screens etc. and network connectivity devices . The processor may be implemented as one or more CPU chips or may be part of one or more application specific integrated circuits ASICs and or digital signal processors DSPs .

The secondary storage is typically comprised of one or more disk drives or erasable programmable ROM EPROM and is used for non volatile storage of data. Secondary storage may be used to store programs that are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 5 percent . . . 50 percent 51 percent 52 percent . . . 95 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. All documents described herein are incorporated herein by reference.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

