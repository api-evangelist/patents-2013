---

title: System and method for communicating with an electronic exchange in an electronic trading environment
abstract: System and methods for a connection proxy server are described. According to an example method described herein, a connection proxy server stores subscription, product tables as well as other downloads that are provided to a client terminal during initialization stage as well as later during a trading session. Upon detecting that a connection between the client terminal and a gateway is lost, the connection proxy maintains a communication session created for the client terminal at the gateway and receives data intended for the client terminal. If the connection is re-established between the client terminal and the gateway during a predetermined period of time, the connection proxy provides the stored data to the client terminal thus avoiding a surge in processing resources at the gateway due to the necessary downloads.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09159097&OS=09159097&RS=09159097
owner: Trading Technologies International, Inc.
number: 09159097
owner_city: Chicago
owner_country: US
publication_date: 20130920
---
The present application is a continuation of U.S. patent application Ser. No. 13 627 232 filed Sep. 26 2012 now U.S. Pat. No. 8 566 456 which is a continuation of U.S. patent application Ser. No. 13 420 678 filed Mar. 15 2012 now U.S. Pat. No. 8 312 149 which is a continuation of U.S. patent application Ser. No. 13 282 137 filed Oct. 26 2011 now U.S. Pat. No. 8 166 182 which is a continuation of U.S. patent application Ser. No. 12 849 251 filed Aug. 3 2010 now U.S. Pat. No. 8 073 958 which is a continuation of U.S. patent application Ser. No. 11 693 312 filed Mar. 29 2007 now U.S. Pat. No. 7 809 841 entitled System and Method for Communicating with an Electronic Exchange in an Electronic Trading Environment the contents of all of which are fully incorporated herein by reference for all purposes.

The present invention is directed towards electronic trading. More specifically the present invention is directed to tools for an improved remote connection in an electronic trading environment.

Electronic trading is generally based on a host exchange one or more computer networks and client devices. Subscribing traders are connected to an exchange s electronic trading platform by way of communication links to facilitate real time electronic messaging between themselves and the exchanges. The electronic trading platform includes at least one electronic market which is at the center of the trading system and handles the matching of bids and offers placed by the traders for that market. The electronic messaging includes market information that is distributed from the electronic market to the traders via an electronic data feed. Once the traders receive the market information it may be displayed to them on their trading screens. Upon viewing the information traders can take certain actions including the actions of sending buy or sell orders to the electronic market adjusting existing orders deleting orders or otherwise managing orders. Traders may also use software tools on their client devices to automate these and additional actions.

Although the types of market information published by an electronic exchange may differ from market to market there are generally some standard pieces of information. Market information may include data that represents just the inside market. The inside market is the lowest available ask price best ask and the highest available bid price best bid in the market for a particular tradeable object at a particular point in time. Market information may also include market depth. Market depth refers to quantities available at the inside market and may also refer to quantities available at other prices away from the inside market. In addition to providing order book information such as order price and quantity information electronic exchanges can offer other types of market information such as the open price settlement price net change volume last traded price the last traded quantity and order fill information.

While there are often built in redundancies in an electronic trading network it is not uncommon that network connections between the communicating devices such as a gateway and client devices may occasionally go down. If that unintentionally happens a connection between the devices normally has to be restored. This reconnection process can cause a surge in usage of processing resources especially at the gateway device due to a need by the receiving device to receive the dropped market information as well as possible subscription and initialization data. By having to reestablish the subscription receive products tables and dropped market information to the remote device that lost its connection the reconnection process may cause larger overall network problems that can impact other users of the network whose connection was not dropped. This can result in undesirable delays in the delivery of new market information to those other users.

It would therefore be beneficial to provide a method and system for an improved data delivery during reconnection as well as other events that may cause restarting of data flow to remote devices.

According to example embodiments described herein system and methods are provided for an improved remote connection in an electronic trading environment. To illustrate the present invention and aspects thereof the following description including the figures and detailed description provides examples that can be used or readily modified by one of ordinary skill to generate a system or method that benefits from the teachings described and claimed herein.

In a remote host trading environment where a client terminal communicates with a gateway via a remote host a connection proxy may be located at the remote host. According to an example embodiment when the connection is being established between the client terminal and the gateway to enable a trader to trade at an electronic exchange the connection proxy stores product table login information subscription data as well as other data downloads that are provided to the client terminal at the initialization stage. When the connection link is created between the client terminal and the gateway the connection proxy may start monitoring the established connection and store additional data being sent to the client terminal. Upon detecting that the communication link is dropped between the client terminal and the gateway due to network problems or yet for some other reason the connection proxy maintains the established communication sessions established for the client terminal at the gateway.

Upon detecting that the communication link has been disconnected the connection proxy may also store additional data intended for the client terminal such as fills or order status data. According to one example embodiment the connection proxy may maintain the communication sessions created at the gateway for the client terminal as well as data stored for the client terminal for a predetermined period of time after the connection is lost. If the connection is restored during the predetermined period of time the connection proxy may provide the stored data to the client terminal so that there is no need to obtain the necessary downloads from the gateway. Then if the connection is not restored during the predetermined period of time the connection proxy may release the communication sessions created for the client terminal at the gateway and discard any data stored for the client terminal.

Other features of the present invention will become more apparent to persons having ordinary skill in the art to which the present invention pertains from the following description and claims.

Regardless of the types of order execution algorithms used the electronic exchange provides market information to the subscribing trading stations A B. Market information may include data that represents just the inside market. The inside market is the lowest sell price best ask and the highest buy price best bid at a particular point in time. Market information may also include market depth. Additionally the exchange can offer other types of market information such as the last traded price LTP the last traded quantity LTQ and order fill information.

The computer employed as the trading stations A B generally can range from a hand held device laptop or personal computer to a larger computer such as a workstation and multiprocessor. An illustrative personal computer may use Pentium microprocessors and may operate under a Windows operating system or yet may use some other microprocessor or operating system. Generally the trading stations A B includes a monitor or any other output device and an input device such as a keyboard and or a two or three button mouse to support click based trading if so desired. One skilled in the art of computer systems will understand that the present example embodiments are not limited to any particular class or model of computer employed for the trading stations A B and will be able to select an appropriate system.

In one example embodiment the trading stations A B use software to create specialized interactive trading screens on terminals associated with them. Trading screens preferably enable traders to among other things enter and execute orders obtain market quotes and monitor positions. The range and quality of features available to the trader on his or her trading screen may vary according to the specific software application being run. In addition to or in place of the interactive trading screens a trading station could run automated types of trading applications.

The example embodiment may be implemented in relation to any type of trading screen therefore details regarding the trading screen are not necessary to understand the present invention. However in one embodiment one type of trading screen that can be used is provided by a commercially available trading application referred to as X TRADER from Trading Technologies International Inc. of Chicago Ill. X TRADER also provides an electronic trading interface referred to as MD Trader in which working orders and or bid and ask quantities are displayed in association with a static price axis or scale.

Portions of the X TRADER and the MD Trader style display are described in U.S. Pat. No. 6 772 132 entitled Click Based Trading With Intuitive Grid Display of Market Depth filed on Jun. 9 2000 U.S. Pat. No. 6 938 011 entitled Click Based Trading with Market Depth Display filed on Jun. 9 2000 U.S. Pat. No. 7 127 424 entitled Click Based Trading With Intuitive Grid Display of Market Depth and Price Consolidation filed on Oct. 5 2001 U.S. patent application Ser. No. 10 125 894 entitled Trading Tools For Electronic Trading filed on Apr. 19 2002 and U.S. patent application Ser. No. 10 376 417 entitled A System and Method for Trading and Displaying Market Information in an Electronic Trading Environment filed on Feb. 28 2003 the contents of each are incorporated herein by reference. However it should be understood that orders in the system illustrated in could also be placed using any other trading application as well. Additionally the preferred embodiments are not limited to any particular product that performs translation storage and display function.

The computer employed as the gateway generally can range from a personal computer to a larger or faster computer. An illustrative gateway computer may use Pentium microprocessors and may operate under a Windows server or workstation operating system or yet some other system. Generally the gateway may additionally include a monitor or any other output device input device and access to a database if so desired. One skilled in the art of computer systems will also understand that the present example embodiments are not limited to any particular class or model of computer s employed for the gateway and will be able to select an appropriate system. Additionally in some instances a gateway such as gateway may not even be necessary and or another type of network intermediary device may be employed.

It should be noted that a computer system that may be employed here as a trading station or a gateway generally includes a central processing unit a memory a primary and or secondary memory unit an input interface for receiving data from a communications network an input interface for receiving input signals from one or more input devices for example a keyboard mouse etc. and an output interface for communications with an output device for example a monitor . A system bus or an equivalent system may provide communications between these various elements.

Memory on either the gateway or the trading station may include a computer readable medium. The term computer readable medium as used herein refers to any medium that participates in providing instructions to a processor unit for execution. Such a medium may take many forms including but not limited to non volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as storage devices. Volatile media include for example dynamic memory such as main memory or random access memory RAM . Common forms of computer readable media include for example floppy disks flexible disks hard disks magnetic tape punch cards CD ROM any other physical medium memory chip or cartridge or any other medium from which a computer can read.

It should also be noted that the trading stations A B generally execute application programs resident at the trading stations A B under the control of the operating system of the trading station. Also the gateway executes application programs resident at the gateway under the control of the operating system of the gateway . In other embodiments and as understood by a person skilled in the art the function of the application programs at the trading stations A B may be performed by the gateway and likewise the function of the application programs at the gateway may be performed by the trading stations A B.

The actual electronic trading system configurations are numerous and a person skilled in the art of electronic trading systems would be able to construct a suitable network configuration. For the purposes of illustration some example configurations are provided to illustrate where the elements may be physically located and how they might be connected to form an electronic trading system. These illustrations are meant to be helpful to the reader and they are not meant to be limiting. According to one example the gateway device may be located at the client site along with the trading station which is usually remote from the matching process at the electronic exchange. According to another example the gateway device may be located at the exchange side. As such the present invention is not limited to any actual network configuration.

According to the illustrated embodiment the trading stations A B the gateway and any routers communicate over the LAN and the gateway may communicate with the matching process at the electronic exchange over a T1 T3 ISDN or some other high speed connection. In another example illustration the client site may be located on the actual grounds of the electronic exchange for example in the building of the exchange . According to this instance the trading station and the gateway may still communicate over a LAN but if any routers are used they may communicate with the matching process at the electronic exchange through another connection means besides a T1 T3 or ISDN. In yet another example illustration the gateway may be housed at or near its corresponding electronic exchange. According to this instance the trading station may communicate with the gateway over a wide area network or through the use of a T1 T3 ISDN or some other high speed connection.

While a single exchange is shown in it is understood that a trader may obtain access and trade at multiple electronic exchanges. In such an embodiment a client terminal could access multiple exchanges through multiple gateways with each gateway designated for a specific exchange. Alternatively a single gateway may be programmed to handle more than one electronic exchange.

It could be very valuable to provide a trader with the opportunity to trade tradeable objects listed at different electronic exchanges. For example a trader could view market information from each tradeable object through one common visual display. As such price and quantity information from the two separate exchanges may be presented together so that the trader can view both markets simultaneously in the same window. In another example a trader can spread trade different tradeable objects listed at the different electronic exchanges. Regardless the present invention is not so limited.

Upon initiating a login to the gateway API connections are created between the client terminals and and the gateway . According to one example embodiment order and fill communications may use inbox communication with inbox messages sent between the two entities over point to point communication links. In such an embodiment an API inbox is created on the gateway API for each client terminal to communicate with the order server and another API inbox is created on the gateway API for each client terminal to communicate with the fill server . An inbox as used herein defines a unique address on the system and allow one application to communicate directly with and to send point to point data to another application without other application receiving that data.

Additionally API inboxes could also be created on each client terminal to create API point to point connections for communication with the order server and the fill server . The client terminals also subscribe to a group API inbox at the price server to receive price data provided by an exchange via the price server .

Once communications are established with the gateway each client terminal and receives product tables from each selected exchange so that a trader can subscribe to products that the trader is interested to trade. A product table may include symbols for each tradeable object being traded at an electronic exchange a type of each tradeable object a point value currency tick tables price formats a numerator and a denominator for calculating tick sizes and other parameters. Once the client terminal receives the product table a trader selects one or more tradable objects to trade or for which the trader wishes to receive market information thus creating a subscription profile to be used at the gateway for communication with the client terminal. The gateway then uses the stored subscription profiles to forward desired market information to the client terminals and .

Generally the gateway receives market data feeds including price order information etc. using multicast channels or yet some other transmission methods such as unicast depending on the type of data being provided in a data feed. As known in the art multicast communication is based on a group concept where a group of subscribers such as a group of gateways or client terminals express an interest in receiving a particular data stream defined by a multicast group address from a source such as exchange market data from an exchange. Unlike multicast unicast communication involves sending data over a network from a single sender to a single receiver.

With respect to price data feeds the client terminals and may subscribe to receive market information corresponding to some but not all tradeable objects provided by an exchange. In such an embodiment the gateway may be programmed to send only price data for tradeable objects that the client terminals and are subscribed to receive.

Unlike price data orders and order confirmations personal information are often sent using separate unicast channels. Thus with respect to two client terminals and shown in two separate unicast channels and are used for order data communication between the terminals and and the order server as well as the order router at the gateway . Similarly all fill data is sent to a client terminal that initiated a respective trade order via a unicast channel created between the client terminal and the gateway . For example one such communication is shown with respect to the fill server sending fill order data to the client terminal .

According to one example embodiment when a price data feed is received and processed at the price server price data is sent via multicast to a designated multicast group address as shown at . In such an embodiment all client terminals here client terminals and subscribing to that specific multicast address on the LAN will receive the price data . A port may be assigned at the client terminals and to listen to multicast price data. With respect to unicast communication separate ports could be assigned for receipt of fill data and order data at the client terminal. In such an embodiment the fill server and the order server send fill and order data to the predetermined ports at the client terminals.

The second method that is can be used to connect network segments in an electronic trading environment is a remote connection. illustrates an example electronic trading system in which a trading station is located remote from a gateway. The example system comprises a remote trading station a remote host a gateway and an exchange . A trader connecting in a remote mode connects to the gateway via the remote host via the Internet or through a direct connection. Example connections between the remote trading station and the remote host may include an ISDN cable DSL or a leased line connection. The remote host and the gateway may communicate via a LAN for example.

In the remote mode of operation the remote trading station may initiate a connection to the remote host by establishing a Transmission Control Protocol TCP session. Though different protocols could be used as well. When data arrives at the remote host from the gateway the remote host sends the data to the remote trading station via the established TCP connection.

The gateway includes a price server an order server an order router and a fill server . The gateway could include additional components as well. In a remote connection trading environment the price server sends price data to the remote host via multicast using a multicast address. The remote host is configured to listen to the multicast and receive the price data just like any other subscribing trading station located on the LAN such as the trading station . Then the remote host forwards the received price data to each subscribing remote client terminal such as the terminals and via a separate TCP connection created for each client terminal.

In a trading environment using a remote connection to a trading network orders are submitted at the remote client terminals and . The client terminals and may then create order messages and send the order messages to the remote host via a TCP connection such as shown at with respect to client terminal . Upon receiving an order message the remote host forwards the order message to the order server using a unicast connection. At this point the order information is passing through the local LAN. Once the order server receives the order message it sends the order message to an electronic exchange. Also the order server sends an order confirmation back to the remote host and the host then forwards the confirmation to the remote client terminal or via the TCP connection.

When a fill is sent to the gateway in a remote electronic trading environment the fill confirmation is created at the fill server and the order server and it is sent from the gateway to the remote host as shown at . Once the fill confirmation is received at the remote host the host forwards it to the remote client terminal via a TCP connection. While not specifically described it should be understood that the remote host may repackage any messages that are received from and sent to the remote client terminals and . Similarly the servers at the gateway may process and change format of messages or other data that are received from and sent to an electronic exchange and client terminals.

While two example trading systems have been described above it should be understood that different network connections are possible and the present invention is not limited to the described example systems. For example a trading system could be configured to use Wide Area Networks WAN and WAN routers or wireless networks. One skilled in the art of electronic trading systems will understand that the present embodiments are not limited to the particular configurations illustrated and described with respect to and will be able to design a particular system based on the specific requirements for example by adding additional exchanges gateways trading stations routers or other computers serving various functions like message handling and security . Additionally several networks like either of the networks shown in may be linked together to access one or more electronic exchanges.

Regardless of the extent of data provided by an exchange when a connection between a client terminal and a gateway or a remote host goes down unintentionally the lost connection must be restored at some later time. However as mentioned earlier using a conventional configuration the reconnection causes a surge in resources available at the gateways and hosts due to the market and client related downloads that have to restart upon the reconnection. This in turn causes problems to other local or remote users who may experience delays in the receipt of market and order data from the gateways or hosts that are in the process of restarting connections with other client terminals.

According to one example embodiment client terminals remote hosts and or gateways may include status applications that monitor and manage network connections that are created between them. Such applications typically use general status messages or heartbeat messages to monitor the status of each network connection. For example a status application at a remote host could be programmed to receive periodical heartbeat messages from a status application at a client terminal via a TCP connection. In such an embodiment upon detecting a predetermined number of missed heartbeats the remote host detects that the connection has been lost.

Alternatively the remote host may detect that a connection has been dropped upon attempting to send data to a client terminal and receiving an error message. Upon detecting that a TCP connection has been lost in a typical remote host network configuration the remote host would terminate API connections to a gateway and then initiate a reconnection process upon reestablishing a TCP connection to the client terminal.

Similarly in relation to the LAN trading environments a status application at a gateway may receive heartbeats directly from a status application at a client terminal. When the status application at the gateway detects that a predetermined number of consecutive heartbeats are not received from the client terminal the connection is considered to be terminated and a price order fill servers at the gateway are notified of the lost connection. Upon detecting that a connection has been lost in a typical LAN trading environment the servers terminate any API connections created for the client terminal and release any inboxes and communication resources reserved at the servers for communication of data to and from the client terminal.

In a current network environment all necessary subscription data downloads product table downloads as well as fill and trade order related downloads are to be restarted for a client terminal upon a reconnect even when a disconnect occurs for a few seconds or a few minutes. The example embodiments described below are directed to an improved system and methods for communication in a trading environment that minimize the effect of reconnection downloads.

The example system includes a client terminal a gateway having a price server an order server and a fill server and a connection management proxy all of which communicate via a LAN . Similarly to the block diagrams illustrated earlier it should be understood that fewer or additional network entities or components could also be used but are not illustrated for the sake of clarity.

The client terminal the gateway as well as the gateway components have been described in relation to the preceding figures. According to one example embodiment the connection management proxy is a network entity that monitors a connection between the client terminal and the gateway manages the release of network resources stored at the gateway for the client terminal as well as stores and provides necessary downloads to the client terminal upon the reconnect. While the connection management proxy is illustrated as a network entity at the gateway the connection management proxy could instead be positioned elsewhere in the network but in communication with the gateway . Further alternatively some elements of the connections management proxy could be in communication with the gateway while other elements or functions to be performed by the proxy could be internally located at the gateway .

When a connection is established between the client terminal and the gateway all necessary downloads occur to allow a trader at the client terminal to connect to an exchange and to trade selected tradeable objects that are provided at the exchange. The downloads among others may include a subscription table listing information of related to all products selected by a trader for trading a product table listing all available products and product definitions a fill download from the last fill sequence received a full order book listing current orders in the market a market depth snapshot with up to date depth levels so that the client terminal is ready to receive only depth updates. It should be understood that the data downloads that occur at the client terminal may depend on an exchange selected by a trader for trading and the data downloads may be exchange or gateway specific.

When the necessary downloads are being provided to the client terminal the connection management proxy is configured to receive the data in the data downloads and store the intercepted data in its internal database for later use. The connection management proxy could be programmed to only receive the data downloads that would be necessary upon the reconnect. However it should be understood that different embodiments dependent on the system configuration are possible as well.

Alternatively rather than receiving the data downloads when they are sent to the client terminal the connection management proxy may receive some downloads at some earlier or later time. For example at the beginning of a trading day the connection management proxy may request all data downloads that could potentially be used at client terminals and the received downloads could be stored internally at the proxy . Such an embodiment may be used in relation to a product table download and the product information stored at the connection management proxy may be updated as new products are added during a trading day or other products are taken out from the product list.

Once the connection is established between the client terminal and the gateway and all the necessary downloads are finalized the connection management proxy starts monitoring the established connection for potential communication problems. To do that the connection management proxy may monitor heartbeat messages that are sent from the client terminal . However alternative methods could also be used such as sending some other messages and getting an error message in response.

Upon detecting that a connection between the client terminal and the gateway has been lost the connection management proxy prevents the release of API connections as well as other session resources created for the client terminal at the gateway . To do that in an environment where heartbeat messages are used the connection management proxy may generate heartbeat messages on behalf of the client terminal and may send the heartbeat messages to a status application at the gateway . However different embodiments are possible as well.

During the period when the connection between the client terminal and the gateway is lost the connection management proxy may receive data on behalf of the client terminal and store the received data for later delivery to the client terminal. According to one example embodiment the connection management proxy may monitor for any data to be sent to an IP address of the client terminal and store the data internally for later use at the client terminal upon restoration of the connection during a preset time period. For example the data that may be received at the proxy on behalf of the client terminal may include fills new product tables order updates depth snapshots price subscription details as well as login information.

According to one example embodiment the connection management proxy is programmed to maintain session resources on behalf of the client terminal for a preset period of time. In such an embodiment if the reconnect does not occur during the predefined period the connection management proxy sends a signal to the gateway to release any connection resources such as API connections and inboxes created for the client terminal at the gateway . In the embodiment described above using heartbeat messages the connection management proxy may simply stop sending heartbeat messages on behalf of the client terminal to a status application located at the gateway . However it should be understood that different embodiments could be used as well.

When the connection between the client terminal and the gateway is reestablished such as for example when the connection management proxy detects heartbeat messages being sent from the client terminal during the predefined period of time the connection management proxy sends the stored data to the client terminal . First the connection management proxy sends subscription data that is necessary for the client terminal to communicate with the gateway and to send orders to one or more exchanges. Then depending on the system configuration the connection management proxy may provide to the client terminal any remaining data that was stored at the connection management proxy while the connection was lost. Such data may include order related data such as order confirmation fills etc. and other types of data described above.

The example system includes a client terminal a gateway having a price server an order server and a fill server . The system also includes a remote host that communicates with the gateway via a LAN . The remote host includes a connection management proxy . While illustrates the connection management proxy at the remote host it should be understood that different embodiments are possible. For example the connection management proxy may be a free standing network entity in communication with the remote host . Furthermore some elements of the connection management proxy could be located at the remote host while others could be located at an external entity.

As explained earlier in relation to rather than being located at a local LAN the client terminal in communicates with the gateway via the remote host by creating a TCP connection to the remote host with the remote host providing a communication path for any data being sent between the client terminal and the gateway . In the embodiment illustrated in when the client terminal receives any data from the gateway such as subscription data as well as other downloads that are used to enable a trader at the client terminal to receive desired data from an exchange the remote host receives the data before anything is sent out to the client terminal . Thus the remote host can store any preconfigured data before providing it to the client terminal . As other data is sent to or from the client terminal during a trading session all data is forwarded through the remote host . As the remote host receives data intended for the client terminal the remote host stores some or all the received data such as the initial downloads and other data throughout the trading day upon detecting that a TCP communication link has been disconnected.

As described in relation to the connection management proxy monitors the connection between the remote host and the client terminal and when the disconnect is detected the remote host may maintain a communication link and session resources created for the client terminal at the gateway . In the trading environment illustrated in the connection management proxy may detect that a connection to the client terminal has been lost when it attempts to forward data to the client terminal and receives an error message or yet some other message that is generated upon a delivery failure. As explained earlier to maintain the communication link created for the client terminal at the gateway the connection management proxy may send heartbeat messages on behalf of the client terminal to the gateway so that the communication link is maintained for a predetermined period of time. When the preset time expires and the connection between the client terminal and the remote host is not reestablished the communication resources created for the client terminal at the gateway are released when the connection management proxy no longer sends any heartbeat messages on behalf of the client terminal .

Similar to the system described in in addition to the initial downloads the connection management proxy may store additional data upon detecting that the TCP connection has been disconnected. The data could include order related data such as fills that the connection management proxy may provide to the client terminal upon the reconnect. The extent of data that is saved at the connection management proxy may be system and configuration dependent.

Referring now to at step a connection management proxy stores subscription and other initialization data for use at a client terminal to communicate with an electronic exchange via a gateway. The stored data includes product tables subscription data as well as other data types described earlier. It should be understood that the connection management proxy may receive the data either before after or at the time when it is sent to the client terminal.

At step the connection management proxy starts monitoring a communication link created between the client terminal and a gateway. The step of monitoring may involve listening to heartbeat signals from the client terminal or periodically sending status request messages from the connection proxy manager to the client terminal.

At step during the process of monitoring the communication link between the client terminal and the gateway the connection proxy manager determines if the communication link has been terminated. If not the method continues at step . If the connection proxy manager detects that the communication link has been disconnected at step the connection proxy manager maintains communication sessions as well as other resources created for the client terminal at the gateway. According to one example embodiment described earlier the connection proxy manager may send heartbeat messages to the gateway on behalf of the client terminal so that any API connections as well as other resources saved at the gateway for the client terminal are not released. However different embodiments are possible as well in an environment where messages different than heartbeat messages are used by status applications.

At step the communication proxy manager determines whether the client terminal initiated the process of reestablishing a communication link to the gateway during a predetermined period of time. According to one example embodiment the communication proxy manager initiates this process after it detects the termination of the communication link between the client terminal and the gateway and the process continues for the predetermined period of time defined with respect to the client terminal. If at any time during the predefined time period the connection proxy manager detects that the communication link has been reestablished the connection proxy manager sends the stored initialization subscription as well as other data to the client terminal as shown at . Depending on the system configuration if there is any data being stored at the communication proxy manager for the client terminal during the time when the connection is lost such data could be sent to the client terminal as well. It should be understood that the communication proxy manager may send the data to an IP address of the client terminal.

Referring back to step if the communication link is not restored during the predefined time period the communication proxy manager initiates the process of releasing a communication session as well as any resources stored at the gateway for the client terminal.

It will be apparent to those of ordinary skill in the art that the methods described above may be embodied in a computer program product that includes one or more computer readable media. For example a computer readable medium can include a readable memory device such as a hard drive device a CD ROM a DVD ROM or a computer diskette having computer readable program code segments stored thereon. The computer readable medium can also include a communications or transmission medium such as a bus or a communication link either optical wired or wireless having program code segments carried thereon as digital or analog data signals.

The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

