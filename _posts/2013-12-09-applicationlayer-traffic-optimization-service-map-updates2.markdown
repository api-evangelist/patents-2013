---

title: Application-layer traffic optimization service map updates
abstract: Using the ALTO Service, networking applications can request through the ALTO protocol information about the underlying network topology from the ISP or Content Provider. The ALTO Service provides information such as preferences of network resources with the goal of modifying network resource consumption patterns while maintaining or improving application performance. This document describes, in one example, an ALTO server that implements enhancements to the ALTO service to enable initiating incremental updates of network and cost maps to ALTO clients upon receiving status information from a content delivery network (CDN) node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09621449&OS=09621449&RS=09621449
owner: Juniper Networks, Inc.
number: 09621449
owner_city: Sunnyvale
owner_country: US
publication_date: 20131209
---
This application is a continuation of U.S. application Ser. No. 12 861 681 filed Aug. 23 2010 which claims the benefit of U.S. Provisional Application No. 61 349 467 filed May 28 2010 the entire content of each of which is incorporated herein by reference.

Peer to peer P2P applications exchange large amounts of data and generate significant amounts of network traffic. P2P applications leverage multiple copies of data content populated to multiple different network nodes to allow a requesting agent to obtain portions of the data content from one or more of many possible data sources. Such P2P distributed applications improve application performance and scalability and are frequently used for file sharing real time communication and on demand media streaming.

Many P2P applications operate by implementing an application layer overlay network over the communication network. The overlay network is a logical network of participating network nodes peers directly interconnected via overlay links that are each abstractions of one or underlying transport links of the communication network. The overlay network include data structures that index one or more network devices or resources that store and source specific data content such as files or file portions. A peer seeking particular data content queries the data structures to obtain a list of identities of network devices that source the file. The peer here operating as a client randomly selects one of the devices from the list from which to request and receive the data content via the overlay network.

Client software for P2P applications often select resources naively that is without incorporating network topology information or related details. Rather clients rely on heuristics to approximate such information. As a result network data traffic exchanged using these applications may congest network links cross service provider network boundaries multiple times and generally transit the communication network in a manner that is suboptimal from a user standpoint and undesirable from the point of view of the service provider. For instance while two peers may be members of the same service provider network an overlay link connecting the peers may nevertheless traverse multiple network boundaries which unnecessarily increases the inter peer transit costs to the service provider. Furthermore although distributed applications capitalize on excess bandwidth at the data sources to improve throughput and reduce latencies for end users while also reducing the burden of content providers to provision application servers the ability to cheaply distribute data content comes at the expense of service providers which bear the cost of inefficiently transporting network data.

Recently an Application Layer Traffic Optimization ALTO service has been proposed in which an ALTO protocol is used to provide guidance to P2P applications regarding selection of a resource from which to obtain data content. In one example a service provider would provision an ALTO server for a service provider network with network topology and topology link cost information. P2P clients would send ALTO requests to the ALTO server to obtain a network map and a corresponding cost map. The network map specifies a subset of topological groupings defined by the ALTO server for the network. A cost map for the network map defines provider preferences respecting inter group routing costs for connections among the various groups of the network map. As a result service providers provisioning the ALTO server could direct P2P clients to select resources according to service provider preferences which may include optimizing throughput and or user experience for instance reducing costs to the service provider or promoting other provider objectives. The ALTO service and ALTO protocol is described in further detail in J. Seedorf et al. RFC 5693 Application Layer Traffic Optimization ALTO Problem Statement Network Working Group the Internet Engineering Task Force draft October 2009 and R. Alimi et al. ALTO Protocol draft ietf alto protocol 03. txt ALTO Working Group the Internet Engineering Task Force draft March 2010 each of which is incorporated herein by reference in its entirety.

In general the invention is directed to techniques for enhancing the ALTO service for integration with content delivery networks CDNs . For example this document describes deployment scenarios and enhancements for an ALTO Service in the case of CDNs where content is delivered to applications in accordance with a more traditional client server model. Other enhancements described herein may be useful in other deployments such as in use with P2P applications or distributed applications.

Content providers increasingly rely on content delivery networks to distribute content requested by a geographically and capability diverse clientele. In many instances the CDNs and service provider SP networks that function as access networks for subscriber devices attempting to reach CDN cache nodes that store and source resources are often disjoint. That is the CDNs and SP networks may be members of different administrative domains and hence may not share internal routing cost information. Service providers may deploy an ALTO service to optimize CDN performance in accordance with the principles described herein in a manner that provides the service transparently to users such that user hosts do not require special software or other modifications. In a simple example users operating a standard Internet browser may experience CDN optimizations enabled by an enhanced ALTO service.

In one example techniques for updating ALTO servers and pushing incremental network map revisions to ALTO clients are described. CDN cache nodes or other content servers may experience outages congestion or experience other conditions that impacts content serving performance of the node. The CDN cache nodes provide status updates to the ALTO server which incorporates the status update into calculation of ALTO network maps and cost maps. For example a CDN cache node may send the ALTO server a status update stating that its content service is not operational. The ALTO server thus removes the node from the network map and updates the cost map accordingly. Because status updates regarding congestion or other network conditions may result in frequent modifications to the network map the techniques cause the ALTO server to proactively update ALTO clients with incremental network map and cost map revisions. The incremental map revisions enable the ALTO clients to update a prior version of the network and cost maps rather than receive the full network and cost maps in the update. In this manner the techniques may allow ALTO clients to maintain current network and cost maps yet avoid traffic in the network that would otherwise result from frequent complete network or cost map transmissions.

In one embodiment the invention is directed to a method comprising the steps of aggregating with an application layer traffic optimization ALTO server that stores network topology information for a network of one or more endpoints that provides a service the endpoints into a set of one or more PIDs wherein each PID is associated with a subset of the endpoints and wherein each endpoint associated with a particular PID in the set of PIDs is a member of the same type. The method further comprises the steps of generating a first ALTO network map that includes PID entries to describe each of the PIDs and receiving with the ALTO server a status update from a first one of the endpoints that comprises information indicating a condition of the first endpoint that affects a performance of the first endpoint with respect to the service. The method further comprises the steps of modifying a first PID in the set of PIDs to remove an association with the first endpoint and responsive to modifying the first PID generating a second ALTO network map that includes a PID entry to describe each of the PIDs including the modified first PID. The method further comprises the steps of determining a difference between the first ALTO network map and the second ALTO network map and outputting an update message from the ALTO server to an ALTO client that comprises an incremental update of the first ALTO network map to cause the ALTO client to conform a third ALTO network map stored by the ALTO client to the second ALTO network map.

In another embodiment the invention is directed to an application layer traffic optimization ALTO server comprising a network information base to store network topology information for a network of one or more endpoints that provides a service. The ALTO server further comprises a network map module to aggregate the endpoints into a set of one or more PIDs wherein each PID is associated with a subset of the endpoints and wherein each endpoint associated with a particular PID in the set of PIDs is a member of the same type wherein the network map module generates an ALTO network map that includes a PID entry to describe each of the PIDs. The ALTO server further comprises a resource interface to receive a status update from a first one of the endpoints that comprises information indicating a condition of the first endpoint that affects a performance of the first endpoint with respect to the service wherein the resource information stores the information to the network information base wherein the network map module modifies a first PID in the set of PIDs to remove an association with the first endpoint wherein the network map module responsive to modifying the first PID generates a second ALTO network map that includes a PID entry to describe each of the PIDs including the modified first PID. The ALTO server further comprises a difference engine to determine a difference between the first ALTO network map and the second ALTO network map and a client interface to output an update message to an ALTO client that comprises an incremental update of the first ALTO network map to cause the ALTO client to conform a third ALTO network map stored by the ALTO client to the second ALTO network map.

In another embodiment the invention is directed to a computer readable medium containing instructions. The instructions cause a programmable processor to aggregate with an application layer traffic optimization ALTO server that stores network topology information for a network of one or more endpoints that provides a service the endpoints into a set of one or more PIDs wherein each PID is associated with a subset of the endpoints. The instructions also cause the programmable processor to store a first ALTO map for the network and receive a status update from a first one of the endpoints that comprises information indicating a condition of the first endpoint that affects a performance of the first endpoint with respect to the service. The instructions also cause the programmable processor to generate a second ALTO map wherein the second ALTO map accounts for the received information to represent an updated ALTO topology for the network and determine a difference between the first ALTO map and the second ALTO map. The instructions further cause the programmable processor to output an update message from the ALTO server to an ALTO client that comprises an incremental update of the first ALTO map to cause the ALTO client to conform a third ALTO map stored by the ALTO client to the second ALTO map.

The techniques described in this disclosure may provide one or more advantages. For example the techniques may allow enhanced integration of an ALTO service with CDNs leading to improvements in resource selection for content requests according to provider specified optimization data. For example pushing incremental updates of current network maps and cost maps for a network provides ALTO clients with up to date resource selection information and may foster service continuity. Moreover the techniques may allow independent scaling of redirectors and endpoint health management.

As another example the attribute addition techniques may allow resource selection components to differentiate between content providers e.g. CDN cache nodes and content consumers e.g. hosts and thereby restrict resource selection to content providers. PID attributes may further enable PID type specific policies to allow service providers to perform for instance service discrimination. For example a service provider may mark a PID with an attribute that causes those endpoints in that PID to receive higher quality of service QoS . In addition introducing default costs into a master cost map may enable an ALTO server to selectively advertise cost entries of a master cost map to ALTO clients.

As a still further example the techniques may allow ALTO servers to share internal network maps and costs maps across network boundaries to enable application layer traffic optimization techniques to span multiple administrative domains. Consequently the techniques may enable a multi domain optimized resource selection rather than multiple locally optimized PID selections that frequently result in globally sub optimal resource selection due to inter network boundary effects.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

Content delivery network CDN is a network of interconnected devices that cooperate to distribute content to clients using one or more services. Such content may include for instance streaming media files data files software domain name system information documents database query results among others. Accordingly examples of services offered by CDN may include hyper text transfer protocol HTTP media streaming advertising file transfer protocol FTP and others. CDN comprises CDN cache nodes A C alternatively CDN nodes that contain replicated content and serve that content to requesting devices using for example a transmission control protocol TCP or user datagram protocol UDP session operating over intermediate devices of CDN not shown for simplicity . A content provider administers CDN nodes to optimize content delivery using load balancing techniques caching request routing and or content services. CDN nodes may mirror content though any of CDN nodes may provide different services and data content than that provided by the other CDN nodes. In some embodiments CDN is also a service provider network or other access network.

Border routers A B BRs of access network couple to respective border routers A B BRs of CDN via respective transit links A B to provide devices of network access to content sourced by CDN nodes . Border routers and border routers may each comprise for example an autonomous system border boundary router or a provider edge router that execute the border gateway protocol BGP to advertise to the other routers or peers network destinations to which the router offers connectivity.

Hosts A C host applications that connect to CDN via access network to request and download application related content. Hosts are subscriber devices and may comprise for example workstations desktop computers laptop computers cellular or other mobile devices Personal Digital Assistants PDAs and any other device cable of connecting to a computer network via a wireless and or wired connection. In some embodiments hosts are members of a customer network that couples to borders routers via access network .

Content delivery network comprises redirector to receive content requests from hosts selects and locate one of CDN nodes that is capable of servicing the request and redirecting the requesting host to the identified CDN node. Redirector may be for example a DNS or other type of server a proxying device a P2P peer a P2P application specific tracker or a firewall or other security device. In one instance redirector implements DNS server load balancing SLB . In some instances redirector is a content aware redirector that maps particular content or content types to each of CDN nodes that store and source the particular content or content types. In such instances redirector selects one of CDN nodes to service a request according to content or content type availability. In some instances redirector is a service aware redirector that maps services to each of CDN nodes that provide the service irrespective of whether the CDN node presently stores content for the service. In such instances redirector selects one of CDN nodes to service a request according to service capabilities. If a selected one of CDN nodes that provides the service does not store the content the CDN node requests and receives the content from a centralized server not shown or from another one of CDN nodes .

In some embodiments redirector is a content aware or service aware redirector for HTTP. That is redirector receives HTTP requests for content from HTTP clients and redirects the request to a selected one of CDN nodes by returning to the requesting device an HTTP response having status code and including a network address of the selected CDN node. In some embodiments hosts CDN nodes and redirector are P2P peers connected in an overlay network to exchange location information and content using a P2P application. In such P2P embodiments redirector may be a centralized server for the P2P application that indexes content to peers and provides location information rather than a peer.

To influence the selection of a particular CDN node to service a particular request received from a network device CDN additionally employs an Application Layer Traffic Optimization ALTO service that is provided by CDN ALTO server of CDN . In general the ALTO service enables CDN to influence the selection process to further content provider objectives which may include improving user experience by selecting the most geographically proximate one of CDN nodes to a requesting host reducing transmission costs to the content provider load balancing service level discrimination accounting for bandwidth constraints and other objectives.

CDN ALTO server stores ALTO maps i.e. a network map and cost map for CDN and provides these maps to ALTO clients such as CDN ALTO client of redirector . As described in detail below with respect to a network map contains network location identifiers or PIDs that each represents one or more network devices in a network. In general a PID may represent a single device or device component a collection of devices such as a network subnet an SP network or some other grouping. The network map stored by CDN ALTO server includes PIDs that represent at least CDN nodes and border routers . As described in detail below with respect to a cost map contains cost entries for pairs of PIDs represented in the network map and an associated value that represents a cost to traverse a network path between the members of the PID pair. The value can be ordinal i.e. ranked or numerical e.g. actual . CDN ALTO server may generate the network maps and cost map by obtaining routing information from other devices in CDN and then applying policies to the routing information to aggregate endpoint devices into PIDs and calculate costs per a specified criteria such as transmission cost or node priority for traversing a network path between members of PID pairs. In some embodiments a CDN administrator or a third party provisions CDN ALTO server with a network map and cost map. In accordance with the techniques of this disclosure CDN ALTO server represents each of border routers in the network map for CDN with a unique PID that represents no additional network devices. CDN ALTO server may be for example a high end server or other service device a content indexer for a P2P application or a service card insertable into a network device such as a router or switch. CDN ALTO server may operate as an element of a service plane of a router to provide ALTO services in accordance with the techniques of this disclosure.

Access network also implements an ALTO service using ALTO server which stores a network map and cost map for access network . The network map stored by ALTO server includes PIDs that represent at least hosts and border routers . ALTO server represents each of border routers in the network map for access network with a unique PID that represents no additional network devices.

CDN ALTO server performs techniques of this disclosure to improve selection of a CDN host in the CDN domain for a host in the access network domain. In accordance with these techniques CDN ALTO server comprises ALTO client that uses an ALTO protocol to request and receive from ALTO server of access network the network map and cost map for access network .

CDN ALTO server additionally may execute a routing protocol such as Interior BGP to discover border routers that couple CDN to access network . In some embodiments rather than using a routing protocol to discover embodiments PIDs in the network map for CDN include a border router attribute that CDN ALTO server may use to identify the PID as representing one of border routers . After determining the PID for these discovered border routers from the network map for CDN CDN ALTO server uses the network map and cost map for CDN to calculate a CDN border router cost matrix that specifies a cost of reaching each of border routers from every one of CDN nodes .

CDN ALTO server then calculates a similar border router cost matrix for access network . That is CDN ALTO server uses the network map and cost map for access network obtained by ALTO client from ALTO server to calculate an access network border router cost matrix that specifies a cost of reaching each of border routers from every one of hosts .

Using the two costs matrices for CDN and access network respectively CDN ALTO server relates border router A to border router A and border router B to border router B due to their respective coupling over transit links A and B. In addition CDN ALTO server intersects the two cost matrices in a master cost map using the border router relations as a link and sums individual costs from the respective cost matrices to compute a total cost for the intersection entries. In other words CDN ALTO server computes the total cost of reaching each one of hosts from every CDN node . For example to compute a total cost of reaching host A from CDN node B CDN ALTO server determines using the access network cost matrix a first cost from the host A PID to the border router A PID and determines a second cost using the CDN cost matrix from the border router A PID to the CDN node B PID. CDN ALTO server then sums the first and second costs and inserts the summation in an entry in a master cost map for the pair.

In the illustrated example because there are multiple border routers and that traffic exchanged between host A and CDN node may traverse CDN ALTO server may perform the intersection summation process for each combination or border routers and border routers . Thus in addition to the calculation described above CDN ALTO server may compute a total cost for a network path comprising and . CDN ALTO server may then select the lowest total cost of any possible combination to enter in the entry in the master cost map for the pair. In embodiments having additional links connecting border routers and border routers CDN ALTO server performs additional calculations corresponding to the additional links. In some instances CDN ALTO server incorporates the appropriate transit link cost into the summation. An exemplary computation according to these techniques is illustrated in .

CDN ALTO client of may request and receive from CDN ALTO server the master cost map the network map for CDN and the network map for access network . Hosts send content requests to redirector . In accordance with the described techniques redirector queries the master cost map to select the lowest cost node from among CDN nodes for the requesting host and returns a network address for the selected CDN node for the content request. Redirector uses the network map for access network to map the source IP address of the requesting host to a PID. Redirector then uses the master cost map to select the lowest cost CDN node for the PID.

For example in the illustrated embodiment host A sends content request to redirector which uses the master cost map and network maps for access network and CDN to select and return a network address for CDN node B to host A in content response . Host A establishes communication session e.g. a TCP session with CDN node B to obtain the requested content. In one instance a user operating an Internet browser application types a Uniform Resource Identifier URI in the address bar causing the application to send in this example HTTP request that includes the URI to redirector . Redirector maps the URI to CDN nodes that are HTTP servers and store the content for the URI e.g. a web page selects one of the mapped nodes using the master cost map then returns HTTP response that includes the network address for the selected node to the browser application running on host A. The browser application may then send a second HTTP request to the selected CDN node via communication session to obtain the sought after content. In some embodiments ALTO server and ALTO client exchange information using encryption methods provided by HTTP.

By summing the costs from appropriate entries in access network border router cost matrix and CDN border router cost matrix CDN ALTO server determines the cost for each PID pair entry. Using a content request from host A mapped to PID 0 in network map as an example the PID pair connects either via transit link A connecting border routers A and A or via transit link B connection border routers B and B. In the first instance CDN ALTO server sums the cost 2 and the cost 11 to arrive at a total cost of 13 for network traffic between PID 0 and PID 20 traversing transit link A. In the second instance CDN ALTO server sums the cost 6 and the cost 16 to arrive at a total cost of 22 for network traffic between PID 0 and PID 20 traversing transit link B. Because 13 is less than 16 CDN ALTO server sets 13 as the total cost for the PID pair 21 PID 0 PID 20 in master cost map .

When redirector receives the content request from host A redirector queries the cost map for the lowest cost PID connected to PID 0. Master cost map denotes this PID as PID 20 having total cost 13 to PID 0. Redirector uses network map to select one of the endpoints in PID 20 in this instance CDN node B and returns an IP address for CDN node to host A.

ALTO client of redirector requests and receives from ALTO server a network map and cost map for the distributed application in complete maps upload message . ALTO client in a P2P network may be an application tracker that obtains the maps from ALTO server and integrates the maps into a peer database.

Content node provides to ALTO server a status update comprising data relating to a service related capability network conditions experienced by content node or some other factor affecting the content sourcing service of content node . Content node may provide status updates to ALTO server periodically or in response to a particular event such as receiving a particular content.

ALTO server receives status update and uses the information contained therein to if appropriate modify a network map and or cost map for the distributed application for the network containing content node not shown in . For example if status update indicates content node no longer provides content sourcing service ALTO server may remove content node from the network map. As another example if status update indicates content node is experiencing a severe traffic load ALTO server may increase costs for PID pairs having content node as a member. ALTO server may comprise policies that specify a cost weight for particular content node status indications. In other words the policies specify one or more cost specific modification actions for ALTO server to take responsive to particular status conditions of content node indicated by status update .

ALTO server determines a difference between a previous network map and cost map and the network map and cost map that ALTO server generated as a result of receiving status update . In addition ALTO server generates instructions to enable ALTO client to modify the network map and cost map received by ALTO client in complete maps upload message to reflect the changes to the application topology. ALTO server then sends these instructions to ALTO client in update message .

In one example ALTO server receives status update indicating a service failure by content node . In response ALTO server modifies the network map and or cost map for the application then determines a difference between the newly modified maps and the previous maps. In this example the newly modified map no longer includes content node as an endpoint which may result in a modified PID or a removed PID. ALTO server generates instructions sufficient to cause ALTO client to change the ALTO client copy of the network and cost maps to the modified network and cost maps generated by ALTO server . As one possible example the instructions may state REMOVE IP address of content node . ALTO server pushes unprompted the instructions to ALTO client in update message . That is ALTO server does not necessarily receive a request from ALTO client prior to sending update message .

In some embodiments the newly modified map is a cost map and the network map remains unchanged. In such instances ALTO server generates instructions sufficient to cause ALTO client to change the ALTO client copy of the cost map to conform the ALTO client cost map to the ALTO server cost map. As one possible example the instructions may state SETCOST PID 1 PID 2 8 to cause ALTO client to set the cost in the client cost map to traverse the topology link of the corresponding network map that couples PID 1 and PID 2 to 8.

Upon receiving update message ALTO client modifies location database comprising the network map and cost map for the application using the instructions contained in the update message .

Host comprises application that constitutes a portion of the distributed application discussed above. For example application may be a peer of a P2P application or a client of a client server application. Application may be for instance an Internet browser. Application sends content request to redirector to which lookup module responds by querying the network and cost maps for the distributed application as updated by ALTO client after receiving update message . Lookup module selects the lowest cost node from which to source the requested content which in some instances is content node and returns a network address for the selected node to application in content response . In some embodiments lookup module is an HTTP server.

In some embodiments a URI in an HTTP redirect message may contain rather than the IP address of the selected CDN node a domain name as a result of virtual hosting. In such instances the IP addresses contained in the cost maps may need to be correlated to domain names prior to selecting a CDN node for the requesting host.

In this manner the real time content node status update and incremental network and cost map update techniques described above enable policy driven advertisements of network and cost maps that incorporate a condition of the content node into the inter PID cost calculation process as such a condition relates to for example network topology traffic load node health or other conditions relating to providing a service. In a P2P context because ALTO client may be an application tracker the peer database for the application may account for current metrics such as peer availability content availability and localization.

Moreover because content node provides status update to ALTO server rather than to redirector ALTO server may more rapidly update ALTO client in accordance with the real time status changes by pushing map updates to ALTO client in update message . This may reduce the amount information exchanged between ALTO server and ALTO client . In addition receiving status update at ALTO server enables the ALTO service to operate in a different administrative domain than that occupied by redirector . This may enable independent scaling of health management of the content nodes by ALTO server and of redirection by redirector . In many instances redirector faces much higher scaling demands.

In the illustrated embodiment ALTO server comprises network information base a data structure that includes information regarding network topology endpoint statuses transmission costs for various network links and any other information needed by map modules to generate ALTO based maps. In the illustrated example network map module uses network information base to generate network map and cost map module uses network information base to generate cost map . Network information base is provisioned with information obtained by executing routing protocols to obtain route information from administrator connecting to user interface UI to upload tables or other data structures that include network information and from content node which sends status update message to resource interface to update network information base with a status of the node as described above with respect to . Network information base may also receive network information from ALTO client operating substantially similarly to ALTO client of . That is ALTO client may request and receive network and cost maps from other administrative domains and store these maps to network information base.

Resource interface in addition to receiving status update discovers available content nodes e.g. content node . Resource interface may poll content node for status update using for example ping an HTTP Get request traceroute or other methods. Resource interface may comprise a simple network management protocol SNMP agent that connects to content node or to a centralized network management server to request status update . Resource interface may expose an application programming interface API which may comprise a Web service or an Extensible Messaging and Presence Protocol XMPP based API.

User interface may be a command line interface CLI a graphical user interface GUI a remote procedure call RPC or some other method to enable administrator to configure network information base and provisioning policies of ALTO server . Administrator may be a network operator of e.g. a service provider network or a software agent executing e.g. on a network management device. Administrator additionally provisions ALTO server with provisioning policies a set of policies that cause network map module to generate network map and cost map module to generate cost map in accordance with administrator preferences relating to transmission costs load balancing service discrimination PID grouping or other preference areas. For example provisioning policies may direct network map module and cost map module to generate maps to cause content requests from PIDs having a particular attribute to be redirected to a particular CDN node.

Network map module and cost map module may implement a map filtering service. The map filtering service allows ALTO clients requesting maps from ALTO server to query for maps that are filtered according to various parameters. In this way clients may avoid client side filtering and ALTO server may reduce network traffic caused by unnecessarily large map transmissions. In accordance with the techniques of this disclosure and as described in further detail below with respect to network map may include PID attributes that can be used to disambiguate among PIDs that contain endpoints of particular classes. Network map module may employ the map filtering service to filter any PIDs from network map that do not include endpoints that belong to a particular class and then send the filtered network to a requesting client.

Client interface exposes an ALTO server interface to enable ALTO clients such as client to request and receive network and cost maps for an application for the network. Client interface sends a copy of network map and cost map to client in complete maps upload message . Client interface may execute one or more protocols to obtain network addresses of ALTO clients in the network and the client interface maintains these network addresses so as to push incremental updates of the maps to the clients.

Difference engine of ALTO server caches copies of network map and cost map . Upon generation of a new network map and or cost map difference engine determines differences between new network map and the cached copy that represents the prior version. In addition difference engine determines differences between new cost map and the cached copy of the cost map that represents the prior version. Difference engine then generates a series of commands that when executed by client will cause client to conform its copy of the network map and cost map for the application for the network to network map and cost map respectively. Difference engine directs client interface to send these commands to client in update message .

In accordance with the techniques of this disclosure each of exemplary PIDs includes a respective one of PID type fields A C that stores an assigned PID type for the PID. For instance PID A includes PID type field A that specifies a host PID type for PID A while PID C includes PID type field C that specifies a CDN PID type for PID C. PID A thus identifies host subnets and PID C identifies IP addresses of available CDN cache nodes.

PID type fields are attributes of respective PIDs and enable an ALTO service to take PID type specific actions. PID type values may be passed by the ALTO server as a constraint to a map filtering service as described above with respect to . For example an ALTO server such as ALTO server may set cost entries of an cost map that specify costs between two PIDs of type host to a value of infinity. A redirector or other resource selector using the cost map to select a resource for a requesting host will thus avoid selecting another host as a resource in favor of a resource with a PID of type CDN. In some embodiments the ALTO server may filter cost entries to avoid sending such entries to ALTO clients. Rather the ALTO server advertises a sparse matrix of cost entries to ALTO clients. In such embodiments the ALTO clients assume that the default cost of any missing cost entries in a received cost map is infinity.

While illustrates only the host and CDN PID types additional PID types may be used to represent characteristics of PIDs . For example other PID types may include mobile hosts wireless hosts or other classifications. In other examples PID types may include service classifications corresponding to service level agreements between customers and a service provider. These additional types may similarly be employed during resource selection to further service provider policies. As just one example an ALTO server may identify PIDs having type mobile host and generate cost maps to cause a redirector to send such PIDs to a content node that hosts a low resolution video stream.

In one example usage of network map of and cost map of a redirector e.g. redirector of requests and receives cost map and network map from an ALTO server. Redirector then receives a content request from a host having a source IP address. Redirector determines a PID that contains the source IP address from network map . Redirector then uses the cost map select the lowest cost CDN PID for the determined PID and find an IP address of a content e.g. CDN node contained by the lowest cost CDN PID. Selection of a content node contained by a PID may be random round robin or based on some level of content awareness. As one example of content awareness directed selection redirector may send requests for the same URI to the same content node.

Name server is a DNS server and may operate substantially similar to redirector of . Name server comprises ALTO client that requests and receives a network map and cost map from ALTO server of CDN . DNS proxy sends DNS request responsive to DNS request received from host and name server responds by selecting the most appropriate CDN node in this instance CDN node based on the IP address of host forwarded by DNS proxy in DNS request and the network map and cost map received from ALTO server .

Name server sends a DNS response that includes a network address for CDN node which DNS proxy forwards to host in DNS response . Host establishes communication session directly with CDN node to obtain the sought after content.

Many organizations content providers outsource DNS management to external vendors in the illustrated embodiment the administrator of network for various reasons like reliability performance improvement DNS security and others. Managed DNS service may be used either with caches within CDN or with other CDNs. DNS resolver load balances traffic dynamically across content servers. Typically a managed DNS service provider positions DNS resolvers across geographical locations to improve performance. DNS resolver comprises ALTO client to obtain a network map and cost map from ALTO server . Using the techniques of this disclosure DNS resolver may then load balance traffic based on information provided in the network map and cost map. For example the cost map may incorporate real time updates from CDN node that cause DNS resolver to increase or decrease an amount of requests redirected to CDN node .

In some embodiments CDN and network are connected to a single service provider network. In such instances network system operates substantially similarly to network system of . However in some embodiments CDN and network are connected to different service provider networks. In such instances network system operates substantially similarly to network system of where access network and CDN of network system correspond to network and CDN respectively. In such instances DNS resolver may connect to an ALTO server that performs to perform the master cost map generation techniques described above with respect to CDN ALTO server of .

In some embodiments a managed DNS service may utilize multiple CDN vendors and DNS resolver may redirect requests to different CDN nodes based on a subdomain. For example DNS resolver may comprise policies that specify redirection to CDN node for a particular subdomain and redirection to another CDN node not shown for a different subdomain. In this embodiment DNS resolver may comprise ALTO client .

Router comprises a control unit that includes a Routing engine coupled to a forwarding engine . Routing engine provides an operating environment for routing protocols that perform routing operations. Routing engine is responsible for the maintenance of a routing information base RIB to reflect the current topology of a network and other network entities to which it is connected. In particular routing engine periodically updates RIB to accurately reflect the topology of the network and other entities. Moreover routing engine pushes network topology information stored by RIB to service cards to provide topology input to virtual ALTO servers . Virtual ALTO server may use this topology input during PID aggregation network map generation and cost map generation.

In accordance with RIB forwarding engine maintains forwarding information base FIB that associates network destinations with specific next hops and corresponding interface ports. For example control unit analyzes RIB and generates FIB in accordance with RIB . Router includes interface cards A N IFCs that receive and send packets via network links and respectively. IFCs may be coupled to network links via a number of interface ports. Forwarding engine may comprise a switch fabric to forward the multicast packets to the interface cards based on the selected next hops.

Generally forwarding engine may relay certain packets received from IFCs to service cards . Specifically forwarding engine may include a flow steering unit to selectively direct packets to services engines for processing. That is flow steering unit receives incoming packet flows and determines whether to send the packets through the services engines for processing within one or more of service cards or whether to bypass the services engines . For example flow steering unit may direct packet flows destined for one of virtual ALTO servers provided by the service cards. An example forwarding plane configuration for separation of services and forwarding in an integrated services router may be found in U.S. patent application Ser. No. 12 235 677 entitled Forwarding Plane Configuration for Separation of Services and Forwarding in an Integrated Services Router filed on Sep. 23 2008 the entire contents of which is incorporated by reference herein.

Service cards receive packets from forwarding engine selectively provide services in accordance with the defined configuration data . In some case service cards may relay the packets or any response packets to control unit for forwarding by forwarding engine in accordance with FIB . A number of input and output logical interfaces may couple service cards to control unit .

Service cards having services engines may be installed along a backplane or other interconnect of router to perform a variety of services on the packets received from forwarding engine including ALTO services and other services such as filtering logging Intrusion Detection and Prevention IDP analysis virus scanning deep packet inspection. In some cases a service card may issue commands to dynamically configure a flow table within flow steering unit of forwarding engine . For example flow steering unit receives a packet and analyzes the received packet to identify a packet flow associated with the packet e.g. using a flow based provisioning logic to identify an n tuple based on information carried in the header or body of the packet e.g. a five tuple and an input interface . Upon identifying the packet flow flow steering unit references an internal flow table to determine whether belongs to a new packet flow or a packet flow already recognized by the router .

If flow steering unit does not find a match in the flow table which indicates that the packet belongs to a new packet flow the flow steering unit directs the packet to service cards of services engines for firewall services. When the packet is directed to services engines one of service cards applies ALTO services to those packets that conform to the ALTO protocol and that are destined for the ALTO services of the router. In addition the service cards may extract and assemble application layer data from the packet and a deep packet inspection DPI engine may perform Intrusion Detection and Prevention IDP analysis and or virus scanning to filter out bad packets. As a further example the service card may also perform ciphering NAT or authentication services.

Upon receiving and processing the packet or packets of a packet flow service cards may issue a command to install a dynamic filter within the flow table such as an exact match filter that indicates particular actions to be performed when a packet is received that matches the filter. In the case that service cards determine no further firewall services need be applied to a packet flow e.g. after determining that the packet flow is trusted or benign service cards may install a filter within flow steering unit to specify that subsequent packets of this packet flow session may be processed on a straight path that bypasses services engines . When flow steering unit receives a subsequent packet of the same packet flow flow steering unit checks the flow table determines that the packet matches the new dynamic filter and directs the packet on the appropriate path according to the dynamic filter.

Control unit includes a user interface by which a client such as an administrator ADMIN can directly or remotely configure router . By interacting with user interface various clients such as human users and automated scripts can perform various configuration tasks. For example the clients may configure virtual ALTO servers with provisioning policies network link transmission cost information and QoS information. As other examples the clients may configure interface cards of the router adjust parameters for the supported network protocols specify the physical components within the routing device modify the routing information maintained by the router access software modules and other resources residing on the router and the like. For example user interface may comprise a command line interface CLI or other suitable interface e.g. a web browser based interface for processing user or script driven commands. User interface represents software executing on routing engine that presents a command line interface e.g. via a shell or Telnet session for receiving configuration data as described herein including configuration for the ALTO protocol provided by services engines of service cards .

In one embodiment each of forwarding engine and routing engine may comprise one or more dedicated processors storage media hardware and the like and may be communicatively coupled by a data communication channel . The data communication channel may be a high speed network connection bus shared memory or other data communication mechanism.

In this way the operation of router can be viewed as segmented into a control plane a service plane and a data plane. The control plane may be seen as provided by routing engine and may include one or more software processes such as a management daemon and a routing protocol daemon executing on a computing environment provided by one or more microprocessors.

Router may further include a physical chassis not shown for housing control unit . The chassis has a number of slots not shown for receiving a set of cards including IFCs and service cards . Each card may be inserted into a corresponding slot of the chassis for electrically coupling the card to control unit via a bus backplane or other electrical communication mechanism.

Router may operate according to executable instructions fetched from a computer readable storage medium not shown . Examples of such media include random access memory RAM read only memory ROM non volatile random access memory NVRAM electrically erasable programmable read only memory EEPROM flash memory and the like. The functions of router may be implemented by executing the instructions of the computer readable storage medium with one or more processors discrete hardware circuitry firmware software executing on a programmable processor or a combination of any of the above.

The techniques described in this disclosure may be implemented at least in part in hardware software firmware or any combination thereof on the device management system and the managed devices. For example various aspects of the described techniques may be implemented as encoded program code executed by one or more processors including one or more microprocessors digital signal processors DSPs application specific integrated circuits ASICs field programmable gate arrays FPGAs or any other equivalent integrated or discrete logic circuitry as well as any combinations of such components. The term processor or processing circuitry may generally refer to any of the foregoing logic circuitry alone or in combination with other logic circuitry or any other equivalent circuitry. A control unit comprising hardware may also perform one or more of the techniques of this disclosure.

Such hardware software and firmware may be implemented within the same device or within separate devices to support the various operations and functions described in this disclosure. In addition any of the described units modules or components may be implemented together or separately as discrete but interoperable logic devices. Depiction of different features as modules or units is intended to highlight different functional aspects and does not necessarily imply that such modules or units must be realized by separate hardware or software components. Rather functionality associated with one or more modules or units may be performed by separate hardware or software components or integrated within common or separate hardware or software components.

The techniques described in this disclosure may also be embodied or encoded in a computer readable medium such as a tangible computer readable storage medium containing instructions. Instructions embedded or encoded in a computer readable medium may cause a programmable processor or other processor to perform the method e.g. when the instructions are executed. Computer readable storage media may include random access memory RAM read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM flash memory a hard disk a CD ROM a floppy disk a cassette magnetic media optical media or other computer readable storage media. It should be understood that the term computer readable storage media refers to physical storage media and not signals or carrier waves although the term computer readable media may include transient media such as signals in addition to physical storage media.

Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims.

