---

title: Automated connection to a preferred wireless device
abstract: A method identifies a wireless device in a list of available devices to be a preferred device based on comparing activity levels of devices in the list, the activity levels determined based on prior connections of the available devices to the computing device. The method waits a predetermined time period for a connection from the preferred device and restricts connections to other devices in the list during the period. Another method initially designates a first device in a list of available wireless devices as a preferred wireless device. For each other available device in the list, the method: retrieves properties including an activity level; calculates a recheck timeout based on the properties; and in response to determining that the device's activity level exceeds that of the previously-designated preferred device, designates the device as the preferred device. After the recheck timeout of the preferred device expires, the preferred device is connected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09357577&OS=09357577&RS=09357577
owner: Adobe Systems Incorporated
number: 09357577
owner_city: San Jose
owner_country: US
publication_date: 20131202
---
This disclosure relates generally to computer implemented methods and systems for connecting to wireless devices and more particularly relates to systems and methods for automatically connecting to a preferred wireless device.

Users working with multiple wireless devices such as wireless input devices in a collaborative environment may wish to use such devices with multiple computing devices in order to provide inputs or data to various computing devices such as a smart phone a desktop computer a tablet computer etc. Working with multiple wireless input devices and computing devices may require quickly switching connections between wireless devices and computing devices to leverage the strengths of particular wireless device computing device pairings. For example a user may use a Bluetooth enabled stylus input device in an application such as Adobe Ideas being executed on a tablet computer to sketch a drawing. The user may then need to use the same stylus in an application on a different computing device such as an instance of Adobe Ideas on another tablet computer.

While the wireless connectivity capabilities of wireless devices and computing devices aids in portability and collaboration with other users managing connections may prove to be a hindrance for some users and applications particularly for users in environments where multiple wireless input devices are discoverable by computing devices. Pairing operations are required for certain wireless devices such as those supporting the Bluetooth 2.0 or 3.0 specifications. For example in cases where multiple Bluetooth enabled styli are in range of a computing device a user of the computing device may need to manually select a preferred stylus to connect to. Similarly the ability to use a wireless input device on multiple computing devices such as tablet computers desktop computers and laptop computers is sometimes hindered by the need to manually pair and connect the wireless device to the computing devices.

The Bluetooth 4.0 specification includes a low power mode that simplifies use of low bandwidth wireless devices. Part of this specification known as Bluetooth Low Energy BLE or Bluetooth Smart eliminates the need to pair devices prior to use. With BLE and Bluetooth Smart wireless devices advertise their availability and a host computing device can then connect without user interaction. While such automatic connections eliminate the need for pairing they can create difficulties where multiple in range input devices are advertising at the same time. For example such automatic connections may prove to be a hindrance to keeping a reliable connection between a host and a particular stylus in cases where the host connects with one of many available styli.

In one embodiment a method identifies via a processor at a computing device a wireless device in a list of available wireless devices to be a preferred wireless device. The identifying is based on comparing activity levels of the available wireless devices in the list and the activity level of each of the available wireless devices is determined based on one or more prior connections of the respective available wireless device to the computing device. The method further comprise waiting a predetermined time period for a connection from the preferred wireless device such that connection to other wireless devices in the list of available wireless devices is restricted during the predetermined time period. Based on determining that the predetermined time period has expired the method allows a connection to another wireless device in the list of available wireless devices.

In another embodiment a method designates a first available wireless device in a list of available wireless devices as a preferred wireless device. Then for each of the other available wireless devices in the list properties of a next available wireless device are retrieved from the list a recheck timeout for the next available wireless device is calculated based on the retrieved properties and in response to determining that the activity level of the next available wireless device exceeds the activity level of the previously designated preferred wireless device the next available wireless device is designated as the preferred wireless device. As a result of completing the determining for the available wireless devices in the list the method identifies the preferred wireless device.

In yet another embodiment a computer readable storage medium has executable instructions stored thereon that if executed by a by a processor of a computing device cause the processor to perform operations. The instructions comprise instructions for identifying a wireless device in a list of available wireless devices to be a preferred wireless device the identifying based on comparing activity levels of the available wireless devices in the list the activity level of each of the available wireless devices determined based on one or more prior connections of the respective available wireless device to the computing device. The computer readable storage medium also has instructions for waiting a predetermined time period for a connection to be established with the preferred wireless device wherein connection to other wireless devices in the list of available wireless devices is restricted during the predetermined time period. The computer readable storage medium has further instructions for based on determining that the predetermined time period has expired allowing a connection to another wireless device in the list of available wireless devices.

According to another embodiment a system includes a one or more computing devices each including a processor and a memory having instructions stored thereon that if executed by the processor cause the processor to perform operations. The operations include receiving from one or more wireless devices properties of the one or more wireless devices the properties including for each of the one or more wireless devices a unique identifier and an activity level. The operations also include populating a list of available wireless devices with the received properties and designating a first available wireless device in the list as a preferred wireless device. The operations include for each of the other available wireless devices in the list retrieving properties of a next available wireless device from the list calculating based on the retrieved properties a recheck timeout for the next available wireless device and in response to determining that the activity level of the next available wireless device exceeds the activity level of the previously designated preferred wireless device designating the next available wireless device as the preferred wireless device. Repeating the retrieving calculating and determining for each of the other available wireless devices in the list results in the preferred wireless device being identified.

These illustrative features are mentioned not to limit or define the disclosure but to provide examples to aid understanding thereof. Additional embodiments are discussed in the Detailed Description and further description is provided there. Advantages offered by one or more of the various embodiments may be further understood by examining this specification or by practicing one or more embodiments presented.

Methods and systems are disclosed for establishing a connection between a host computing device and a preferred wireless device such as but not limited to a wireless stylus a wireless keyboard a wireless mouse or another wireless input device. The computing device can be for example a tablet computing device a smartphone a laptop computer or a desktop computer.

The computing device can be a mobile computing device operating one of a variety of mobile operating systems and platforms such as the iOS operating system OS developed by Apple Inc. the Android platform from Google Inc. the Microsoft Windows 8 OS the Microsoft Windows Phone OS the Symbian OS the Blackberry OS from Research In Motion RIM and similar operating systems providing wireless communications capabilities.

Embodiments provide methods and systems for at least partially automating connection of a preferred wireless device to a computing device i.e. a host device such as a smartphone a tablet device and a notebook computer that is within a wireless communications range of one or more wireless devices. An exemplary system includes means of identifying a preferred wireless device such as for example a stylus based on known and calculated properties of the wireless device. The properties can include an activity level. For example the more a stylus device is used to draw the more preferred it becomes as compared to lesser used styli. Also for example the more times a wireless input device has connected to a computing device within a certain time interval or duration the more preferred it becomes as compared to less frequently connected input devices.

Embodiments enable a computing device to automatically and reliably connect to a preferred wireless device i.e. a preferred device based on the wireless device s properties as opposed to randomly and potentially incorrectly selecting another lesser used wireless device. Exemplary embodiments reduce the likelihood of such wrong connections i.e. connections to wireless devices seldom or never used with a computing device without requiring a user of the computing device to manually select and connect to a preferred device. According to embodiments an in range available device is selected as a preferred device after comparing its usage level to usage levels of other available wireless devices. For example after identifying a most used in range wireless device in a list of available wireless devices for a given computing device the most used wireless device can be designated as the computing device s preferred wireless device.

An embodiment of the system implements an algorithm that takes into consideration a range of a wireless transceiver of the host computing device and wireless data links between the host computing device and wireless devices. The wireless transceiver can be a wireless network transceiver configured to communicate using a Bluetooth protocol i.e. a Bluetooth transceiver . In this embodiment wireless data links are established as Bluetooth communication links between a host computing device and one or more wireless devices having Bluetooth transceivers.

As embodiments of the system may not eliminate the possibility of establishing a connection to a preferred device that a user of the host computing device may wish to override embodiments include a user interface useable to disconnect a preferred device and or manually select another device as a new preferred device. According to an embodiment the system discovers wireless devices after users of such devices power on the devices and start using them. Although certain embodiments are described herein with reference to pressure sensitive styli it is to be understood that the methods systems and computer readable media described herein can be used to establish connections to any preferred wireless device. In certain embodiments the wireless devices are Bluetooth Smart devices or other Bluetooth Low Energy BLE devices having Bluetooth transceivers.

Exemplary methods and systems enable computing devices to quickly establish a connection to a preferred wireless device without requiring manual selections via a user interface or other manual steps. These embodiments allow wireless devices such as wireless styli and other wireless input devices to be automatically connected to mobile computing devices in environments where the types and properties of available wireless devices that are discoverable i.e. in range of a computing device s wireless network are not known in advance.

Certain embodiments provide systems and methods for connecting preferred wireless devices such as but not limited to Bluetooth enabled devices. Such Bluetooth enabled devices can be BLE or Bluetooth Smart devices. The Bluetooth specification requires that each wireless device has a unique hardware address and this is available to high level clients. Embodiments use this hardware address as part of a unique identifier of each wireless device. The unique identifier is provided along with other wireless device properties such as for example a signal strength and an activity level to a host computing device. Certain embodiments implement an algorithm that collects information about wireless devices i.e. the wireless device properties to determine whether to connect or not. In one non limiting embodiment the wireless device properties include a timestamp. Once a connection between a wireless device and a host computing device is established an exemplary algorithm can record a cumulative quantity of input received from the wireless device. One non limiting example of a quantity of input is a number of strokes such as keystrokes made with a particular input device. For example a wireless stylus with heavy usage as evidence by its quantity of input and or other factors contributing to its activity level can become a preferred device.

Should a user of a preferred device forcibly disconnect the stylus the stylus preferred state can be reduced. For example the quantity of input for a forcibly disconnected stylus can be decremented by a predetermined amount. Also for example the activity level can be lowered based on a disconnected state. This can be used to identify inadvertent connections since a user will typically force a disconnect without using a connected wireless device if the wireless device was inadvertently connected to a given host computing device. For example if a wireless device is forcibly disconnected from a computing device by a user which can be an indication that the user prefers to use another wireless device with the computing device an embodiment decreases the activity level of the intentionally disconnected wireless device so that it becomes less likely to be selected as a preferred device in the future. For example a measure of input quantity associated with a wireless input device such as a cumulative stroke count can be decremented in response to determining that the wireless device has been forcibly disconnected from a computing device. In additional or alternative embodiments in response to determining that two or more forcible disconnections of the wireless device have occurred within a certain time period i.e. over the past day week or month a recheck timeout for that device is incremented by a predetermined amount. According to embodiments a recheck timeout for a given wireless device represents a delay time i.e. in seconds during which that wireless device will not be connected as a preferred wireless device. For example if a wireless device has its recheck timeout increased as result of a forcible disconnect a subsequent connection of that device as a preferred device will be delayed for a longer period of time as compared to other wireless devices with shorter recheck timeouts. In embodiments recheck timeouts for newly discovered wireless devices are initially set to a default value i.e. three seconds and subsequently calculated individually based on activity associated with each wireless device. For example a recheck timeout can be decreased or decremented for a wireless device as the quantity of input increases i.e. an increased number of keystrokes or stroke count . This can result in this more often used wireless device being more quickly connected as a preferred device than lesser used devices. Also for example as the activity level of the a wireless input device approaches a threshold amount needed to be designated as a preferred device i.e. thirty inputs or strokes in certain embodiments its recheck timeout can be decreased or decremented down to zero seconds. Further for example a recheck timeout can be incremented for a wireless device exhibiting a relatively weak signal strength. This will delay connecting that device as a preferred device as compared to other wireless devices having stronger signals.

At connection time an exemplary client application will scan for available wireless devices such as styli and delay connection to an available stylus if a preferred device i.e. a device previously designated or determined to be preferred for that particular computing device is not discovered. This allows time for the user to turn on their device and for the application executing on the host computing device to recognize the preferred device. An embodiment of the client application will wait a predetermined time period for a connection to be established with the preferred wireless device so that connection to other wireless available devices is restricted during the predetermined time period. After determining that the predetermined time period has expired the client application allows for connection to another available in range wireless device. In one non limiting embodiment the predetermined time period is a tunable value with a default value of seven seconds.

The connection algorithm can take location into consideration. Wireless device properties of a discovered wireless device can include a signal strength. One example of a signal strength is a received signal strength indicator RSSI that indicates the strength of an underlying wireless link. In certain embodiments a signal strength is used as a cut off point for determining candidates for connection to a host computing device. That is a wireless device exhibiting a signal strength below a certain threshold will not be considered for connection as a preferred device until its signal strength surpasses the threshold. According to these embodiments the signal strength threshold can be a predetermined tunable value. An embodiment can use an RSSI indicating relative strength of an underlying Bluetooth radio signal for a Bluetooth communication link between a wireless device and a host computing device to infer a proximity property. For example a relatively stronger signal for a wireless device can be used to infer closer proximity to the host computing device.

According to embodiments a host computing device receives or is provided a list of available wireless devices. This list can include properties of newly discovered devices as well as known and calculated properties of previously discovered in range devices. The list can also include unique identifiers for the devices. In one embodiment a software application executable on the computing device can be invoked to look through this list of available devices and retrieve properties for a next available wireless device and begins an evaluation process. The application can be configured to retrieve an available device from the list and then calculate a recheck timeout for the device. In cases where the application has never seen or evaluated the device before a default recheck timeout is assigned. In one embodiment if the available device is newly discovered and the application has never seen the device before it will assign a default recheck timeout of three seconds to that device. In another embodiment if the application has never seen the device before it will assign a longer recheck timeout to that device than the recheck timeout used for a recognized current preferred device. Otherwise the application determines what the current recheck timeout for the available device is based on the device s properties such as an activity level. The recheck timeout can be stored in the list as a calculated property. Next in response to determining that the available device is the first device in the list the application designates the device as the new preferred device. Otherwise if the application determines that the available device is range and the current preferred device is not the available device is designated as the new preferred device. If the application determines that the current preferred device is in range but is lesser used than the available device the application makes the available device the new preferred device. At this point the application selects the next available device from the list and repeats the above noted calculations and evaluations for that next device.

After evaluating all devices in the list the application determines whether the recheck timeout for the currently designated preferred device has expired i.e. has passed or elapsed . If so the application connects the preferred device to the host computing device. By using the recheck timeout and the above described steps the application can initially delay connecting to a newly discovered wireless device. The recheck timeout can be based on the number of times a given wireless device has been used and its relative proximity to the host computing device. One measure or indicator of proximity can be a received signal strength indicator RSSI indicating the relative strength of a wireless signal i.e. a radio signal for a wireless communication link between the wireless device and the computing device.

Once the recheck timeout is calculated for a given available wireless device the application can then evaluate the wireless device to determine if it is a candidate device that the computing device may want to connect to as a preferred device. If this is the first wireless device in the list being evaluated and there is no current preferred device the first available device is designated as the preferred device. Otherwise the application evaluates the available device to determine if the device is more preferred than the current preferred device. An embodiment of the application includes comparing a cumulative quantity of input received from the available wireless device i.e. an actual stroke count to that of the current preferred device. In cases where multiple wireless devices are in the list the evaluation steps are iterated i.e. repeated in a loop for each wireless device in the list. For example in a second iteration the application will have already identified a preferred device. At this point the application can compare an activity level of the next available wireless device such as for example a stroke count of a stylus that is being evaluated to the current preferred device. After repeating this process for each wireless device in the list the in range device having the higher activity level which in one embodiment is measured in terms of stroke count will be designated as the preferred device and after preferred device s recheck timeout expires the preferred device is connected to the host computing device. Wireless devices not selected as the preferred wireless device can remain in the list. Such devices may be subsequently evaluated for example if the preferred wireless device is disconnected or becomes unavailable. The exemplary application can add newly discovered in range devices to the list and then repeat the cycle until it has again exhausted the list of available wireless devices and at the end selected another current preferred device. In some embodiments the recheck timeout for the preferred device must pass so that there is some delay prior to connecting to the preferred wireless device. These embodiments allow for disconnecting and saving properties of a previous preferred wireless device before the host computing device connects to the new preferred wireless device.

The following non limiting examples are provided to help further introduce the general subject matter of certain embodiments.

As used herein the term wireless device refers to any device capable of exchanging data over a wireless network. The data can be exchanged using a wireless transceiver in the wireless device. In certain embodiments the wireless network is a short range radio network. Although wireless devices can generally refer to computing devices smartphones and input devices for ease of explanation exemplary wireless devices described herein are slave devices connected to a master device i.e. a host computing device . That is wireless devices are devices that are discoverable by a host computing device and that the host computing device selects as a preferred wireless device i.e. a preferred device . In certain embodiments the wireless devices are BLE devices. In embodiments the wireless devices are input devices configured to provide input data to a host computing device.

As used herein the term input device refers to any device usable to interact with an interface of a computing device. An input device may be a pointing drawing device such as a stylus. Input devices can be configured to interact with a touch sensitive interface of a computing device such as a touch surface or a touch sensitive display. As used herein a stylus refers to any writing drawing or pointing instrument or utensil that is generally configured to be hand held and in the context of touch screen computing devices used to interact with a computing device having a touch sensitive interface or touch surface i.e. a touch computing device . The terms input device and stylus are used interchangeably herein to refer broadly and inclusively to any type of wireless input device capable of connecting to and interacting with a touch computing device.

As used herein the term network connection refers to a communication channel of a data network. A communication channel can allow at least two computing devices or systems to communicate data to one another. A wireless network connection can also allow a computing device i.e. a host device to communicate with a wireless device. Such a wireless connection can be a full duplex communications link over a short range radio network such as for example a Bluetooth wireless communication link. As would be understood by those skilled in the relevant art s a Bluetooth wireless communication link can operate in an unlicensed industrial scientific and medical ISM radio band in the 2400 2480 MHz frequency range using a frequency hopping transceiver. As described below with reference to such a transceiver can be included in wireless devices such as styli and host computing devices such as tablet devices. A Bluetooth wireless communication link can allow real time data and audio video AV communications between host computing devices and wireless devices. The protocol for such a link is based on time slots. A wireless communication link can be established as a radio link between a wireless transceiver in a host computing device and respective wireless transceivers in one or more wireless devices. A wireless communication link can also be established between a wireless transceiver in a first computing device and another wireless transceiver in another computing device. A communication channel can include an operating system of a first computing system using a first port or other software construct as a first endpoint and an operating system of a second computing system using a second port or other software construct as a second endpoint. Applications and modules hosted on a computing system can access data addressed to the port. For example the operating system of a first computing system can address packetized data to a specific port on a second computing system by including a port number identifying the destination port in the header of each data packet transmitted to the second computing system. When the second computing system receives the addressed data packets the operating system of the second computing system can route the data packets to the port that is the endpoint for the socket connection. An application or module can access data packets addressed to the port. Wireless devices that are in range of a wireless transceiver of a host computing device can broadcast packets with wireless device properties. Such properties can be sent via wireless communication links network connections and communications channels.

As used herein the term advertiser refers to a wireless device such as a Bluetooth Smart device or a Bluetooth low energy BLE device that broadcasts advertising packets during advertising events on advertising channels of a wireless network such as a Bluetooth network. An advertising event associated with an advertiser can include a series of between one and three advertising packets on different advertising channels sent by the advertiser.

As used herein the term electronic content is used to refer to any type of media that can be rendered for display or use at a computing device such as a computing device or another electronic device. Electronic content can include text or multimedia files such as images audio video AV data or any combination thereof. Electronic content can also include application software that is designed to perform one or more specific tasks at a computing device. Electronic content such as AV data can be transmitted via wireless networks such as the exemplary wireless network discussed below with reference to . Electronic content can also include application software that is designed to perform one or more specific tasks at a computing system or computing device. Computing devices include client and server devices such as but not limited to servers desktop computers laptop computers smartphones video game consoles smart televisions tablet computers portable gaming devices personal digital assistants PDAs etc. Computing devices can function as host computing device i.e. a host device in a wireless network. Electronic content can be streamed to downloaded by and or uploaded from computing devices. Electronic content can include multimedia hosted on websites such as Internet web sites intranet web sites standard web pages or mobile web pages specifically formatted for display on mobile computing devices. Electronic content can also include application software developed for computing devices that is designed to perform one or more specific tasks at the computing device.

Unless specifically stated differently a user is interchangeably used herein to identify a user account a human user or a software agent. Besides a human user who connects wireless devices to computing devices a software application or agent sometimes needs to connect wireless devices. Accordingly unless specifically stated the term user as used herein does not necessarily pertain to a human being.

The features discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provide a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing system from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

These illustrative examples are given to introduce the reader to the general subject matter discussed here and are not intended to limit the scope of the disclosed concepts. The following sections describe various additional embodiments and examples with reference to the accompanying. In the drawings generally common or like reference numbers indicate identical or functionally similar elements. Additionally generally the left most digit s of a reference number identifies either the drawing in which the reference number first appears or the drawing in which a related element first appears. The following sections describe various additional embodiments and examples with reference to the drawings in which like numerals indicate like elements. For brevity only the differences occurring within the Figures as compared to previous or subsequent ones of the figures are described below.

The computing devices can each be in communication with the wireless devices via the wireless network . In the exemplary embodiments illustrated in the wireless network can be a short range radio network such as for example a Bluetooth network. For example the wireless network can use short wavelength radio transmissions to communicate wireless device properties of wireless devices and respectively to computing devices via communication links . In such embodiments the computing devices can discover the wireless devices that are in range of their wireless transceivers see wireless transceivers in .

In accordance with embodiments the wireless devices can be advertiser devices i.e. advertisers configured to broadcast advertising packets during advertising events on advertising channels of the wireless network . For example computing devices that wish to form a connection with wireless devices can be configured to listen for connectable advertising packets sent via communication links and respectively. When configured this way the computing devices can function as initiators. If an advertiser wireless device uses a connectable advertising event an initiator computing device can make a connection request using the same advertising channel on which it received the connectable advertising packet. In the example of the advertising channel and the advertising packets can use communication link . The advertising event is ended and connection events begin if the advertiser wireless device receives and accepts the request for a connection to be initiated. Once a connection is established the initiator computing device becomes a master computing device i.e. a host computing device . In this non limiting example the wireless network functions as a piconet and the advertising wireless device functions as a slave wireless device. According to this embodiment the wireless network is a piconet functioning as ad hoc network linking one or more of computing devices to wireless devices using a wireless communication protocol such as for example a Bluetooth protocol. With continued reference to connection events can be used to send data packets between the host computing device and the slave wireless device . In wireless network channel hopping can occur at the start of each connection event. Within a connection event the host computing device and the wireless device can alternate sending data packets using the same data channel. For example the host computing device can initiate the beginning of each connection event and can end each connection event at any time.

The wireless device properties for each of the wireless devices can include for example a unique identifier and an activity level. In accordance with embodiments the unique identifier can be the hardware address of the wireless device or include the hardware address with additional information. The wireless device properties for the in range wireless devices can be stored in available device lists and on computing devices and respectively. As shown in each computing device can populate its own local available device list with the wireless device properties received via communications links 

As described in further detail below with reference to as part of a process for connecting to a preferred wireless device a computing device can retrieve wireless device properties of an available wireless device from the available device list . The retrieved wireless device properties can then be used to calculate a recheck timeout for particular available wireless device . Next in response to determining that the recheck timeout has expired i.e. elapsed or passed the computing device can connect the available wireless device to the computing device as a preferred wireless device where the connecting is based at least in part on the wireless device properties retrieved from the available device list . In an embodiment the available wireless device is only connected as a preferred wireless device if the activity level in its wireless device properties exceeds other activity levels in wireless device properties of other available wireless devices. Exemplary activity levels are described below with reference to . Once connected as a preferred wireless device the wireless device configured as an input device can be used as an input device on the computing device . For example the computing device accept input from the wireless device such as a wireless stylus in any suitable application such as but not limited to Adobe Ideas or Adobe Illustrator .

For example each of the computing devices can be configured to receive inputs from a connected input device for selecting modifying or otherwise using assets. The wireless devices can include any suitable device configured for providing input data other data and or control signals to the computing devices . A non limiting example of a wireless device is a wireless stylus configured to provide touch inputs to a touch screen device.

Each of the computing devices can include respective processors . The processor may include a microprocessor an application specific integrated circuit ASIC a state machine or other suitable processing device. The processor can include any number of computer processing devices including one. The processors can be communicatively coupled to a computer readable medium such as memories . The processors can execute computer executable program instructions and or accesses information stored in the respective memories . The memories can store instructions that when executed by the processors cause the processors to perform operations described herein.

A computer readable medium may include but is not limited to an electronic optical magnetic or other storage device capable of providing a processor see e.g. the processor of with computer readable instructions. Other examples comprise but are not limited to a floppy disk CD ROM DVD magnetic disk memory chip ROM RAM an ASIC a configured processor optical storage magnetic tape or other magnetic storage or any other medium from which a computer processor can read instructions. The instructions may comprise processor specific instructions generated by a compiler and or an interpreter from code written in any suitable computer programming language including for example C C C Visual Basic Java Python Perl JavaScript and ActionScript.

The computing devices can include any suitable computing device or system for communicating via a wireless network with wireless devices and executing the client applications . Non limiting examples of a suitable computing device or system include a desktop computer a tablet computer a smartphone or any other computing device or system suitable for using electronic content.

Each of wireless devices can include a respective processor and a storage medium or memory . In the non limiting example of a wireless device can be an input device embodied as a stylus. The processor of such a wireless device can execute instructions stored in the memory . The memory can include an I O module . The I O module can establish communications with one or more of the computing devices . The wireless device can communicate with the computing devices over the wireless network or another wireless network such as a Bluetooth network via a wireless transceiver or other suitable communication device. In one embodiment the wireless transceiver is a wireless network transceiver configured to communicate using a Bluetooth protocol i.e. a Bluetooth transceiver . A non limiting example of a wireless device is a stylus or other device configured to provide a touch input or other input to computing devices . In certain embodiments the wireless device is a multifunctional stylus having the storage medium or memory and a wireless transceiver in its body. In other embodiments the multifunctional stylus also includes a physical button see e.g. button in and a light emitting diode LED such as the LED shown in .

In some embodiments the memories and I O modules can be implemented as firmware. As used herein the term firmware is used to refer to one or more operating instructions for controlling one or more hardware components of a device. Firmware can include software embedded on a hardware device. A firmware module or program can communicate directly with a hardware component such as the processor of the wireless device without interacting with the hardware component via an operating system of the hardware device.

The method begins in step when a new wireless device is discovered. This step can be performed as part of a discovery process by a computing device . For example step can involve identifying a new in range input device that is in communication with computing device . For example this step can be performed by a client application executing on a computing device discovering and identifying a new wireless device in communication with the computing device . In an embodiment as the newly discovered wireless has not yet been used its activity level is set to zero i.e. zero strokes or inputs . After the new wireless device is discovered control is passed to step where unique identifiers of discovered in range wireless devices are determined.

As shown step comprises populating a list of available devices. The list can be the available device list described above with reference to . This step can comprise receiving wireless device properties of wireless devices that are in communication with the computing device via a wireless network . In embodiments the wireless device properties can include an activity level in addition to the unique identifier. As discussed above with respect to step any newly discovered wireless device will have an activity level of zero. After the list of available devices is populated control is passed to step . Step can include receiving properties and identifiers for discovered in range wireless devices .

Next in step a determination is made as to whether an available device in the list of available devices still needs to be evaluated. If it is determined that there is another available device in the list of available devices that has not yet been evaluated properties for that available device are retrieved from the list and control is passed to step . Step can comprise querying the available device list on the computing device to get wireless device properties for a next available wireless device . Otherwise all available devices in the list have been evaluated and control is passed to step .

In step a recheck timeout for the available wireless device under evaluation is calculated. The recheck timeout calculated in this step can be based on activity level indicating a level of activity for the available device. The activity level can be based on one or more of a quantity of inputs a number of connections in a timespan elapsed time since a most recent connection etc. This step calculates lower recheck timeout values for more active wireless devices such as for example devices having relatively higher numbers of inputs or strokes past connections and less elapsed time since a last connection. As shown in in certain embodiments the recheck timeout calculated in step is based on input quantity. For example in one non limiting embodiment a new never before seen device that is in range will have its recheck timeout set to a three second default based on its activity level being zero. According to this embodiment a newly discovered wireless device discovered in step and added to the list of in range available devices in step with an activity level of zero will have its default recheck timeout set to three seconds in step . Another embodiment uses a default recheck timeout of two seconds for an available device discovered in step . Over time as the activity level of a wireless device approaches the amount needed to be considered a preferred device i.e. thirty strokes or inputs in one embodiment the recheck timeout can be decreased down to zero seconds.

Step can result in the default recheck timeout increasing or decreasing as a function of the available device s wireless device properties and or activity level. An embodiment decrements the activity level for a wireless device by a predetermined amount for each forcible disconnection that has occurred for that device. In an exemplary embodiment the activity level of a wireless device is decremented by five strokes or inputs for each forcible intentional disconnect. Embodiments do not allow activity levels of devices to fall below zero. According to these embodiments the minimum activity level a device can have is zero and if a device having an activity level of zero is forcibly disconnected from a host computer the device s activity level will not be further decremented. As explained above wireless devices with activity levels of zero are treated as new never before seen wireless devices that will have their recheck timeout set to a default value i.e. three seconds in one embodiment . In an alternative embodiments in response to determining that two or more forcible intentional disconnects have occurred in the past for a particular available device the recheck timeout can be incremented by or set to a predetermined amount in step . In one embodiment the predetermined amount is twenty seconds. This may be done in cases where multiple disconnections are deemed to be an indication that a user of the disconnected wireless device does not wish to have it connected as a preferred device. After the recheck timeout is calculated control is passed to step .

In step a determination is made as to whether the wireless device whose recheck timeout was calculated in step is the first device in the list of available devices. As shown in the first time the iterative loop of steps is executed step designates the first available wireless device in the list to be a preferred wireless device i.e. an initial preferred device .

Step can comprise determining if the wireless device being evaluated is the first device in the list of available devices populated in step . If it is determined that the device is the first device in the list control is passed to step where the device is designated as the preferred wireless device. Otherwise the device is not the first device in the list and control is passed to step to determine if the device is in range while the current preferred device is not.

In step if it is determined that the device being evaluated is currently in range and the current preferred device is not in range control is passed to step where the device is designated as the new preferred wireless device. Otherwise control is passed to step where the activity level of the device being evaluated is compared to that of the current preferred device.

In step if it is determined that the wireless device being evaluated is used more often than the current preferred device control is passed to step where the device being evaluated is designated as the new preferred device. Step can comprise comparing the activity level property for an available wireless device being evaluated to the activity level of the current preferred device. In step the activity level of an available wireless device being evaluated is compared to the current preferred wireless device. The comparison in step can be based on a cumulative input quantity i.e. an input count or a keystroke count for the available device being evaluated and the current preferred wireless device. The input quantities for available wireless devices and the current preferred wireless device can be stored in a local persistent data store such as for example the memory on a host computing device performing the method. Exemplary input quantities are cumulative totals for each of the available wireless devices and can be associated with a unique identifier for each device. In one embodiment the unique identifiers are not the hardware addresses for the wireless devices but can comprise or be derived from hardware addresses. If the activity level of the device under evaluation is greater than that of the current preferred device control is passed to step . For example if it is determined in step that the available device being evaluated has an activity level indicating more keystrokes or inputs than the current preferred device control is passed to step so that the available device under evaluation is designated to be the new preferred device instead. In this way step enables a more frequently used device to become a new preferred device in lieu of a lesser used current preferred device. Otherwise the available device is used less often than the current preferred device and control is passed to back to step to determine if there is another available wireless device in the list.

In step the available wireless device is designated as the preferred device. In an embodiment step can result in designating an available in range device as a new preferred wireless device based on the available device having the highest activity level i.e. highest input quantity or keystroke count as determined by repeating steps for all available input devices. According to this embodiment the result of performing method and completing step can be that the most active in range available device is designated as the preferred device. After designating the preferred device control is passed back to step to determine if there is another available wireless device in the list. Step does not result in the preferred device being connected to a host computing device. That is a host computing device such as a touch computing device does not connect to a preferred device designated in step . Instead the host computing device connects to the preferred device in step after repeating steps for all available wireless devices in the list populated in step and then determining in step that the recheck timeout for the preferred device has expired.

According to embodiments steps are repeated until all available devices in the list of available devices i.e. the list created in step have been evaluated. As a result of evaluating all available devices the method identifies one wireless device from amongst the list of available wireless devices populated in step as the preferred wireless device. In embodiments the preferred device is determined by comparing one or more of a quantity of past connections over a time period a cumulative quantity of input over a time period and a quantity of data received from the available wireless device over a time period. According to embodiments the evaluation is based on one or more of an elapsed time since a most recent connection a quantity of past connections a quantity of inputs and a quantity of data received from a wireless device.

In step a determination is made as to whether the recheck timeout for the current preferred wireless device has expired. This step comprises determining if the preferred wireless device s recheck timeout calculated in step has expired. Step can comprise comparing the recheck timeout for the preferred wireless device to a system clock on a computing device where the method is being performed. If it is determined that the recheck timeout has passed or expired control is passed to step where the host computing device connects to the preferred wireless device and the method ends. Otherwise the recheck timeout has not expired and control is passed to step where the method waits for the recheck timeout to expire or for discovery of a new wireless device.

As shown in step is performed after repeating steps for each of the available wireless devices in the list of available devices and determining in step that the recheck timeout of the preferred wireless device has expired. In step a connection is established to the preferred wireless device. In an embodiment step can comprise establishing a wireless connection from a host computing device to the preferred wireless device identified as a result of iterating steps to evaluate the wireless devices in the list populated in step . In cases where the preferred wireless device and the host computing device each have a respective wireless transceiver step can be performed by establishing a wireless connection between the host computing device and the preferred wireless device via the transceivers. For example if the wireless transceivers are wireless network transceivers configured to communicate using a Bluetooth protocol i.e. Bluetooth transceivers step can comprise establishing a Bluetooth connection between the host computing device and the preferred wireless device .

In step when either the preferred device s recheck timeout expires or a new wireless device is discovered control is passed back to step . After step is repeated control is passed to step to determine if there is another available wireless device i.e. a newly discovered device in the list.

In the example shown in the user interface depicts a settings menu for the touch computing device to configure certain features of the device. The exemplary user interface can be rendered by the client application in the display device of a host computing device . Shown in user interface are a settings panel and a details panel . The settings panel includes a list of features of the touch computing device that may each be selected for configuration. For example the list of features in the settings panel includes an airplane mode Wi Fi Notifications and or other settings for configuring the touch computing device

In the example embodiment shown in the General feature is selected and the details that correspond to the General feature are depicted in the details panel . As shown one of the items in the General feature is configuring Bluetooth functionality. When the Bluetooth configuration is turned on the touch computing device generates a list of available devices with which to connect over Bluetooth . For example the list of available devices may include an input device i.e. a stylus such as an Adobe stylus pen a laptop device such as Dowd s MacBookPro a smart phone such as Geoff s iPhone and or any other Bluetooth capable device. In embodiments the list of available devices displayed in interface includes at least some of the properties of available devices in available device list for touch computing device . For example in additional embodiments not shown in addition to displaying a device name and a pairing connectivity status the list of available devices can include a proximity indicator an activity level indicator a timestamp and or an elapsed time since a last connection was made. The timestamp can correspond to a one or more of a last connection time a last input activity time and a discovery time. The proximity indicator can be based in part on a signal strength associated with a communication link between the computing device and wireless devices in the list of available devices . In additional or alternative embodiments the proximity indicator can be based on a geographic distance between the computing device and wireless devices in the list of available devices . For example the computing device can be a device configured to run a mobile operating system or platform such as the iOS operating system OS developed by Apple Inc. the Android platform from Google Inc. the Microsoft Windows 8 OS the Microsoft Windows Phone OS the Symbian OS the Blackberry OS from Research In Motion RIM and similar operating systems. Such operating systems and platforms can include a location service a geographic information system GIS or an application programming interface API that can be used to determine a geographic location such as for example a Global Positioning System GPS location of the computing device . In cases where a wireless device configured to connect to the computing device is also capable of providing its GPS location from its own location services or GIS the wireless device properties for that wireless device in the available device list can include a GPS location. In these cases the proximity indicator can be based at least in part on a geographic distance between the GPS location of the computing device and that of the wireless device.

As will be described with respect to embodiments automatically connect a wireless device to computing devices as a preferred wireless device and can visually indicate in display devices of the computing devices and or on the wireless device the connection of a preferred wireless device.

Throughout input devices and displays are shown with various icons command regions windows toolbars menus tiles and buttons that are used to initiate action invoke routines discover wireless devices advertise availability or invoke other functionality. The initiated actions include but are not limited to advertising availability i.e. becoming an advertiser wireless device selecting a preferred wireless device and wireless device connection inputs and gestures. In certain embodiments connection to a preferred wireless device is substantially automated so that the only connection input required is powering on a wireless device and a host computing device. For brevity only the differences occurring within the figures as compared to previous or subsequent ones of the figures are described below.

In embodiments the display devices and used to display the user interfaces shown in may be displayed via the display interface and the computer display described below with reference to . According to embodiments a user can interact with touch screen displays and using the exemplary styli wireless devices and shown in . However alternative and additional wireless devices can be used such as a different stylus a wireless mouse a wireless keyboard a wireless keypad a wireless joy stick a wireless game controller or other wireless input devices used to provide interaction between a user and client applications and . As described below with reference to such interaction can be used once a wireless device has been connected to a computing device as preferred wireless device.

Once the connection is established an embodiment of the client application records the quantity of inputs i.e. number of gestures key strokes or other inputs made with the wireless device . For example if heavily used the wireless device can become preferred or remain more preferred than a lesser used wireless device. Should a user of forcibly disconnect the wireless device that device s preferred state is reduced. One way to accomplish this is to decrement or reduce its activity level. For example a quantity of input or number of connections in the wireless device properties for the wireless device can be reduced in response to detecting forcible disconnection of that device.

In embodiments the wireless devices and shown in are pressure sensitive styli and their respective tips may be manufactured from smooth and or gentle materials that are not harmful to touch screen display devices and of the touch computing devices and . As shown the connection enables a user of the wireless device to interact with the client application using a variety of inputs including non touch inputs such as for example pressing the button when the tip is not in contact with the touch screen display device

With continued reference to an exemplary connection between another wireless device and the computing device can be established. In embodiments connection may be established by performing method described above with reference to . If the method determines that the wireless device has been used more often than wireless device the computing device will connect to the wireless device as the new preferred wireless device. As shown the wireless device will then be the active stylus useable to provide inputs i.e. via the tip to the client application currently executing on the computing device

With continued reference to a connection is shown that is maintained between the preferred wireless device and the computing device . Even in cases where a preferred device has changed for another computing device that used to have wireless device as its preferred device shows that the connection between the wireless device and the computing device can remain. This outcome can be a result of the wireless device properties the wireless device such as for example an activity level remaining superior to properties of other wireless devices available to the computing device

Although exemplary embodiments have been described in terms of apparatuses systems and methods it is contemplated that certain functionality described herein may be implemented in software on microprocessors such as a microprocessor chip included in the wireless devices shown in and computing devices such as the computer system illustrated in . In various embodiments one or more of the functions of the various components may be implemented in software that controls a computing device such as computer system which is described below with reference to .

Aspects of the present invention shown in or any part s or function s thereof may be implemented using hardware software modules firmware tangible computer readable media having logic or instructions stored thereon or a combination thereof and may be implemented in one or more computer systems or other processing systems.

If programmable logic is used such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations including multi core multiprocessor systems minicomputers mainframe computers computers linked or clustered with distributed functions as well as pervasive or miniature computers that may be embedded into virtually any device.

For instance at least one processor device and a memory may be used to implement the above described embodiments. A processor device may be a single processor a plurality of processors or combinations thereof. Processor devices may have one or more processor cores. 

Various embodiments of the invention are described in terms of this example computer system . After reading this description it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and or computer architectures. Although operations may be described as a sequential process some of the operations may in fact be performed in parallel concurrently and or in a distributed environment and with program code stored locally or remotely for access by single or multiprocessor machines. In addition in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.

Processor device may be a special purpose or a general purpose processor device. As will be appreciated by persons skilled in the relevant art processor device may also be a single processor in a multi core multiprocessor system such system operating alone or in a cluster of computing devices operating in a cluster or server farm. Processor device is connected to a communication infrastructure for example a bus message queue network or multi core message passing scheme. In certain embodiments one or more of the processors and described above with reference to the computing devices and wireless devices of can be embodied as the processor device shown in .

Computer system also includes a main memory for example random access memory RAM and may also include a secondary memory . Secondary memory may include for example a hard disk drive removable storage drive . Removable storage drive may comprise a floppy disk drive a magnetic tape drive an optical disk drive a flash memory or the like. In non limiting embodiments one or more of the memories and described above with reference to the computing devices of can be embodied as the main memory shown in .

The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit may comprise a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art removable storage unit includes a non transitory computer readable storage medium having stored therein computer software and or data.

In alternative implementations secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such means may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or EEPROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system . In non limiting embodiments one or more of the memories described above with reference to the wireless devices of can be embodied as the main memory shown in . For example in one non limiting embodiment the memory of wireless device can be embodied as an EPROM.

Computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card or the like. Software and data transferred via communications interface may be in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals may be provided to communications interface via a communications path . Communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link or other communications channels.

As used herein the terms computer readable medium and non transitory computer readable medium are used to generally refer to media such as memories such as main memory and secondary memory which can be memory semiconductors e.g. DRAMs etc. . Computer readable medium and non transitory computer readable medium can also refer to removable storage unit removable storage unit and a hard disk installed in hard disk drive . Signals carried over communications path can also embody the logic described herein. These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable computer system to implement the present invention as discussed herein. In particular the computer programs when executed enable processor device to implement the processes of the present invention such as the steps in the method illustrated by the flowchart of discussed above. Accordingly such computer programs represent controllers of the computer system . Where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive interface and hard disk drive or communications interface .

In an embodiment the display devices used to display interfaces of client applications and respectively may be a computer display shown in . The computer display of computer system can be implemented as a touch sensitive display i.e. a touch screen . Similarly the user interfaces shown in may be embodied as a display interface shown in .

Embodiments of the invention also may be directed to computer program products comprising software stored on any computer useable medium. Such software when executed in one or more data processing device causes a data processing device s to operate as described herein. Embodiments of the invention employ any computer useable or readable medium. Examples of computer useable mediums include but are not limited to primary storage devices e.g. any type of random access memory secondary storage devices e.g. hard drives floppy disks CD ROMS ZIP disks tapes magnetic storage devices and optical storage devices MEMS nanotechnological storage device etc. and communication mediums e.g. wired and wireless communications networks local area networks wide area networks intranets etc. .

Numerous specific details are set forth herein to provide a thorough understanding of the claimed subject matter. However those skilled in the art will understand that the claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Some portions are presented in terms of algorithms or symbolic representations of operations on data bits or binary digital signals stored within a computing device memory such as a computer memory. These algorithmic descriptions or representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. An algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context operations or processing involves physical manipulation of physical quantities. Typically although not necessarily such quantities may take the form of electrical or magnetic signals capable of being stored transferred combined compared or otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to such signals as bits data values elements symbols characters terms numbers numerals or the like. It should be understood however that all of these and similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining and identifying or the like refer to actions or processes of a computing device such as one or more computers or a similar electronic computing device or devices that manipulate or transform data represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the computing platform.

The system or systems discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provide a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing device from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

Embodiments of the methods disclosed herein may be performed in the operation of such computing devices. The order of the steps presented in the examples above can be varied for example steps can be re ordered combined and or broken into sub steps. Certain steps or processes can be performed in parallel.

The use of adapted to or configured to herein is meant as open and inclusive language that does not foreclose devices adapted to or configured to perform additional tasks or steps. Additionally the use of based on is meant to be open and inclusive in that a process step calculation or other action based on one or more recited conditions or values may in practice be based on additional conditions or values beyond those recited. Headings lists and numbering included herein are for ease of explanation only and are not meant to be limiting.

While the present subject matter has been described in detail with respect to specific embodiments thereof it will be appreciated that those skilled in the art upon attaining an understanding of the foregoing may readily produce alterations to variations of and equivalents to such embodiments. Accordingly it should be understood that the present disclosure has been presented for purposes of example rather than limitation and does not preclude inclusion of such modifications variations and or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art.

