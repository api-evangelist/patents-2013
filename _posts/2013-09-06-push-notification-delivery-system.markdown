---

title: Push notification delivery system
abstract: An example method for delivery of push notifications includes receiving a push notification including a message and a destination, creating a send token, sending a push notification derived from the received push notification and the send token, and receiving push information concerning a processing of the sent push notification which is identified by the send token. An example system for delivering push notifications includes a server system having a processor, memory, and a network interface, where the memory stores program instructions including code segments for receiving a received push notification via the network interface. In this example, the program instructions further includes code segments for creating a send token, code segments for sending a sent push notification derived from the received push notification and the send token via the network interface, and code segments for receiving received push information concerning a processing of the sent push notification are provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08996637&OS=08996637&RS=08996637
owner: Urban Airship, Inc.
number: 08996637
owner_city: Portland
owner_country: US
publication_date: 20130906
---
This application is a continuation of co pending U.S. patent application Ser. No. 13 160 190 entitled PUSH NOTIFICATION DELIVERY SYSTEM filed Jun. 14 2011 which is incorporated herein by reference for all purposes.

Push technology aka server push is a type of Internet based communication where the request for a given transaction is initiated by a publisher or server. It is contrasted with pull technology where the request for transmission of information is initiated by a receiving device or client. 

Push services are sometimes based upon information preferences expressed in advance. This is referred to as a publish subscribe mode . For example a client might subscribe to one or more information channels. The server associated with the channels can then push information to the client when new content becomes available.

There are many types of push services. For example synchronous conferencing and instant messaging are forms of push services. Increasingly popular are push enabled web applications including market data distribution e.g. stock tickers online chat messaging systems e.g. webchat online betting and gambling sports results monitoring consoles and sensor network monitor.

There are also hybrid push pull systems for example email begins as a push system in that the SMTP protocol upon which it is based is a push protocol. However the last step in the delivery of an email e.g. from a mail server to a desktop computer typically uses a pull protocol such as POP3 or IMAP.

As will be appreciated there are many and widespread uses for push technology. However one drawback of such technology is that there is no little or feedback to the publisher as to how the pushed information is being used or in some cases if the information was even successfully received. Therefore push technology tends to be a one way form of communication from publisher to client without the benefit of feedback from the client.

These and other limitations of the prior art will become apparent to those of skill in the art upon a reading of the following descriptions and a study of the several figures of the drawing.

By way of non limiting example a method for delivery of push notifications includes receiving a push notification including a message and a destination creating a send token sending a push notification derived from the received push notification and the send token and receiving push information concerning a processing of the sent push notification which is identified by the send token. The send token is stored in certain non limiting examples in a non transitory computer readable medium to identify the sent push notification. Also the received push information can be stored for example in a non transitory computer readable medium. In a further non limiting example a push token can be created after receiving the received push notification and subsequently stored in non transitory computer readable medium.

An example system for delivering push notifications includes by way of non limiting example a server system having a processor memory and a network interface where the memory stores program instructions comprising code segments for receiving a received push notification via the network interface. In a further example code segments for creating a send token code segments for sending a sent push notification derived from the received push notification and the send token via the network interface and code segments for receiving received push information concerning a processing of the sent push notification are provided.

Program instructions stored in non transitory computer readable media by way of non limiting example include code segments for receiving a received push notification including a message and a destination code segments creating a send token code segments sending a sent push notification derived from the received push notification and the send token and code segments receiving received push information which is identified by the send token concerning a processing of the sent push notification. The program instructions can further include for example code segments for creating a push token after receiving the received push notification. By a still further non limiting example the program instructions can include code segments for storing in a persistent database at least one of the received push notification the sent push notification the send token and the push token.

Program instructions stored in non transitory computer readable media by way of non limiting example include code segments for receiving a push notification with send token code segments for processing the push notification and code segments for sending push information which is identified by the send token concerning the processing of the push notification. By way of further non limiting example the code segments for processing the push notification can be associated with an application program.

An advantage of certain examples is that push notifications can be effectively sent to one or more destinations. Another advantage of certain example embodiments is that information concerning the processing of push notifications can be derived.

These and other embodiments and advantages and other features disclosed herein will become apparent to those of skill in the art upon a reading of the following descriptions and a study of the several figures of the drawing.

Stored in memory of notification server system are program instructions including a number of code segments for implementing various processes of the server system . For example the notification server system includes code segments for receiving a received push notification from a push originator server system such as a customer website via Internet . The received push notification can include a message and a destination for example.

Example notification server system can also include code segments for creating a send token and a sent push notification e.g. a sent push notification derived from the received push notification . The send token can be used to distinguish the sent push notification from other push notifications. For example the sent push notification with send token can be sent over the Internet to a push gateway server system . The push gateway server system can then send for example a push notification to a cell phone . In other embodiments a sent push notification with send token can be sent to other destinations such as a client computer proxy server device etc.

In this example gateway server system is typically provided by a provider implementing push notification protocols which are particular to for example a certain type of cell phone . For example iPhone and Android cell phones have dedicated push gateways maintained by Apple Inc. and Google Inc. respectively. It should be noted that the push gateway server system may be part of notification server system or may be separate as shown in .

In the example of code segments are also included in notification server system for receiving received push information concerning a processing of the sent push notification. These code segments can for example identify the sent push notification from the received push information by the send token. For example received push information can be developed by a cell phone which is coupled to a cellular network and from there to the Internet such as by an Internet Service Provider ISP . TCP IP protocol communications can thus occur between cell phone and notification server system including the received push information .

It will be appreciated that cell phone is just one example of a device or client that is receptive to push notifications. For example a portable device can communicate through Internet via an ISP using a WiFi or cable connection. Other devices such a personal computers can also communicate with the Internet via an ISP . Alternatively devices receptive to push notifications may be coupled directly to Internet . In any event the devices however they may be coupled to the Internet are capable of communicating with notification server system to provide for example received push information .

Thus despite the different ways in which they are coupled to Internet portable device other device and still other devices systems and apparatus not shown can participate in the receiving of push notifications and the providing of information concerning a processing of a push notification in much the same way described previously with respect to the example of cell phone . By way of further non limiting examples portable device other device and still other devices systems and apparatus may receive sent push notifications without the intermediary of a push gateway server system .

According to certain example embodiments notification server system receives a push notification including a message and a destination from push originator server system . Upon receiving the push notification notification server system can create for example a push token. As used herein a push token is an identifier used to represent the received push notification and is suitable to be used as a key in performing lookups to retrieve information pertaining to the received push notification identified by the push token. The push token may be derived in some way from the received push notification and or metadata related thereto e.g. a hash or may be otherwise generated or assigned e.g. it may be randomly assigned .

In this example an operation is performed by which the recipients of the push message are identified. Further push messages are generated which are addressed to the one or more recipients of the push notification and which preferably include another identifier referred to as a send token. As used herein a send token is an identifier used to represent a sent push notification and is suitable to be used as a key in performing lookups to retrieve information pertaining to the sent push notification identified by the send token. The send token may be linked to the sent push notification or may be unrelated to the sent push notification.

The send token in this example is therefore used to represent the sent push notification. The send token may also be associated with the push token on a one to one or many to one basis. That is a single push token may be associated with a single send token or with multiple send tokens. In such an arrangement it is possible to retrieve information about the receive push notification associated with the push token using the send token as a key and also possible to given a push token retrieve information about the sent push messages associated with one or more associated send tokens. It is therefore apparent that a one to many mapping may exist between the push token and the send tokens and that this mapping can be used to obtain related information given a push token or a send token.

By way of non limiting example a sent push notification or derived from a received push notification and a send token is sent over the Internet to a designated destination. For example push gateway server system is configured to forward the sent push notification to its destination e.g. cell phone or other mobile device by non limiting examples. Notification server system is disposed to receive push information or concerning a processing of the sent push notification as identified by the related send token.

The send token can be for example stored in a memory of notification server system to identify the sent push notification. Also the received push information can be stored for example in a memory of notification server system . The received push notification and or the sent push notification can also be stored in a memory of notification server system for example.

By way of further example a push token can be created after receiving the received push notification and can be subsequently stored in a memory of notification server system . The sent push notification can be sent to one or more destinations. In this example a number of send tokens are created corresponding to the number of destinations. It will therefore be apparent that there can be a one to one or many to one mapping between the send token s and the push token.

By way of non limiting example program instructions stored in a memory of notification server system can include code segments for receiving a received push notification including a message and a destination code segments creating a send token code segments sending a sent push notification derived from the received push notification and the send token and code segments receiving received push information which is identified by the send token concerning a processing of the sent push notification. In this example the program instructions can further include code segments for creating a push token after receiving the received push notification. By still further example the program instructions can include code segments for storing in a persistent database of notification server system at least one of a received push notification a sent push notification a send token and a push token.

By way of example and not limitation a device or client such as a cell phone portable device or other device may include program instructions stored in a memory which include code segments for receiving a push notification with send token code segments for processing the push notification and code segments for sending push information which is identified by the send token concerning the processing of the push notification. Such push information can be sent to for example notification server system to provide feedback from the device as to the processing of the push notification.

By way of non limiting example code segments for processing the push notification can be associated with an application program running on the client. For example code segments for processing the push notification can include a library of code segments which can be utilized by the application program. Further the push information in this example includes information concerning the use of the push notification by the application program. The push information may be augmented by other information such as life cycle event information pertaining to the device or an application program of the device. Such life cycle information may be sent separately or may in some cases accompany the push information.

Non volatile memory is by way of non limiting example coupled to bus and can serve as storage for the various program instructions and data for notification server system . As used herein non volatile memory shall refer to a non volatile computer readable medium such as a hard disk drive optical drive flash memory or other computer readable memory which does not lose data when power is removed. In certain examples some or all of the non volatile memory remote or network attached storage.

Both volatile memory and non volatile memory are examples of non transitory computer readable media. As used herein non transitory computer readable media refers to a physical memory and excludes propagating electromagnetic waves and or other forms of non statutory subject matter in accordance with current USPTO protocols.

According to certain example embodiments non volatile memory will store program instructions comprising an operating system for notification server system . The operating system may be UNIX Linux Windows or another operating system as will be appreciated by those of skill in the art. Further a portion of the storage capacity of non volatile memory may be used to store one or more databases and associated code segments. Of course operating system code segments databases and associated code segments etc. may also be stored in volatile memory for as long as it is provided with power.

I O subsystem is coupled to bus and handles the various input and output operations of notification server system which may include by way of example and not limitation output to a display input from a keyboard input from a pointing device etc. Such devices may be coupled part time to I O subsystem . Such devices may also be coupled via the network interface and a network which may be internet or another LAN or WAN. This allows for remote control and monitoring of notification server system .

It should be noted that the notification server system of may comprise multiple servers load balancers etc. Therefore as used herein a notification server system comprises one or more servers configured to implement the processes described herein. The notification server system depicted in is but one example hardware configuration for a notification server system.

A display subsystem of cell phone is coupled to bus and may include by way of example and not limitation a flat panel display such as an LCD display electronic paper display etc. an adapter to drive other attachable displays etc. Also display subsystem of cell phone may include an electro acoustic transducer aka speaker or earphone for audio output.

In this example a network interface coupled to bus provides access to a cellular network . This is typically accomplished with a bidirectional RF digital communication link . A memory serves in this example as a random access RAM memory of processor .

In addition to processor other devices coupled to bus may access memory which may be volatile memory using for example DMA transfers. A non volatile memory e.g. flash memory is coupled to bus in certain examples which can provide storage for program instructions for an operating system of cell phone as well as program instructions for the various applications of cell phone .

By way of non limiting example the received push notification can be received by an API call from push originator server system of . These API calls can be made by way of a non limiting example using a REST based API. As well known to those of skill in the art REST is an acronym for Representational State Transfers and is a way of organizing state transitions of and communications between computers clients and servers communicating in a network environment typically using HTTP or HTTPS protocol. REST based operations often include the ability to create read update and delete resources specified by a hierarchical specifier in a URL. For example an API call comprising a received push notification can be as follows 

After processing a received push notification the notification server system sends a sent push notification to for example the push gateway server system of . For example a push notification can implement the following format 

Notification server system can also for example be responsive to a push source interface which comprises for example a REST based API to be used to query statistical information concerning the use of a certain application which may be stored in database and queue subsystem as well as many other kinds of queries information upload operations information update operations and information deletion operations. By way of further example notification server system is also responsive to received push information and or app life cycle events typically from clients.

Notification server system can for example also include other processes such as processes to develop statistics from data stored in database and or queue such as received push information and app life cycle events . For example statistics can be developed such as the number of times a certain application program is opened initialized closed foregrounded backgrounded etc. on one or more clients. An example of received push information lakes the following format 

A still further example process that can be performed by notification server system is to periodically scan database and or queue for data that requires processing. After identifying such data processes can be initiated to for example enqueue a job to process the database and or queue typically to create derived data products.

If in operation it is determined that the API call is authentic an operation processes the API call by for example expanding a recipient list applying filters and enqueuing derived messages for forwarding to one or more push gateways. The operation is then completed in an operation . If in operation it is determined that the API call was not authentic the operation is completed at .

It should be noted that process may operate in a multi threaded mode concurrently processing multiple requests using resource locking state such as mutexes and or semaphores when manipulating data structures or other resources which could potentially become corrupted without the use of resource locking state.

Once the push token is created in operation an operation determines whether or not the push message corresponding to the push token should be deferred for delivery at a later time. If so operation defers the processing of the push message. The decision to defer the processing of the push message may be by way of non limiting example based on a set of rules stored in a database which may in some cases be modified by the push source. Such rules may state for example that certain messages should not be sent during a major sporting event.

The deferral of push messages may be recorded and a daemon for example can monitor the time and the state of deferred messages to determine which messages should be sent at a later time. When deferred messages that need to be sent are identified by the daemon in this example they continue in operation just as non deferred messages do in operation which expands the recipient information in the push message into a list of actual recipients. In an alternative example the handling of deferred messages can take place after operation so that deferral rules that pertain to specific recipients may be implemented.

It should be noted that push notifications for individual recipients may in some circumstances be handled individually in a streaming fashion or otherwise rather than as a hatch. Thus as operation expands the recipient list a stream of recipients flows from operation and the subsequent operations can be executed on a per recipient basis concurrent with the generation of the recipient list in operation .

An operation in this example filters inactive recipients such as persons who have removed the relevant application from their cell phone mobile device or other device. Then in an operation optional filters are applied to further refine the list of recipients. For example there may be a database entry for a given recipient which specifies that the recipient is not to receive push messages concerning product announcements. The optional filters may include other criteria such as a list of devices to which a certain type of message should not be sent. Persons of skill in the art will appreciate that a rich set of filters that are possible.

An operation then creates a send token for each given recipient. The send token may be a GUID or alternatively some other type of identifier which is sufficient to distinguish a sent push notification from others that are presently stored in the system. Then in an operation a set push notification is sent to a push gateway a client device or otherwise for each recipient. By way of non limiting example this may be accomplished by enqueuing the push notification in a queue that is used for the type of device. This queue is processed by a daemon that comprises code to format and send the push notification to the corresponding push gateway in the proper format and using the proper protocols for that gateway. Then in an operation the API request push token and send token s are stored in a queue in this example. The process is then completed at .

Subsequently in an operation the event is processed. In certain examples the processing of the event is performed in pipeline fashion where a number of transformations are cascaded together to form the pipeline. For example such a pipeline could include a count operation followed by an indexing operation which may develop a forward and or a reverse index into for example a table X followed by an indexing operation which may develop a forward and or a reverse index into for example a table Y optionally followed by one or more additional operations in the pipeline. When the event is processed in this non limiting example it can be in an internal format such as for example a Protocol Buffer format Code and documentation for Protocol Buffers is available from Google Inc. of Mountain View Calif. Then in an operation the event and or information pertaining to the event can be stored in a database. The process is then completed in an operation . It should be noted that in certain examples the queue or queues that are the subject of process of may include for example the queue or queues that are associated with the processes depicted in and .

In certain example embodiments jobs have certain ranges of data upon which they operate and the choice of worker machine will be determined by a range of data for the given job. The scheduler in this example initiates jobs based on the state of the database e.g. activity by an application over a range of time certain types of events such as those events that indicate that a user has viewed a push message etc. Certain jobs are meant to generate derived data products from the data in the database and may store their results in the database as well or elsewhere. Some jobs may have a higher priority than others with some jobs potentially waiting for days at a time in the queue.

Operation in this non limiting example can be applied not only to the data in the queue but to data that has been stored in a local database that comprises events whose transmission has been deferred possibly due to network inaccessibility or other factors that make the delivery of the information temporarily impossible. Information is cleared from the queue and the local database as it is successfully sent. The operation then continues with operation .

If it is determined in operation that a network is not available the operation continues with an operation which determines whether or not an event queue in a local database is full. If it is determined that the event queue is full the operation continues with an operation which removes one or more of the oldest events from the event queue. The operation then continues in an operation which stores the event in the event queue in the local database. If it is determined in operation that the event queue is not full then the operation continues with operation .

It will be appreciated that the forgoing systems and processes are essentially computer implemented processes. As such a number of different hardware and software platforms may be used to implement the systems and processes described herein. The processes are generally stored as program instructions including code segments in non transitory computer readable media that can be accessed directly or indirectly by systems and or devices as disclosed herein or otherwise. Furthermore although various embodiments have been described using specific terms words and or phrases such description is for illustrative purposes only. The terms words and or phrases used are for the purpose of description rather than of limitation.

It is to be understood that changes and variations may be made by those of ordinary skill in the art without departing from the spirit or the scope of the present invention which is set forth in the following claims. In addition it should be understood that aspects of various other embodiments may be interchanged either in whole or in part. It is therefore intended that the claims be interpreted in accordance with the true spirit and scope of the invention without limitation or estoppel.

