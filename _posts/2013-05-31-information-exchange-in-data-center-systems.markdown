---

title: Information exchange in data center systems
abstract: System information may be retrieved by an element manager on a device in a data center system where the element manager detects an application programming interface (API) call to the element manager from a centralized manager. The element manager establishes a two-way communication channel between the first element manager and the centralized manager according to a communications protocol. The element manager queries the centralized manager for data center system information through the two-way communication channel. The centralized manager manages a storage area network containing the device of the element manager.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09331894&OS=09331894&RS=09331894
owner: International Business Machines Corporation
number: 09331894
owner_city: Armonk
owner_country: US
publication_date: 20130531
---
This disclosure relates to information exchange in a data center system. In particular it relates to information exchange between a centralized manager and an element manager in a data center system.

An element manager is a software application that is imbedded into or installed on a data center device or element or console that accesses a data center device and is used to manage the device s particular data center resource. An element manager may not be responsible for managing other devices but the device managed by the element manager may be dependent on functions performed by other devices within a data center system. For example a server is dependent on the capacity and health of the hard drives that it is mapped to. Collection of element information and coordination of certain element tasks and operations can be achieved through a centralized manager controlled by a human operator. The centralized manager is an integrated software tool in the data center system that coordinates activities with element managers through a command line interface. The centralized manager gathers up and correlates resource inventory of the devices and harvests information from each of the element managers to simplify operations for the human operator.

For example a storage system such as the IBM Storwize V7000 may contain a storage element manager V7000 controller and a storage element disk drive as part of a fibre channel storage area network. The storage element manager may manage the storage resources of the storage element. A centralized manager such as IBM Systems Director may control certain actions such as configuration provisioning logical volume assignment and zoning for the storage element while the element manager may control more complex functions of the storage element. In addition to performing actions on the storage element the centralized manager may also control other elements outside the storage system such as a fibre channel switch of the storage area network and its corresponding network element manager.

In embodiments of the disclosure a method for retrieving system information by an element manager on a device in a data center system includes the element manager detecting an application programming interface API call to the element manager from a centralized manager. The element manager establishes a two way communication channel between the first element manager and the centralized manager according to a communications protocol. The element manager queries the centralized manager for data center system information through the two way communication channel. The centralized manager manages a storage area network containing the device of the element manager.

In other embodiments of the disclosure a system for sharing and retrieving information in a data center system includes a data center device having an element manager. The element manager has a communications protocol implementation and an information application programming interface API implementation. The element manager is configured to detect an application programming interface API call from a centralized manager. The communications protocol implementation is configured to establish a two way communication between the element manager and the centralized manager according to a communications protocol. The information API implementation is configured to query the centralized manager for data center system information.

In other embodiments of the disclosure a data center system for sharing data center system information includes a first device having a first element manager a second device having a second element manager and a centralized server having a centralized manager. The first element manager is configured to send first element information to a centralized manager. The second element manager is configured to detect an application programming interface API call from the centralized manager establish a two way communications channel between the second element manager and the centralized manager and request data center system information from the centralized manager. The centralized manager is configured to collect the first element information from the first element manager store the first element information and send data center system information to the second element manager upon request from the second element manager.

Consistent with embodiments of the present disclosure data center resource management and representation may be improved through two way information exchange among element managers and centralized managers in a data center system. This information exchange may occur through a centralized manager acting as an information exchange element for the elements of the data center system. The centralized manager and an element manager may have a relationship that allows the element manager to extract collected and generated system information from the centralized manager. The element manager may utilize that system information to improve its representation to human users and its management of its resource and other resources in the system.

By sharing element and centralized manager generated information among devices in the data center system an element manager may receive information and control its operations with less human input. A data center system with two way communication between element managers and the centralized manager could share information without the need to contact different administrators to obtain that same information. The data center system could also automate functions that previously required human input to perform due to the information becoming decentralized to the individual element managers.

An element device used in the data center may have its own management and configuration software known as an element manager. The element manager may receive commands from and send information to a centralized manager. A data center may have multiple elements and element managers which are synchronized with the centralized manager. The centralized manager retrieves information from the element managers correlates the information from the element managers processes the information from the element managers and sends commands to the element managers according to information obtained from the element managers and human users. The element information flows one way from the element managers to the centralized manager and the commands and queries flow one way from the centralized manager to the element managers. This flow of commands and information may create a manager resource relationship between the centralized manager and the element managers.

A centralized manager may communicate with an element manager through the use of an application programming interface or API. The API is a set of programming instructions and standards used for translation of instructions and communication between the element manager of the device and the centralized manager. The API allows software on the centralized manager to communicate with a remote application of the element manager through a series of calls. For example with the IBM Tivoli Storage Manager API a user can add API calls to applications such as those that control the V7000 storage system. An API may be directly compatible with a device so that compiled code may directly implement the API and function without additional compilation by the device or the API may be a multi platform standard that requires additional compilation by the device through an API implementation. The code supporting an API also known as an API implementation may be synchronized with or installed on an existing element manager such as a browser plug in or may be part of the element manager s software.

Certain functions of the elements in a data center system may be controlled by the centralized manager but many functions of these elements still require customization and interaction by a human operator through the elements element managers. An element manager may have unique features that are distinguished from other element managers and the API calls from the centralized manager cannot control all operations for elements. Due to this complexity of the features on specific devices within the data center system the centralized managers cannot coordinate all tasks and operations without human input. The centralized managers may not be configured to perform all the tasks of individual element managers which may include hundreds of functions instead the centralized manager may be configured to perform only the most commonly performed functions through the element manager. Additionally a benefit of centralized managers is that they may simplify a user interface a feature that may be rendered ineffective if the user interface was crowded with specific functions for every element with which the centralized manager has management capability.

One way communication and information transfer between a centralized manager and an element manager carries costs related to human input. Often different human users will have ownership and control of different elements in a data center system. For example in a storage system there may be one or more server administrators for the servers network administrators for the storage area network and storage administrators for the virtual and real storage devices. For proper data center operations these administrators may share information and coordinate operations both of which require resources and are open to human error.

The storage device manager C may detect the centralized manager and establish a two way connection with the centralized manager . Once the connection is established the storage device manager C may query the centralized manager for resource information such as server information storage area network information additional information created by the centralized manager or its own resource information as displayed by the various lines to the storage device manager C. The centralized manager may send the information to the storage device manager C which may utilize the information to improve management or representation of its own resources in the system.

The element manager may query the centralized manager for data center system information as in . Data center system information may include information as to how the element manager relates to other elements in the data center system such as resource usage by clients. After receiving the data center system information the element manager may utilize that system information to improve its resource presentation and management as in .

A data center system that utilizes a centralized manager as an information exchange element may have a centralized manager in communication with element managers using a communications protocol. is a diagram of a data center system having an element A A and an element B B in communication with a centralized manager according to embodiments of the disclosure. Element A A has an element manager A A and API implementation A A installed on element A A. Element B B has an element manager B B and API implementation B B installed on element B B. The data center elements A and B may have a resource A A and resource B B respectively. Element A A and element B B may be connected and transfer data to each other either directly or through a network such as a storage area network.

A data center element may be any device that contains a resource used in a data center system and is connected to other elements directly or through a network. A few examples of elements and their corresponding resources include a hard drive for storage a fibrechannel switch for network control and a server for network access. An element manager may be a software unit embedded or installed on an element in a data center system to manage the resource of the element or it may be a software unit installed on a control device that is connected to a data center element such as a console or controller. For purposes of this specification a console on which an element manager is installed may be considered part of the element. Examples of element managers may include a network manager such as IBM Brocade Fabric Manager for managing a fibrechannel switch a storage device manager such as IBM Storage HMC for DS8000 for managing hard drives and a server manager such as IBM Power Systems HMC for managing a p770 Power System P server.

Element managers may have information application programming interfaces API that allow the element managers to query or retrieve information from a centralized manager in addition to receiving and complying with information requests from the centralized manager. The API s may be programmed into the element managers through API implementations to enable the element managers to engage in two way communication with the centralized manager. Simpler API s may return information collected from and correlated with other element managers in the data center system which may resemble a client server function. More complex API s may return system information distilled from multiple sources and system information having added value from the centralized manager s processing or correlation of the information.

A centralized manager may be a hardware or software unit that collects correlates or processes information from elements within a data center system and issues commands to the elements based on human and data center system input. The centralized manager may act as an aggregator processor and store of information from the elements of the data center. The centralized manager may be a software program installed onto a centralized control server in communication with the elements of the data center system. Examples of centralized managers may include a centralized storage manager such as IBM Tivoli Storage Productivity Center and a centralized system manager such as IBM Systems Director .

A centralized manager and element managers may communicate through a communications protocol. The communications protocol may specify the rules that govern the transmission of communications messages. The communications protocol used to communicate between the centralized manager and element manager may inform how the element managers detect the centralized manager and establish a two way communication channel with the centralized manager. For example IBM Systems Director communicates with element managers using a variety of discovery protocols when discovering system resources the usage of which may depend on the resource type. The communications protocol may include a protocol suite such as TCP IP. The communications protocol may be programmed into the centralized manager and element managers through communications protocol implementations.

An element manager may monitor its ports for API calls from external sources as in . The element manager may have a socket API that allows the element manager to receive calls from external sources such as a centralized manager. An external source may access the element manager from a network socket having a socket address that includes an Internet Protocol IP address and a port number. The element manager determines the source of the API call as in . This may be done by evaluating the IP address and port number from which the API call comes. For example IBM Systems Director communicates over port unless a different port is specified. The element manager evaluates whether the centralized manager is the source of the API call as in . If the source of the API call is not a centralized manager the element manager continues to monitor API calls as in .

If the source of the API call is a centralized manager the element manager establishes two way communication with the centralized manager as in . The method by which the element manager establishes a two way communication channel with the centralized manager may depend on the communications protocol used between the element manager and the centralized manager. The element manager may require additional code such as a plug in to initiate the two way communication. The element manager may request access to the centralized manager as in such as by reflecting or sending back a socket bind on the port from which the centralized manager is communicating. The centralized manager may be secured and require a password which may be supplied by the element manager. The centralized manager receives the request and if the request is accepted may permit the response and authenticate itself with credential information such as by returning system version information. The element manager may receive the credential information as in to establish the two way communication channel.

After two way communication is established between the element manager and the centralized manager the element manager may query the centralized manager for data center system information as in through an API from the element manager. Some data center system information such as the human given names of other elements in the data center system may be communicated automatically to the element manager from the centralized manager. The element manager may request system information from the centralized manager as in . The centralized manager may send back system information which is then received by the element manager as in . Data center system information may be any system information collected or processed by the centralized manager and may include element information from elements in the data center system centralized information correlated or created by the centralized manager or information added by human users. For example system information may be information about the relationship of the element to the data center such as attachment to and consumption of the element s resource by other elements.

An element manager may utilize the data center system information retrieved from the centralized manager as in . The element manager s element may belong to a data center system that includes various elements that are related to the element manager s element but that do not share information about these relationships without the centralized manager acting as an information exchange element. For example a storage device may be configured to a storage area network and may be dependent on the health of the data channels of the storage area network but may not have any information about the storage area network beyond the ports accessing it.

Due to the multitude of element configurations and relationships possible for a data center system the information that may be utilized by the element manager may include any data center system information that relates to an element in the data center system. The following are examples of how an element manager may utilize system information from other elements in the data center system.

Two way communication with a centralized manager may simplify element manager control by representing to the element manager s human user the given name of other resources in the data center network. For example a storage element manager may require the world wide port names WWPN s of servers to configure the storage area network that accesses its storage resource. WWPN s are 8 byte hexadecimal addresses that are used for data exchange. A server on WWPN 1 provides the centralized manager with information that WWPN 1 is one of its FC port addresses and that its name is Server Alpha. On the centralized manager WWPN 1 corresponds to Server Alpha. A storage system on WWPN 2 provides the centralized manager with information that WWPN 2 is one of its FC port addresses that its name is Disk Beta and that it maps to WWPN 1 which the centralized manager correlates and stores in its information bank. On the centralized manager WWPN 2 corresponds to Disk Beta. However on the element manager for Disk Beta the WWPN of the server may only be represented as WWPN 1 as the element manager lacks the information of the centralized manager to provide the name of the server. When a user accesses the storage element manager to configure the SAN the user only sees WWPN 1 for the server and must correlate WWPN 1 with the server in order to continue with the configuration operation.

When the storage element manager is in two way communication with the centralized manager it may query the centralized manager for information correlating the WWPN information of the server with the human given server name. The centralized manager may cross reference the WWPN s of the server accessing it find out the human given name of the server and auto populate the host names and port alias names for the server. With this naming information the graphic user interface GUI of the element manager may utilize the centralized manager s information and display the given name of the server allowing easier configuration for the user.

A centralized manager may have information about the file system utilization within a storage volume such as a hard drive. When a centralized manager is in one way communication with a storage element manager the storage element manager may send file utilization information to the centralized manager such as the capacity of the hard disks. As a storage volume fills up the centralized manager may alert a human operator to the condition. The human operator may increase the amount of storage available at the storage element manager so as not to run out of storage for a server mapped to the storage volume. The centralized manager may not be configured to perform this operation requiring a human operator to interact with the storage element manager. The centralized manager may have the information but not the access the element manager may have the access but not the information.

When the storage element manager is in two way communication with the centralized manager control for increasing volume may be decentralized to the storage element manager as the file consumption information is available to the storage element manager. The storage element manager may have auto grow policy triggers such as volume limits so that the storage element self optimizes for a server without human input. The storage element manager may now have both the control of the element and the information necessary to automatically perform operations on the element.

A centralized manager may generate storage area network fabric information by monitoring the health of the data channels in a network. When a centralized manager is in one way communication with the storage area network manager and a data channel fails a human operator may adjust the data path ports to work around the failure.

When the network element manager is in two way communication with the centralized manager the network element manager may have predictive control of the network through fabric information that indicates the health of the data channels in the network. The network element manager may automatically adjust the data path ports to prepare for an upcoming failure or to adjust a current failure.

A centralized manager may have some management control over a pool of storage but may not have information for both storage device health and configuration. The centralized manager may extract storage information from individual storage elements of a storage pool controlled by a controller including the RAID level and disk protection of the storage elements. However when the centralized manager is in one way communication with the storage element manager and a storage device begins to fail a human operator may not have detailed system information about the storage pool and controller such as the human name of the controller for the storage device. Additionally the element manager for the failing storage device may not have information about its storage pool to the extent that it can exercise control over data transfer in the event of a failure.

When the storage element manager is in two way communication with the centralized manager the storage element manager may request the human names of the elements in its storage pool including the name of the controller. Additionally the storage element manager may request the disk protection information of other storage devices in its storage pool so that it may monitor the health of the other storage elements and prepare for failure by addition of storage to the storage pool.

The centralized manager may authorize an element manager as a client by establishing a two way communication channel with the element manager as in . The centralized manager may receive an access request from the element manager as in . The centralized manager may authorize access for the element manager as in . The centralized manager may require additional security input such as a password before allowing the element manager to access the centralized manager. If the centralized manager authorizes the element manager it may authenticate itself such as by sending its credentials to the element manager as in . The credentials may include the version number of the centralized manager or other identifier.

Once the element manager has been established as a client with a two way communication channel with the centralized manager the centralized manager may begin receiving queries for data center system information from the element manager as in through API calls from the element manager. The centralized manager may receive a request for system information from the element manager as in . This may be information gathered or processed by the centralized manager in described above. The centralized manager may send the information to the element manager as in .

Although the present disclosure has been described in terms of specific embodiments it is anticipated that alterations and modifications thereof will become apparent to those skilled in the art. Therefore it is intended that the following claims be interpreted as covering all such alterations and modifications as fall within the true spirit and scope of the disclosure.

As will be appreciated by one skilled in the art aspects of the present disclosure may be embodied as a system method or computer program product. Accordingly aspects of the present disclosure may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module device or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be but is not limited to for example an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device. Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wire line optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages including an object oriented language such as Java Smalltalk C or the like and conventional procedural programming languages such as C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a standalone software package partly on the user s computer and partly on a remote computer or server or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present disclosure have been described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other device to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowcharts and block diagrams in and illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present disclosure. In this regard each block in the flowcharts or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustrations and combinations of blocks in the block diagrams and or flowchart illustrations can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Note that Storwize Systems Director and Tivoli are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide.

