---

title: Determining relevancy and desirability of terms
abstract: A system and method to sort search results based upon a desirability value is illustrated. This desirability value may be based upon the difference between a demand value and a supply value. Demand may be based upon user activity such as click-throughs, purchases, price, or location. Supply may be based upon a supply of keywords that may be the number of times a word is used in search or item title. The system and method may include receiving a search query, associating a first numerical value with a keyword that is a part of the search query, tracking user activity associated with the keyword, associating a second numerical value with the keyword based upon the user activity, finding a difference value between the first and second numerical values, associating this difference value with the keyword, sorting keywords based upon the difference values, and returning the search results of the sorting.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08954424&OS=08954424&RS=08954424
owner: eBay Inc.
number: 08954424
owner_city: San Jose
owner_country: US
publication_date: 20130501
---
This application is a continuation of U.S. patent application Ser. No. 13 491 183 filed Jun. 7 2012 which application is a continuation of U.S. patent application Ser. No. 12 495 663 filed Jun. 30 2009 which application is a continuation of U.S. patent application Ser. No. 11 679 973 filed Feb. 28 2007 which application is a non provisional patent application claiming priority under 35 USC 119 e to U.S. Provisional Patent Application No. 60 804 426 filed on Jun. 9 2006 and U.S. Provisional Patent Application No. 60 804 506 filed on Jun. 12 2006 all of which are incorporated by reference in their entirety.

The present application relates generally to the technical field of commercial uses of search algorithms implemented on a computer.

Search algorithms are used to search for different types of data including text. This text may be in to the form strings of characters used to reference items for sale among other things. The efficiency of such algorithms may be based upon a number of factors including the speed and accuracy of the results.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of example embodiments. It may be evident however to one skilled in the art that the present invention may be practiced without these specific details.

Some example embodiments may include a system and method to facilitate textual summarization in real time for an on line end user e.g. a person performing searches . This textual summarization may be based upon certain values such as supply demand and desirability. The use of these values to facilitate an adaptive method and system of real time searching will be more fully described below.

In certain cases there are limitations associated with searches of databases using strictly Boolean rules. For example in the e commerce context the use of strictly Boolean based search methods do not always return search results that reflect the particular searcher s intent. For example an item A and an item B being available to sell is NOT always equivalent to both A and B being available to sell. Put another way laptop battery is NOT equivalent to laptop AND battery and laptop w battery IS equivalent to laptop AND battery while laptop w o battery IS NOT equivalent to laptop AND battery. The notion of particular searcher s intent is tied up in some cases with desirability. For example a user searcher may want to only purchase an iPod nano and not an iPod nano with a carrying case or some other extraneous items.

In some embodiments demand supply and desirability associated with a search query e.g. iPod nano may be provided by numerical values which are then in turn used to compute a relevancy score. This relevancy score is then used to organize e.g. sort results of a search query.

In some example embodiments the relevancy score for a word within the body of text used for example to describe an item for sale on a web site may be computed based on the historical statistics. For example if a user searches for a keyword and clicks on a search result instance e.g. an item in the search result a relevance credit may be added to each word in the title or other content portion of the selected search result e.g. the clicked item . If the user performs a further action with respect to the selected search result e.g. bids on the item a relevance algorithm described below may further increase the relevance score e.g. by adding relevance credits of grammatically meaningful portions of the body of text e.g. to each word in the title of that item .

By contrast for search result data with respect to which the user takes no further action e.g. the user does not click through a particular search result or does not take any commercial action with respect to an item listing the relevance algorithm may reduce the relevance score for grammatically meaningful portions of the body of text e.g. the relevance scores for each word in the title of an item listing may be reduced . In some embodiments no change occurs to the relevancy score for a particular word. Further when the relevance algorithm observes that the same query is received multiple times from multiple users the relevance algorithm may compute statistics for that query.

This system may include a one or more servers upon which reside a receiver such as a network adaptor card not pictured to provide a network interface to receive search queries transmitted by a user . Further this receiver may be a GUI in the form of a web page served up by the one or more servers using network adaptor card and associated network interface wherein a user inputs a search query using the GUI. see e.g. module below Once this search query is received by the receiver a first associator residing on the once or more servers associates a keyword with a first numeric value e.g. a percentage value reflecting number of times the keyword has been query relative to all keywords in the system . In some embodiments this first numeric value may be based upon usage of the first keyword in a plurality of search queries. This first associator may be for example a logical and operation implemented in hardware e.g. an and logic circuit or a join operation implemented in software using a. Structured Query Language SQL . see e.g. module below In some embodiments this first numerical value represents a percentage of times the first keyword is referenced in a plurality of search queries. Once the keyword and the first numeric value are associated a tracker residing on the one or more servers is implemented to track user activity e.g. click throughs purchases etc. associated with a keyword. This tracker may be for example a series of logical and operations e.g. an and logic circuit used in conjunction with a various registers implemented in hardware or a series of join operations implemented using SQL. see e.g. module below Some embodiments may include the tracker tracking user activity based upon some predefined e.g. system administrator defined activity by a user over a period of time after a certain number of activity events e.g. activity such as click throughs bids purchases or added to watch list operations or some other suitable metric for determining the initiation and duration of tracking. Further a second associator residing on the one or more servers is implemented to associate a second numerical value with the keyword based upon the user activity. In some embodiments this second numerical value is based upon determinable user activity associated with the first keyword. Some embodiments may include the second numerical value representing the percentage of times user activity is associated with the first keyword relative to a plurality of user activities. As with the first associator this second associator may for example be implemented using an and logic circuit or SQL operations e.g. a join operation to associate a keyword with a second numerical value based upon user activity. see e.g. operation below This association between keywords and user activity is then in some cases used by a calculator residing on the one or more servers to find a difference value between the first and second numerical values. This calculator may be implemented in hardware using a series adder subtracter or other suitable logic circuits implemented in hardware. Further this calculator may be implemented in software using various subtraction functions. In some embodiments the calculator is implanted in hardware or software as an algorithm by a module see e.g. operation below to find the difference value. Once this difference value this difference value or set of difference values is calculated see e.g. module below then a sorter residing on the one or more servers is implemented to sort the keywords based upon the difference values. see e.g. module below This sorter may be implemented in hardware or software. After the sorter has been executed an outputer residing on the one ore more servers akin to the network interface and associated adaptor card not pictured outputs the results of the sort. see e.g. module below 

Additionally the system may further comprise the one or more servers with a second receiver see above description of receiver residing on the one or more servers to receive a search query an extractor residing on the one or more servers to extract keywords from the search query an adder residing on the one or more servers to add the keywords to existing keywords a re calculator residing on the one or more servers to re calculate a percentage value for each keyword and a storage operatively coupled the one or more servers to store the re calculated percentage value into a keyword database. see e.g. module below In addition the re calculator may re calculate the percentage value based upon each keyword and a probability of appearance in a search query result by the keyword. Some embodiments may include the percentage value representing a percentage of search queries that each of the existing keywords has been used in a plurality of searches. This receiver extractor adder re calculator and storage may be implemented using hardware or in some cases software using.

Moreover the system may further comprise a second receiver residing on the one or more servers to receive activity data an extractor residing on the one or more servers to extract a keyword from the activity data to create an activity data set a calculator residing on the one or more servers to calculate a percentage the keyword is used in the activity data set an averager residing on the one or more servers to computer a new average based upon averaging in the percentage to an existing user activity percentage stored in a demand database and a storage operatively coupled to the one or more servers to store the new average value into a keyword database. see e.g. module below Some embodiments may include an activity percentage that reflects user activity relating to the second keyword relative to activity relating to a plurality of keywords. The system may further define user activity as selected from the group consisting of clicks user bids purchases and added to watch list activities. The system may further comprise an updator residing on the one or more servers to update a database with the difference value. This second receiver extractor calculator averager and storage may be implemented using hardware or in some cases software using.

Moreover the system further comprising a second receiver residing on the one or more servers to receive a sort request of search results a fetcher residing on the one or more servers to fetch a list of keywords associated with the search results from a database and an adder residing on the one or more servers to add up desirability values associated with each keyword. see e.g. module below Furthermore the system may describe the first numerical value as a demand value the second numerical value as a supply value and the difference value as a desirability value. This second receiver fetcher and adder may be implemented using hardware or in some cases software using.

In some example embodiments an end user using a cell phone can conduct a search query of a web site wherein the summarized text search results are provided. In one example embodiment the search query by an end user constitutes contextual information used to evaluate certain keywords. However in other embodiments other contextual information may be used e.g. contextual information regarding search queries from other users contextual information regarding information trends e.g. popular content observed by a search engine contextual information regarding item or service supply and demand with respect to a marketplace etc .

In some embodiments a cell phone may be used to conduct search queries and may also be used to receive summarized text results. This cell phone may use the WINDOWS SYMBIANT LINUX PALM OS or some other suitable operating system. As may be more fully illustrated below a user interface may be provided such that a user can conduct search queries. This user interface may be a GUI whereas in other embodiments it may be a command line interface. As previously stated this cell phone may be operatively coupled to a server via a network . This network may be a Code Divisional Multiple Access Network CDMA or other suitable type network.

The second stream of this dual stream flow chart titled tracking side module contains a number of activities relating to user activity tracking. A demand activity user interface which resides on a computer system or devices provides user activity data via for example a GUI to a tracking engine that tracks various user activities including for example the number of click throughs user may have executed. This tracking engine resides on a server and provides the results of this tracking to a demand data database these results being in the form of user activity percentages. This demand data database resides on a database . In some embodiments the database resides on a database distinct from database . A relevancy engine finds the number of differences between demand as stored in the demand data database and supply as stored in the keyword data database . This difference is determined using a mathematical equation that is described below. Once the desirability value for example a difference between demand and supply is determined the desirability value is provided to the relevancy historical data database . The relevancy engine resides on the server .

A method may include receiving a search query see e.g. module associating a first numerical value with a keyword that may be a part of the search query see e.g. module tracking user activity associated with the keyword see e.g. module associating a second numerical value with the keyword based upon the user activity see e.g. operation below finding a difference value between the first and second numerical values see e.g. operation below and associating this difference value with the keyword see e.g. module sorting keywords based upon the difference values see e.g. and outputting the results of the sorting see e.g. module . Some embodiments may include the first numeric value being based upon the usage of the first keyword in a plurality of search queries. Moreover in some embodiments the second numeric value may be based upon a determination of user activity associated with the first keyword. Further the first numeric value may represent the percentage of times the first keyword is referenced in a plurality of search queries. Additionally the second numeric value may represent the percentage of times user activity is associated with the first keyword relative to a plurality of user activities. Some embodiments may include tracking user activity based upon some predefined e.g. system administrator defined activity by a user over a period of time after a certain number of activity events e.g. activity such as click throughs bids purchases or added to watch list operations or some other suitable metric for determining the initiation and duration of tracking.

Furthermore the method may further include extracting keywords from the search query adding the key words to existing keywords re calculating a percentage value for each keyword and storing the re calculated percentage values into a keyword database. see e.g. module Additionally the method may include recalculating the percentage value based upon each keyword and a probability of appearance in a search query result by the keyword. Example embodiments may include re calculating a percentage value relating to each keyword the percentage value representing a percentage of search queries that each of the existing keywords has been used in a plurality of searches.

Further the method may include receiving activity data extracting a keyword from the activity data to create an activity data set calculating a percentage the keyword may be used in the activity data set averaging in the percentage to an existing user activity percentage stored in a demand database to generate a new average value and storing the new average value into a keyword database. see e.g. module Some embodiments may include an activity percentage that reflects user activity relating to the second keyword relative to activity relating to a plurality of keywords. In addition user activity may be selected from the group consisting of clicks user bids purchases and added to watch list activities. The method may further comprise updating a database with the difference value. The method may further comprise receiving a sort request of search results fetching a list of keywords associated with the search results from a database and adding up difference values associated with each keyword. see e.g. module Further the first numerical value may be a demand value the second numerical value may be a supply value and the difference value may be a desirability value.

In some embodiments a computer readable medium embodying instructions is implemented wherein instructions are described including a first instruction set to receive a search query see e.g. module a second instruction set to associate a first numerical value with a keyword that is a part of the search query see e.g. module a third instruction set to track user activity associated with the keyword see e.g. module a fourth instruction set to associate a second numerical value with the keyword based upon the user activity see e.g. operation a fifth instruction set to find a difference value between the first and second numerical values see e.g. operation below and associating this difference value with the keyword see e.g. module a sixth instruction set to sort keywords based upon the difference values see e.g. module and a seventh instruction set to output the results of the sorting. see e.g. module In some embodiments the first numerical value is based upon determinable usage by a user of a keyword in a plurality of search queries. Example embodiments may include a second numerical value based upon determinable user activity associated with the keyword.

The end user may use a computer system to conduct search queries. For example the computer system may use a Hyper Text Transfer Protocol HTTP to make search queries and to receive web pages containing relevant or full text search results. This computer system may provide a GUI to allow the end user to enter search queries. The results of these search queries may be presented on the computer system and more to the point on a screen operatively coupled to the computer system . These search results however may be projected or presented onto some type of other display medium including for example an electronic sign board or message board. The search results may be understood as providing a text summarization wherein the search results are summarized based upon the most relevant e.g. desirable keywords as determined by for example an algorithm executed at operation described below. The following GUIs e.g. and reflect the results of the execution of this algorithm.

Also described is a sort button executed when a new weight value is set by an end user . This weight value may be set automatically via a call to a function that receives a percentage value and returns the corresponding search result. That is for example if one sets a new relevancy weight value an auction ending time value or price value then a user may execute the sort button to re sort the search results. Additionally illustrated is sort button that when executed implements the sorting engine . Further illustrated is a time left field describing how much time is left in an auction and a price field illustrating the price for a particular search result.

Further illustrated in this GUI is a time left field a price field and various search results for example a search result field describing a search result in the form of a Apple ipod nano 4 GB MP3 player black sealed NR3 and free S H. Also under the price field is a price of 112.50. Further described in this search result is a time left and a time left field is the time left value in this auction which in this case is 26 days 10 hours and 31 minutes. Additionally illustrated is a search result described in the description field as a brand new sealed Apple ipod nano black 4 GB MP3 player. Further under the price field is a price of 120.35. Moreover under the time left field is a time remaining in the auction field containing the time left value which in this case is 25 days 11 hours and 5 minutes. In addition a send button is illustrated as is a text box wherein one may enter an Internet Protocol IP address. The send button and text box act to allow one to send search results e.g. and to for example an electronic sign board wherein the electronic sign board has an IP address associated with it such that it may receive textual or graphical data such as that provided by or described or illustrated in fields and .

In some example embodiments the physical location of the electronic sign board may dictate that the desirability weight be weighted heavily in favor of obtaining search results with a seller location close to the physical location of the electronic sign board . Put another way where the desirability weight uses physical location the location of the seller and the electronic sign board should be known such that the search results with sellers in close geographical proximity can be retrieved and displayed. This geographical proximity may be determined using the IP address of the electronic sign board compared to the physical address of the seller.

Some example embodiments may further include an automated search algorithm that automatically retrieves items with the highest desirability score for a geographical region. This algorithm could perform a simple SQL query for a location e.g. Denver for items with the highest desirability score and then display these items.

In some embodiments a user may be prompted with a web page containing a title and category of goods or service and may be automatically provided with recommendations regarding good keywords to be added or had keywords to be removed prior to conducting a search query. The concepts of good and bad as may be more fully discussed below may be based upon a numeric value associated with the keyword. For example these recommendations may take the form of words that may be filled in automatically into the text box as the user is typing his or her query. In still other embodiments the user may have a drop down menu that may be automatically populated with good keywords relating to a particular query keywords that the user can select. Some other suitable method for automatically allowing a user to select keywords via a widget may be implemented.

In some embodiments relevance search functionality may be implemented that may allow for reducing the manual effort associated with conducting a search query automated rule generation real time updating of the data set used to provide search results extensible flexible configurable as per business needs reuse for multiple types of search functionality across any data set and general purpose technology that can function as an enabling basis for a variety of uses at a publication system.

The desirability of a keyword contained in a search query may be viewed as the differential between demand and supply of the keyword and the goods associated with the keyword taken within the context of the user s search query or other data. For example the desirability of a keyword in a title of publication data is one visual factor that may cause a user to direct his or her attention and select that particular publication data in search results even though it is buried within a large set of titles and words. Conversely for example when a keyword is present many times on a page but is selected in a much smaller proportion when compared to other selections that keyword may be highly undesirable. Accordingly search results or data in the form of publication data can be sorted for example to mimic e.g. create a demand profile the keywords contained within these search results.

In some embodiments certain keywords in a search query are weighted or provided a numeric value. This numeric value is based upon the certain economic concepts such as supply demand and desirability quantified via the number of times a keyword exists as a part of a description of a good or service in a search result e.g. supply the number of times a particular keyword is a part of a search query or is selected e.g. demand and the difference between supply and demand e.g. desirability . In some embodiments for example a desirability index is computed e.g. in an offline mode using the latest demand and supply e.g. demand and supply for items offered for sale in an online multiple item listing snapshot. In some embodiments other factors may be used to compute a value. These factors include when a product of service corresponding to a search query became available on the market. For example wherein the data is an auction listing for a good a time component of weighted relevance score may be in the direction of ending later instead of ending sooner see e.g. object . Publishers of an auction listing may be motivated to modify publication data immediately after the relevance sort were for example to show newly listed publication data by default publishers may know if the publication data has a low or high score and proceed to revise again and again until they get a good placement. If for example the ordering favors ending soon a publisher may discover an auction listing approximate score near the end time at which time publication data modifications may be restricted. These quantified values create a data set that can be used to order certain keywords or combinations of keywords as they may appear in a search result. These search results may be ordered or sorted based upon these quantified keyword values or combinations of keyword values. Other example embodiments may be extended to all publication data features or attributes not just keywords. Such attributes may include for example numerical features like seller rating geographical location price range of bids time left Boolean features like bin auction etc. This mapping of numeric values to keywords is more fully illustrated below.

In some embodiments search results may be sorted such that the spectrum of the search results may be displayed in a manner that a user can easily review the spectrum of the search results. In some embodiments since the initial web page gets the most reviews an example embodiment seeks to represent the entire spectrum of the Demand profile in an initial presentation e.g. on the first page of search results. In another example for users looking for DELL laptops if 20 of users usually want LATITUDES and 15 INSPIRONS then an example embodiment may show approximately 20 DELL LATITUDE laptops and 15 INSPIRONS in an initial presentation of search results. Going to a subsequent presentation e.g. the next page the display may also be similar to the demand profile.

In some embodiments various measures of demand are taken. Demand may include the number of clicks on a GUI object or other type of input used to select a particular good or service. Demand may also be in the form of a title as searched for by a user keywords as used to search by a user or whether the item or query returned had a picture or has a picture. Demand may also be determined as searching by seller rating or searching by time left in an auction or searching for a good or service in a particular price range or geographical location. Moreover the auction type of shipping prices may be an indicator of demand. These various measures of demand are stored in a database. Once stored they are given a value and then compared to supply with the difference between demand and supply yielding a result in the form of a desirability value or score. This desirability value or score is then saved into a database. In some example embodiments a GUI is used to perform searches based upon the weighting of these various demand types or measures. For example a user may in some embodiments be able to weight their search entirely based upon time left in an auction. So for example if one conducts a search for iPod nano they can weight their search so that they get that iPod nano with the most time left in the auction or the least amount of time left in the auction. Similarly they may be able to perform a search that is weighted towards geographical location such as for example they may be able to search for iPod nano but based upon their present geographical location or location that they provide they may be able to weight a search such that they find the iPod nano that is geographically closest to them or geographically most distant. Still in some other embodiments a user may be able to weight demand based upon price range. Such as thr example a user may be able to conduct a search for iPod nano but set the weighting such that they get that iPod nano with the lowest price that is the most affordable iPod nano or that iPod nano with the most expensive price. Still in other embodiments these various weighting can be combined together such as for example geographical location price range and time left in an auction can be combined together such that you get a search query that most closely reflects all three of these weightings plus the query. reflect this type of weighting combination.

The sorting of these search results based upon a demand profile or weighted value can be performed in real time or offline using efficient sorting algorithms such as Quick sort Radix sort or some other type of sorting algorithm providing for example O n log n or O n performance. This demand profile and its associated values or the weighted values are used as for example the basis for sorting supply demand desirability or some combination of these values.

In some embodiments once these search results are sorted they are placed into some type of efficient data structure on as to allow for efficient searching. These data structures include a Binary Search Tree Radix Tree Hash Table Heap Red Black Tree or some other suitable data structure as is known in the art. In some embodiments an auto tag hierarchy is extracted from the search results and stored in a data structure such as those described above.

In some embodiments words may be encountered which have not been quantified that is words that do not as of yet have a numeric value associated with them. A numeric value may be attached to these words based upon the value of similar words as they presently exist in a data set or based upon an auto tag structuring technology. For example upon running the auto tag structuring on publication data returned for a search query for a DELL laptop if a new word is encountered in the binary search tree where all its peers are LATITUDE models then the algorithm may make reasonable assumption that it is also a LATITUDE model. The information from other LATITUDE models may then be automatically used to bootstrap the relevance information for the new word along with a positive bias to give it more exposure initially. In a short amount of time enough data may in the above manner be collected to consider it a known word.

This algorithm may have one or more of the following characteristics it may not be dependent upon classification engine for functionality it may be complementary to classification engine when present it may not require extensive manual work or defining rules it may be highly configurable on a macro level e.g. weight profiles etc. it may work on random text not just well formed products it may provide a framework for evaluating not just text but multiple types of feature including unbound or range bound numeric features multi valued name value pairs it may respond quickly and automatically to gaming it may be able to provide a demand proportional coverage snapshot of inventory it may be able to evaluate relevance of an entity given a variety of contexts e.g. how relevant is it to this input query or how relevant is it to this user or how relevant is it to this group of socially connected users and so on in real time and it may perform as best as possible for a long series of unpopular queries.

Again this algorithm may have one or more of the following additional characteristics it may be always up to date accurate and current with market trends it may allow for keyword experience history of use see the description for the feedback loop above as a value to organize any data structure on as to guarantee minimum average number of clicks before a bid it may allow for content summarization research and a title modification advisory service it may function such that given a title and category we can recommend good keywords to be added or bad keywords to be removed it may facilitate mobile search functionality it may allow for the intelligent auto summarization of content it may be applied to multiple types of publication data features not just keywords including for example numerical features like price number of bids time left and Boolean features like bin auction etc. it may allow for average selling price determination to be used it provides for an instant hot deal finder and it may allow for a community based taxonomy generation assisted by automatic clustering.

The percentage value for for example keywords denoting supply as illustrated at operation is calculated in the following manner. The total occurrence of every unique keyword in all the titles is first determined. Then the percentage occurrence of each keyword in the result set is determined. For example if there were 1000 items in the result and the word charger occurs in 900 items then the supply percent of charger is 90 . If the keyword player occurs in 50 items then its supply percentage is 5 .

The percentage that each keyword is used in an activity data set as illustrated at operation is calculated in the following manner. Activity data is collected on a daily basis data that includes activities such as clicked hid bought or added to watch list activities are associated with keywords used in item titles. These activities are known as constraints. For example if fir the query iPod nano 1000 click throughs are collected and we know the item title of each one then the occurrence of every unique keyword in this set of titles is calculated. The percentage occurrence of every keyword in the same set is calculated. Thus if the keyword charger occurred in 100 of these 1000 titles the percentage of charger in the demand is 10 . Similarly if player occurs in 950 titles its demand percentage is 95 . The demand percentages for all the keywords for all the known search queries in the last few weeks may be recorded in some cases.

In some embodiments as illustrated at operation the following algorithm e.g. mathematical equation to find the difference between demand and supply to determine desirability Desirability log 2 1.0 log 2 1.0 

Other implementations of this algorithm can be applied to find the difference between demand values and supply values. These other implementations may include for example finding the difference between demand and supply without using dw sw or s for the purposed of weighting or using some other weighting value. These weighting values may be determined through empirical testing and or modeling. In some embodiments this algorithm is implemented in real time and on line to provide real time or near real time updating of the data set as it may exist in for example a database see below . In being applied in real time this algorithm can facilitate an adaptive system wherein desirability data is updated to reflect the current supply demand and desirability values of users e.g. end user and to adapt to these values. Further this algorithm may be applied to individual documents e.g. a web page or web content such that textual summarization is generated for individual documents and or it may be applied to a set of documents.

The RDS includes a publication data table in which are maintained publication data records thr goods and services that are available to be or have been transacted via the networked system. Each publication data record within the items table may furthermore be linked to one or more user records within the user table on as to associate a publisher and one or more actual or potential viewers with each publication data record.

A transaction table contains a record for each transaction e.g. a purchase or sale transaction pertaining to publication data for which records exist within the items table .

An order table is populated with order records each order record being associated with an order. Each order in turn may be recorded with respect to one or more transactions for which records exist within the transaction table .

Bid records within a bids table each relate to a bid received at the networked system in connection with an auction format listing supported by an auction applications . A feedback table is used by one or more reputation applications in one example embodiment to construct and maintain reputation information concerning users. A history table maintains a history of transactions to which a user has been a party. One or more attributes tables record attribute information pertaining to publication data for which records exist within the items table . Considering only a single example of such an attribute the attributes tables may indicate a currency attribute associated with a particular publication data the currency attribute identifying the currency of a price for the relevant publication data as specified by a publisher.

A family table in some embodiments allows for users to be associated together into family groups. Within this table user information from the user table is aggregated together such that queries can be made of groups of users as opposed to individual users.

In some embodiments a database contains data related to desirability. Some embodiments may include a table with data relating to an input query e.g. the name of an item and various constraints associated with this query such as for example the time left in an auction a particular sellers rating whether a picture of the item for sale is available the geographical location of the seller or some other suitable type of constraint. Further a field relating to desirability scores provides information relating to the computational results arising from the execution of the desirability engine and specifically the operation . This score is a percentage value relating to all values for that constraint type e.g. click throughs user purchases while in other embodiments it is a straight number value. The below table illustrates these various fields of data.

The above illustrated modules and or operations performed by these modules may be performed by computer systems configured as a client e.g. computer system or devices server e.g. server or peer to peer device. These various modules can be implemented on an as needed basis. These modules may be written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Java Enterprise Beans EJB Component Object Model COM or Distributed Component Object Model DCOM just to name a few. These modules are linked to another program via various Application Programming Interfaces APIs and then compiled into one complete server client and or peer to peer application. The process for using modules in the building of client server and or peer to peer applications is well known in the art. These modules may be linked together via various distributed programming protocols as distributed computing modules.

In some embodiments distributed programming is used to implement one or more of the above modules across a distributed programming environment. For example a keyword search engine may reside on a server that is remotely located from a computer system containing a search module e.g. . These first and second computer systems can be configured in a server client peer to peer or some other network topology. These various modules e.g. and can be written using the above illustrated component design techniques and can be written in the same programming language or a different programming language. Various protocols are implemented to enable these various modules and the operations executed by each to communicate regardless of the programming language used to write these components. For example a module written in C using CORBA or SOAP can communicate with another remote module written in JAVA . These protocols include Simple Object Access Protocol SOAP the Common Object Request Broker Architecture CORBA or some other suitable protocol. These protocols are well known in the art.

In some embodiments some of the above referenced modules e.g. and are assembled to form a platform architecture. is an example network diagram illustrating a platform architecture within which one example embodiment may be deployed. A networked system in the example forms a network based publication system or publication system provides server side functionality via a network connection e.g. the Internet or wide area network WAN to one or more clients. illustrates for example a web client e.g. a browser such as the INTERNET EXPLORER browser developed by Microsoft Corporation of Redmond Wash. State and a programmatic client executing on respective client machines e.g. computer system and .

An API server and a web server are coupled to and provide programmatic and web interfaces respectively to one or more application servers . The application servers host one or more market place applications and payment applications . The application servers are in turn shown to be coupled to one or more database servers that facilitate access to one or more databases .

Supply side module may reside on the networked system as a part of a application server . This supply side module may contain the previously described modules and . Additionally a tracking side module may reside on the networked system as a part of the application server . This tracking side module may contain the previously described modules and .

In some embodiments the payment applications may provide a number of payment services and functions to users e.g. end user . The payment applications may allow users to accumulate value e.g. in a commercial currency such as the LS dollar or a proprietary currency such as points in accounts and then later to redeem the accumulated value for products e.g. goods or services that are made available via the publication system applications . While the publication system and payment applications are shown in both forming part of the networked system it may be appreciated that in alternative embodiments the payment applications may form part of a payment service that is separate and distinct from the networked system .

Further while the system shown in employs a client server architecture the present invention is of course not limited to such an architecture and could equally well find application in a distributed or peer to peer architecture system for example. The various market place applications and payment applications could also be implemented as standalone software programs which do not necessarily have networking capabilities. The web client accesses the various market place applications and payment applications via the web interface supported by the web server . Similarly the programmatic client accesses the various services and functions provided by the market place applications and payment applications via the programmatic interface provided by the API server . The programmatic client may for example be a publisher application e.g. the TURBOLISTER application developed by eBay Inc. of San Jose Calif. to enable publishers to author and manage listings on the networked system in an off line manner and to perform batch mode communications between the programmatic client and the networked system .

The networked system may provide a number of publishing listing and price setting mechanisms whereby a publisher may list or publish information concerning goods or services for sale a viewer can express interest in or indicate a desire to purchase such goods or services and a price can be set for a transaction pertaining to the goods or services. To this end the publication system applications are shown to include at least one publication application and one or more auction applications that support auction format listing and price setting mechanisms e.g. English Dutch Vickrey Chinese Double Reverse auctions etc. . The various auction applications may also provide a number of features in support of such auction format listings such as a reserve price feature whereby a publisher may specify a reserve price in connection with a listing and a proxy bidding feature whereby a bidder may invoke automated proxy bidding. A number of fixed price applications support fixed price listing formats e.g. the traditional classified advertisement type listing or a catalogue listing and buyout type listings. Specifically buyout type listings e.g. including the BUY IT NOW BIN technology developed by eBay Inc. of San Jose Calif. may be offered in conjunction with auction format listings and allow a viewer to purchase goods or services which are also being offered for sale via an auction for a fixed price that is typically higher than the starting price of the auction.

Store applications allow a publisher to group listings within a virtual store which may be branded and otherwise personalized by and for the publisher. Such a virtual store may also offer promotions incentives and features that are specific and personalized to a relevant publisher. Reputation applications allow users that transact using the networked system to establish build and maintain reputations which may be made available and published to potential trading partners. Consider that where for example the networked system supports person to person trading users may otherwise have no history or other reference information whereby the trustworthiness and credibility of potential trading partners may be assessed. The reputation applications allow a user for example through feedback provided by other transaction partners to establish a reputation within the networked system over time. Other potential trading partners may then reference such a reputation for the purposes of assessing credibility and trustworthiness.

Personalization applications allow users of the networked system to personalize various aspects of their interactions with the networked system . For example a user may using an appropriate personalization application create a personalized reference page at which information regarding transactions to which the user is or has been a party may be viewed. Further a personalization application may enable a user to personalize listings and other aspects of their interactions with the networked system and other parties. The networked system may support a number of publication systems that are customized for example for specific geographic regions. A version of the networked system may be customized for the United Kingdom whereas another version of the networked system may be customized for the United States. Each of these versions may operate as an independent publication system or may be customized or internationalized presentations of a common underlying publication system. The networked system may accordingly include a number of internationalization applications that customize information and or the presentation of information by the networked system according to predetermined criteria e.g. geographic demographic or publication system criteria . For example the internationalization applications may be used to support the customization of information for a number of regional Web sites that are operated by the networked system and that are accessible via respective Web servers .

Navigation of the networked system may be facilitated by one or more navigation applications . For example a search application as an example of a navigation application may enable keyword searches of listings published via the networked system . Such a search application may include the relevant algorithm discussed above. A browse application may allow users to browse various category catalog or inventory data structures according to which listings may be classified within the networked system . Various other navigation applications may be provided to supplement the search and browsing applications.

In order to make listings available via the networked system as visually informing and attractive as possible the publication system applications may include one or more imaging applications that users may upload images to for inclusion within listings. An imaging application also operates to incorporate images within viewed listings. The imaging applications may also support one or more promotional features such as image galleries that are presented to potential viewers. For example publishers may pay an additional fee to have an image included within a gallery of images for promoted items.

Listing creation applications allows publishers conveniently to author listings pertaining to goods or services that they wish to transact via the networked system and listing management applications allows publishers to manage such listings. Specifically where a particular publisher has authored and or published a large number of listings the management of such listings may present a challenge. The listing management applications provides a number of features e.g. auto relisting inventory level monitors etc. to assist the publisher in managing such listings. One or more post listing management applications also assists publishers with a number of activities that typically occur post listing. For example upon completion of an auction facilitated by one or more auction applications a publisher may wish to leave feedback regarding a particular viewer. To this end a post listing management application may provide an interface to one or more reputation applications to allow the publisher conveniently to provide feedback regarding multiple viewers to the reputation applications .

Dispute resolution applications provide mechanisms whereby disputes arising between transacting parties may be resolved. For example the dispute resolution applications may provide guided procedures whereby the parties are guided through a number of steps in an attempt to settle a dispute. In the event the dispute cannot be settled via the guided procedures the dispute may be escalated to a third party mediator or arbitrator.

A number of fraud prevention applications implement fraud detection and prevention mechanisms to reduce the occurrence of fraud within the networked system .

Messaging applications are responsible for the generation and delivery of messages to users of the networked system such messages tier example advising users regarding the status of listings at the networked system e.g. providing outbid notices to bidders during an auction process or to provide promotional and merchandising information to users . Respective messaging applications may use any one of a number of message delivery networks and platforms to deliver messages to users. For example messaging applications may deliver electronic mail e mail instant message IM short message service SMS text facsimile or voice e.g. voice over IP VoIP messages via the wired e.g. the Internet plain old telephone service POTS or wireless e.g. mobile cellular WiFi WiMAX networks.

Merchandising applications support various merchandising functions that are made available to publishers to enable publishers to increase sales via the networked system . The merchandising applications also operate the various merchandising features that may be invoked by publishers and may monitor and track the success of merchandising strategies employed by publishers.

Further one or more parties that transact via the networked system may operate loyalty programs that are supported by one or more loyalty promotions applications . For example a viewer may earn loyalty or promotions points for each transaction established and or concluded with a particular publisher and are offered a reward for which accumulated loyalty points can be redeemed.

To understand an example implementation it is helpful to first understand the search results form a typical search query. If for example one executes a search for iPod nano on a search or publication system such a query may return all search hits containing both the words iPod and nano. These search results may be quite sub optimal compared to the search results obtain via implementing one embodiment of the present algorithm. For in the iPod nano case the entire first page is dominated by iPod nano accessories with items having titles like iPod nano wall charger new or even creative anew MP3 player not iPod nano. 

By contrast imagine the user either selects a single search result from the previously illustrated set of search results or performs a search using the following result or search query brand new iPod nano 4 GB black. This search result or query not only contains the keyword iPod nano but also contains this keyword in a particular context of other keywords. These other keywords influence future search results. Putting it another way amongst a list of fifty 50 items on the first page a user may be visually directed to that specific item because the keywords in the title attracted the user s attention. Keep in mind that iPod nano occurred in all titles but it was the other keywords in the titles that may have influenced a user s decision to select the relevant instance of publication data e.g. a listing . Therefore if a search or publication system filtered by the input query keywords then it is the remaining keywords in the titles influencing the desirability of an item to the user. Therefore given an input search query if a search system is aware of the desirability score of one keyword that may appear on publication data e.g. item titles the search may calculate the total desirability of every item by adding up the scores of all of its keywords except those in the input query.

The desirability of something may be a measure of how much users want it more than how much it is commonly available. If something is in short supply but high in demand then it becomes desirable and the system may have to apply effort to acquire it. Conversely if something is in high supply but abundantly available and user demand is low a system may have to apply some effort to remove it from immediate focus. If something is equally in demand and supply the system may not need to undertake a positive action and supply and demand are in balance or equilibrium.

Applying these concepts of supply demand and desirability to for example the E commerce setting e.g. buying goods or services on EBAY the fact that searching for iPod nano may deliver mostly accessories in the results is because supply is heavily skewed by the large number of iPod nano accessories listed for sale on EBAY compared to the relatively small number of actual iPod nano MP3 players. So extending the demand supply paradigm to a search on an E commerce site such as EBAY for example a search system may mathematically calculate the supply demand and desirability scores of all keywords as may be apparent from the following example.

The concept of supply can be illustrated in the following example. In one embodiment a search of for example the EBAY listings for the phrase iPod nano yields a search result of approximately 30 000 listings that contain the phrase iPod nano in their description. If for example a second search is performed using the keyword charger one may get back results in the form of approximately 6 700 listings. Assuming a random distribution of the keyword charger in the universe of approximately 30 000 listings then there is a 22 chance that a specific listing contains the keyword charger 6 700 30 000 22 . This process can be repeated with additional words. For example assume the search is repeated but this time using the keyword case. Such a search could yield approximately 11 500 listing such that assuming a random distribution of this keyword in these listings there is a 38 chance that a specific listing may contain the keyword case 11 500 30 000 38 . And again repeating the search process using the keyword MP3 player yields a result of approximately 1 000 listings such that there is a 3 chance that a listing may contain the keyword MP3 player 1 000 30 000 3 . Accordingly in one embodiment a search system may ascertain that by doing a traditional search on EBAY for iPod nano where 50 items are presented on the first page out of 30 000 statistically about 22 or 11 of those may be an iPod nano charger about 38 or 19 of those may be an iPod nano case and about 3 or 2 items may be an iPod nano MP3 player. 

All the data from the above example embodiment may be collected for example by a search system in an automated manner returning which and how many items match a corresponding search query. This process basically describes the concept of supply e.g. what we have available to sell in the marketplace .

The concept of demand can be illustrated in the following example. In one embodiment demand is based upon the number of times a particular listing or keyword in a listing is selected by a user from for example a list of search results. This process of selection can be by way of some type of input device such as a mouse keyboard light pen touch screen or other suitable input device and or GUI widget. For example if upon presentation someone using a mouse were to actually click on a listing for further examination that would constitute an act or some measure of demand for that item as something in the visual aspects caused the user to choose it over others. These various user selections are tallied over the course of a week a month or some other suitable period of time so as to allow a search system to identify all or some subset of all users e.g. individual users who performed the search iPod nano and note the item titles that they did click on and did conduct further activity with the search result. In some embodiments over a sufficiently long time period e.g. day month week a search system may collect thousands of view item clicks for that search query. The collection of these clicks or selections is a demand set.

By way of example the total items in demand set for selections e.g. clicks generated from a search on iPod nano may be 5000 clicks. In some embodiments in an automated way the search system may now process all 5000 of these item listing titles and extract the following numbers 

These total item values are compared to the total universe of all user clicks to ascertain the percentage of items in the demand set containing the above illustrated keywords such that for example 

The desirability of a keyword may be calculated simply as demand versus supply or mathematically the difference between demand and supply. These calculations may occur in real time and on line. The table below represents the various values illustrated above and the calculation of the desirability values.

In other embodiments the search system may use more complicated forms that may allow more complex mathematical function instead of just subtracting supply from demand.

The search system may proceed through all the other keywords that exist in both supply and demand item sets and calculate and update these scores on a frequent basis for all the search queries that were encountered on for example EBAY during a certain time period.

The search system may in the example embodiments use this data to provide a relevance sort to our users. For example when someone searches for iPod nano for all the 30 000 items that occur in the result set see above the search system may total the desirability scores of all the other keywords in the title to get the composite relevance score for the item and then sort all items in decreasing order of this total score. As may be appreciated items with charger or case may have a negative total score and this may push them to the end of the 30 000 results and items with MP3 player in the title may be at that top because of a highly positive score. For example a listing with the title of MP3 player w charger and case would have a composite score of 36 37.4 21.6 95 36 where a listing with the title of MP3 player would have a composite score of 95 .

The present invention is implemented via a web based application using a web browser at the interface level to provide a GUI to a user. As illustrated above such an implementation may use the modules e.g. and implemented across a distributed or non distributed architecture using the previously outlined principles of component object design. Collectively these modules could be organized according to the previously illustrated platform architecture .

Previously illustrated example GUIs and illustrate the interface level of a web based implementation. In addition to the functional aspects of the GUIs these GUIs provide for some additional purposes and functions. For example from a publisher s perspective these GUIs seek to provide publishers e.g. sellers with the capability to decorate their publications e.g. item listings in a variety of ways. Additionally these GUIs seek to provide vibrancy in the publication system by allowing more creativity. Moreover these GUIs allow publishers the ability to do what they legally want to do to maximize profit. Moreover these GUIs allow for fully free form data for those publishers that require search functionality.

Another example of the additional purposes and functions provided by these GUIs and is in terms of how they benefit the viewer e.g. potential purchaser of the goods and services listed . For example these GUIs seek to provide publication data e.g. search results item listings etc that are relevant to a broad cross section of viewers. Additionally these GUIs seek to provide publication data that are up to date accurate and current with market trends even in the most non obvious of places. Moreover the presentation of the various objects in a particular web based GUIs can affect for example maximum average number of clicks before a target event e.g. a bid placed on an auction process associated with one listing .

In some embodiments one example use scenario may be in the context of a mobile device such as a cell phone PDA or other suitable mobile device see e.g. . Such mobile devices have limited space to display information to the end user. Given the small screen size of a mobile device there is a need to summarize long pieces of text into shorter forms while retaining most of the relevant information. For example the screen of a popular NOKIA cell phone model has a resolution of 128 128 pixels. With a standard font it may be possible to only show approximately 20 characters per line and five lines per screen. Given this small screen size search results may have to be summarized in a different manner such that most relevant keywords are shown to a user.

In some embodiments an example algorithm operates to perform a method including identifying relevance of each word in a body of text e.g. using the runtime context and assigning each word a relevance score. The algorithm sorts these words from the most relevant to the least relevant. The relevance scores of respective words in the body of text may be used to summarize the body of text for example by showing only the most relevant words e.g. words having a relevance score exceeding a predetermined threshold from the body of text and replacing the less relevant words with some placeholder character such as . for example. Multiple placeholder characters may be combined into one. The end result may be a summarized text with highly relevant words visible and less relevant words hidden.

The predetermined threshold may in one example embodiment be a function of the display area e.g. or display real estate available on a display device e.g. mobile telephone screen computer screen television screen etc. for the display of data. For example where a screen is larger more keywords may be displayed with the displayed words displayed based upon relevance. In contrast where the screen is smaller fewer keywords maybe displayed with only the most relevant keywords being displayed. Put another way the relevance threshold may be a function of the number of characters displayable per line and the number of lines per screen. This relevance threshold would differ from mobile device to mobile device.

Considering a further example embodiment there exist many situations in which it may be desirable to summarize long pieces of text into shorter forms while retaining most of the relevant information. For example when a user conducts a search e.g. using an Internet search engine to conduct an Internet wide search or to conduct a search of a particular web site such as the EBAY web site it may be desirable to only show the user search results e.g. items that strictly meet the user s search criteria. For example when the search results include an item listing it is typical to show the item s title price and some other information. The item title may be 30 to 40 characters long. Showing the entire title of an item takes much space and reduces the total number of items presentable to the user at a given time.

One way to shorten a piece of text is to simply truncate the text and show only the first few words. The result is not always desirable. For example an item may have a title new today Apple ipod nano 4 GB MP3 player black sealed NR free S H Applying the truncated approach the title may be reduced to the first 15 characters with some dots replacing the rest of the title delivering new today . . . This shortened form may not sufficiently communicate to the user what the item is.

To meet the requirement of summarizing long pieces of text into shorter forms while retaining most of the relevant information one embodiment seeks to summarize text based on or at least using the contextual relevancy of each word inside the text.

In one example embodiment one of the outputs generated by the relevance algorithm is the relevance score for grammatically meaningful portions of a body of text located by a search e.g. a relevance score for each word that appears in the item title in the result of that query . For example the query iPod yields the following list of words with a corresponding score 

The list of most relevant words may be communicated to a search engine e.g. search engine or a web page generation module e.g. module or application which then proceeds to examine for example each item title and replace less relevant words with placeholder characters. For the previous example the title new today Apple ipod nano 4 GB MP3 player black sealed NR free S H may be summarized to .Apple .BLACK .MP3. 

While the above embodiment has been illustrated with respect to textual summarization it may be appreciated that other embodiments may be applied with respect to other digital content and data e.g. audio video image etc . It may also be appreciated that other contextual information may be taken into account in assigning a relevance score to a digital content item and that the relevant threshold utilized to select digital content items for presentation to a user may be configurable and may be automatically determined by a threshold module of the relevance engine based on any one of a number of factors e.g. display area bandwidth issues user preference as specified by an appropriate input user demographic information temporal information e.g. time of day and end user device specifications or type e.g. television versus mobile device versus computer system . Display is reflective of this text summarization application in a cell phone or PDA.

The present invention is implemented on a digital processing system or computer system that includes a processor which may represent one or more processors and may include one or more conventional types of such processors e.g. x86 x86 64 ARMx such as an AMD Processor Intel Pentium or XScale Processor or other suitable Processor. A memory is coupled to the processor by a bus. The memory may be a Dynamic Random Access Memory DRAM and or may include Static RAM SRAM . The processor may also be coupled to other types of storage areas memories e.g. cache flash memory disk etc. which could be considered as part of the memory or separate from the memory.

In some embodiments a bus further couples the processor to a display controller a mass memory or some type of computer readable medium device a modem or network interface card or adaptor and an Input Output I O controller. The display controller controls in a conventional manner a display which may represent a Cathode Ray Tube CRT display a Liquid Crystal Display LCD a plasma display or other type of suitable display device. Computer readable medium may include a mass memory magnetic optical magneto optical tape and or other type of machine readable medium device for storing information. For example the computer readable medium may represent a hard disk a read only or writeable optical CD etc. In some embodiments a network adaptor card such as a modem or network interface card is used to exchange data across a network such as an Internet. The I O controller controls I O device s which may include one or more keyboards mouse trackball or other pointing devices magnetic and or optical disk drives printers scanners digital cameras microphones etc.

The present invention may be implemented entirely in executable computer program instructions that are stored on a computer readable medium or may be implemented in a combination of software and hardware or in certain embodiments entirely in hardware.

Embodiments within the scope of the present invention include computer readable medium for carrying or having computer executable instructions or data structures stored thereon. Such computer readable medium may be any available medium which is accessible by a general purpose or special purpose computer system. By way of example and not limitation such computer readable medium can comprise physical storage media such as RAM Read Only Memory ROM Erasable Programmable Read Only Memory EPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other media that can be used to carry or store desired program code means in the form of computer executable instructions computer readable instructions or data structures and that may be accessed by a general purpose or special purpose computer system. This physical storage medium may be fixed to the computer system as in the case of a magnetic drive or removable as in the case of an Electronically Erasable Programmable Read Only Memory EEPROM device e.g. flash memory device .

In some embodiments when information is transferred or provided over a network or another communications connection e.g. either hardwired wireless or a combination of hardwired or wireless to a computer system the connection is properly viewed as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of computer readable media. Computer executable or computer readable instructions comprise for example instructions and data that cause a general purpose computer system or special purpose computer system to perform a certain function or group of functions. The computer executable or computer readable instructions may be for example binaries or intermediate format instructions such as assembly language or even source code.

In this description and in the following claims a computer system is defined as one or more software modules one or more hardware modules or combinations thereof that work together to perform operations on electronic data. For example the definition of computer system includes the hardware modules of a personal computer as well as software modules such as the operating system of the personal computer. The physical layout of the modules is not important. A computer system may include one or more computers coupled via a network. Likewise a computer system may include a single physical device e.g. a mobile phone or PDA where internal modules e.g. a processor and memory work together to perform operations on electronic data.

Some embodiments may be practiced in network computing environments with many types of computer system configurations including hubs routers wireless Access Points APs wireless stations personal computers laptop computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network Personal Computers PCs minicomputers mainframe computers mobile telephones PDAs pagers or other suitable environment. Some embodiments may be practiced in distributed system environments where local and remote computer systems which are linked e.g. either by hardwired wireless or a combination of hardwired and wireless connections through a network both perform tasks. In a distributed system environment program modules may be located in both local and remote memory storage devices see above .

The example computer system includes a processor e.g. a Central Processing Unit CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a LCD or a CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a user interface UI cursor controller e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or used by any one or more of the methodologies or functions illustrated herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device using any one of a number of well known transfer protocols e.g. HTTP Session Initiation Protocol SIP .

The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

It is to be understood that the above description is intended to be illustrative and not restrictive. Although numerous characteristics and advantages of various embodiments as illustrated herein have been set forth in the foregoing description together with details of the structure and function of various embodiments many other embodiments and changes to details may be apparent to those of skill in the art upon reviewing the above description. The scope of the invention should be therefore determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein respectively. Moreover the terms first second and third etc. are used merely as labels and are not intended to impose numerical requirements on their objects.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that may allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it may not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

