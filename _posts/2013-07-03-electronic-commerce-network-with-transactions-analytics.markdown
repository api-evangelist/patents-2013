---

title: Electronic commerce network with transactions analytics
abstract: A system that processes transactions, in response to a transaction using a financial instrument, receives an identity of a financial instrument, such as a card hash. The system creates an anonymous account that corresponds to the financial instrument, and stores line level data associated with the transaction in the anonymous account. Future transactions that use the same financial instrument are also stored in the anonymous account. As a result, all transactions can be linked to the same user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762268&OS=08762268&RS=08762268
owner: Index Systems, Inc.
number: 08762268
owner_city: San Francisco
owner_country: US
publication_date: 20130703
---
This application claims priority of Provisional Patent Application Ser. No. 61 668 254 filed on Jul. 5 2012 Provisional Patent Application Ser. No. 61 668 255 filed on Jul. 5 2012 and Provisional Patent Application Ser. No. 61 755 135 filed on Jan. 22 2013 the contents of each of which is hereby incorporated by reference.

One embodiment is directed generally to a computer system and in particular to an electronic commerce network and system.

Electronic commerce or e commerce is generally considered the buying and selling of a product or service over electronic systems or a commerce network such as the Internet and other computer networks. Electronic commerce can include functionality such as mobile commerce electronic funds transfer supply chain management Internet marketing online transaction processing electronic data interchange EDI inventory management systems and automated data collection systems. Electronic commerce and a commerce network as a core function provides the exchange of data to facilitate the financing and payment aspects of business transactions. Further a commerce network that accommodates many different types of payments accumulates data that can provide useful analytical information.

One embodiment is a system that processes transactions. In response to a transaction using a financial instrument the system receives an identity of a financial instrument such as a card hash. The system creates an anonymous account that corresponds to the financial instrument and stores line level data associated with the transaction in the anonymous account. Future transactions that use the same financial instrument are also stored in the anonymous account. As a result all transactions can be linked to the same user.

One embodiment is an electronic commerce network that collects data from mobile transactions as well as all other types of transactions. The data includes line level data of each transaction. Analytic tools can then be used to mine the collected data.

Network functions as a fabric that connects accounts for the principal parties of commerce users merchants and issuers of tender. Network enables fluid commerce by making accounts online and accessible. These accounts can be joined to facilitate rich interactions including purchase transactions offer targeting delivery and other personalized experiences. The accounts are made accessible by the associated peripheral devices including clients such as user clients and merchant based clients such as point of sale POS client and management client which extend the reach of network to a user s computer mobile device the merchant s counter via POS and any other device that can interface with network .

System includes a bus or other communication mechanism for communicating information and a processor coupled to bus for processing information. Processor may be any type of general or specific purpose processor. System further includes a memory for storing information and instructions to be executed by processor . Memory can be comprised of any combination of random access memory RAM read only memory ROM static storage such as a magnetic or optical disk or any other type of computer readable media. System further includes a communication device such as a network interface card to provide access to a network. Therefore a user may interface with system directly or remotely through a network or any other known method.

Computer readable media may be any available media that can be accessed by processor and includes both volatile and nonvolatile media removable and non removable media and communication media. Communication media may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

Processor is further coupled via bus to a display such as a Liquid Crystal Display LCD . A keyboard and a cursor control device such as a computer mouse are further coupled to bus to enable a user to interface with system .

In one embodiment memory stores software modules that provide functionality when executed by processor . The modules include an operating system that provides operating system functionality for system . The modules further include a commerce network module that provides the functionality of commerce network of as disclosed in more detail below. System can be part of a larger system such as a database management system or a financial management system. Therefore system will typically include one or more additional functional modules to include the additional functionality. A database is coupled to bus to provide centralized storage for modules and .

Referring again to each user of network is represented by user account . User account holds basic profile information global and merchant specific payment preferences and any number and type of tender instruments including debit cards private label cards gift cards bank accounts coupons offers loyalty cards loyalty points etc. Users may access and manage this information through a range of user clients such as clients . The user clients can be any device that allows access to network over the Internet or other network and may include an Internet browser. The clients may include a web page mobile applications and tablet interfaces which enable users to add delete tender instruments view a transaction history and perform a range of other account management functions. User account facilitates the collection and management of any tender type from any platform e.g. web page mobile social by the user. User account also enables the seamless sharing of these tender instruments with the merchant at the time of transaction via network .

Each merchant using network creates a merchant account that represents the merchant on network . Merchant account holds basic information such as store address location s and merchant acquiring information that defines how payment should flow to the merchant. Merchant account also holds detailed user and store level transaction information and analytics. Finally merchant account contains information about merchant clients such as POS client and management client which may access and interact with merchant account . An authorized merchant POS client such as client may connect to network via POS or merchant APIs to facilitate user authentication and transaction settlement from the POS. Similarly merchant management client can interact with merchant account via a web page or tablet interfaces to access real time analytics configure account settings or interact with engines including the business optimization engine. The business optimization engine allows merchants to tailor rich offers loyalty rewards and other promotions to individual users or user segments to assist with customer acquisition and retention.

Each issuer of tender using network has a corresponding issuer account . An issuer account may include an authorization policy an authorization mechanism and a settlement mechanism for each tender type the issuer supports. The authorization and settlement mechanisms specified for each tender are executed by the transaction engine as it processes a transaction. While traditional forms of tender use existing infrastructure for authorization and settlement newer forms of tender may use new authorization and settlement mechanisms. Therefore in one embodiment the issuer API includes new authorization and settlement mechanisms including authorization by web services and direct settlement.

As discussed embodiments interconnect users and merchants retailers to enable complex transaction processing and other functionality. To initiate the functionality of network in one embodiment a user downloads an application to a mobile device and sets up a user account . An account may be set up through a website a mobile application or any other method.

Similarly to initiate the functionality of network in one embodiment a merchant first creates a merchant account representing the corporate entity and then creates store accounts for each physical store. is an overview diagram illustrating a merchant initiating the functionality of network of in accordance with one embodiment. To accomplish this the merchant would use a web page via merchant client or other method. In the example of the merchant has a single store and creates merchant account and a store account of the single location having store hours . The merchant would add information to the store account describing how payments should be handled for that store location. Specifically the merchant will designate which acquirer and account processed funds should flow into. Acquirer is the merchant s acquirer also referred to as a payment processor . Examples of payment processors include First Data Corp. FDC Fifth Third Processing Solutions etc. Account is the merchant s corporate level account or the individual store s account on network .

Once the store account is setup in one embodiment the merchant integrates a Beanstalk Library into the merchant s POS system. The Beanstalk Library allows the POS system client to initiate transactions on network much the same way that these systems initiate transactions with a traditional acquirer. In one embodiment the Beanstalk library combines the functions of the following known integration products 

Once at least one user and one merchant and store account and one issuer has been set up transactions can occur on network . illustrates a user being checked into a store with a store account in accordance with one embodiment. The example beginning at is for a transaction with a single item and a single payment instrument.

As shown in network via the mobile commerce application downloaded on the user s mobile device observes the user s location and uses this information to determine when the user enters a store that has a corresponding store account on network . The downloaded mobile commerce application uses GPS signaling in one embodiment to determine when the user enters the store by crossing a merchant geo fence . A geo fence is a virtual perimeter for a real world geographic area such as the store.

To prepare the user to pay at the store the user mobile application sends a check in request to network indicating that network should prepare the user to pay at the store. Network receives the check in request and creates a single use payment token or Bean for the user. Network registers the token with the store and replies to the user s mobile phone . If desired by the user the mobile phone can be programmed to buzz or otherwise alert the user to let the user know that they are ready to pay at the store. Similarly if the manager at the store is looking at POS client or Management Client the manager will notice that another user has entered the store by an indication that pops up on client or .

A Bean such as Bean in general is a session object that captures the interaction events between a user and a single store location. In one embodiment a Bean object lifecycle begins when a user enters the store location and ends when a user leaves the store location. Other lifecycle initialization triggers and ending triggers are possible. For example a Bean could be instantiated in an anonymous transaction by the store at the time of a transaction initiation and closed when the transaction processing is complete. Bean can be used for a single transaction or it may be applied to a user session in a store that spans multiple refunds and purchase transactions.

In the current example where the user purchases a single item the user makes the selection of the item and heads to the checkout. illustrates POS client at the merchant and using merchant account to checkout the user in accordance with one embodiment. POS client displays multiple methods of payment on display including credit and debit. One of the options is a mobile option indicating payment via network . As the cashier rings the user up the user selects the mobile option and enters the PIN number in the existing PIN pad.

At this point POS uses the integrated Beanstalk Library to authenticate the user via the PIN. To achieve this the POS software passes the user s PIN into the Beanstalk Library and requests an authentication. The Beanstalk Library sends the request to network where the user s PIN is used to validate the user. Once validated the payment token that was created when the user entered the store is returned to POS client . POS client is now ready for checkout.

When the transaction request reaches network it is passed into a transaction engine . illustrates the functionality of transaction engine in accordance with an embodiment of the present invention. The checkout process is based on basket of goods selected by the user and the corresponding line level data in accordance with one embodiment. Transaction engine reviews the basket of goods being purchased compares them to the payment instruments in the user s user account and selects the correct payment instrument s to use. If the user had any item specific coupons they would be applied here. However in this example the user has no coupons and pays the full amount with the user s debit card.

Once transaction engine has selected the payment instrument in this example the user s debit card it looks up the store account s processing preferences. In this example the store uses First Data Corporation or other payment processor for processing. Transaction engine sends a request to FDC or other payment processor or partner to put the full total of the transaction e.g. 5.00 on the user s debit card and waits for the response.

Assuming the transaction is approved transaction engine sends a success response to POS . It then uses the basket of goods to create a digital receipt and notify the user of the purchase and an available receipt. Transaction engine similarly creates a receipt for the store and updates its real time analytics to reflect these sales.

In a variation of the preceding example assume the user has selected multiple items and has manufacturer coupons in the user account for two of the items a 10.00 off coupon for Item A and a 5.00 off coupon for Item B. In this example the user s check in and PIN authentication proceeds in the same manner as disclosed in the above example. However when the transaction reaches network it is processed differently. illustrates the functionality of transaction engine with multiple items and multiple payment tender options in accordance with an embodiment of the present invention. When transaction engine compares the basket of goods to the user s user account which stores the coupons it matches Item A to one of the coupons and matches Item B to the other coupon. Network is able to do this because it has received line level data for the basket of goods from POS . It then applies these payment instruments to the basket alongside the debit card.

Once the tenders are selected transaction engine sends three transaction requests to the acquirer processor 

Transaction engine then waits for the PIN debit transaction to complete but not the ACH transactions since they can take much longer to complete. Receipts are generated and they include information about the redeemed offers. If these offers were part of a specific campaign the campaign analytics would be updated to reflect this usage.

As disclosed above network enables merchants to accept any and all forms of tender to complete complex multi tender transactions and to effectively engage with customers across new channels. Specifically transaction engine joins user accounts merchant accounts and issuer accounts to enable the flexible settlement of any type and any number of tenders for a single transaction. In turn this flexibility empowers merchants to reach customers through new channels which require new incentives tender types for effective engagement. For example mobile web engagement might require the creation and distribution of mobile advertisements offers a Facebook engagement might require Facebook Offers or the distribution of Facebook Credits and an e mail marketing campaign might require the creation and distribution of e mail offers Groupon certificates etc. By supporting any tender type network effectively unlocks these new channels to merchants and turns them into powerful and measurable paths to reach customers. The resulting platform provides a medium for users and merchants to seamlessly engage with one another and fosters rich multi channel relationships. Network allows merchants to promote distribute accept and analyze results for new tender types that most directly support their core business.

At at least one user account one merchant account and one issuer account is established. Each user account holds basic profile information payment preferences and one or more tender instruments including debit cards private label credit cards gift cards bank accounts coupons offers loyalty cards loyalty points etc. Each merchant account holds basic information such as store address location s and merchant acquiring information that defines how payment should flow to the merchant. Each issuer account may include an authorization policy an authorization mechanism and a settlement mechanism for each tender type the issuer supports.

At a user with a mobile client that has downloaded a mobile commerce application such as a smartphone is detected entering one of the stores of the merchant account. In one embodiment the user is detected when the user crosses a geo fence of the store using the user s smartphone GPS capability.

At a token or Bean is created and registered with the store. A notification is optionally sent to the user indicating that the user now can make payments at that store. This is the completion of a first level of authentication. At this point the store is able to communicate with the user via the mobile client such as providing store information advertisements coupons etc.

At after the user selects one or more items to purchase that form a basket of goods the user approaches the store s POS selects the option to pay using the mobile commerce network and enters the mobile commerce PIN that was associated with the user when the user created the user account. The PIN is received by the commerce network and is then authenticated at the network and the token is sent to the POS in the store. This is the completion of a second level of authentication.

At the basket of goods of the user s selections including line level data for all items is received by the network for processing.

At the basket of goods is compared with the payment instruments or tender in the user s user account and the appropriate one or more tenders are selected validated and authorized to complete the payment referred to as tender extraction . The tenders can include debit cards credit cards electronic coupons electronic group buying instruments such as Groupon deals certificates electronic gift certificates etc. When more than one tender can be used to complete the payment the best tender is selected. For example coupons or gift certificates will be used before debit or credit cards and the remaining balance if not completely satisfied by the coupon or gift certificates can be satisfied by the debit credit cards.

At each of the one or more payment requests corresponding to the tenders are sent to the corresponding issuer by initiating calling the appropriate settlement mechanism for each tender.

As discussed above every user of network has a user account . User account holds basic profile information global and merchant specific payment preferences transaction history and any number and type of tender instruments including debit cards credit cards private label cards gift cards bank accounts coupons offers loyalty cards loyalty points etc. The tender instruments in the User account are accessible at the time of transaction and are used to facilitate payment in the order fashion prescribed by the user. The desired use of instruments and the order in which they should be used is determined by the user in a user account preferences file. In one embodiment these preferences may be set once and not modified again or the user could manually adjust these preferences before each transaction.

Users can create access and manage their user accounts through a range of user clients e.g. user clients or any devices that enable the user to interface with network . These clients include web pages mobile applications and tablet interfaces which enable users to add delete tender instruments view transaction history and perform a range of other account management functions. User clients access user account data via commerce network and present a consistent set of instruments across interfaces. For example whether a user looks at the contents of user account on web client or on mobile client the user will see the same set of instruments.

In one embodiment a primary use for the user clients is adding and managing instruments of tender. When a user adds an instrument to user account the instrument data is sent to network for secure storage in user account . In one embodiment once instrument data is added to user account the data exists exclusively in user account and is never shared with or stored in any of the clients. However in one embodiment user account shares instrument references with the user clients so that the clients can actualize a user interface that lets users examine delete and configure the instruments in user account . Instrument references contain only enough information about the instrument in one embodiment to allow it to be meaningfully displayed in the user interface. Because the user clients do not store sensitive tender data they are not a point of attack from which credentials may be extracted.

The user clients may also serve as points of user engagement and tender discovery before and after a transaction. For example a merchant might present an offer to a user when the user arrives at a store to drive sales of an item that is overstocked or a merchant might provide an offer attached to a receipt to incentivize the user to return to the store that same week. In these examples the user clients also become channels for delivering rich personalized experiences and presenting new instruments of tender.

The user clients such as user client are merchant centric. Unlike some prior art mobile wallets that are organized around object types e.g. payment credentials offers coupons loyalty reward cards receipts etc. the user clients in accordance with one embodiment are organized around user merchant relationships. By default user account data is organized by merchants and this serves as a user client s organizing principle. The default view in a user client in one embodiment is a list of merchants organized by location favorites or any other arrangement. Users can pivot data around themselves e.g. to view receipts across all merchants in another view.

Once a user retrieves a detailed view of a specific merchant the user is able to see a view of their entire relationship with the merchant. This view referred to as a merchant relationship feed is an intelligent sort of all past present and potential future user merchant interactions. An intelligent algorithm weighs recency importance and other factors to develop a feed of transactions offers rewards news and other user merchant engagement opportunities.

Network enables merchants to reach customers through new channels which often require new incentive tender types for effective engagement e.g. mobile advertisements offers for mobile channels Facebook Credits Offers for Facebook likes etc. . Across these new channels users generally engage while they are online and logged into a range of third party accounts such as Pinterest Facebook Google Twitter and Yahoo. Network allows users to link their user accounts to these third party accounts to enable seamless discovery clipping sharing and engagement with tender available on these channels. To create this link in one embodiment network uses OAuth to connect user accounts to these third party account. OAuth is a known open standard for authorization and provides a process for end users to authorize third party access to their server resources without sharing their credentials typically a username and password pair using user agent redirections. In other embodiments other authorization mechanisms can be used. A user may elect to link user account to any or all third party accounts made available by network .

When a third party account is linked to user account it is granted a set of capabilities to interact with user account which might include adding tender instruments into user account . For example a user who is logged into Yahoo might clip an offer from an email message directly to the user s user account . Similarly when a user account is linked to a third party account with user permission a user account may interact with the third party account. For example a user account might gain access to post something to a user s Facebook Wall or Twitter Stream. This linking of accounts gives users a federated commerce capability with a broad online presence. The federated commerce capability actualizes a chain of authentication so that no matter what the online context users are able to save to and publish from their user account .

While the above describes using account federation to add tender instruments from Twitter and Facebook for example this mechanism extends to any secure online account including user accounts with financial institutions media outlets and merchants. Therefore a user logged in to a merchant or issuer website could similarly push things like offers or payment cards into their user accounts.

When a third party account is linked to user account it is granted a set of permissions which can include the ability to add tender instruments to user account including debit cards private label cards gift cards bank accounts coupons offers loyalty cards loyalty points etc. . To add instruments to user account third parties can interact with a defined set of User Account APIs. With user permission these third parties can then push instrument data to the user account. These APIs can implement using known web service mechanisms such as Representational State Transfer REST and data payloads encoded as JavaScript Object Notation JSON .

If a user is not logged on to network when trying to save a new instrument to the user account the user will be prompted to login to network or any third party account. Similarly if a user is already logged into a third party account that is not yet federated to user account the user will be prompted to link that account to user account or to login using a valid user account .

For mobile applications where an application may not use the notion of a logged in account e.g. an advertisement in a video game the client application exposes local APIs by which an application may pass data to the client application to be saved. In this embodiment federated authentication is provided by the client installed on the user client. In one embodiment an intent or uniform resource identifier URI exchange is used to pass tender data into the client application which will receive and save the instrument data.

In one embodiment user account plays a large role in the settlement of tender at the time of a transaction. When a user makes a purchase the merchant passes the user authentication token also referred to as a Bean loaded with a basket of goods to network . Network uses token to access user account and passes the basket of goods and user account to transaction engine for processing.

Transaction engine examines the basket of goods and full set of instruments in user account and applies a business algorithm to determine which tender instruments to use for the transaction. Transaction engine then initiates the transaction and updates user account as necessary. For example offers that are redeemed to settle the transaction would be marked as used. Further if a gift card is used in a transaction its balance would be updated in user account .

The online and federated nature of user account enables it to 1 gather tender instruments from any online context 2 make those instruments available for processing at the time of transaction and 3 update user account after transaction processing so that the user can immediately see the results of the transaction.

As previously discussed in one embodiment every merchant that participates in network has a merchant account . Merchant account holds basic profile information an arbitrary number of stores which represent physical locations for the merchant geo fence properties for each store merchant acquirers processors used to finalize settlement of acceptable forms of tender etc. In addition merchant account may hold any merchant specific business logic that should be applied to transactions.

To provide flexibility embodiments allow merchants to arrange stores into arbitrary sets store groups e.g. regional groups to simplify the management tasks. A merchant can then use these groups to set store policies or publish incentives offers in varying granularities. For example a merchant could publish a national offer to all stores a warm weather offer to a group of warm weather stores a local offer to a single store or individual offers to specific customers or customer groups based on any range of demographics historic purchases online browsing or other characteristics or actions.

Store groups can also be used to delegate administrative permission for the stores. For example a regional manager could be given permission to set offers store policies for a regional store group or a local store manager could set policies and promotions for one store only.

Merchants can connect to network to authenticate users and initiate transactions through approved merchant POS clients such as POS client . These merchant POS clients may include existing and future POS infrastructure which is connected to network via merchant APIs . In order to authenticate users and initiate transactions a POS in one embodiment first authenticates itself to network . This initial authentication includes an exchange of merchant account username password and predefined POS identifier e.g. Lane . In addition key material is also exchanged with the POS to more strongly authenticate it.

Once authenticated merchant POS client via API is used to authenticate in store users to network . When a user elects to pay using network the user is prompted to enter the PIN on the terminal attached to the POS. For example the terminal might be a PIN pad from Verifone Systems Inc. or a touch screen PIN pad when using a tablet mobile POS. Once the PIN is collected it is sent to network where it is compared to the PINs of users checked into the store. Therefore the PIN is used both to authenticate and disambiguate the user. If there are multiple users with the same or even similar PINs in the store network in one embodiment presents a challenge question to the user. For example the user may be asked to enter a date of birth street address number phone number or other information into the same terminal. This information would then be similarly passed to network for authentication.

Once a user is authenticated as described the POS receives a token or Bean for the transaction at hand. The Bean is an opaque token that carries no intrinsic value and does not return any tender instruments to the POS. Accordingly the Bean does not require any PCI security standards council or similar level protection by the merchant.

Once the user has authenticated to network via the POS the cashier teller at the POS moves forward with the merchant s standard purchase flow until it is time to complete the transaction. With a traditional transaction the POS cashier would send a user instrument for example a Visa card and a basket total for example 100 to a network for authorization and settlement. However for network the cashier sends the token Bean which includes the complete basket of goods including line level data to network . With the basket of goods as a guide transaction engine then joins the user merchant and issuer accounts to process the transaction. Once cleared network returns an updated receipt to the POS including any price modifications. This enables the user have a real time view of the final purchase price and confirmation of which instruments were applied to clear the transaction.

Merchants can create access and manage their merchant accounts through a range of merchant clients e.g. management client . These clients include web pages mobile applications and tablet interfaces which enable designated managers to monitor their merchant account add delete stores view transaction history and perform a range of other account management functions. A management console provides merchants with a real time view of activity in their stores and across channels such as how many customers are in their stores segmented by customer type subject to user permission or a customer s individual wish lists or purchase history. Additionally the management console provides a real time view of purchase velocity the performance of promotional campaigns and custom monitoring alerts based on any information available on network . The management console also provides access to the business optimization engine which can be used to optimize and generate personalized advertising incentive and promotional campaigns across channels to maximize revenue and customer engagement.

As disclosed above every issuer of network has a corresponding issuer account . Issuer account details the issuer s tender types and the authorization policy authorization mechanism and settlement mechanism for each form of tender. An authorization policy is a contract that describes how and under what circumstances authorization for the tender should occur. An authorization mechanism describes how the tender should be authorized by the issuer should the authorization policy deem it necessary. Finally the settlement mechanism describes how settlement should be actualized for the tender. In one embodiment network splits the authorization and settlement of tender into separate phases to provide a flexible solution capable of handling a broad set of tender types.

For example if Groupon were to issue an offer that could be redeemed on network Groupon would first create an issuer account or an account is created on behalf of Groupon. Groupon would specify an authorization policy an authorization mechanism and a settlement mechanism for the Groupon tender. Groupon could specify 1 an authorization policy that required real time authorization for any Groupon tender 2 an authorization mechanism that used a web services call to perform the authorization for the tender and 3 an ACH settlement mechanism that used ACH to move the money from Groupon to the merchant. In some transactions authorization and settlement could be part of the same action for a specific tender type. For example the authorization mechanism could be set to null in the issuer account which would shift the responsibility of authorization to the settlement agent.

For traditional payment instruments where the issuer e.g. a bank may not be have a corresponding issuer account on network a delegate issuer account may be automatically configured. For example a debit card would use a pre defined debit Issuer account delegate that would specify authorization and settlement using a traditional debit network.

An issuer can use an issuer management console or other method to facilitate the setup of issuer accounts and management of the authorization policy authorization mechanism and settlement mechanism for each tender. The issuer management may also provide real time analytics about issuer tender on network the number of transactions inflight the outstanding balance due settlement etc.

The authorization and settlement mechanisms specified for use by the issuer can be implemented in a number of ways. Embodiments include a set of issuer APIs and reference implementations that use next generation authorization and settlement mechanisms. For example when using Groupon based tender as described above in one embodiment Groupon would use the authorization mechanism defined in issuer API to implement authorization via a web services call.

In one embodiment network executes a machine learning algorithm over data it collects and combines the results with a prediction algorithm to provide a validity score for all participants and tenders involved in a transaction. The validity score is used in conjunction with the authorization mechanisms for tender types that support explicit authorization. If a validity score is insufficient for any tender or participant in the transaction the transaction is either flagged or declined.

The validity score allows network to enable settlement using a broad set of instruments. The validity score prediction algorithm uses machine learning to weigh all aspects of a transaction. As network sees more and more transactions the prediction algorithm improves and the machine learning model becomes trained resulting in improved accuracy. The quality and quantity of data combined with a scalable machine learning approach give network the enhanced ability to predict the validity of all components of a transaction. In one embodiment validity scoring enables network to recognize and flag anything from bad tender to a suspect user a bad retail lane or cashier that exhibits fraudulent characteristics. In one embodiment the validity scoring includes velocity checks including frequency of transactions and failed authentication attempts location signals including a device location history and a total amount charged including single high value transactions or high spend per day. The same characteristics can be used to identify abnormal merchant POS behavior.

As described above embodiments uses a two factor level authentication system to verify a user s identity and initiate a transaction. The first factor of authentication is a user s geo location. Specifically the user s smartphone or other mobile client must be physically present in the store to initiate a transaction and the user client i.e. a mobile commerce application must be installed. To make this possible in one embodiment a user configures the user client to login to the user s user account .

Once authenticated the mobile user client examines all location information and uses a check in algorithm that runs on the mobile device to decide when to send a check in request to network . When the user client sends the check in request to network it includes all the location information available to the user client. Network analyzes the request and returns both a decision checked in or not and new data that will help the user client make better localized decisions in the future. The dynamic exchange of information between the user client and network lets the system learn and constantly improve the accuracy of its geo fence capability and notice adjust to any attempts to fraudulently manipulate location signals.

The second factor of authentication is typically a PIN that the user knows and enters into the POS when the user is ready to initiate a transaction. If for any reason a transaction is flagged raises fraud concerns network can challenge the user to answer questions provide additional factors of authentication.

Network uses multiple factors of authentication to verify the identity of the user in store. This in store authentication gates the initiation of any transaction on behalf of the user. Once a transaction has been initiated network seeks to further validate the identity of the user by leveraging machine learning and the user s location location history purchase history and recent behavior to generate a validity score for the user. If for some reason the user validity score is too low network can issue challenge questions to the user to confirm the user s identity.

Merchant infrastructure is secured using key exchanges and cashier teller login to merchant endpoints. For each transaction network seeks to validate both the authenticity of the merchant s endpoint and the legitimacy of the behavior originating from that endpoint. If a merchant endpoint is being used to purchase merchandise that the merchant does not stock or a merchant endpoint is being used to purchase volumes of goods that are unusual the transactions and or endpoints can be flagged. Likewise if an invalid or uncommon discount were applied incorrectly or inappropriately the transaction teller and or endpoint can be flagged.

To handle transactions and endpoints that were flagged for unusual behavior the merchant can specify a policy in merchant account . For slightly odd situations the merchant could simply request the opening of an audit log. For more serious issues the merchant could require a manager override for the transaction to complete. Since merchant APIs provide merchants with the ability to pass a teller ID along with the basket of goods these mechanisms could similarly be used to detect dubious teller behavior.

Network sits at the intersection of transactions that span users merchants and tender types. For each transaction network considers a wide cross section of data including basket contents location time of day consumer purchase patterns and merchant signals like checkout lane teller etc. Network executes a machine learning and a predictive algorithm across this data to derive a validity score as described above. The validity score for all aspects of the transaction including the tender is combined with the authorization mechanisms described below to provide robust authorization implementation.

For a tender like ACH that does not have an explicit authorization mechanism network internally evaluates whether or not to accept the tender. In this scenario network must decide to accept or decline the transaction based on the validity scores of the tender and other components of the transaction. Network supports a configurable policy that lets the bearer of liability in the case of ACH the merchant configure thresholds for validity scores and dollar values. For example a merchant might tolerate a range of validity scores for small purchases but demand very high validity scores for large purchases.

In addition to top down validity scoring issuer defined authorization policies and mechanisms are also used to authorize each tender instrument. For example to determine if a Groupon certificate can be used for settlement network would combine the results of a Groupon authorization web services call with the tender s validity score.

Traditional instruments like PIN debit and private label networks have built in authorization mechanisms including PIN address and or phone number verification. For these traditional forms of payment authorization is performed at the same time as settlement. When authenticating these forms of tender network relies on the validity score calculated for the tender and performs the tender s explicit authorization as part of settlement. When settling PIN debit for example the PIN would be passed with the card number to the PIN debit network as part of the request for settlement. For a private label card the settlement mechanism may pass the user s address and phone number to the private label issuer as additional authorization signals for the private label network. For newer tender instruments the authorization and settlement will likely be more clearly divided and the settlement mechanism will only perform settlement in one embodiment.

Embodiments can process multiple different forms of tender in a single transaction. As the number of tenders per transaction increases keeping transaction latency low can become increasingly difficult as the transaction will be as slow as the slowest form of tender. To authorize this mixed bag of tenders and ensure timely transactions embodiments include a number of mechanisms that let network pre authorize certain tenders before they are used in a transaction.

Pre authorization is the act of authorizing a tender without the immediate expectation of settlement. Pre Authorization removes the tender issuers from the critical processing path while employing a number of mechanisms to ensure the tender security is not compromised. The ability to pre authorize is based on embodiments that decouple authorization from settlement. The pre authorization and transaction history of tenders provides critical data for the machine learning algorithms.

Embodiments may include a number of pre authorization mechanisms that are not mutually exclusive. Any number of these mechanisms may be used alone or in combination to validate a single tender. In addition these mechanisms may be used repeatedly during the lifecycle of a tender.

One pre authorization mechanism authorizes an instrument when it is added to user account . This could be a blocking gating operation by which tender instruments are only allowed in user account after passing an authorization check. This is an aggressive form of authorization where network validates the health of tender as it is enters the system.

For tenders that have second factors of authentication another pre authorization mechanism can be used to verify not just the validity of the tender but also the user s ownership of the instrument. For debit cards network uses the PIN in this capacity. When a user adds a debit card to user account network performs an authorization not just to confirm that the card is valid but also to confirm that it is the owner entering the card.

The pre authorization on entry to prove validity mechanism described above ensures that instruments added to user account are valid on entry but additional validation may be required as instruments age. Embodiments can scan user accounts and re authorize instruments that have not been authorized for some duration of time. For example if a Groupon voucher certificate is validated on entry network could choose to re authorize the voucher after an initial authorization expires.

If the user had printed out the Groupon offer and redeemed it manually then network would receive a used not valid response from Groupon and mark the voucher used in user account . Periodic re authorization would be accomplished by rescanning all tender and sending batches of low priority authorization requests to Groupon.

The check in aspect of the two factor authentication system of embodiments of the present invention provide an opportunity to pre authorize tender in user account . When the user checks in to the store network can kick off a pre authorization of all the tenders in the user s user account that may be applied at the store the user checked into. In most cases the user will be in the store for at least a few minutes before making a purchase which provides a window of opportunity for network to re authorize and verify the validity of any instruments that may be used as part of an upcoming transaction.

While the mechanisms described above can improve the latency of real time transaction processing many of these mechanisms may be used for any all tender types in an account or across network to improve the security of the system. For example if a number of bad Groupon certificates were observed network can interpret this as a compromise of Groupon and choose to re authenticate all Groupon tenders to assess the situation. Similarly if a specific user was flagged for unusual behavior network could choose to pre re authorize all of the user s tenders to see if the user was potentially a fraudster trying to utilize bad tenders.

Regardless of the validity score or level of pre authorization network can choose to fully re authorize tenders at the time of transaction. In the event that authorization cannot be performed in real time e.g. the issuer is experiencing downtime network can leverage the tender validity score to make an authorization decision about the tender s legitimacy. For example if an offer were pre authorized a week ago and the tender validity score is high network could proceed with settlement under the assumption that the tender is good. This mechanism of falling back to local authorization mechanisms of network when real time authorization fails is referred to as authorization fallback. 

Embodiments further include a tunable fallback policy that describes how and when authorization fallbacks should be used. The bearer of liability configures the fallback policy with acceptable thresholds for tender validity scores time since last successful authorization pre authorization etc. In the case of a low value coupon the expectation would be that the manufacturer i.e. issuer would be liable for the coupons and would set relatively permissive thresholds since the cost of a bad coupon would be very low. Conversely if a merchant accepted private label and shoulder liability it might set very high validity thresholds for the private label tender. The merchant could even set validity thresholds that varied by dollar amount to minimize its risk.

To accept payment in one embodiment merchants must specify an acquirer configuration in its merchant account . The configuration can be as simple as an acquirer name and account or as complex as a set of acquirers and accounts and a policy about which acquirers should be used for which tender types. This configuration would likely include a raw merchant account endpoint to be used for transactions that did not explicitly require an acquirer.

For each tender issued in one embodiment the issuer must specify a settlement mechanism in the issuer account . For legacy tenders these mechanisms are interactions with legacy networks such as the PIN debit private label or credit networks. For newer forms of tender these mechanisms may be ACH or even direct settlement where when supported by issuers. Regardless of the tender it is the settlement mechanisms affect settlement by initiating the movement of money between two endpoints but never take direct possession of money.

As described above when a user client initiates a check in network creates a secure session token or Bean that is registered with merchant account . The token contains a reference to the store and user and the token is referenced within merchant account by the user s PIN. When the user enters the PIN at the merchant s POS to initiate a transaction the PIN is used to lookup the token for the user. This mechanism therefore uses the PIN both to authenticate the user and also to disambiguate the user from other in store users.

When the user enters the PIN to authorize a transaction a token is returned from network to the POS. The POS adds the basket of goods to the token and sends it back to network where the basket is fully constructed and the transaction is ready for processing. The token is used by network to facilitate processing. Finally when the transaction is complete the token is turned into a receipt. The token is the transactional entity that ties the user merchant basket of goods and issuers together for the lifecycle of an individual transaction including post purchase actions such as returns.

Transaction engine as described above uses user account merchant account and the basket of goods to derive payment from a set of issuer accounts . Transaction engine in one embodiment divides the work of processing a transaction into three distinct phases a business logic phase an authentication and authorization phase and a settlement phase.

The business logic phase is the initial phase of a transaction in which transaction engine looks at all instruments in the user s user account the tender types the merchant accepts the items in the basket of goods which include line level data and decides how to process the transaction.

Transaction engine first looks at user account and gathers all the forms of tender. It then organizes the forms of tender based on the user s stated preference for tender use at the specified merchant. Forms of tender that the user does not want to use are removed from the list of potential tenders.

The list of potential tenders is then filtered based on any restrictions the merchant may have. If the merchant for example is not willing to accept a form of tender it is removed from the list of tenders to be used for the transaction. Merchants set tender acceptance policies and users may always manually select tender preferences e.g. universal default tender default tender by merchant etc. . However embodiments can also dynamically and intelligently select user tender for each transaction without any required user action.

Transaction engine then applies the tenders to the basket of goods seeking to honor the order of tender priority and best possible tender outcome. This may require relatively complex determinations as some tender types have complex rules and the outcomes of these rules must be compared i.e. is a 2 for the price of 1 coupon better than a 2 for 5.00 coupon . As the basket is processed and tenders are applied any tender specific policy is also preserved. For example most coupons are not eligible for stacking and some rewards programs may be applied only to certain products.

Transaction engine applies all tenders until the basket of goods is qualified for settlement. This process may take many iterations and include many tender types as a single basket may be funded by coupons loyalty rewards pre paid offers multiple gift cards and a private label card debit card etc. Transaction engine in one embodiment can enable split tender of not just 2 or 3 but an unlimited number of instruments.

At this point the business logic phase has completed the set of tender instruments has been chosen and transaction engine moves onto the authentication and authorization phase. In this phase transaction engine leverages the authentication mechanisms described above to validate all participants in the transaction and the authorization mechanisms described above to authorize all tenders to be used in the transaction.

To verify the user and merchant the user and merchant authentication mechanisms are used and in the case of insufficient validity corrective action is taken. For a weakly authenticated user challenge questions are issued or for a weak merchant endpoint score the merchant authentication policy is followed.

To verify the validity of selected tenders transaction engine resolves the issuer account for each tender and performs the authorization action specified by the authorization policy in issuer account . The authentication and authorization phase ensures that the user the merchant the basket of goods and the tender instruments have all been validated before moving on to the settlement phase.

In the settlement phase transaction engine settles the set of tenders that have been specified for the transaction. To settle tenders transaction engine resolves the issuer account for each tender looks up the settlement mechanism and executes the settlement.

Network allows merchants to specify a mechanism by which they should receive payment and issuers to specify an agent that should be used to settle outstanding balances. Network in one embodiment does not take control or hold money at any point during the transaction.

Transaction engine in one embodiment uses a phased approach to processing transactions in order to separate business logic authentication authorization and settlement from one another. As a consequence the authentication and authorization phase of the transaction validates more than just the tender as transaction engine validates all aspects of a transaction regardless of the tender instrument s used to settle the transaction. Therefore transaction engine makes it well suited to support tenders with weak or no authorization mechanism. Conversely instruments with stronger authorization mechanisms e.g. PIN debit are made increasingly secure by the added layers of validation.

One embodiment allows users to modify tender selection even after a transaction has been settled. For example if a user accidentally applied a 20 off offer to a 10 basket the user might prefer to save the offer for the larger transaction. Embodiments let the user modify the tender selection and re settle the transaction by choosing to pay the merchant an extra 2 and to have the offer marked as unused. Similarly if a user wanted to move a purchase from a debit card to a line of credit or from one line of credit to another line of credit the same mechanism could be used. This post settlement modification mechanism will depend on merchant and issuer policies

As described above when conducting a mobile transaction with network each user is uniquely identified per transaction by user account as a result of the user downloading the mobile commerce application as described above in conjunction with . Therefore user specific analytics can be conducted on the mobile transactions. However users that use traditional payment methods such as credit and debit cards to conduct transactions may not have a corresponding user account . Therefore embodiments of commerce network collect data and provide analytics across all customer data regardless of the payment mechanism.

Specifically in addition to supporting mobile transactions as described above embodiments also support a traditional transaction mode that accommodates all forms of payments including credit and debit cards and cash payments. When this mode is enabled POS client of can aggregate data for every transaction that passes through it.

In the case of a credit card or debit card transaction or any type of transaction instrument that has an identifying number a card hash i.e. an encryption of the card number or hash of a non card number is passed into the Beanstalk library. The card hash is then used as a payment token instead of the token Bean described above that is used for mobile transactions.

When a traditional transaction token reaches commerce network the card hash is used as a user identifier and the transaction data including line level for all items is captured for the user. Every time a customer uses the same credit card the transaction is added to the same user account. While this user remains unknown and unreachable for marketing purposes the user account provides a picture into the historical behavior of a user across multiple visits in which the same card is used.

In the case of a cash transaction a cash identifier is created that is coupled with a timestamp to serve as a marker for an anonymous transaction. When an anonymous cash transaction reaches commerce network the transaction is recorded as part of a unique single use account.

While embodiments do not modify aspects of the traditional transactions from the user s perspective the captured user data is valuable for the retailer. illustrates a parallel implementation to capture the user data in accordance with one embodiment. In the embodiment of a retailer s POS initiates payment processing with the retailer s acquirer similar to with any type of transaction. However in addition to initiating payment processing POS also sends to commerce network at the card hash and the basket of goods line level data of the transaction. This enables commerce network to record the transaction without having any impact on the existing payment process. The information is stored at an anonymous user account described in more detail below that is created for the particular user based on the unique card hash .

While the embodiment of places a higher dependency on commerce network as compared to the embodiment of it also allows embodiments to provide additional functionality. Since the transaction is stored in commerce network embodiments can look the transaction up after the fact and make modifications such as returns.

As described embodiments support accounts for users in addition to the mobile user account described above in order to accumulate data for traditional non mobile transactions. In one embodiment commerce network implements three additional types of user accounts anonymous identified and verified accounts.

Credit and debit card swipe payments make up the majority of today s transactions. The ability to tie unique account identifiers to individual cards as they are swiped enables commerce network to match cards with an individual consumers. This capability enables long term insight into consumer behaviors.

In order to create a unique identifier for a card embodiments calculate a card hash upon swipe. The card hash is generated by using the card data as input into a one way hash. The result is a stable unique card hash that can be used as a unique identifier. In this embodiment the card hash derived from the card is used as a proxy for the user s identity.

Every time the user swipes the same card at a merchant the card hash will be used to lookup the user account for that card hash. If no account exists one will be created such as anonymous user account of . If an account exists the receipt will be appended to the unique user account referenced by the card hash.

If a user uses a different card at a merchant a different anonymous account will be used to track the transaction. Since there is no information in addition to the card hash derived from the card these accounts cannot be shared and a unique user card account will exist for each card used by the user at a merchant. This type of account is anonymous i.e. users play no active role except for swiping their card and is used to append receipts or to upgrade the account to a identified account described below by adding an email address or a phone number or other identifier.

The user specific data collection that is part of the anonymous account in accordance with some embodiments can provide valuable insight to a merchant as they can better understand an individual customer. For example the data allows a merchant to targeted incentives to be delivered on a receipt. In the case of a user transaction embodiments can use the customer s personal purchase history as well as the basket of good being purchased to target incentives.

For example a merchant can issue a coupon on a receipt at the end of the transaction. Commerce network could recognize that a specific customer who is currently buying something as simple as a bottle of wine had recently purchased baby formula and provide a coupon specific to the user for 10 off of diapers if the customer comes back within a week. In contrast prior art targeted incentive systems do not have personalization or history based on a specific card and can only target incentives using the current basket of goods being purchased.

Further network has the ability to track multiple transactions across a single retailer or multiple retailers using the anonymous account assuming all transactions use the same card instrument used to create the account. Thus when a user swipes their card to pay and that card is associated with an anonymous account on commerce network commerce network could issue an incentive on the printed receipt. As an example if an anonymous account indicates a history of the anonymous user buying only sweaters it could indicate to the POS to print an incentive giving the user 20 off of pants on the receipt.

One embodiment allows an anonymous account to be upgraded to an identified account upon the entry of some user specific data e.g. email address phone number etc. that associates a card hash with the user provided data. The upgrade of an anonymous account to an identified account allows the user to receive digital receipts. The user can do this for each card that they use at a merchant. Over time a user may upgrade multiple accounts to the same shared identified account. An identified account may be referenced by single or multiple email addresses and or phone numbers and multiple card hashes.

In one embodiment any time a user participates in a transaction commerce network provides an opportunity to link the transaction to an account. In the case of a card based transaction the card hash will be used to lookup the user account on commerce network . If the user has not provided information to identify the user account the retailer could optionally prompt the user to link the account by asking for an email address or phone number. If the user does enter an email address the passive account for the card can be automatically upgraded to an identified account. The user could similarly link all cards to such an identified account.

One benefit to the user in providing identifying information including an email address is the ability to email a line item level receipt to the customer eliminating the need for paper receipts if desired. The email channel also allows the user to receive email incentives to download the mobile application describe above.

Further providing an email allows commerce network to tie multiple cards to a single user account. For example if a customer makes a purchase with their credit card and without entering their email an anonymous user account will be created that is associated with a card hash associated with that card. If the same user later makes a purchase using their debit card and also without entering an email address a separate anonymous user account will be created as there is no data yet connecting those two cards and therefore accounts with a single user. The introduction of an email allows for the combining of these two accounts. If the user enters their email in both scenarios commerce network recognizes these accounts as related to the same user and consolidates them both under the same user email.

Further the ability to create a user account using a card hash and then optionally linking the account with an email address provides marketing opportunities to the merchants. Having a user s email enables the merchant to use email marketing tailored at the user level as the merchant is able to match all data purchasing history line level data and location information with a specific customer and then send custom targeted incentives via email. As with the receipts discussed above for the anonymous accounts these receipts can be emailed to the user.

Once a user has upgraded to an identified account they will start to receive digital receipts and an invitation to further upgrade their account to a verified account in one embodiment. To upgrade to a verified account the user can create an account online using commerce network and claim their linked accounts usually by clicking on their invite found within email or text . When a user creates a verified account online the user can link existing anonymous or identified accounts that they can provide authentication for. For example assume a user has used one card in the past as shown in . An anonymous account would be associated with this card. If the same user has also used a different card and provided an email in the past when swiping that card an identified account would be associated with the second card. However because the user not has entered an email with the first card the anonymous account associated with the first card would not be associated with the identified account associated with the second card and the email. However through the online sign up for a verified account these card accounts would be linked as long as the user authenticates both cards while creating their account.

An identified account can be upgraded to a verified account by having the user verify that an email address or other contact information has been verified to be accurate and in use. The identified account allows for direct communication with individual users and this outlet can be used to incent customers to upgrade their accounts to a verified active accounts. For example a link to account creation or a link to download a mobile application can be embedded within emails or text messages to users with identified accounts.

The verified account allows users to collect offers and coupons for in store redemption online and associate them with the cards they use to make purchases in store and allows them to view receipts and configure their account from a browser. Further verified accounts allow for users to clip offers on the web and have them associated with their accounts. Then when the user makes an in store purchase these offers can be redeemed when the user uses a payment instrument associated with their account.

The identified account allows for offers to be redeemed because they are associated with a specific card. In contrast the verified account allows for those offers to be associated with an account. Thus a user with a full account can redeem an offer without the restriction of using a particular card. Verified accounts allow for users to view past receipts and configure their accounts online. Therefore they can reference stored receipts add or remove payment instruments and choose preferences such as default payment instrument and adjust communication settings.

As describe above a mobile account or user account is created when a user downloads an application on a mobile device. Users can link accounts by inputting and authenticating multiple cards and contact information within the application. If a user has not created a verified account none of the existing accounts such as anonymous accounts or identified accounts that may be associated with their cards or contact information have been associated with the application. As such when the user inputs this information into the mobile application these existing accounts can be associated. If there are no existing accounts associated with a new mobile user s payment or contact information there is no need to associate accounts as there are no existing accounts for that user.

A mobile account in one embodiment offers more user features than the other types of accounts. It enables users to collect offers and coupons for in store redemption entirely via their mobile device it lets them use a mobile application to make in store purchases and it lets users clip and organize offers from multiple channels and store them in their mobile account and redeem offers directly from their phone.

As with the transition from identified to verified accounts embodiments can provide users with incentives to move from a verified account to a mobile account. A link to download a mobile application can be embedded in the online account or within emails or text messages to users with a verified account.

Further a user s purchase history across online and in store can be linked to their mobile account in commerce network . As the user enters the store a sales associate can see information according to the retailer s preferences i.e. a department store may want to see information such as size annual spend loyalty program enrollment previous purchases frequency etc. . The sales associate can then personalize the user s in store experience. For example that sales associate might say to a user named Jane Jane we have a new collection just out from one of your favorite designers or Jane it has been a few months since you bought your foundation. Do you need any more today 

At in response to a transaction module receives an identity of a financial instrument e.g. a credit card debit card or non card based financial instrument that was used to pay for the transaction and line level data for the transaction. The identity may be based on a number of the instrument. In one embodiment the identity is a hash of the instrument number such as a credit or debit card number hash. In one embodiment the hash is an encrypted reference to the instrument number rather than the number itself or the hash can be an encrypted token that is associated with a card number and or card holder data

At module creates an anonymous account for the financial instrument at and stores the line level data and all information for the transaction in the account.

At additional transaction information including line level data for the same financial instrument at is received and stored in the anonymous account created at . Therefore for example data for all future transactions that use the same credit card or debit card at are associated with a single anonymous account.

At in response to receiving some user entered identity data associated with the financial instrument an identified account is created from the anonymous account. The user entered data can include an email address or telephone number.

At the same user entered identity data at is also received for a different financial instrument than the financial instrument at . As a result both financial instruments are linked and all stored transactions from both financial instruments can be joined consolidated. Additional financial instruments and all underlying stored transaction data can also be linked together.

At in response to a user creating an account online and linking the account to the identified account at a verified account is created from the identified account.

At in response to the user downloading an application to a mobile device a mobile account is created from the verified account.

As disclosed accounts are established through a network so that transactions across the network may be tracked and associated with a user. The data stored in association with the transactions such a line level data of all purchases can be used to perform analytics and to provide targeted communications and promotions to the user.

Several embodiments are specifically illustrated and or described herein. However it will be appreciated that modifications and variations of the disclosed embodiments are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention.

