---

title: System and method for automated network configuration
abstract: A method of configuring a data network with a controller, the data network including a plurality of hosts each associated with at least one of a plurality of switches, the method including receiving a request to boot an operating system image on one of the plurality of hosts, the operating system image having network connectivity requirements. Further, the method includes selecting a host out of the plurality of hosts on which to boot the operating system image. The method also includes booting the operating system image on the host, and configuring a switch out of the plurality of switches associated with the host based upon the network connectively requirements of the operating system image. Additionally, the method includes configuring networking attributes of a network interface in the host based upon the network connectivity requirements of the operating system image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08892863&OS=08892863&RS=08892863
owner: Dell Products L.P.
number: 08892863
owner_city: Round Rock
owner_country: US
publication_date: 20131216
---
The present application is a Continuation of U.S. Utility application Ser. No. 13 096 061 filed Apr. 28 2011 and related to U.S. Utility application Ser. No. 13 096 460 filed on Apr. 28 2011 the disclosures which are incorporated herein by reference.

The present disclosure relates generally to data networks and more particularly to configuring network communications in a data network.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option is an information handling system IHS . An IHS generally processes compiles stores and or communicates information or data for business personal or other purposes. Because technology and information handling needs and requirements may vary between different applications IHSs may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in IHSs allow for IHSs to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition IHSs may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

IHSs are often networked together in large data centers. Data center management software has been developed to automate common data center tasks and to remotely manage hosts in the data center. As an aspect of this the management software may often centrally store a variety of operating systems images that may be distributed to any number of the hosts in the network. Traditionally after an operating system has been distributed and booted on a host a data center administrator may be required to configure the networking resources of the host before it can communicate with other hosts in the network. Accordingly it would be desirable to provide an improved system and method for automated network configuration in data networks.

In one exemplary aspect the present disclosure is directed to a method of configuring a data network with a controller the data network including a plurality of hosts each associated with at least one of a plurality of switches the method comprising receiving at the controller a request to boot an operating system image on one of the plurality of hosts the operating system image having network connectivity requirements automatically selecting with the controller a host out of the plurality of hosts on which to boot the operating system image the selecting being based upon the network connectivity requirements of the operating system image booting with the controller the operating system image on the host configuring with the controller a switch out of the plurality of switches associated with the host based upon the network connectively requirements of the operating system image and configuring with an agent executing in the operating system image networking attributes of a network interface in the host based upon the network connectivity requirements of the operating system image.

In another exemplary aspect the present disclosure is directed to a method of configuring a data network with a controller the data network including a plurality of hosts each associated with at least one of a plurality of switches and including a plurality of virtual networks associated with portions of the data network the method comprising receiving at the controller a request to boot an operating system image on one of the plurality of hosts the operating system image requiring network connectivity to a first number of the virtual networks automatically selecting with the controller a host out of the plurality of hosts on which to boot the operating system image the selecting including selecting a host with network connectivity to each of the first number of virtual networks determining with the controller whether a second number of network interfaces in the host is less than the first number of virtual networks each of the second number of network interfaces being coupled to a switch port on one of the plurality of switches booting with the controller the operating system image on the host configuring if the second number of network interfaces is not less than the first number of virtual networks the layer 3 networking attributes of the second number of network interfaces with an agent on the host such that each of the second number of network interfaces is communicatively coupled to one of the first number of virtual networks and instantiating on the host if the second number of network interfaces is less than the first number of virtual networks a third of number of virtual network interfaces equal to the first number of virtual networks with the agent on the host the instantiating including configuring the layer 3 networking attributes of the third number of virtual network interfaces such that each of the third number of virtual network interfaces is communicatively coupled to a different one of the first number of virtual networks.

In yet another exemplary aspect the present disclosure is directed to a data network management system for managing a data network that includes a plurality of hosts each associated with at least one of a plurality of switches and includes a plurality of virtual networks associated with portions of the data network the system comprising a controller operable to receive a request to boot an operating system image on one of the plurality of hosts the operating system image requiring network connectivity to a first number of the virtual networks automatically select a host out of the plurality of hosts on which to boot the operating system image the selected host having network connectivity to each of the first number of virtual networks determine whether a second number of network interfaces in the host is less than the first number of virtual networks wherein each of the second number of network interfaces is coupled to a switch port on one of the plurality of switches and boot the operating system image on the host the operating system image including an operating system. The system also includes an agent module configured to execute in the operating system on the host the agent operable to configure if the second number of network interfaces is not less than the first number of virtual networks the layer 3 networking attributes of the second number of network interfaces such that each of the second number of network interfaces is communicatively coupled to one of the first number of virtual networks and instantiate if the second number of network interfaces is less than the first number of virtual networks a third of number of virtual network interfaces equal to the first number of virtual networks and configure the layer 3 networking attributes of the third number of virtual network interfaces such that each of the third number of virtual network interfaces is communicatively coupled to a different one of the first number of virtual networks.

In one embodiment the IHS includes a processor which is coupled to a bus . Bus serves as a connection between processor and other components of IHS . An input device is coupled to processor to provide input to processor . Examples of input devices may include keyboards touchscreens pointing devices such as mice trackballs and trackpads and or a variety of other input devices known in the art. Programs and data are stored on a mass storage device which is coupled to processor . Examples of mass storage devices may include hard discs optical disks magneto optical discs solid state storage devices and or a variety other mass storage devices known in the art. IHS further includes a display which is coupled to processor by a video controller . A system memory is coupled to processor to provide the processor with fast storage to facilitate execution of computer programs by processor . Examples of system memory may include random access memory RAM devices such as dynamic RAM DRAM synchronous DRAM SDRAM solid state memory devices and or a variety of other memory devices known in the art. In an embodiment the IHS includes a non transitory computer readable medium e.g. the storage the memory etc that may include computer readable instructions that when executed cause the processor to perform a variety of functions described in further detail below. A communications device such as a network interface card NIC is coupled to processor to allow the IHS to communicate with other devices over a network. In an embodiment a chassis houses some or all of the components of IHS . It should be understood that other buses and intermediate circuits can be deployed between the components described above and processor to facilitate interconnection between the components and the processor .

The managed system further includes hosts and that in the current embodiment are information handling systems similar to IHS and may be servers workstations blade servers or another type of IHS. In one embodiment the hosts are communicatively coupled to the controller via a dedicated system control network through which the controller may issue commands monitor and deploy personas to the hosts. As one aspect of this the hosts may each include a management controller such as a baseboard management controller BMC an integrated Dell remote access controller iDRAC or other out of band OOB controller. Further each host includes one or more physical network interfaces to communicate with other devices in the managed system . For instance in the illustrated embodiment the host includes a 1 GB Ethernet network interface card NIC host includes three 1 GB Ethernet NICs and the host includes two 1 GB Ethernet NICs and and host includes a 10 GB partitionable Ethernet NIC . These NICs may be LAN on Motherboard LOM NICs PCI based NICs mezzanine NICs or another suitable type of NIC. In other embodiments the hosts may additionally or alternatively include partitionable converged network adapters CNAs or partitionable Infiniband NICs.

The managed system also includes a layer 2 interconnect fabric including Ethernet switches and that are communicatively coupled to the hosts and . The switch includes ports and that are respectively coupled to NIC on host and NICs on host . Switch includes ports and that are respectively coupled to NICs and on host and NIC on host . As shown in the switches and communicatively couple the hosts and to a plurality of virtual local area networks VLANs including VLAN VLAN and VLAN . For the sake of clarity the network connections between the hosts and layer 2 interconnect fabric switches and and VLANs and shown in have been simplified. For example the managed system may include any number of additional networking devices including hubs switches routers load balancers firewalls servers virtual networks subnets SANs and other networking devices known in the art.

In the managed system to provide for automated network configuration access to VLANs is abstracted into channels. In the illustrated embodiment channels define the allowed connectivity of a network interface to specific VLANs. Or in other words a channel defines a network path through which only packets associated with specific VLANs may flow. Typically a channel is associated with more than one VLAN. For example in the managed system each switch port and is assigned a channel number. Accordingly each switch port may only route packets to the VLANs associated with its assigned channel. Further the NICs in hosts and inherit the channel of the switch port to which they are connected. For instance because switch port is assigned channel as shown in NIC is also assigned channel . Additionally VLAN connectivity overlaps between channels that is a particular VLAN may be accessed thorough more than one channel. As such access to a particular VLAN may be gained through a primary channel or a secondary channel the latter of which provides a failover path.

As shown in the switch ports of switches and are assigned channels as follows port is assigned channel port is assigned channel port is assigned channel port is assigned channel port is assigned channel port is assigned channel and port is assigned channel . As noted above the NICs coupled to these ports inherit the channel of the port. The VLAN connectivity permitted by these channels is as follows 

Still referring to the data store includes personas and that the controller may boot on any suitable host in the managed system . As mentioned above the personas contain configuration metadata including a number of attributes that describe its network connectivity storage and application specific configuration. For example an application in a persona may require network connections to specific networks i.e. VLANs for testing purposes. Whether a host in the managed network is suitable for a persona is dependent in part on whether it can fulfill the persona s network connectivity requirements. In this regard the aforementioned channel concept is utilized by the controller to match persona network connectivity requirements with host network connectivity capabilities. For instance if the persona requires a connection to VLAN it must be booted on a host with a NIC assigned channel or since channel does not provide a path to VLAN . Thus host which only has a single NIC that assigned to channel may not be selected by controller as a boot host for persona . However the persona may be booted on any one of hosts and because they provide access to VLAN . As another example in the illustrated embodiment the persona requires network connectivity to VLANs and . The controller may thus choose to boot persona on a host with NICs assigned to any two of the three channels as that would insure connectivity to all three VLANs. In this regard a host need not have a NIC corresponding to each required VLANs as a virtual NIC vNIC may be instantiated on the host to provide additional network connections. A vNIC in this context is a software based tagged network interface executing in the persona operating system that appears to applications as a physical network interface. The host must simply have sufficient access to the required VLANs as defined by the channels assigned to its NICs. Thus given the network connectivity requirements of persona the controller may choose to boot the persona on host or . However for performance reasons it may be preferable to boot a persona on a host with a number of NICs greater than or equal to the number of required VLANs. As such with all other factors being equal the controller may select host over host as it has three physical NICs and persona requires access to three VLANs. The process of instantiating vNICs on hosts in managed system will be discussed in greater detail in association with .

As a further example in the illustrated embodiment the persona requires network connectivity to VLANs and . The controller may select hosts or but not host because its only NIC NIC is assigned channel which does not provide a path to VLAN . The controller may preferably select either host or host for persona as they have a sufficient number of physical NICs however if both of those hosts are already running a persona or are out of service the controller may select host . In such a case vNICs may be instantiated on the host or in some embodiments the 10 GB NIC may be partitioned into two virtual interfaces where each sends and receives packets from a particular VLAN. In cases where the total throughput speed of a partitionable NIC is greater than the combined throughput speed of standard NICs it may be advantageous to boot a persona on the host with the partitionable NIC rather than create vNICs. Further hosts with a partitionable NIC may also preferable over hosts with vNICs because certain applications may not be compatible with vNICs. The process of partitioning a NIC will be discussed in greater detail in association with .

As described by the examples above the controller includes an algorithm for selecting a host in the managed system on which to boot a particular persona. In this regard is a high level flowchart illustrating one embodiment of a method that may be used by controller to select a host on which to boot a particular persona. The method begins at block where the controller receives a request to boot a persona that requires network connectivity to X number of VLANs. The method proceeds to block where from an inventory of all hosts in the managed system the controller forms a list of hosts that provide network connectivity to the required VLANs. Specifically the list includes only hosts with NICs assigned to channels through which the required VLANs may be accessed. The method then moves to decision block where the controller determines if there is a host available that may satisfy the persona s network connectivity requirements with physical NICs. That is the controller looks for a host with at least X number of physical NICs. If there is such a host available the method proceeds to block where the controller selects a host with X or more physical NICs on which to boot the persona. If there are no hosts available with X or more NICs the method moves to decision block where controller determines if there is a host available with a partitionable NIC that may be partitioned into at least X number of virtual interfaces. If there is such a host available the method proceeds to block where the controller selects a host with an X way partitionable NIC on which to boot the persona. If there are no hosts available with an X way partitionable NIC the method proceeds to block where the controller selects a host with fewer than X number of physical NICs on which to boot the persona. In such as scenario as discussed later vNICs may need to be instantiated in the persona upon bootup.

Note that the above method focused on selecting a host based only on network connectivity. In some embodiments a user of the managed system may impose additional selection criteria such as processor speed machine type etc. In those embodiments the controller may still utilize the method however the number of hosts available for selection may be limited. Further the selection order of method is based upon the premise that partitioning a NIC is preferable over instantiating vNICs in a persona for example for the reasons previously discussed. But in other embodiments it may be preferable to utilize vNICs rather than partition a NIC.

With reference now to illustrated is a functional block diagram of a portion of the managed system that includes host . Specifically depicts a scenario in which persona has been booted on host . As discussed above persona requires network connectivity to VLANs and . Using the algorithm illustrated in controller selected host for persona because its NICs and are respectively assigned channels and which together provide access to the required VLANs and . Further in some embodiments controller may have selected host because it may provide better network performance than other hosts in managed system that do not have enough physical NICs to create independent connections with each required VLAN. As noted above once host has been selected for the persona the controller is operable to not only boot the persona on the host but also operable to automatically configure the host s physical NICs to fulfill the persona s network connectivity requirements.

As shown in when booted on host the persona includes at least an operating system a persona agent application software and NIC drivers . The persona agent is a client program that communicates with controller to receive instructions and configure aspects of host . Specifically the controller utilizes the agent to among other things configure the network connections of the host . When the persona is booted on the host for the first time the agent is among the first programs to load in the operating system as the agent is responsible for setting up the networking connections for other applications such as application software . In the illustrated embodiment the application software is a web server that for testing purposes requires access to VLANs and i.e. the reason persona requires access to VLANs and . Additionally in one embodiment the NIC drivers expose an application programming interface API set through which the agent may configure the NICs and .

In order to configure the network connections of host the controller must perform a number of steps. First the controller must determine if the number of physical NICs on the host matches or exceeds the number of VLANs the persona requires access to. If so as here the controller will first place each of the switch ports coupled to the NICs in access mode that is each of the switch ports will receive and transmit packets to only one VLAN. Then the controller will examine the channel assignments of the switch ports and and the VLAN requirements of the persona and determine which switch port should be associated with which VLAN. Here the controller through the use of non illustrated switch management infrastructure assigns VLAN to switch port assigns VLAN to switch port and assigns VLAN to switch port . Next on the host the controller will send commands to the agent to configure the NICs and . Using the channel assignments of the switch ports on the switch the controller determines the NIC to VLAN mappings and sends this information to the agent so it may configure the NICs on host . Here NIC is mapped to VLAN NIC is mapped to VLAN and NIC is mapped to VLAN . Thus after the persona has booted on the host the agent will receive the NIC VLAN mappings from the controller and instructions to configure the layer 3 networking attributes of the NICs and . Using this configuration information from the controller the agent will configure the following attributes in the NICs and IP address DHCP hostname and NIC Specific Routes including multicasting. If the operating system is a Windows based operating system the agent may configure additional attributes such as NetBIOS over TCP Wins Server Address DNS server registration. After the physical NICs and have been mapped to a specific VLAN and have been assigned layer 3 attributes applications in operating system such as application software may access the desired VLANs.

With reference now to illustrated is a functional block diagram of a portion of the managed system that includes host . Specifically depicts a scenario in which persona has been booted on host . As discussed above persona requires network connectivity to VLANs and . Using the algorithm illustrated in controller selected host for persona because its NICs and are respectively assigned channels and which together provide access to the required VLANs and . However in one embodiment because host only has two physical NICs host may not have been the first choice of the controller for persona . In such a scenario other hosts in managed system with three or more NICs such as host may have been unavailable.

As shown in when booted on host or any other host such as host as shown in the persona includes the operating system the persona agent the application software and NIC drivers . Accordingly the network connectivity requirements of the persona remain constant no matter which host its booted on. However because the host has a different number of NICs than host the controller must perform a different steps to configure the network connections for persona on host . First the controller must determine if the number of physical NICs on the host matches or exceeds the number of VLANs the persona requires access to. If not as here more than one VLAN may be mapped to a single physical NIC. This in turn requires one or more switch ports to transmit and receive packets from multiple VLANs. As such after the host has been selected for persona the controller places the switch ports and in trunk mode that is they transmit and receive packets from more than one VLAN. The controller then examines the channel assignments of the switch ports and and the VLAN requirements of the persona and determines which switch port should be associated with which VLAN s . Here the controller through the use of non illustrated switch management infrastructure assigns VLAN and VLAN to switch port and assigns VLAN to switch port . Next because there is not a one to one mapping of physical NICs to VLANs the controller instructs the agent to instantiate vNICs and in the operating system . As mentioned above vNICs are software based tagged network interfaces that cooperate with the NIC drivers . In the embodiments in which operating system is a Linux based operating system the agent may instantiate Linux s built in vNIC capabilities. Through these vNICs the application software may communicate with specific VLANs in the same way it communicates through the physical NICs in host . But before the application software does so the agent must bind the vNICs and to physical NICs and based on the channel assignments of the physical NICs. Because the persona requires access to VLANs and and channel provides a path to both VLAN and the agent will bind vNIC and to NIC which is assigned channel . Channel provides a path to VLAN so vNIC is bound to NIC which is assigned channel . After the vNICs and have been bound to the appropriate NIC the agent configures the layer 3 networking attributes of the vNICs just as it configured the layer 3 attributes of the physical NICs in host . For example the agent assigns IP address to the vNICs using information received from controller . Once the host has been configured as described the application software may access VLAN through vNIC access VLAN through vNIC and access VLAN through vNIC .

With reference now to illustrated is a functional block diagram of a portion of the managed system that includes host . Specifically depicts a scenario in which persona has been booted on host . As discussed above persona requires network connectivity to VLANs and . Using the algorithm illustrated in controller selected host for persona because its NIC is assigned channel which provides a path to the required VLANs and . Here because persona requires access to two VLANs yet host only includes one physical NIC host may not have been the first choice of the controller for persona . As shown in when booted on host the persona includes at least an operating system a persona agent application software and NIC drivers . The persona agent may be similar to the persona agent described in association with . In the illustrated embodiment the application software is a network traffic analyzer that for data collection purposes requires access to VLANs and i.e. the reason persona requires access to VLANs and .

In order to configure the network connections of host the controller must perform a number of steps. First the controller must determine if the number of physical NICs on the host matches or exceeds the number of VLANs the persona requires access to. If not such as here the controller may instantiate vNICS in the operating system or because the NIC is partitionable it may divide the NIC into multiple virtual interface partitions through which multiple VLANs may be accessed. In the illustrated embodiment of the controller determined that partitioning the NIC would result in better network performance than instantiating vNICs in the operating system . Although in the current embodiment the NIC is a 10 GB Ethernet NIC it may alternatively be a partitionable converged network adapter CNA or partitionable Infiniband NIC. To configure the network connections of host the controller must first place the switch port on switch in trunk mode as both VLAN and VLAN must be accessed through it. Next the controller may send instructions to the agent to partition the NIC into two interfaces partitions and where interface is mapped to VLAN and interface is mapped to VLAN . In some embodiments the total bandwidth of the NIC may be dynamically divided between the interface partitions and based upon the anticipated network traffic on each of VLANs and . Next using information from the controller the agent configures the layer 3 networking attributes such as IP address for each of the interface partitions and . In this manner the application software may access the VLAN through the interface partition and access the VLAN through the interface partition .

Referring back to decision block if the controller determines that the selected host does not have enough physical NICs to fulfill the network connectivity requirements of the persona the method proceeds to decision block . There the controller determines whether the host includes a partitionable physical NIC. If so the method continues to block where the persona is booted on the selected host. Then in block the controller places the switch port coupled to the host s NIC into trunk mode as it will be used to access more than one VLAN. Next in block a persona agent running in the operating system on the host partitions the hosts NIC into a number of interface partitions equal to the number of VLANs the persona requires access to. Each interface partition is then mapped to a specific VLAN based upon the channel assignment of the associated switch ports. Finally the persona agent configures the layer 3 networking attributes e.g. IP address of the interface partitions of the host s physical NIC using information from the controller . In this manner applications in the persona may access desired VLANs using the interface partitions of the physical NIC on the host.

Referring back to decision block if the controller determines that the selected host does not include a partitionable physical NIC the method proceeds to block . There the persona is booted on the selected host. Then in block the controller places the switch ports coupled to the host s NICs into trunk mode as they will be used to access more than one VLAN. Next in block a persona agent instantiates a number of vNICs in the operating system of the persona that matches the number of VLANs to which the persona requires access. As an aspect of this the controller instructs the agent to map each of the vNICs to a physical NIC in the host based upon the channel assignment of physical NICs. Finally the persona agent configures the layer 3 networking attributes e.g. IP address of the vNICs using information from the controller . In this manner applications in the persona may access desired VLANs using the vNICs in the selected host s operating system.

In the examples described in association with the controller booted personas and directly on the hardware of the hosts and i.e. in a bare metal configuration . However in other embodiments the controller may be operable to boot a persona in a virtual machine on a host in the managed system and automatically configure the persona s required network connections within the virtualized environment. That is when controller determines which host in managed system to boot a persona on as described in association with it may choose from virtual machines as well as bare metal hosts. In general the network configuration steps described in association with may be similar to those required to boot a persona on a virtual machine except that additional steps may be required. U.S. patent application Ser. No. 13 096 460 filed on Apr. 28 2011 describes methods and systems for booting a persona in a virtual machine and automatically configuring the persona s required network connections and is hereby incorporated by reference in its entirety.

Although illustrative embodiments have been shown and described a wide range of modification change and substitution is contemplated in the foregoing disclosure and in some instances some features of the embodiments may be employed without a corresponding use of other features. Accordingly it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the embodiments disclosed herein.

