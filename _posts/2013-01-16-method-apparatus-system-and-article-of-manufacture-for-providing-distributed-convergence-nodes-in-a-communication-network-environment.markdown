---

title: Method, apparatus, system, and article of manufacture for providing distributed convergence nodes in a communication network environment
abstract: Distributed convergence nodes referred to as “Supernodes”, embodied as a functional technology component within an end user application, automatically determine whether said component should become “active” and assume the responsibility of forwarding IP multicast data present on a LAN (which supports IP multicast communication) to a “Routing Supernode” via a WAN (which does not support IP multicast communication). The Routing Supernode, in turn, is responsible for forwarding that traffic to other Supernodes present on other LANs. The traffic sent to and from the Routing Supernode is sent via unicast communication. All Supernodes are responsible for forwarding traffic on their respective LAN across the WAN to a Routing Supernode, and for forwarding traffic received over the WAN from the Routing Supernode onto their own respective LANs. An election process determines which device in a LAN is to operate as a SuperNode.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08787383&OS=08787383&RS=08787383
owner: Twisted Pair Solutions, Inc.
number: 08787383
owner_city: Seattle
owner_country: US
publication_date: 20130116
---
This disclosure relates generally to computer software and or hardware for computer and communication systems networking and more particularly but not exclusively relates to communication between devices through a communication network.

Highly scalable high bandwidth applications such as voice over IP VoIP systems frequently utilize Internet Protocol IP multicast technologies to efficiently distribute audio communications amongst large numbers of users. While an extremely efficient use of available network bandwidth configuration of the IP multicast infrastructure can be an administratively intensive task requiring the cooperation and coordination of numerous stakeholders and their organizations. As the distribution of IP multicast data becomes even more widespread within an organization and between organizations the administrative task increases exponentially resulting in increased costs and time being incurred to set up and maintain the network infrastructure.

The issue of network infrastructure maintenance becomes even more complex and time consuming when the distribution of IP multicast data is required over Wide Area Networks WANs as opposed to the relatively simple task of distributing such IP multicast traffic over Local Area Networks LANs .

One aspect provides a method for communicating in a communication network environment the environment including at least a first a second and a third local area network LAN separated from each other by a wide area network WAN the LANs being IP multicast capable and the WAN being non IP multicast capable. The method includes 

Another aspect provides a system for communicating in a communication network environment the environment including at least a first a second and a third local area network LAN separated from each other by a wide area network WAN the LANs being IP multicast capable and the WAN being non IP multicast capable. The system includes 

Still another aspect provides an apparatus adapted to be used in a communication network environment the environment including at least a first a second and a third local area network LAN separated from each other by a wide area network WAN the LANs being IP multicast capable and the WAN being non IP multicast capable. The apparatus includes 

Yet another aspect provides an apparatus adapted to be used in a communication network environment the environment including at least a first a second and a third local area network LAN separated from each other by a wide area network WAN the LANs being IP multicast capable and the WAN being non IP multicast capable. The apparatus includes 

Still another aspect provides an article of manufacture adapted to be used in a communication network environment the environment including at least a first a second and a third local area network LAN separated from each other by a wide area network WAN the LANs being IP multicast capable and the WAN being non IP multicast capable. The article of manufacture includes 

In the following description numerous specific details are given to provide a thorough understanding of embodiments. The embodiments can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the embodiments.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Thus the appearances of the phrases in one embodiment or in an embodiment in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Unless the context requires otherwise throughout the specification and claims which follow the word comprise and variations thereof such as comprises and comprising are to be construed in an open inclusive sense that is as including but not limited to. 

The headings provided herein are for convenience only and do not interpret the scope or meaning of the embodiments.

One solution to problems described above is an embodiment wherein the very applications themselves that are used by users on their computers or other types of devices for communications with other such devices effectively become part of the network routing infrastructure coordinating with other instances of the applications to efficiently distribute IP multicast data especially but not exclusively over the WAN or other network where the most administrative complexity is required on an on going basis. Such technology including related functionality is referred to at times herein as Supernode s and or as equivalently as one or more distributed convergence nodes and or more generally as at least one convergence node including a plurality of convergence nodes or individual distributed convergence nodes .

At least some portions of the various embodiments of the Supernode technology can be implemented in conjunction with the various systems apparatus articles of manufacture and or methods disclosed in U.S. patent application Ser. No. 10 977 115 entitled WIDE AREA VOICE ENVIRONMENT MULTI CHANNEL COMMUNICATIONS SYSTEM AND METHOD filed Oct. 29 2004 assigned to the same assignee Twisted Pair Solutions Inc. as the present application and incorporated herein by reference in its entirety.

According to one embodiment a Supernode includes a functional technology component within an application that automatically determines whether it the component should become active and assume the responsibility of forwarding IP multicast data present on the LAN or other network across the WAN or other network to a Routing Supernode which in turn is responsible for forwarding that traffic to other Supernodes present on other LANs or other networks . All Supernodes are responsible not only for forwarding traffic present on the LAN or other network across the WAN or other network to a Routing Supernode but they are also responsible for forwarding traffic received over the WAN or other network from the Routing Supernode onto their own LANs or other network thereby creating the appearance of a flat IP multicast network to the hosting application along with other multicast applications on the LAN or other network . In effect a device at location A e.g. New York can transparently communicate with another device at location B e.g. Los Angeles across what each believe to be a fully IP multicast enabled network. A feature though is that Supernodes at each location along with one or more Routing Supernodes are in actuality creating the appearance of a virtual flat IP multicast network even though IP multicast is truly only present at each location the individual LANs or other networks but not between the locations across the WAN or other network . Such locations where IP multicast is available to applications but is bordered at some physical or logical boundary beyond which IP multicast does not flow is referred to herein as a multicast island .

A feature with Supernodes according to an embodiment is that they are part of the applications themselves and not separate solutions and that the Supernode components present within each application communicate with each other in near real time over the IP network to determine which component housed on which device on the network will become the forwarding entity.

One embodiment s use in the form of an end user application in a client device is not its only implementation. Another embodiment is also used on non user computing devices such as server computers and specialized appliances. In either case end user or otherwise the same functionality afforded by the embodiment s to one implementation may be afforded the other.

The functionality of the embodiment s is to create a virtualized IP multicast network comprising of two or more IP multicast enabled networks separated by one or more non IP multicast capable networks. As such an embodiment is responsible for inserting itself into an application or device designed for IP multicast such that data received from and transmitted to the IP multicast network by the application or device is relayed by unicast connection across the intervening non IP multicast enabled networks. The result of this operation is that applications or devices across the entire network including those on different sides of non IP multicast enabled networks are capable of communicating with each other using IP multicast even though IP multicast is not available end to end across the entire network.

For the sake of simplicity of explanation hereinafter the various networks in which the embodiments are implemented will be described in terms of LANs and WANs. Embodiments may be implemented in other types of networks which may be variations and or combinations of WANs and LANs or completely different from WANs and LANs.

As depicted in in an embodiment routing node A functions to route traffic received across unicast connections A B and C to all other unicast connections and thus operates as a routing Supernode or as a routing distributed convergence node as well as functioning to forward such traffic to its own local IP multicast network A. Nodes receiving traffic over unicast connection from routing node A follow similar operation forwarding such traffic to their own respective IP multicast networks. For example data received by routing node A from endpoint F over unicast connection A is routed by routing node A to endpoints G and K over their respective unicast connections B and C. In addition routing node A functions to forward traffic received over unicast connections to the local IP multicast network A thereby making such traffic available to endpoints B and C. Similarly endpoints receiving unicast traffic across the Wide Area Network function to forward such traffic to their own local IP multicast network making such traffic available to endpoints local to their respective networks. For example traffic received from routing node A by endpoint K over unicast connection C is forwarded by endpoint K to the local IP multicast network D making such traffic available as multicast traffic to endpoints J and L. In addition nodes A F G and K also serve to forward traffic received over the unicast WAN to the application they are hosted within or coupled to so as to create the same appearance of virtualized IP multicast for the hosting coupled application as is created for other nodes on each node s respective local IP multicast network.

In one embodiment each of said endpoints is associated with a network address such as an IP address. The network address of any particular endpoint designated elected as a Supernode or as a Routing Supernode can be made known to all other Supernodes. The address can be made known for example by statically programming or otherwise providing each Supernode with the IP address of a Routing Supernode. Alternatively or additionally the IP address of the Routing Supernode can be made known to other Supernodes in a dynamic manner such as by broadcasting the address or otherwise communicating the address to the various Supernodes.

According to various embodiments the nodes may implemented on or as a device such as a client device and or on non user computing devices such as server computers and specialized appliances. Examples of client devices include but are not limited to personal computers PCs laptops wireless devices such as cellular telephones PDAs and so forth set top boxes and or any other portable or stationary electronic communication device that can have network connectivity. Examples of non user devices can include servers as mentioned above routers switches and other wireless and or hardwired device that can have network connectivity.

An embodiment of a Supernode module as depicted in and upon learning of the unique IP address port pairs of the IP multicast data streams that an application is currently processing creates a state machine within itself in elector module to represent that particular address port pair. Such learning may occur in a multitude of ways including but not limited to static configuration via an application programming interface provided to the application by an embodiment and through insertion in the pathway between the application and the IP multicast network.

In a similar embodiment the elector module is responsible for determining whether the current instance of the embodiment will be responsible for processing IP multicast traffic across a unicast network or whether another instance on the same IP multicast network will be the responsible proxy entity. Such determination of a state of being active or inactive is made through a state machine diagrammed in wherein an election token once generated by each instance of the elector on the network is utilized in conjunction with the state machine s operation. The token may take the form of a simple random number or be calculated using varying degrees of sophistication including but not limited to the device s current resource utilization including but not limited to memory CPU network bandwidth and disk space. The election token may also include a variety of other components such as instance rank level values indicating a device s desire or lack thereof to become active etc. Note that the list presented is not fully exhaustive of the various ways in which an election token may be determined.

In an embodiment of the elector module described in the state machine within the elector module transitions between different states. The elector listens on the local IP multicast for election tokens from other instances of the elector or similarly implemented or compatible embodiments on that IP multicast network. Upon receipt of varying messages types and or expiration of a timer within the elector module the state machine determines based on comparison of numerical values of the election token received from peers denoted as Peer Token in and its own token denoted as My Token in whether the current instance of the embodiment shall transition to active or inactive states. In one example embodiment a particular elector module wins the election if its token in the form of a random number has the least smallest value as compared to the random number value of the tokens of its peers. Of course this is only one example implementation for determining a winner other embodiments may use other types of criteria for determining the winner of the election.

In the event an instance transitions to an active state that instance begins transmitting its own token onto the local IP multicast network such that other instances of the elector on such local IP multicast may process the token according to similar or compatible embodiments of the state machine logic.

Upon determination that the current entity is to be the active entity the processor module is notified of such determination constituting an activation of forwarding of IP multicast data traffic across a unicast network connection. At the same time the elector transitions to a state of sending out its own beacon until such time that another elector on the network takes over control as described above.

Once forwarding is activated the processor module captures IP multicast traffic received and transmitted by the application forwarding such traffic across the unicast network connection via the network interface module . Such forwarding takes places in one embodiment only if the far end has registered a desire in receiving such traffic. Such determination is made by the far end and communicated to the processor module on the local active entity via the unicast connection .

The operation of the processor as depicted in rests in one embodiment on the source of the data traffic entering the processor module. If the traffic was received over a unicast connection that data traffic is passed on to the hosting coupled application giving the application the appearance that the data traffic was received on its own local IP multicast interface. Such passing of data traffic from the embodiment to the hosting coupled application may take a number of forms including but not limited to notification from the embodiment to the application through an application programming interface or insertion into the data traffic flow between the application and the network interface.

If the traffic was received from the application either through notification of the application to the instance of the embodiment through an application programming interface through insertion into the flow of network data traffic between the application and the network interface or other viable means of interception or data traffic capture that data is encrypted encapsulated and distributed via the processor module to all far end entities coupled to the instance of the embodiment and who have registered a desire to receive such traffic.

In an embodiment the processor module makes use of well known encryption logic such as the Advanced Encryption Standard AES or other suitable encryption technique to encrypt data to be transmitted across the unicast network . The receiving end of the unicast connection upon receiving data traffic from a unicast transmitter proceeds to decrypt that data traffic using the decryption logic employed by the encryption module on the transmitting end.

Additionally in an embodiment the processor module may optionally make use of data filtering and conversion functionality to facilitate enhanced transmission of forwarded data across the unicast connection . Such data filtering may include but is not limited to media re packetization and transcoding being the conversion of such media between different data packet sizes and or encoding types for purposes of bandwidth reduction media enhancement and other media modification features desired by a user. Data filtering may also include specialized data caching to further reduce the transport of redundant data across the unicast link.

Returning to wherein determination of a site identifier is depicted an instance of an embodiment determines at initiation of operation what the unique identifier is for the location or site where the instance is operating. Such an identifier is useful to the efficient operation of the embodiment as it is used to communicate to nodes at other sites the fact that a particular site including the individual application entities at that site are no longer present on the network. The term network here being understood for one embodiment to be the entire network and not just the individual site network or component of the entire network . Such tracking of the presence of individual devices at remote locations allow devices at other locations to quickly and efficiently add or remove presence information of said devices in the event of network outages and other unforeseen events.

In an embodiment determination of the site identifier is accomplished by the flow chart depicted in . At initiation of activity a local instance of the identifier module begins by listening on the local IP multicast network for a message from another similar or compatible entity transmitting a site identifier. If such a message is received the local instance stores this identifier and proceeds to use it in its operation as described below.

If no such identifier is received within a reasonable time the local instance determines whether it had previously received and stored an identifier. If this is not the case the local instance proceeds to generate and store its own unique identifier according to a unique identifier generation scheme such as the algorithm utilized to calculate a Globally Unique Identifier GUID .

Subsequently the local instance begins on going transmission of the site identifier whether previously received and stored or previously generated and stored. Once this process begins an embodiment will continue to do so until such time the instance of the embodiment becomes inactive or is shut down.

In an embodiment establishment and maintenance of a session between two unicast entities is contemplated. Such a session is deemed to be established and maintained for the duration of the existence of a need for the two entities on either end of a unicast network to be coupled.

In an embodiment the establishment of a session is implemented via a reliable unicast connection such as TCP between two entities for example nodes F and A from and depicted as A and B in . Such establishment as shown in item A comprises of a multi stage interaction wherein the connecting entity A initiates a connection through a session setup request to entity B. Such request upon being received by the entity B causes entity B to generate a session encryption key to be used for encryption purposes in all subsequent interactions. The generation of the session encryption key may take the form of a number of methods including but not limited to public private key generation as part of an asymmetric cryptography technique such as Diffie Helman DSS and RSA. This key is then communicated back to entity A from entity B using the unicast connection established during the entity A s session setup request.

The next step during stage A constitutes entity A encrypting using the encryption keys generated and agreed upon during the step described above and an agreed upon or previously configured algorithm such as AES access authentication and authorization AAA information including but not limited to a system identifier a unique location or site identifier client authorization and other identifying characteristics required for the establishment of a session between entity A and B. Such encrypted information is transmitted to entity B by entity A over the unicast connection.

Upon receipt of aforementioned AAA information entity B proceeds to grant or deny access to entity A resulting in the final step in stage A of an acknowledgement of the session establishment. Such processing of AAA information may include but not be limited to self processing by entity B or entity B interfacing with an external entity such as RADIUS or ActiveDirectory for full or partial processing of the AAA information.

Upon establishment of the session an embodiment causes an iterative interaction B C and D to ensue over the course of time during which entity A registers its intent to forward and receive data traffic for unique address port pairs the hosting coupled application is processing. Such intent is based on activation of the processor module for unique address port pairs as determined by the elector module and described above. During a registration entity A notifies its intent to forward and receive traffic for unique stream identifiers including but not limited to address port pairs by transmitting details of said stream identifiers to the routing entity B. This action causes entity B to establish forwarding and routing tables within itself in processor module such that traffic received into entity B is forwarded to other coupled entities over unicast whom have similarly registered such stream identifiers. In response to the registration notification as described above entity B transmits back to entity A acceptance of the registration notification. This action causes entity A to begin forwarding of self generated and local IP multicast traffic as described above to entity B for distribution according to the logic flow chart depicting such in . This action also causes entity B to include distribution of locally received IP multicast data as well as data received over unicast from other coupled entities such as C in to entity A.

Streaming of data over the unicast connection is then maintained for the duration of the registration. In an embodiment such streaming may occur over a reliable unicast connection such as TCP over a best effort connection utilizing a protocol such as UDP or combination thereof according to desired preconfigured or dynamically determined performance requirements. In such an embodiment and where a best effort unicast connection is utilized for data streaming entities participating in the unicast data stream connection may actively communicate from receiving entity to transmitting entity information such as packet loss statistics and recommendations for packet loss concealment techniques to be employed. Such packet loss concealment techniques include but are not limited to oversending of packets by the transmitting entity inclusion of components of previously transmitted packets within a packet sequence numbers to track lost packet numbers for purposes of requesting resends of individual lost packets and so forth. Note that numerous varieties and embodiments of packet loss concealment techniques exist and the afore mentioned list does not constitute an exhaustive list of such techniques that may be employed by an embodiment.

In an embodiment data streamed over the unicast connection reliable best effort or otherwise is encrypted utilizing the previously described encryption keys and associated algorithms. Such encrypted data constitutes the payload being transmitted over the unicast connection and is preceded by encapsulation information such that the receiving entity may properly process the streamed data. Such encapsulation information includes but is not limited to the unique identifier of the transmitting entity and the source stream identifier from whence the payload was obtained and therefore the destination to which the transmitting unicast endpoint wishes the data to be forwarded to . Such streaming interaction continues for the duration of the registration.

In the event a node such as A becomes inactive for a particular stream identifier in accordance with the election logic detailed earlier node A proceeds to notify entity B of its intent to stop further processing of data for that particular stream identifier. Such notification is similar in nature to the registration process described earlier the difference being that an unregistration is performed rather than a registration operation. In response entity B proceeds to remove from its routing table details of forwarding for the unique stream identifier for the unregistering entity and ceases to process data traffic received over the unicast connection from that entity.

Part of the process of streaming data is the contemplation of detection of duplicated data. Such an event may occur due to a variety of reasons including but not limited to transmission latency over the various intervening networks erroneous implementations within embodiments invalid configurations by maintenance personnel or systems and so forth. Such occurrences may result in temporary or sustained duplication of data traffic received from simultaneously active nodes within a particular IP multicast network.

In an embodiment duplicate detection falls within the purview of the processor module which examines each packet and keeps track of a list of previously processed packets. For each packet a unique signature is calculated according to the MD5 algorithm. This signature is stored in a list and the signature of each packet entering the processor module is compared against this list. In the event a duplicate signature is found and certain thresholds are met the packet is rejected preventing further forwarding of the duplicate packet and thereby creating a packet loop. The parameters defined for the length of the list and the relevant thresholds beyond which packets are not forwarded may be actively determined by the embodiment and or defined by personnel or other devices acting in a maintenance role. It is noted that in one embodiment the algorithm used for packet signature determination may include MD5 but is not limited to such algorithm. Any viable and applicable algorithm may be utilized for this purpose in various embodiments.

In summary of this description interactions B C and D continue iteratively over the course of the session being established.

In the event an entity of an embodiment becoming wholly inactive or in the situation where no stream identifier are being processed by said entity the session previously established during step A is destroyed. This interaction takes the form of step E wherein a session teardown message is transmitted by entity A to entity B. The action taken by entity B in response to such message is to remove all entries for entity A from its internal routing tables and to cease forwarding traffic to or processing traffic from entity A. In an embodiment such ordered teardown is not strictly required as a simple disconnection of the unicast connection between the entities is sufficient enough to constitute an automatic tear down within each entity.

The various operations represented in the illustrated flowcharts and described above can be implemented in one embodiment by software or other computer readable instructions encoded on or otherwise stored on a computer readable medium such as a memory in the form of ROM RAM other type of hardware memory and executable by one or more processors. For example the processor and computer readable medium storing the computer readable instructions can be present in one or more of the devices described above such as at the devices implementing the nodes A F etc. The processor for example in one embodiment of the node can execute the computer readable instructions stored in a memory or other computer readable storage medium at the node . In one embodiment the various modules components shown in can be implemented by software hardware and or a combination of both. For instance the application and certain components of the module shown in can be implemented as software stored on the computer readable medium and executable by the processor such as a processor implemented at least in part by hardware .

The various embodiments described above can be combined to provide further embodiments. All of the commonly assigned US patent application publications US patent applications foreign patents foreign patent applications and non patent publications referred to in this specification and or listed in the Application Data Sheet including but not limited to U.S. Provisional Patent Application Ser. No. 60 908 878 filed Mar. 29 2007 and entitled METHOD APPARATUS SYSTEM AND ARTICLE OF MANUFACTURE FOR PROVIDING SUPERNODES IN A COMMUNICATION NETWORK ENVIRONMENT U.S. patent application Ser. No. 12 057 289 filed Mar. 27 2008 and entitled METHOD APPARATUS SYSTEM AND ARTICLE OF MANUFACTURE FOR PROVIDING SUPERNODES IN A COMMUNICATION NETWORK ENVIRONMENT and U.S. patent application Ser. No. 12 724 244 filed Mar. 15 2010 and entitled METHOD APPARATUS SYSTEM AND ARTICLE OF MANUFACTURE FOR PROVIDING SUPERNODES IN A COMMUNICATION NETWORK ENVIRONMENT are incorporated herein by reference in their entirety. Aspects of the embodiments can be modified if necessary to employ systems circuits and concepts of the various patents applications and publications to provide yet further embodiments.

The above description of illustrated embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. While specific embodiments and examples are described herein for illustrative purposes various equivalent modifications are possible and can be made.

For example embodiments are not restricted to any particular data type end device type data format communication format or protocol manufacturer device model network device type specific sequence of operations for example some operations described herein may be performed sequentially and or simultaneously etc.

These and other modifications can be made to the embodiments in light of the above detailed description. The terms used in the following claims should not be construed to be limited to the specific embodiments disclosed in the specification and the claims. Instead the terms used in the claims should be construed to include all possible embodiments along with the full scope of equivalents to which such claims are entitled. Accordingly the claims are not limited by the disclosure.

