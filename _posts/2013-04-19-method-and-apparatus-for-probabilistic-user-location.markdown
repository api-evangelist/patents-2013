---

title: Method and apparatus for probabilistic user location
abstract: A method of delivering location-based information comprises receiving a request including a location indicator from a packet-based network and translating the location indicator into a probabilistic representation of one or more possible locations of a mobile user based on historical data collected from mobile devices. By generating the probabilistic user location representation, the method can be used to deal with the inherent uncertainty in user location data, particularly in a mobile world. In some embodiments, this is done by using validation, context analysis, creation of consistent groups, and probability allocation procedures. Location-based document retrieval can be enabled using the probabilistic user location representation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09049549&OS=09049549&RS=09049549
owner: xAd, Inc.
number: 09049549
owner_city: New York
owner_country: US
publication_date: 20130419
---
The present application claims the benefit of priority from U.S. Provisional Application No. 61 724 295 entitled Method and Apparatus for Probabilistic User Location filed on Nov. 8 2012 U.S. Provisional Application No. 61 724 298 entitled Method and Apparatus for Dynamic Fencing filed on Nov. 8 2012 and U.S. Provisional Application No. 61 724 299 entitled Method and Apparatus for Geographic Document Retrieval filed on Nov. 8 2012 each of which is incorporated herein by reference in its entirety. The present application is related to commonly assigned U.S. patent application entitled Method and Apparatus for Dynamic Fencing filed on even date herewith and to U.S. patent application entitled Method and Apparatus for Geographic Document Retrieval filed on even date herewith each of which is incorporated herein by reference in its entirety.

The present disclosure is related to location based mobile applications and more particularly to information retrieval based on probabilistic user location.

With the widespread use of mobile devices such as smart phones many mobile applications provide services to users based on their locations. For example user locations can be used to decide what advertisement ad to serve on mobile devices. User location data is typically provided by mobile applications publishers and client side software and represented by latitude and longitude coordinates LL IP addresses IP postal or zip codes ZC and city state names CS as well as a combination thereof. Ad servers generally apply a set of heuristics based on assumptions about the accuracy and granularity of this data and process them based on a deterministic interpretation of their meanings. In other words it interprets the location data literally the user is at a LL coordinate or the user is in Palo Alto Calif. or the user resides in zip code 94304 if the meaning is provided by a mobile application who claims they send along ZCs representing the homes of the users with explicit consent.

Such deterministic interpretation of location has been a standard practice in the industry since the advent of ad marketplace for mobile devices for at least the last five years. It is fundamentally flawed because one is never certain where the user actually is at the time when the Ad servers process the data even if one assumes that the data is correct. For example suppose a user is travelling at 55 miles per hour down a highway and accessing a mobile application. By the time a request is issued to the server with an LL coordinate and a banner ad is returned and fully rendered in the application the actual location of the user is no longer at the same LL. Similar examples can be constructed using ZC and city state boundaries around the fringes and boundaries of these arbitrary areas.

A novel method of dealing with the inherent uncertainty in user location data particularly in a mobile world involves generating a probabilistic user location representation. In some embodiments this is done by using validation context analysis creation of consistent groups and probability allocation procedures. Location based document retrieval can be enabled using the probabilistic user location representation.

In some embodiments a method of delivering location based information comprises receiving a request from a packet based network. The request includes a location indicator and the location indicator includes at least one of 1 a code associated with a place or region e.g. a zip code 2 a name associated with a place or region e.g. city state etc. 3 geographical coordinates e.g. longitude latitude and 4 a network address e.g. Internet Protocol IP address . The method further comprises translating the location indicator into a probabilistic representation of one or more possible locations of a mobile user based on the location indicator and historical data collected from mobile devices retrieve information from a computer readable medium based on the probabilistic representation and transmit the information to the packet based network for receipt by the mobile user.

In some embodiments the method is carried out by a computer system executing a computer program. The computer system includes connections to the packet based network and one or more data stores storing therein the historical data collected from mobile devices communicating with the packet based network. When executing the computer program the computer system provides an interface engine configured to receive the request from the packet based network via the connections and a smart location engine configured to translate the location indicator into the probabilstic representation of one or more possible locations of the mobile user based on the location indicator and historical data collected from mobile devices. The computer system may further provide a fencing engine configured to provide one or more fenced areas. The fencing engine may be further configured to compare the probable areas with the one or more fenced areas to obtain one or more target areas each having an associated weight. The computer system may further provide a document retrieval engine configured to retrieve location based information from the one or more data stores based on the target areas. In some embodiments the interface engine is further configured to transmit the location based information to the packet based network for receipt by the mobile user.

A novel method and apparatus for probabilistic user location i.e. smart location is developed to represent user locations in a probabilistic manner. In one embodiment traditional location data is translated into smart location information or smart location data which can be probabilistic representations of user locations based on historical aggregate data collected from many requests from mobile devices. For example conventional location input data types e.g. strings integers are converted into structures storing two dimensional density functions which represent the likelihood of a user being at a given coordinate. In other words points in a map rather than integers such as 94304 and strings such as Palo Alto Calif. are used to represent user locations.

In one embodiment a probabilistic user location model is provided where a user is associated with multiple regions with different probabilities in response to a request including information about various input signals LL IP ZC CS as well as additional context including time of the day. Afterwards a spatial representation of a user location can be derived by 

Validation and allocation procedures that use probability distributions to deal with uncertain data are then used to derive a user s spatial location representation.

In a further embodiment the accuracy of user location is measured in a statistical setting based on user feedback data such as click through rates and secondary action rates .

In a further embodiment conditions under which an IP can be treated as a proxy to user identity over a period of time e.g. a few days can be determined and associated locations are exploited as probable regions to select from when this IP comes with a request over a subsequent period of time. IPs as proxies for users whenever applicable can improve the ability to deliver more relevant advertisement to this particular IP or user.

In some embodiments weights distributions act as proxies to true locations and business location information e.g. information coming from publishers and 3rd party data sources can be used to correlate correct and resolve uncertainty in location data. For example information from publishers can be used to assign publisher specific weights based on location type. In a further example the probabilities derived from weights influence decisions at serving time and new weights are derived from these decisions thus introducing a feedback loop. Using such data driven optimization improved accuracy can be obtained as the volume of historical data accumulated over time increases. The accuracy should also increase as the region representation includes more points.

In some embodiments the ability to find and retrieve relevant ads fill rate and or CTR can be enhanced through the use of allocation procedures that distribute incoming requests to smaller regions within a ZC following request distribution of good LLs.

Although most of the embodiments are described herein in the context of mobile advertisement the techniques associated therewith can have widespread applications including but not limited to 

In some embodiments the smart location information can be annotated and piped into ranking models. For example a service can be called to return a set of documents whose geographical locations intersect regions associated with the smart location information i.e. smart location regions. The smart location regions the documents returned and the information that joins them e.g. area intersected are fed into a model that ranks and filters the documents. For ad networks this service could be a geographical document retrieval service described in the commonly assigned co pending U.S. patent application entitled Method and Apparatus for Geographical Document Retrieval filed on even date herewith. Similar services could also fit the other applications above.

As shown in the computers servers coupled to the Internet may include one or more computers servers that is used to execute one or more software programs to carry out one or more methods of location based document retrieval of certain embodiments one or more computers servers associated with a mobile publisher one or more computers servers associated with an on line marketer and other computers servers .

In one embodiment the one or more methods of location based document retrieval are performed using a computer system e.g. a server computer executing one or more software programs. is a block diagram of an example of such a computer system which includes a processor a memory one or more data stores input output devices such as keyboard mouse touchscreen one or more display devices such as a monitor a wired and or wireless connections to a network such as a local area network and or a wide area network e.g. the Internet . The software programs can be stored in a computer readable medium such as a data store and or other portable computer readable medium that is not shown . When loaded in the memory and executed by the processor the software programs cause the processor to carry out the smart location method and or any of the other methods described herein. In one embodiment location based documents information and historical aggregate data collected from many requests from mobile devices are also store in the data store . The one or more data stores can be computer readable media local to the processor or coupled to the processor via a local or wide area network.

As shown in in one embodiment the one or more servers executing the software programs may provide one or more software engines or application programming interfaces API including for example an interface engine and a location engine . In a further embodiment the one or more servers executing the software programs may also include a fencing engine and or a document retrieval engine .

The one or more probable areas associated with the mobile user can be compared e.g. overlapped in with certain fenced areas or campaign areas associated with advertisement campaigns to determine one or more target areas using the fencing engine . The fenced areas can be areas specified by marketers such as cities states areas associated with shopping malls or shops tourist attractions or certain zip codes. Or the fenced areas can be arbitrary and dynamic areas generated in using the fencing engine. For example apparatus and method described in the commonly assigned co pending U.S. Pat. entitled Method and Apparatus for Dynamic Fencing filed on even date herewith can be used to generate the fensed areas.

In one embodiment each target area has an associated probability. The target areas represented in some embodiments as points in a map and information associated therewith can be used as inputs to the document retrieval engine to retrieve one or more documents e.g. advertisement in to be delivered to the user using the interface engine in . In one embodiment the document retrieval engine chooses an advertisement associated with a target area with the highest probability. In another embodiment the document retrieval engine performs a coin toss using the probabilities associated with the target areas as weight to choose an advertisement for delivery in response to the ad request. In a further embodiment apparatus and method described in the in the co pending U.S. patent application entitled Method and Apparatus for Geographical Document Retrieval filed on even date herewith can be used to retrieve the document. The interface engine location engine fencing engine and document retrieval engine can be provided by one computer server or multiple computers servers .

A direct application of probabilistic user location is for improving the ability to find and serve relevant advertisements to users interacting with mobile applications on smartphone and tablet devices. In this setting the user is constantly in movement and a key challenge in ad technology is to fill as many ad requests as possible with ads that are locally relevant to users. Fundamentally the task of serving an advertisement is a probabilistic one and as a result it calls for solutions based on statistical modeling and machine learning techniques all of which strive on massive volumes of data.

In one embodiment a two dimensional statistical representation of user location data is used to enable novel forms of data driven optimizations that can be implemented in other components of an ad technology stack. In the related Dynamic Fencing Application systems and methods for generating dynamic geo fences for advertisements are also based on two dimensional statistical representations of user locations. In certain embodiments described in the related co pending U.S. patent application entitled Method and Apparatus for Geographical Document Retrieval filed on even date herewith such ads are matched with ad requests annotated with probabilistic user locations.

To comply with privacy laws a user s location information is not tracked to know where a user is at any given time unless a user voluntarily allows an application to use his her current location in order to receive better service. When allowed LL is believed to be a signal of high fidelity. However even LLs may not be accurate depending on a number of factors such as 

When a user doesn t allow his her location information to be known applications typically provide only coarse location data in the form of for example IP address of the device a ZC e.g. entered by the user at the time of registration or CS.

Mobile applications and publishers frequently provide LLs obtained from geo coding software which translates ZC CS and other points of interests into one representative LL. In one embodiment such representative LLs is categorized as bad LLs . The bad LLs can be for example 

The problem with bad LLs is obvious by reducing a 2D region into a single point information is lost. Furthermore when centroids are passed along to downstream services such as ad servers it misleads the ad server to think that the LL is the actual location of the user.

IP to location mapping software is commonly used in the industry to obtain CS and sometimes ZC LL from a given IP. Such techniques suffer from various limitations 

A key limitation of deterministic user location is that a predetermined order of priority among the various location data is assumed in most implementations. For example LL is assumed to be more accurate than ZC which in turn is more reliable than CS which in turn is more reliable than IP mappings etc. As a result there is a lack of ability to associate levels of uncertainty to one or more location inputs.

Another limitation is that deterministic locations lead to a trivialization of location based ad retrieval making it as straightforward as string or integer matching. For example an input location of Palo Alto Calif. is treated as a string and should only match ads that are located or targeted to Palo Alto Calif. A ZC of 94304 should only match ads located in or targeted to 94304. The notion of neighborhoods e.g. Palo Alto Hills or Barron Park is lost and can only be recuperated with static dictionaries e.g. mapping names to neighborhoods ZCs to cities as well as string manipulations e.g. partial string matches .

This trivialization has led to a stagnation of location based document retrieval technologies over the last decade as text search engines and related techniques addressed most requirements for advertising. With the hyper growth of mobile traffic which can generate trillions of ad requests annotated with fine grained location data innovations in geographic document retrieval is necessary for serving highly relevant local advertisements.

In one embodiment the location engine employs a smart location method to generate one or more probable areas or regions where a user of a mobile device mobile user could be located. The smart location method takes as input user information in a request for documents from a mobile publisher or application provider such as 

In one embodiment the smart location method generates a spatial representation of location which is a set of regions with associated probabilities for smart matching downstream SmartLocation where a region R is defined as where a point P is given by Latitude Longitude and prepresents the probability of region k and all probabilities of a SmartLocation add up to 1.

By representing a region as a set of points the resolution of a region can be set to arbitrary levels depending on the number of points. For example a region with three points can be used to encode a triangular shaped region four points a rectangular shaped region etc.

A ZC region or ZC level region indicates a region derived from a ZC. Similarly a CS region is a region derived from a CS. A smaller region is a region within a ZC region or a CS region. One simple way of dividing a ZC region into such smaller regions is by looking only at the first 3 or 4 or 5 digits of lat longs for example 30.000 122.122 and 30.001 122.123 may correspond to two opposite corners of a rectangular smaller region obtained by keeping 3 decimal digits .

As shown in the smart location method of certain embodiments includes a validation phase in which validation of individual components of a given location input is made and invalid components are ignored or discarded. The method further includes an analysis of context phase where specific contexts are identified as candidates for use in more specific weights distributions and a groups creation phase where inconsistencies among different components of the given location input is determined and a separate group is created for each consistent subset. The method further includes a large region creation phase where a large region is created typically at ZC or CS level for each group and a probability allocation phase where probabilities are assigned based on weights of large regions of each group. The method may further include an optional smaller region creation phase in which a smaller region is created within each large region. For good LLs the smaller regions are created based on sizes of regions and for no LLs or bad LLs they are created based on weights distribution. In one embodiment as the smaller regions are created the probability of a large region is split between a newly created smaller region within the large region and that large region itself.

When a request with input location IP LL ZC CS comes and some of these location data are potentially null there are 4 distinct cases that are possible as described in the following as Case 1 Case 2 Case 3 and Case 4.

Case 1 Overlapping regions assume the given LL belongs to an overlapped region of two different ZCs or two different CSs. In a LL that falls in the intersection of ZCs with 804 and 1789 impressions is another example of this case. When this happens as shown in the probability is distributed among such overlapping regions according to their weights as illustrated.

Case 2 Disjoint regions assume the given LL belongs to a non overlapping region of one ZC but IP leads to another ZC through IP to geo mapping database. For example in an LL may fall purely within the 94303 ZC with 1789 impressions while an IP may lead to 94040 ZC in Mountain View. When this happens as shown in similar to Case 1 with overlapping regions the probability is distributed among such non overlapping regions according to their weights as illustrated.

Case 3 Embedded region bad LL Smaller Regions illustrates the weight e.g. impressions associated with a larger ZC region e.g. ZC 94303 being distributed among smaller regions on a grid. The number within the smaller region indicates the weight impressions associated with that smaller region. The total weight of all smaller regions can add up to the larger region s weight. The weight used here is again the number of impressions. Although the figure shows a distribution for a ZC similar approach is used for dividing CS regions too.

When a request comes with just a ZC or CS or given LL IP are invalid and ignored then we are left with just one large ZC or CS region. In this case as shown in another smaller region is created in addition to the larger region and the probability of the larger region is distributed between the larger region and the smaller region . This can be done in 2 steps 

Case 4 Embedded Region good LL Smaller Regions When a good LL comes as part of a request that belongs to a specific ZC CS large region as shown in a small region can be created around that given LL itself. The probability associated with the large region is then divided between the large region and smaller region by using a rule that gives more weight to smaller region and some small weight to the surrounding larger region. This division is done similarly to what is done in the second step of Case 3 above i.e divide the probabilities inversely proportional to their sizes as illustrated in .

In one embodiment the different phased in the smart location method are carried out using a set of procedures including one or more validation procedures one or more context analysis procedures one or more group creation procedures a region creation procedure a probability allocation procedure and or one or more smaller region creation and probability allocation procedures which are discussed in further detail below. In one embodiment uncertain data are dealt with in several distinct phases such as 

In one embodiment a first validation procedure is used to determine the validity of individual components of a location input. This procedure takes care of individual components by themselves. If a component of location input is invalid then it is simply discarded. ZC CS LL to ZC mapping and IP to Geo info mapping data sources can be used during this procedure.

In one embodiment a second validation procedure is used to categorize a given LL as good or bad. For example if the LL corresponds to a centroid of a ZC or CS or one of the fixed points of a mapping data source such as IP to geo conversion it is considered as a bad LL. Otherwise it is a good LL.

Sometimes what comes as real LL from an application actually corresponds to ZC CS centroids within 5 decimal digit accuracy or one of few such locations. Hence once it is determined to match one of these fixed locations it is considered as a bad LL and discarded. ZC and CS centroid data is used as a cache to verify this.

IP to geo conversion data sources are analyzed to figure out whether or not the LLs obtained correspond to a few such coarse LLs within 5 decimal digit accuracy . If they do this conversion data is marked as giving bad LLs and these LLs are discarded when IP to geo conversion is made.

There is a third case where some publishers may use a similar geo mapping data source to obtain an LL and pass it. These may not match the centroids. An online version of this procedure can be implemented where the LLs from publishers are added to a cache keeping 5 decimal digits and if the ratio of number of LLs in the cache to the number of requests with LLs is very small then it is concluded that this publisher sends bad LLs. While offline analysis on publisher basis can reveal such publishers online implementation is both simple and can deal with newly added publishers faster.

In the context analysis procedures of certain embodiments multiple regions are created when a publisher sends inconsistent location data. One way of obtaining weights for each region is based on default weights distribution. A number of requests within the regions are considered here as weights although any of other metrics such as the impressions clicks or CTR or a combination of these could also be used . Denoting this case as having No Context NC the Weight W for each region R is given as 

In some embodiments the second formula may be better to use for certain context types such as Context Types 1 4 discussed below.

In Context Type 1 some publishers pass the user identification UID since they are permitted to do so as part of their application. If a publisher Pub is known to send actual UIDs it represents a case where Pub UID can be taken as a context in obtaining the weights using the second formula.

In Context Type 2 a publisher sends only user registration based ZC and possibly nothing else. Since this typically represents a user s home ZC it can be relied on more during night time. During the day time the IP can be relied on to get an approximate location. Basically both user registered ZC and IP converted location are not always correct about a user s current location. Yet the less reliable region is kept also but with a lower probability. Hence the context weights rule discussed above is still applicable in this case where context can be implemented in one of two ways 

In Context Type 3 some publishers have enough requests from them to track weights separately for them. This is very likely to be more effective than aggregated weights from all publishers since the uncertainty is partly owing to a publisher s app and the way they handle location input. In this case the context is simply Pub .

In Context Type 4 as a consequence of IP allocation methods used by carriers it is possible that a user can be assigned an IP that he keeps as he moves from one location to another. Assuming the user follows typical daily patterns of use it is possible to think that this IP can have few specific LLs associated with it over a relative short period of time e.g. a few days before it is possibly reallocated to someone else. If it is allocated to other users over this period then the number of locations associated with this IP over the same period can be higher and can fall through a preset threshold. If the associated LL represents one of the central locations owing to IP to geo conversion database s accuracy those LLs can be removed from consideration even though they are below the threshold special case .

In the end some surviving IPs are resolved to represent proxies of user identities called PUID below. These are short lived mappings based on previous few days of observation and are applicable for a vrelatively short future time period. Each of the IPs can have a few LLs associated with it that could be mapped to small regions around these LLs . The probability of each of these LLs also could be pre computed based on the number of requests within those small regions around those LLs.

At serving time if an IP context in this case matches one of these special IPs representing proxy UIDs PUIDs then associated regions can serve as potential regions with associated probabilities.

There can be an order of importance of different context types. Given a context it can match multiple sets of weights since it matches multiple context types. For example given a publisher and UID both Context Type 1 and Context Type 3 can be matched. In one embodiment the type with most components is taken. When the same number of components but different components matches an explicit order among those is forced. Context Type 4 is an exception and is always used when applicable along with one of the other types. So for Context Type 4 two matching set of weights can be retrieved.

When context is used to retrieve a set of W it is possible that a region may not exist for the location input obtained. In such cases W can be used as default weights.

Once the location input components are individually validated and invalid components discarded what remain are all valid on their own. However it is still possible that they may be inconsistent among themselves. For example when ZC and CS are given and the ZC is not associated with the given CS there is no basis to prefer one to another without any historical analysis. The aim of the group creation procedures is to separate the inconsistent location input into multiple groups that contain consistent components within each group separately. The probability allocation procedure can subsequently allocate probabilities to these groups appropriately based on prior historical analysis.

The following procedure can be used to split inconsistent location input to obtain multiple groups location components have suffix IP or LI Location Input 

In the region creation procedure the set of W data which is obtained during context analysis to determine the associated large ZC CS level region along with its weight is used for each group. These regions should already have associated weights obtained through background processing of historical data. Each region can also have an associated set of small regions with their own weights.

In case of IP Groups the associated W may also represent a set of regions to have in the smart location method with those weights. In this case multiple large regions can be created one per region in this set. Also note that each of these regions can have a specific LL that can lead to a small region around it as described later on.

In the probability allocation procedure weights distribution is used to allocate probabilities to different regions. They are computed as follows 

For non IP groups the probability of the associated region is the same as that of its group Prob Prob 

For IP Groups the obtained probability by using the above formula is distributed among the regions it contains according to its own weight distribution recall that in this special case two weight distributions would have been retrieved 

So far only large regions are created and they correspond to consistent subset of original location input. Some of these may have LLs and if they do they are good LLs. In such cases one or more smaller region creation and probability allocation procedures of some embodiments are used to create a small region around the given LL as it is more representative of where the user is. The larger surrounding region is kept with a lower probability of where the user is to account for the uncertainty with the given LL.

In one embodiment a small or smaller region is a region within a ZC region or a CS region. One simple way of dividing a ZC region into such smaller regions is by looking only at the first 3 or 4 or 5 digits of lat longs for example 30.000 122.122 and 30.001 122.123 may correspond to two opposite corners of a rectangular smaller region obtained by keeping 3 decimal digits .

In one embodiment this can be done by a taking the bounding rectangle of a ZC or CS and expanding outward until the corner LLs have 0 in decimal places beyond 3 or 4 or 5 depending on different implementations and b dividing this into a grid of width proportional to 3rd or 4th or 5th decimal accuracy. Along the boundaries the region could cross ZCs but it shouldn t matter at all.

By keeping each request s first N decimal digits and obtaining the weights requests distributions the distribution can be smoothed to a desired extent. The number of decimal digits to keep in this function can vary from one ZC CS region to another depending on the total number of requests in that region. This allows for regions that are highly dense to keep more digits smaller grid because requests are likely to occur in a statistically significant manner within each smaller region of the grid. The number of digits of accuracy used for a region is determined in the background process while building the weights distribution and is associated with it.

For each large region R with good LL an additional small region can be created. For example Ntells us how many decimal digit accuracy is used and how many small regions R are present. Hence the give good LL can be truncated to this accuracy to obtain the lower corner of the smaller region R into which it falls. The upper corner of the small region can be obtained simply by incrementing the lowest decimal digit of both latitude and longitude. The probability Prob R C can now be split between these two which are inversely proportional to the size of the regions so that the smaller region gets more of the probability and the larger one gets the remainder such that an area around the given LL is more relied up than the surrounding area i.e. 

In one embodiment one or more allocation procedures are used to create a small region within a given ZC or CS region. When a given LL is a bad LL or it is not given at all businesses within that entire ZC or CS are equally likely no matter what the distribution of users requests within that ZC is. This is a crude approximation and has a potential to match a same set of businesses. More reliable LL requests from search and display data can be analyzed to arrive at the spatial request distributions offline and used to allocate incoming requests at a more granular level to different smaller regions within that ZC CS. This approach is intuitively more appealing to achieve a reasonable distribution of requests among businesses and hence improve overall metrics. This is achieved by creating a grid as indicated earlier with given decimal digit accuracy by mapping requests to these grids and then by developing a request distribution over the smaller regions of this grid.

In one embodiment each ZC and CS is regarded as a region with a bounding rectangle where a separate spatial discrete probability distribution is generated with the LL as a discrete random variable as follows 

Once a request with bad LL is allocated to a region u with probability distribution computed as above a unique LLcan be generated within that region and a confidence factor can be associated therewith. For example the unique LLcan be generated within this region using a uniform distribution and a confidence factor CF can be associated therewith as

where Ais an area of the smaller region u and K is a constant used for normalization across varying sites of small regions. K can be determined experimentally. The confidence factors generated as above can be adjusted to suit many practical considerations by choosing an appropriate value for the constant K. Any of various standard boosting techniques known in the industry could be used to pick a K.

The function defined as above can be extended to include additional attributes in addition to LL for the random variable. For example the height of the location can be used to make it a 3 demensional space and additional contextual attributes mentioned earlier can be added to make it a multi dimensional space. The allocation procedure can remain the same within these different dimensional spaces.

