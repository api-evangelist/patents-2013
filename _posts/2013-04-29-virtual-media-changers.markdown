---

title: Virtual media changers
abstract: A virtual tape system utilizes multiple virtual tape libraries. Some virtual elements of the virtual tape libraries are connected elements, such as virtual import/export slots, that logically connect two or more virtual tape libraries. Virtual media changers of the virtual tape libraries can be commanded, as if physical media changers, to virtually move virtual media, such as virtual tapes, within and among the virtual tape libraries. By moving a virtual medium to a connected element, the virtual medium can be virtually moved from one virtual tape library to another.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483213&OS=09483213&RS=09483213
owner: Amazon Technologies, Inc.
number: 09483213
owner_city: Seattle
owner_country: US
publication_date: 20130429
---
This application incorporates by reference for all purposes the full disclosure of co pending U.S. patent application Ser. No. 13 722 814 entitled VIRTUAL TAPE USING A LOGICAL DATA CONTAINER filed Dec. 20 2012 and U.S. patent application Ser. No. 13 722 743 entitled VIRTUAL TAPE LIBRARY SYSTEM filed Dec. 20 2012.

Organizations back up data in case of data loss or corruption. For example sensitive organizational data e.g. data of and or about clients of an organization may be under many different threats including environmental threats security threats accidents and or failures. Environmental dangers include storms or other natural disasters that can disrupt or damage client systems. Security threats include hackers that may maliciously enter a production system and corrupt or destroy data and or software. Accident threats include such problems as software bugs that corrupt or make inconsistent data. Failure threats include the failure of hardware systems such as the correlated failure of multiple storage devices that contain critical data. If a backup is present then at least the data and or software may be reset back to a known good point in time. In addition some organizations back up data for the purpose of compliance with various regulations that require the storage of certain data for various periods of time.

One method of backing up data is through a tape backup system. A tape backup system uses tape cartridges to store data. In some companies a tape backup system may be partially or fully automated such that tapes may be moved by robotic arm from a storage location to a tape drive and then back to a storage location. For example a client archive system may send commands to the robotic system to move tapes from one location to another and track the movement of the tapes. The client archive system may also track the information written to the tapes in order to recall files or other information if needed for a restore operation. These robotic systems may require significant capital costs such as costs related facilities to house the systems and maintenance of the mechanical systems to operate efficiently.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include implementing a virtual tape library system to back up data from a client archive system expecting physical tape operations onto logical data containers and or a metadata store of a storage service by emulating the physical tape operations. For example a virtual tape library appliance is installed at a customer premise location to interface with a client archive system. The virtual tape library emulates a physical tape library such that a client archive system may operate on virtual tapes to archive client data. The virtual tape library appliance provides virtual interfaces to appear as physical tape library subsystems such as tape drives and media changing interfaces. However these virtual interfaces are supported by logical data containers in a storage service and a metadata store. The virtual tape library system allows the client archive system to make requests to import new virtual tapes export virtual tapes for archiving store virtual tapes at a virtual location load and eject virtual tapes into a virtual tape drive and operate on virtual tapes in a virtual tape drive.

Operations on a virtual tape in a virtual tape drive may include seeking reading writing initializing marking and other physical tape operations emulated by the virtual tape library system. These requests for manipulation of tape cartridges by the client archive system are translated by the virtual tape library system to operate on a metadata store and or logical data containers of a storage service. Movement operations such as moving a virtual tape from one virtual location to another may be accomplished by changing an association between the virtual tape and a virtual location in the metadata store. Data operations such as reading or writing to a virtual tape may be accomplished through an interface that operates in conjunction with the storage service on the logical data container. The storage service may be an on demand storage service an example of an active storage service in which logical data containers are provisioned on an as needed basis. In some embodiments the storage service and the virtual tape library appliance may be separated by a public network such as the Internet. By providing the virtual tape library system a client may be able to actively manage resources for backup as needed while reducing the cost required for tape hardware maintenance. For example virtual tapes may be constructed or deleted on an on demand basis to match storage needs and costs.

In one embodiment a client backs up data to a virtual tape and stores the virtual tape in archival storage. A new virtual tape is requested by a client through an active storage provisioning interface. The virtual tape is created by provisioning a new logical data container in the storage service and associating the logical data container with a virtual tape identifier ID such as an association in the metadata store. The new virtual tape is then virtually placed in the virtual import export slot in the virtual tape library. The movement of the virtual tape is accomplished by associating the virtual tape ID with a virtual import export slot in the metadata store. Once the virtual tape is in the virtual import export slot the client archive system may assume control of the virtual tape. The client archive system may then request the virtual tape be moved to a virtual tape drive through a virtual media changer of the virtual tape library system. This movement may be accomplished by removing the association of the virtual tape ID with the virtual import export slot and associating the virtual tape ID with a virtual tape drive.

A virtual tape drive interface such as Internet Small Computer System Interface iSCSI also referred to as the Small Computer System Interface over Internet Protocol associated with the specific virtual tape drive selected may be assigned to the logical data container associated with the virtual tape ID. The new virtual tape may then be initialized which may include writing a basic virtual tape structure such as a global header to the logical data container. After initialization the client systems may back up data through the client archive system to the virtual tape. The backing up of data may be accomplished by the virtual tape library appliance receiving tape commands and translating the tape commands to operations that operate on a virtual tape structure on the logical data container assigned to the virtual tape drive in the storage service. These operations may include writing data making records and making file marks. After the backup is complete the client archive system may request the virtual tape be moved from the virtual tape drive to the virtual import export slot for archival storage. In response the virtual tape library appliance may cause the association of the virtual tape drive and the virtual tape ID to be removed as well as the assignment of the virtual tape drive interface to the logical data container. The logical data container may then be staged for transfer to an archival service from the active storage of the storage service.

In another embodiment a client restores data from a virtual tape in archival storage. The client may request the virtual tape be transferred from archival storage to a virtual import export slot through a provider storage system. In response the provider may transfer the logical data container associated with the virtual tape from archival storage to active storage.

Upon completion of the transfer the virtual tape library system may associate the virtual tape ID with the virtual import export slot. Once the virtual tape is in the virtual import export slot the client archive system may assume control of the virtual tape. The client archive system may then request the virtual tape be moved to a virtual tape drive through a virtual media changer of the virtual tape library system. This movement may be accomplished by removing the association of the virtual tape ID with the virtual import export slot and associating the virtual tape ID with a virtual tape drive. A virtual tape drive interface associated with the specific virtual tape drive selected may be assigned to the logical data container associated with the virtual tape ID. The client archive system may then perform operations on the virtual tape such as locate space read or other tape operations. These operations may then be used to determine which data to retrieve from the logical data container.

After the restore is complete the client archive system may request the virtual tape be moved from the virtual tape drive to the virtual import export slot for archival storage or to a virtual tape slot location to await further action. In response the virtual tape library appliance may cause the association of the virtual tape drive and the virtual tape ID to be removed as well as the assignment of the virtual tape drive interface to the logical data container. In the case of re archival the logical data container may then be staged for transfer to an archival service from the active storage of the storage service. In the case of a virtual tape slot location an association between the virtual tape ID and a virtual tape slot location may be stored.

In other embodiments virtual tapes may be reinitialized or destroyed. In reinitialization a virtual tape is erased of its current data. The client archive system may request that a virtual tape be loaded in a virtual tape drive through a virtual media changer. As discussed above as a result of the request to load the virtual tape a logical data container associated with the virtual tape may become associated with an interface to a virtual tape drive. The client archive system may then request the virtual tape drive reinitialize the virtual tape. In some embodiments this reinitialization may be accomplished by changing a generation identifier in the global header of the logical data container to invalidate all data within the logical data container. After reinitialization the client archive system may use the virtual tape or request the tape be moved back to a virtual tape slot location to await use. The client archive system may also request that tapes be destroyed. The client archive system may request the virtual tape be moved from the virtual tape drive to the virtual import export slot for destruction. In response the virtual tape library appliance may cause the association of the virtual tape drive and the virtual tape ID to be removed as well as the assignment of the virtual tape drive interface to the logical data container. The logical data container may then be deprovisioned.

An advantage of the current system is that a cost of use may scale to the actual usage of the system. For example a client may use hourly daily weekly monthly annual and other time spans between backups to virtual tape. After one week a client may wish to destroy all hourly backups except a midnight backup to represent a daily backup. Destruction of the remaining hourly backups results in no further cost for the destroyed virtual tapes.

A storage service may provide multiple tiers of storage that may be used to store virtual tapes. The storage service may use varying storage systems including object storage or block storage. In one embodiment an active storage and archival storage may be used. The active storage may provide a response that is adequate for reading and writing of data. The archival service may provide service with too high of a latency that makes it inadequate to read or write but adequate for longer term storage. For example an active storage logical data container may provide synchronous read and write responses such as confirmations or data from the read or write. An archival storage logical data container may provide asynchronous responses such as a job identifier for each request. The job identifier may then be queried to determine if the job has completed. Both logical data containers may also include data objects of varying size that include one or more logical data containers. In use when a virtual tape is placed in the virtual import export slot the logical data container behind the virtual tape may be staged for transfer between the active storage and archival storage.

In another embodiment a three tiered storage may be used. The three tiered storage may be viewed in terms of how long a logical data container associated with a virtual tape would need to be ready for data transfer. For example three logical data containers may be stored in locations of the virtual library. The first logical data container may be stored in a first tier that is ready to be accessed. When the client archive system requests the virtual tape associated with the first logical data container be loaded in the virtual tape drive the logical data container may be ready once the virtual tape drive interface becomes associated with the logical data container. A second logical data container may be stored in a second tier that may be ready for access in minutes. When the client archive system requests the virtual tape associated with the second logical data container be loaded in the virtual tape drive the second logical data container may be transferred to a higher storage tier before the virtual tape is ready to receive data. The second logical data container may be made available in minutes due to the moderate performance of the storage tier. A third logical data container may be stored in a third tier that may be ready for access in hours or more. When the client archive system requests the virtual tape associated with the third logical data container be loaded in the virtual tape drive the third logical data container may be transferred to a higher storage tier before the virtual tape is ready to receive data. The third logical data container may be made available in hours or more due to the low performance of the storage tier. In some embodiments the second or third logical data containers may be routed through a virtual import export slot rather than the virtual library storage location. An advantage of the multiple tier structure is that a client may decide its needs for availability of the backup data. Long term storage may be more cheaply stored with a longer response time while active data may be readily available with a more expensive cost.

As noted a client archive system may interact with virtual media changers of a virtual tape appliance to perform media changing operations such as moving virtual tapes within and between virtual tape libraries as if moving actual tapes throughout a physical virtual tape system. In some embodiments a virtual tape appliance implements multiple virtual tape libraries each corresponding to a type of data storage. For example in some examples a virtual tape appliance implements an archival virtual tape library and an active virtual tape library. The archival virtual tape library may correspond to archival data storage. Virtual movement of a virtual tape to an archival virtual tape library may indicate an intent to archive data corresponding to the virtual tape and as such the data may be moved to or may remain in archival storage. The active virtual tape library may correspond to an active data storage system with which data access is quicker relative to the archival data storage system. The active data storage system may also have other performance advantages over the archival data storage system. For example data from the active data storage system may be available synchronously e.g. available in a response to a request for the data while data from the archival data storage system may be available asynchronously e.g. requiring a second request to retrieve data once the data has been staged for access .

For example in one configuration a virtual media changer of an active virtual tape library may represent on line items that is items in an active storage system that are available for access. The virtual media changer may contain virtual elements that operate similarly to elements of a physical media changer. Example elements include but are not limited to data transfer elements storage elements and import export elements. Clients e.g. tape library management software can interact with this virtual media changer device in the same way they would a physical media changer device in order to access and manipulate media and their contents using virtual tape library components e.g. virtual tape drives . A second virtual media changer device the archival virtual media changer represents the off line items that is items that are stored in archival storage and as such are not immediately available. The archival virtual media changer may contain in some examples storage elements and import export elements but no data transfer elements.

Virtual tape libraries in accordance with the various embodiments may be logically connected by virtual import export slots. In some examples movement of a virtual tape to a virtual import export slot may cause the virtual tape to virtually move from one virtual tape library to another virtual tape library that is logically connected. The logical connection may be made in various ways. In some embodiments at least one of the import export elements from each virtual media changer device of a virtual tape library is considered connected to another virtual media changer device of another virtual tape library and as such the system implementing the virtual devices exposes the same identifier to their clients for these elements.

In various embodiments using a virtual media changer of an active virtual tape library to transfer a virtual medium e.g. virtual tape from its current location to the connected virtual import export slot or another type of connected element causes the medium to disappear from the connected element of the active virtual media changer and virtual tape library and perhaps sometime later appear in the connected element e.g. virtual media changer of the archival virtual tape library. At this point the medium is off line and the state change archival of tape cartridge data may be complete.

In some embodiments in order to bring a medium on line e.g. to make data corresponding to the medium available for access a client sends the virtual media command to transfer a medium from its current location in the archival virtual tape library to that device s connected element e.g. virtual import export slot . The medium may then disappear from the archival virtual tape library and perhaps sometime later appears in the connected element e.g. virtual import export slot of the active virtual tape library. At this point the item is online i.e. available for access and the state change retrieval of tape cartridge data from archival storage may be complete. Because the devices expose the same identifier for their connected elements clients of both virtual tape libraries have enough information to deduce their interconnected configuration and are capable of initiating the state change automatically without operator intervention.

In some embodiments elements do not share common identifiers but are otherwise usable to move virtual media among virtual tape libraries. For example at least one element from each of the archival and active virtual tape libraries referred to as an associated element which is a broader term that encompasses connected elements is considered associated to the other such as through an association in a data store. Though the identifiers are different for each of the associated elements the associated elements may be used to express the elements association to an operator of the devices which may be a human or automated operator.

The operator may deduce the association between elements and initiate a medium s state change via the client by moving the medium from its current location in one virtual tape library to the associated element of that virtual tape library. After transfer to the associated element the medium may disappear from the source virtual tape library and perhaps sometime later appear in the corresponding associated element of the other virtual tape library. At this point the state change may be complete. In this manner backup administrators can archive and restore data using a virtual tape library interface via standard backup application since both archival and active virtual tape libraries can be accessed via a virtual tape library interface.

Turning now to an illustrative example of an environment for utilizing virtual tape libraries in accordance with at least one embodiment is shown. In the environment shown a client archive system may communicate with a virtual tape library appliance such that the client archive system may use a storage service rather than physical tape media. A client archive system may be a computer system or component thereof e.g. programming module configured to operate with systems utilizing physical tape media. A virtual tape library appliance may be communicatively connected to the client archive system to emulate operations performed in connection with physical tape media.

In an embodiment the virtual tape library appliance is configured with multiple virtual tape libraries. In this example the virtual tape library appliance includes an archival virtual tape library and an active virtual tape library. As discussed in more detail below the client archive system may interact with the virtual tape library appliance to move virtual tapes between the archival virtual tape library and the active virtual tape library . In some embodiments the client archive system is configured to issue commands to the virtual tape library appliance using an industry standard protocol such as the small computer system interface SCSI protocol and or protocols that utilize other protocols to transmit SCSI commands such as SCSI over Internet Protocol iSCSI . Further the commands transmitted from the client archive system to the virtual tape library appliance to virtually move virtual tapes between the archival virtual tape library and the active virtual tape library may be SCSI media changer commands thereby enabling the client archive system to interact with the virtual tape library appliance as if issuing SCSI commands to a media changer of a physical tape system. The SCSI Media Changer command sets e.g. SMC 2 SMC 3 are incorporated herein by reference.

As illustrated in the archival virtual tape library and active virtual tape library each correspond to a respective data storage system. In this example the archival virtual tape library corresponds to a provider archival storage system and the active virtual tape library corresponds to a provider active storage system . The provider archival storage system and provider active storage system may be storage systems configured to operate according to different performance characteristics. For instance the provider archival storage system may be configured to store data in a manner that reduces the costs of storage at the expense of performance in connection with data access. As one illustrative example the provider archival storage system may be configured to perform data operations i.e. store and retrieve data asynchronously to take advantage of cost savings afforded by batch processing and parallelism. For instance a client of the provider archival storage system may receive requests to access data objects stored in the provider archival storage system aggregate the requests process the requests in batches and make the requested data available for retrieval using additional requests. Due to the asynchronous processing the provider archival storage system may require another request to retrieve a data object once the data object has been made ready for retrieval such as by reading the data object from one or more archival data storage devices and writing the data to one or more staging data storage devices from which the data object is available.

The provider active storage system on the other hand may be configured to provide better performance with respect to data access. For example the provider active storage system may be configured to synchronously process requests to store and or access data. To enable better performance relative to the provider archival storage system the provider active storage system may operate using additional computing resources e.g. databases that enable the provider active storage system to locate and retrieve data quickly relative to the provider archival storage system . The provider active storage system may provide synchronous data access. For example the provider active storage system may maintain stored data in a manner such that when a request for a data object is retrieved the data object can be provided or streaming of the data object can be initiated in a response to the request.

The provider archival storage system and provider active storage system may be utilized as services. Because of the differences in performance the costs for utilization of the services may vary accordingly. For instance long term storage of data in the provider archival storage system may be cheaper relative to the provider active storage system due to the relatively lower performance with respect to data access. Similarly the retrieval of data from the provider active storage system may be cheaper relative to retrieval of data from the provider archival storage system . To utilize the services the provider archival storage system and provider active storage system may be accessible over a network e.g. the Internet using appropriately configured API calls to the systems. Each of the provider archival storage system and provider active storage system may provide for instance a web service interface that enables users of the storage systems to utilize the storage systems through appropriately configured web service calls.

To utilize the provider archival storage system and provider active storage system the virtual tape library appliance may receive from the client archive system commands that are translated to appropriate commands of the provider archival storage system and provider active storage system such as creating associations between virtual constructs in a metadata store or storing data in a virtual tape structure in a provider active storage system through communication with a provider archival storage system such as application programming interface API calls. The virtual tape library appliance may also request management tasks from a management system such as creating or destroying logical data containers utilized by the provider archival storage system . In some embodiments the virtual tape library appliance translates SCSI commands to appropriate API calls of the provider archival storage system and provider active storage system as appropriate.

As noted the client archive system in some embodiments can issue media changer commands to the virtual tape library appliance to virtually move virtual tape media between the archival virtual tape library and the active virtual tape library . The virtual tape library appliance may be configured such that if a virtual tape is moved to the archival virtual tape library corresponding data is stored in the provider archival storage system and that if a virtual tape is moved to the active virtual tape library corresponding data is stored in the provider active storage system . In this manner the client archive system can make data more immediately available by moving a virtual tape from the archival virtual tape library to the active virtual tape library . Similarly the client archive system can archive data by moving a virtual tape from the active virtual tape library to the archival virtual tape library .

It should be noted that movement of a virtual tape from one virtual tape library to the other does not necessarily cause data to be removed from a data storage system corresponding to the virtual tape library from which the virtual tape was moved. For instance in some embodiments movement from the archival virtual tape library to the active virtual tape library may cause data to be read from the provider archival storage system and transmitted to the provider active storage system for storage either directly or through the virtual tape library appliance . While stored in the provider active storage system the data corresponding to the virtual tape may remain in the provider archival storage system so as to avoid another data transfer once if the data is to be archived again. Alternatively once a virtual tape is moved from one virtual tape library to the other data may be stored in a data storage system corresponding to the virtual tape library to which the virtual tape was moved and deleted from the other data storage system. It should also be noted that the cause of movement of virtual tapes between virtual tape libraries may not be symmetric. For example referring to the illustrative example of when a virtual tape is moved from the archival virtual tape library to the active virtual tape library data corresponding to the virtual tape may remain stored in the provider archival storage system while the data is concurrently stored in the provider active storage system . However moving the virtual tape from the active virtual tape library to the archival virtual tape library may cause data corresponding to the virtual tape to be deleted from the provider active storage system . Other variations are also considered as being within the scope of the present disclosure.

Turning now to a virtual environment of infrastructure of a virtual tape library system is shown. In this example the infrastructure includes an active virtual tape library and an archival virtual tape library . The virtual embodiment of the virtual tape libraries may be implemented using physical infrastructures discussed below. Generally the active virtual tape library is configured such that data corresponding to virtual tapes is accessible on demand. For example the data may be obtained in a synchronous response to a request for the data. The archival virtual tape library on the other hand may be configured for archival storage and when a virtual tape is virtually located in the archival virtual tape library data corresponding to the virtual tape may not be available on demand. While not illustrated as such in the client archive system may interface with the client archive system such as to virtually move virtual tapes from the archival virtual tape library to the active virtual tape library for on demand access of corresponding data.

In one embodiment a client archive system is configured to interface with a physical tape storage system. In place of the physical system however a virtual tape library system provides virtualized physical systems with which the client archive system is configured to communicate such as a virtual media changer virtual tape drives and virtual import export slots and virtual tape slots with virtual tape slot locations and and other virtual tape systems as seen in . A client archive system may through appropriately configured commands request changes to location through a virtual media changer . These associations may include entries in the metadata store for location logical data container ID and virtual tape ID. For example a client may request through the virtual media changer that a virtual tape be moved from a virtual import export slot to a virtual tape drive . In response a logical data container in a provider active storage system representing a virtual tape may remain physically in the same space while the virtual tape may be virtually moved from the virtual import export slot to the virtual tape drive by changing a location value of the virtual tape in a metadata store used to track virtual locations of virtual tapes. A virtual tape library appliance may provide interfaces such as interfaces for virtual tape drives and a virtual media changer to translate requests from the client archive system to the metadata store or provider storage systems. For example a virtual tape drive interface may remain the same but data may be redirected from the interface to a logical data container currently associated with the virtual tape drive in the metadata store. Through use of these virtual systems a client may create virtual tapes backup data to virtual tapes restore data from virtual tapes store virtual tapes and destroy virtual tapes.

In one embodiment a client may create a virtual tape. In a physical tape system physical tapes are not created on demand but physically inserted into the physical tape system. However in the environment of virtual tapes may be created on demand by requesting a new virtual tape be created from a management system . This management system in may be a part of a virtual tape library appliance or management server such as described below. In some embodiments a client may back up data to a virtual tape. The client archive system may request that a virtual tape be moved from a location such as virtual tape slot location in the virtual tape slots to a virtual tape drive as seen in the active virtual tape library of . The movement of the virtual tape may be represented by a change in a location entry for the virtual tape in a metadata store from virtual tape slot location to virtual tape drive .

In some embodiments a client may restore data from a virtual tape. The client archive system may request through a virtual media changer that a virtual tape be moved from a location such as virtual import export slot to a virtual tape drive as seen in . The movement of the virtual tape may be represented by a change in a location entry for the virtual tape in a metadata store from virtual tape slot location to virtual tape drive . A virtual tape drive interface provided by a virtual tape library appliance to the client archive system may be directed to the active storage logical data container associated in the metadata store with the virtual tape in . The client archive system may then perform operations on the virtual tape such as locate space read and or other tape operations. These operations may then be used to determine which data to retrieve from the active storage logical data container. After the restore is complete the client archive system in may request the virtual tape be moved from the virtual tape drive to a virtual import export slot for archival storage or to a virtual tape slot location to await further action.

In one embodiment a client may store a virtual tape which causes data corresponding to the virtual tape to be physically stored in an appropriate data storage system. The client archive system in may through one or more media change commands to the virtual media changer request that a virtual tape be moved from a location such as virtual tape drive to a virtual import export slot as represented in a metadata store. The client archive system may issue one or more commands to eject the virtual tape from the virtual import export slot which may cause one or more operations to be performed at one or more provider storage systems which may include a provider active storage system and provider archival storage system such as described above. For example virtually exporting the virtual tape may cause data corresponding to the virtual tape to be archived in a provider archival storage system and or deleted or scheduled to be deleted from a provider active storage system. A virtual tape appliance may cause the operations to be performed through one or more appropriately configured API calls to respective data storage systems. Upon ejection the virtual tape may then be virtually removed from the active virtual tape library through an update of a metadata store. The movement may cause a provider active storage system to stage an active storage logical data container for transfer to a provider archival storage system as an archival storage logical data container by data servers.

As illustrated in the active virtual tape library and the archival virtual tape library are connected by one or more virtual import export slots. For instance as illustrated in the active virtual tape library and archival virtual tape library are connected by virtual import export slots SA through virtual import export slot SX . In an embodiment the active virtual tape library and archival virtual tape library are considered connected due to a logical connection between the virtual import export slots. For example each of the active virtual tape library and archival virtual tape library may have one or more virtual import export slots that share a common identifier in the active virtual tape library and archival virtual tape library . The identifier may be for instance the import export device identifier of the designator field specified in the SMC 3 specification which for physical devices is typically unique but in some embodiments is shared by multiple virtual devices.

Thus from the perspective of the client archive system ejecting a virtual tape from a connected virtual import export slot having an identifier from one virtual tape library causes the virtual tape to appear in the import export slot of the other virtual tape library that is identified by the identifier. It should be noted that to be logically connected by a virtual import export slot the virtual import export slot of the logically connected virtual tape libraries do not necessarily need to share a common identifier. For instance as an alternative a virtual import export slot of one virtual tape library and a virtual import export slot of another virtual tape library may have different identifiers that are associated with one another by a data store. The association may be maintained by a system implementing the virtual tape libraries the client archive system and or another system.

In an embodiment there are multiple tiers of storage that may be used for logical data containers that support virtual tapes. In some embodiments as those described above there may be two tiers such as provider active storage systems and provider archive storage systems. As the archive storage logical data containers in provider archival storage systems may not have adequate response time and or may operate asynchronously for some operations such as data retrieval virtual tapes such as virtual tapes and discussed below in connection with may be represented to the client archive system as being located in the archival virtual tape library as seen in . A third tier of storage with a smaller response time than the archival storage logical data container but longer response time than the active storage logical data container may be represented as locations in yet another virtual tape library which is not illustrated. As the client archive system may be tolerant of requests to load a virtual tape into a virtual tape drive in that takes minutes a logical data container in the third storage tier may be transferred to a higher storage tier such as to an active storage logical data container and associated with a virtual tape drive in . This third tier may allow the client to have a smaller cost for storage that is quickly available but less expensive than storage that provides data access that is readily available.

In another embodiment a client may destroy a virtual tape. In a virtual tape may be virtually moved to a virtual import export slot . This virtual movement may be accomplished through an association in a metadata store of a virtual tape ID with a location and an active storage logical data container. The virtual tape in may then be removed from the active virtual tape library by removing location information from a metadata. The active storage logical data container associated with the virtual tape may then be deprovisioned by a data server in a data storage system where the data corresponding to the virtual tape is stored. Depending on the embodiment and the client archive system the metadata store may or may not delete the entry for the virtual tape .

In a virtual environment of infrastructure of a virtual tape library system is shown. The virtual environment may be the environment discussed above in connection with but with greater detail illustrated for the archival virtual tape library and less detail illustrated for the active virtual tape library . Accordingly as illustrated in the virtual environment includes an active virtual tape library which may be the active virtual tape library discussed above in connection with and an archival virtual tape library which may be the archival virtual tape library discussed above in connection with . As illustrated in the archival virtual tape library includes virtual components that are the same as or similar as like named components discussed above in connection with . For instance as illustrated in the archival virtual tape library is configured to communicate with a management interface such as described above and includes virtual tape slots with virtual tape slot locations and such as described above. Further the archival virtual tape library includes virtual import export slots and which may be as described above. For example as illustrated the virtual import export slots and may be logically connected to the active virtual tape library so that virtual tapes are moveable between the archival virtual tape library and the active virtual tape library . A virtual media change is configured to interface with the client archive system to virtually move virtual tapes and among the various components of the archival virtual tape library.

Further as illustrated in the archival virtual tape library is configured to interface with provider storage systems such as described above. For instance when a virtual import export slot or is used to virtually move a virtual tape to the archival virtual tape library the archival virtual tape library through a virtual tape appliance supporting the archival virtual tape library may transfer data corresponding to the virtual tape to a provider archival storage system if the provider archival storage system of the provider storage systems does not already store the data. Further a metadata store may be updated to reflect the virtual movement of the virtual tape.

As with all environments described herein variations are considered as being within the scope of the present disclosure. For instance while show virtual environments having two virtual tape libraries various embodiments of the present disclosure may utilize more than two virtual tape libraries. The virtual tape libraries may be connected in a chain or mesh through virtual import export slots. Media changer commands may be issued to the appropriate virtual tape library to move virtual tapes from one virtual tape library to the next. Further while show virtual import export slots connecting the virtual tape libraries illustrated in the figures additional virtual import export slots may connect other components of a virtual environment such as a virtual tape shelf not shown . Virtually exporting a virtual tape to a virtual tape shelf may cause data corresponding to the virtual tape to be transferred to archival storage if not already stored in archival storage and a corresponding update to a metadata store that tracks the virtual locations of virtual tapes.

Briefly the client archive system is configured to interface with a virtual tape library appliance as if the virtual tape library appliance was a physical tape system. The virtual tape library appliance may for instance be configured to receive commands such as SCSI commands from the client archive system and when appropriate issue appropriately configured API calls to other systems in order to perform virtual tape operations. It should be noted that while shows the virtual tape library appliance as hosted on customer premises the virtual tape library appliance may be hosted in other locations such as the provider s premises. Commands to the virtual tape library appliance may be configured accordingly. For instance iSCSI commands may be used by the client archive system to communicate with the virtual tape library appliance .

As illustrated in the virtual tape library appliance supports virtual environments for an active virtual tape library and an archival virtual tape library . The active virtual tape library and archival virtual tape library may be virtual tape libraries such as discussed above. The client archive system can issue commands to the virtual tape library appliance and the virtual tape library will take appropriate actions to modify the virtual tape libraries as appropriate such as described below.

As illustrated in a number of components support implementation of the virtual tape library appliance . For example as illustrated one or more data centers of a provider host one or more management servers and one or more data servers. The virtual tape library appliance may communicate with the management servers . The management servers may be configured to interface with a metadata store which as described above serves of a repository of information indicative of the current state of a virtual tape library for the customer. The metadata store may store the states of one or more virtual tape libraries for one or more customers of the provider. When a client archive system communicates with the virtual tape library appliance to change the location of a virtual tape in a virtual tape library or move a virtual tape between virtual tape libraries the virtual tape appliance via a computing system implementing the virtual tape library may communicate with a management server to cause the management server to record the change in the metadata store.

The data server may be configured to enable the virtual tape library appliance to utilize services of a provider active storage system and provider archival storage system which may be storage systems such as described above. The data server may be configured for example to translate commands from the virtual tape library appliance to appropriately configured API calls of the respective storage systems. For instance when a virtual tape is virtually ejected to an archival virtual tape library if the data corresponding to the virtual tape is not already in the provider archival storage system the virtual tape library appliance may send a command to a data server which may transmit an appropriate API call to the provider archival storage system to store the data in the provider archival storage system . The data server may also transmit an appropriate API call to the provider active storage system to cause the provider active storage system to delete data corresponding to the tape so that for instance the customer does not incur further charges for storage of the data in the provider active storage system until the data is once again loaded into the provider active storage system as a result of a virtual tape move. By loading the data into the provider active storage system the data may be read from the provider archival storage system and transmitted to the provider active storage system for storage by the provider active storage system . In some embodiments loading the data into the provider active storage system also includes deleting the data from the provider archival storage system . In other embodiments the data may be deleted from the provider archival storage system once transmitted to the provider active storage system .

Similarly when a virtual tape is virtually moved to an active virtual tape library a data server may transmit an appropriate API call to the provider archival storage system to retrieve data corresponding to the virtual tape. If the provider archival storage system operates asynchronously the data server may transmit another appropriate API call to the provider archival storage system to obtain the retrieved data. Once the data is available from the provider archival storage system the data server may through an appropriate API call to the provider active storage system cause the provider active storage system to store the data. In this manner should the customer issue a command to read the virtual tape from a virtual tape drive the virtual tape library appliance can command a data server to provide the data from the provider active storage system .

It should be noted that variations of the environment are considered as being within the scope of the present disclosure. For example in some embodiments management servers and or data server are absent from the environment. In such embodiments the virtual tape library appliance may be configured to transmit commands to the metadata store provider active storage system and or provider archival storage system directly. The virtual tape library appliance may for instance generate and transmit appropriately configured API calls in accordance with commands received from the client archive system .

As noted above in various embodiments a virtual tape s virtual location in a virtual tape library corresponds to data associated with the virtual tape being stored in a data storage system corresponding to the virtual tape library. In the examples illustrated in the figures one virtual tape library corresponds to data storage in an archival data storage system and another virtual tape library corresponds to data storage in an active data storage. While these two correspondences are used for the purpose of illustration other embodiments may include additional correspondences. For example there may be more than two virtual tape libraries logically connected by virtual media changers each corresponding to a different data storage system. When a virtual tape is virtually located in a virtual tape library data corresponding to the virtual tape may be stored in a data storage location corresponding to the virtual tape library and possibly in one or more others. As discussed above when a virtual tape is moved to a virtual tape library a metadata store may be updated to reflect the movement. The metadata store or another data store may also be updated to indicate the location of data corresponding to the virtual tape. The metadata store may record for instance enough information to enable access to the data from the data storage system corresponding to the virtual tape library in which the virtual tape is located.

The metadata store may also maintain associations of virtual tapes with the locations of data in one or more data storage systems which do not correspond to a virtual tape library in which the virtual tape is virtually located. For instance as noted when a virtual tape is moved from an archival virtual tape library to an active virtual tape library data corresponding to the virtual tape may be read but not deleted from an archival data storage system and loaded i.e. written to an active data storage system. The metadata store may be updated to reflect the association of the virtual tape s data with information enabling access of the data in the active data storage system. The metadata store may also keep associated the virtual tape s data with information enabling access of the data from the archival data storage system. In this manner when a virtual tape is virtually moved from the active virtual tape library to the archival virtual tape library data corresponding to the virtual tape does not need to be retransferred to the archival data storage system if the data has already been transferred to the archival data storage system as a result of a virtual move of the virtual tape to the archival virtual tape library.

Logical data containers in the archival storage may also be manipulated through the provider storage systems . Data of logical data containers may be transferred between the archival storage and active storage through the provider storage systems either directly or through a system implementing the virtual tape libraries . Logical data containers in active storage may be seen as available to the active virtual tape library and the client archive system . In some embodiments volumes in archival storage may be seen as unavailable until moved to active storage through virtual movement of corresponding virtual tapes.

Turning now to an illustrative example of a process that may be used to operate a virtual tape library system in accordance with at least one embodiment is shown. This process may be accomplished collectively by appropriate computing resources such as those shown in including a client archive system virtual tape library appliance management servers data servers metadata store provider active storage systems and provider archival storage system . As illustrated in a virtual tape may be created by storing an association in a metadata store between the virtual tape and a logical data container of a provider active storage system. The virtual tape may then be associated with a virtual tape drive in an active virtual tape library. Associating the virtual tape with the virtual tape drive may be performed in any suitable manner such as by a metadata store as described above in connection with . The virtual tape drive association may cause an instigation of an I O path between a client archive system and the logical data container. A virtual tape library appliance may translate tape operations requested by the client archive system to access the logical data container associated with the virtual tape loaded in the virtual tape drive. The virtual tape library appliance may for instance translate write commands to API calls to store data. As another example a seek operation requesting the fourth record from the beginning of tape BOT may be translated to a logical data container request for global record flags metadata in the global header of the logical data container to scan for the fourth record flag set to true. The location of the fourth record flag set to true may then be used to calculate the record location in the logical data container and set a tape head location in a journal in the global header to the record location.

After the tape operations requested by the client archive system are completed the virtual tape may be moved from the virtual tape drive to another location in the virtual tape library. A virtual tape appliance may for instance receive commands to a virtual media changer of the active virtual tape library. By moving the virtual tape the logical data container may be released from the virtual tape drive I O interface. For example a request to move the virtual tape to a different location may cause the association of the virtual tape and the virtual tape drive may be removed from the metadata store. A routing of I O requests by the virtual tape drive I O interface may also be removed such that no further I O requests are routed to the logical data container associated with the virtual tape.

As illustrated in the process may include moving the virtual tape to an import export slot that connects the active virtual tape library to an archival virtual tape library. Moving the virtual tape may include updating the metadata store to indicate the new virtual location of the virtual tape. Moving the virtual tape may be as a result of a virtual tape appliance having received a command from a client archive system to make the move. Once virtually located in the import export slot the process may include ejecting the virtual tape which may be performed as a result of receiving at a virtual tape appliance a command to eject the virtual tape. As noted above ejection of the virtual tape by virtue of the virtual import export slot connecting the active virtual tape library with the archival virtual tape library cause the tape to virtually move into the archival virtual tape library. Accordingly the process may include associating in the metadata store the virtual tape with a logical data container of an archival data storage system. In addition the process may include transferring data corresponding to the virtual tape from the active data storage system to the archival data storage system.

However if the virtual tape is to be moved to the storage slot such that it remains readily available the virtual tape may be associated with a library location in the metadata store and held in active storage. After holding in active storage the virtual tape library appliance may receive a request to send the logical data container to archival storage. The virtual tape may then be associated with the import export slot and data associated with the virtual tape may be moved to archival storage. In some embodiments the request is implied by associating the virtual tape with the import export slot.

Similar operations may be performed to prepare a virtual tape to restore to the client archive system as seen the process illustrated in . As illustrated the process includes receiving a request to eject a virtual tape from an archival virtual tape library VTL in the figure to an active virtual tape library. The request may be received for instance by a virtual tape appliance from a client archive system. As a result of receiving the request the process may include moving data of the logical data container corresponding to the virtual tape to active storage and virtually moving the virtual tape from its virtual storage slot e.g. one of the virtual tape slot locations or of the archival virtual tape library to a virtual import export I E in the figure slot of the archival virtual tape library. The virtual tape may then be moved from the virtual import export slot of the archival virtual tape library to a virtual import export slot of the active virtual tape library. As noted above the virtual import export slot of the archival virtual tape library and the virtual import export slot of the active virtual tape library may be logically connected such as by sharing a common identifier e.g. an identifier used by the SCSI protocol or by having distinct identifiers without a common identifier that are logically linked to one another by association with one another in a data store e.g. a metadata store . By moving the virtual tape to the virtual import export slot of the archival virtual tape library a system implementing the virtual tape libraries may cause the virtual tape to appear in the connected virtual import export slot of the active virtual tape library. The virtual tape may appear in the virtual import export slot of the active virtual tape library after a period of time such as the time it takes to move data corresponding to the virtual tape from an archival data storage system to an active data storage system. Thus the virtual tape may appear in the virtual import export slot of the active virtual tape library when data corresponding to the virtual tape is unavailable for immediate access e.g. unavailable to be provided in a synchronous response to a request.

As illustrated in the process may also include moving the virtual tape from the virtual import export slot of the active virtual tape library to a storage slot of the active virtual tape library such as one of the virtual tape slot locations or . It should be noted that the operations of moving the virtual tape from a storage slot of the archival virtual tape library to a storage slot of the active virtual tape library through import export slots of the virtual tape libraries may be performed collectively in response to the received request to eject the virtual tape from the archival virtual tape library to the active virtual tape library however some or all of the operations may be performed as individual responses to additional received requests. Further as noted above virtual movement of a virtual tape into the active virtual tape library may cause data corresponding to the virtual tape to be loaded into an active data storage system.

In an embodiment the process includes receiving at a media changer interface a request to move the virtual tape to a virtual tape drive. As a result of receiving the request the process may include associating a logical data container backing the virtual tape i.e. corresponding to the virtual tape with the virtual tape dive I O interface via the association of the virtual tape with the virtual tape drive. The client archive system may then perform restore operations on the virtual tape such as locate space read or other tape operations. These restore operations may then be used to determine which data to retrieve from the logical data container.

After the restore is complete a request may be received from the client archive system to move the virtual tape from the virtual tape drive to the virtual import export slot. As a result of receiving the request the process may include releasing the virtual tape from the virtual tape drive I O interface via the disassociation of the virtual tape from the virtual tape drive. The virtual tape may be associated in a metadata store with the I E slot and the virtual tape may be moved to the archival virtual tape library such as described above. If applicable the process may also include storing data corresponding to the virtual tape in an archival data storage system.

Turning now to an illustrative example of a process that may be used to operate a virtual tape library system in accordance with at least one embodiment is shown. This process may be accomplished by computing resources such as those shown in including a client archive system virtual tape library appliance management servers data servers metadata store provider active storage systems and provider archival storage system . A new virtual tape may be created by provisioning a logical data container in a storage service and associating the logical data container with a virtual tape in a metadata store. The virtual tape may then be associated with a virtual import export slot in the metadata store. Now that the virtual tape is available to the client archive system the client archive system may decide whether to store archive or use the virtual tape. After creation of a new tape the client archive system may request the tape be used for backup. The client archive system may request the virtual tape be moved to a virtual tape drive through a media changing interface. This virtual move causes the metadata store to associate a logical data container associated with the virtual tape with a virtual tape drive I O interface. The virtual tape library appliance may then translate tape I O commands from the client archive system to logical data container access commands. As long as the client archive system sends commands the virtual tape library appliance may continue to translate the commands for the logical data container. After the client archive system commands are complete the virtual tape and corresponding logical data container may be dissociated with the virtual tape drive I O interface. The client archive system may then return to deciding whether to archive use or store the virtual tape. If the virtual tape is to be stored the virtual tape may be associated with a virtual library location to await further action to be used stored or archived .

If the virtual tape is selected to be archived the virtual tape may be moved to a virtual import export slot of the active virtual tape library. The virtual tape may then be removed from the virtual library to an archival virtual tape library and the logical data container associated with the virtual tape moved to archival storage. The logical data container may stay in archival storage until the virtual tape and or logical data container is requested to be restored back into the virtual tape library and the associated active storage. Once the logical data container is moved from archival storage the virtual tape may be associated with a virtual import export slot in the active virtual tape library. The virtual tape may then be stored used or archived such as described above.

As noted variations of embodiments explicitly described are considered as being within the scope of the present disclosure. For example various embodiments are described with specific details that may not be necessary in all embodiments. As an example the present disclosure discusses virtual tapes implemented by a system that operates as a virtual version of a physical tape system. The scope of the present disclosure however is not limited to tapes and virtualizations thereof. Techniques described herein may be applicable to other types of storage media and generally virtualizations of physical data storage containers such as magnetic drives with spinning media e.g. platters solid state drives SSDs and or others. Further while specific command sets and protocols are discussed for the purpose of illustration the techniques described herein are applicable to command sets and protocols in addition to those explicitly mentioned.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. Servers as used herein may be implemented in various ways such as hardware devices or virtual computer systems. In some contexts servers may refer to a programming module being executed on a computer system. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling some even a majority of the data access and business logic for an application. The application server may provide access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the web server in the form of HyperText Markup Language HTML Extensible Markup Language XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein. Further operations described herein as being performed by a single device may unless otherwise clear from context be performed collectively by multiple devices which may form a distributed system.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect of the present disclosure. For example the data store illustrated may include mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user through a device operated by the user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser. It should be noted however that embodiments of the present disclosure are not necessarily limited to the context of web pages but may be more generally applicable to processing requests in general where the requests are not necessarily requests for content.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop laptop or tablet computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Various embodiments of the present disclosure utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as Transmission Control Protocol Internet Protocol TCP IP protocols operating in various layers of the Open System Interconnection OSI model File Transfer Protocol FTP Universal Plug and Play UpnP Network File System NFS Common Internet File System CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including Hypertext Transfer Protocol HTTP servers FTP servers Common Gateway Interface CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU or processor at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disc Read Only Memory CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected when unmodified and referring to physical connections is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. The use of the term set e.g. a set of items or subset unless otherwise noted or contradicted by context is to be construed as a nonempty collection comprising one or more members. Further unless otherwise noted or contradicted by context the term subset of a corresponding set does not necessarily denote a proper subset of the corresponding set but the subset and the corresponding set may be equal.

Conjunctive language such as phrases of the form at least one of A B and C or at least one of A B and C unless specifically stated otherwise or otherwise clearly contradicted by context is otherwise understood with the context as used in general to present that an item term etc. may be either A or B or C or any nonempty subset of the set of A and B and C. For instance in the illustrative example of a set having three members used in the above conjunctive phrase at least one of A B and C and at least one of A B and C refers to any of the following sets A B C A B A C B C A B C. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of A at least one of B and at least one of C to each be present.

Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. Processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments of the present disclosure to be practiced otherwise than as specifically described herein. Accordingly the scope of the present disclosure includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the scope of the present disclosure unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

