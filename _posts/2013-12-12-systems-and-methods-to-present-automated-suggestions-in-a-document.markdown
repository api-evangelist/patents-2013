---

title: Systems and methods to present automated suggestions in a document
abstract: A method for providing automated suggestions in a document stored on a cloud computing service includes providing collaborators with access to the document, who may each insert suggested edits into the document. The cloud computing service provides a plurality of suggestion robots for the collaborators to activate within the document, where each suggestion robot has an associated editing objective. The cloud computing service receives a request from a first collaborator to activate a first suggestion robot and activates the robot to present to the first collaborator a plurality of suggested edits of the document according to the editing objective of the robot, where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators, and the first collaborator may accept or reject each of the plurality of suggested edits of the robot and the collaborators.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09372858&OS=09372858&RS=09372858
owner: Google Inc.
number: 09372858
owner_city: Mountain View
owner_country: US
publication_date: 20131212
---
Cloud computing services allow users to create edit share and collaborate on files that are stored on the cloud computing service. Users connect to the cloud computing service over a remote network such as the Internet. Files that may be stored on the cloud computing service include word processing documents spreadsheets presentations images audio files video files and many other types of documents and files. The cloud computing service also provides document editing applications for displaying and editing certain files. These applications are sent from the cloud computing service to a client computer and displayed on a web browser executing the client computer. For example a cloud computing service may send to a client computer a document editing application for displaying and editing word processing documents stored on the cloud computing service. For collaborative documents the cloud computing service sends the application to each collaborator so that they can view and edit the document at the same time.

Each collaborator of a collaborative document stored on a cloud computing service may edit the document. A collaborator may also propose suggested edits of the document which another collaborator may choose to accept or reject. For example the main author of a collaborative document may request a collaborator to proofread the document. The collaborator inserts a number of suggested edits in the document for the main author to review. If the main author accepts a suggested edit the suggested edit is incorporated into the document. If the main author rejects a suggested edit the suggested edit is not incorporated into the document. It is useful for users to have other people review their documents and propose improvements but it may be difficult to find a person to review a document in a timely manner. Also human reviewers may miss instances where improvements may be made and may provide inconsistent suggestions.

The systems and methods described herein provide a way for users to receive automated suggestions for documents stored on a cloud computing service. The document editing application provided to the user by the cloud computing service includes a user interface. The user interface provides options for users to select from a number of suggestion robots. Each suggestion robot has an editing objective. For example one suggestion robot may check for internal consistency within the document while another suggestion robot may suggest formatting changes so that the document appears in a certain way. These suggestion robots are applications or scripts that are stored on the cloud computing service or a server hosted by a third party that has created the robot. When a user selects or activates a suggestion robot within the document the suggestion robot inserts a number of suggested edits within the document according to its editing objective. The suggested edits generated by the suggestion robots are displayed with suggested edits by other collaborators of the document and may have the same appearance as suggested edits by the collaborators. The user may then review each suggested edit and either accept or reject the suggested edit.

One aspect described herein discloses a method for providing automated suggestions in a document stored on a cloud computing service. The method includes storing a document on a cloud computing service providing one or more collaborators with access to the document where the one or more collaborators may insert suggested edits into the document and providing a plurality of suggestion robots for the one or more collaborators to activate within the document where each of the plurality of suggestion robots has an associated editing objective. The method further includes receiving a request from a first collaborator on a client computer to activate a first suggestion robot within the plurality of suggestion robots and activating the first suggestion robot to present to the first collaborator a plurality of suggested edits of the document according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the first collaborator may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators.

Another aspect described herein discloses a method to request automated suggestions in a document stored on a cloud computing service. The method includes displaying to a first collaborator on a client computer a document stored on a cloud computing service where one or more collaborators may insert suggested edits into the document and displaying to the first collaborator a plurality of suggestion robots where each of the plurality of suggestion robots has an associated editing objective. The method further includes receiving a request from the first collaborator to activate a first suggestion robot within the plurality of suggestion robots and displaying a plurality of suggested edits of the document generated by the first suggestion robot according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the first collaborator may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators.

Another aspect described herein discloses an apparatus for providing automated suggestions in a document stored on a cloud computing service the apparatus including a server. The server is configured to communicate with a user and one or more collaborators on a plurality of client computers store a document provide the user and one or more collaborators with access to the document where the one or more collaborators may insert suggested edits into the document and provide a plurality of suggestion robots for the user to activate within the document where each of the plurality of suggestion robots has an associated editing objective. The server is further configured to receive a request from the user on a first client computer in the plurality of client computers to activate a first suggestion robot within the plurality of suggestion robots and activate the first suggestion robot to present to the user a plurality of suggested edits of the document according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the user may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators.

Another aspect described herein discloses a system for providing automated suggestions in a document stored on a cloud computing service the system including a plurality of client computers and a server. The server is configured to communicate with the plurality of client computers store a document provide a user and one or more collaborators on the plurality of client computers with access to the document where the one or more collaborators may insert suggested edits into the document and provide a plurality of suggestion robots for the user to activate within the document where each of the plurality of suggestion robots has an associated editing objective. The server is further configured to receive a request from the user on a first client computer in the plurality of client computers to activate a first suggestion robot within the plurality of suggestion robots and activate the first suggestion robot to present to the user a plurality of suggested edits of the document according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the user may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators.

To provide an overall understanding of the systems and methods described herein certain illustrative embodiments will now be described. However it will be understood that the systems and methods described herein may be adapted and modified as is appropriate for the application being addressed and that the systems and methods described herein may be employed in other suitable applications and that such other additions and modifications will not depart from the scope thereof. In particular a server service or system as used in this description may be a single computing device or multiple computing devices working collectively and in which the storage of data and the execution of functions are spread out among the various computing devices.

Aspects of the systems and methods described herein relate to providing users with suggestion robots that make automated suggested edits of documents stored on a cloud computing service. Suggestion robots may be designed with many different editing objectives from improving the wording of a document to fact checking and formatting of documents. The suggestion robots may be developed by the cloud computing service or by third parties for use with the cloud computing service. The suggestion robots may be executed on the cloud computing service or a third party server and the results displayed on the client computer or the suggestion robot may be sent to the client computer and executed locally. The suggestion robots provide a number of suggested edits to the user who may accept or reject each suggested edit. If the user accepts a suggested edit the suggested edit is incorporated into the document. If the user rejects a suggested edit the suggested edit is not incorporated into the document. The suggested edits generated by the suggestion robots are displayed with suggested edits by other collaborators of the document and may have the same appearance as suggested edits by the collaborators.

First a network system in which a number of client computers may connect to a server is described. shows a network system that includes cloud computing service and a number of client computers through . Cloud computing service may include one or more computing devices that collectively provide online content and services for a number of client computers. Cloud computing service stores a number of files accessible by client computers . The files may include word processing documents spreadsheets presentations images audio files video files or any other files of various open or proprietary file types. Users may create edit copy share and delete files stored on the cloud computing service. Client computers may include desktop computers laptop computers tablets smart phones mobile electronic devices or any other device that may connect to cloud computing service . System may include many additional client computers not pictured in . The network connection between the client computers and cloud computing service in network system may be facilitated through a local area network wide area network Ethernet fiber optic network or any other wired or wireless connection.

The components of a client computer and a cloud computing service in communication with each other are now described in more detail. System in includes a cloud computing service in communication with a client computer . Cloud computing service includes a central processing unit CPU read only memory ROM random access memory RAM communications unit data store robot store and bus . Server may have additional components that are not illustrated in . Bus allows the various components of server to communicate with each other. Communications unit allows server to communicate with other devices such as client computer and other client computers as well as third party servers. Data store is used to store content accessible by a user on client computer such as documents and files stored by users on cloud computing service . Robot store stores suggestion robots that are designed for use within the documents stored in data store . Cloud computing service may provide client computer with a document editing application for displaying and editing a document stored in data store . Alternatively a user on client computer may obtain the document editing application from a web page such as a website selling electronic applications. The document editing application also provides options for a user to activate a suggestion robot stored in robot store . Alternatively cloud computing service may send one or more suggestion robots to client computer . When a suggestion robot is activated by the user the suggestion robot executes on cloud computing service or locally on client computer and generates a number of suggested edits within the document. These suggested edits are displayed to the user on client computer who may choose to accept or reject each suggested edit.

Client computer includes a CPU ROM RAM input output interface and bus . Client computer may have additional components that are not illustrated in . Bus allows the various components of client computer to communicate with each other. Input output interface allows client computer to communicate with other devices such as cloud computing service and other third party servers. Input output interface also includes devices for taking in user inputs and displaying outputs to a user such as a keyboard mouse and display screen. CPU executes various programs stored in memory on client computer such as a web browser. Web browsers are used among other things to display content and services provided by cloud computing service such as a document editing application configured to display a document stored on cloud computing service to the user. Web browsers receive web page documents encoded in HTML CSS Javascript or other web compatible languages and interpret the language to properly display the web page.

Data store for storing content on cloud computing service robot store a web browser executing on client computer and other data structures and software programs in system may be implemented using non transitory computer readable media. Examples of suitable non transitory computer readable media include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and read only once writable or rewriteable optical disks such as e.g. CDROM CDR CD R CDRW CD RW DVDROM DVDR DVD R DVDRW and DVD RW .

A cloud computing service stores documents accessible to users on client computers. Users may access the documents using a web browser on a client computer. The cloud computing service provides a document editing application that is sent to the client computer. The document editing application is executed within the web browser and includes a user interface for a user to view and edit the document. shows an example of a user interface for a document editing application provided by a cloud computing service. User interface includes a display of the contents of document with title History Essay as well as menu . Menu provides the user with a number of options for viewing and editing the document such as copy and paste save print share or zoom. The formatting and layout of user interface is not limited to what is shown in .

Document may be collaborative which means that more than one user may view and edit the document at the same time. A number of collaborators may have access to document . Document has an access control list that stores the users that are allowed to access document and each user s access level. For example some users are allowed to edit document while others may only insert comments or suggested edits in document and others may only be allowed to view document and cannot view any suggested edits. A collaborator may create and insert suggested edits within document which another collaborator may accept or reject. Unlike actual edits that change the document suggested edits are not incorporated into a document until they have been accepted. However the user interface may show a preview of how the suggested edit would look like if accepted. User interface includes an example of a suggested edit made by a collaborator named Bob. Suggested edit includes a display box that presents the suggested edit. In this case it is a suggestion to change the numerals 12 to the word twelve and the user interface previews the suggested edit by inserting twelves and striking out 12 in the text. Suggested edit also indicates who made the suggested edit Bob and includes options for the user to either accept or reject the suggested edit. If the user accepts suggested edit then numerals 12 are changed to the word twelve in document while no changes are made if the user rejects suggested edit . Suggested edit also includes an arrow pointing to a highlighted section of document that may be affected by the suggested edit. The display of suggested edit is not limited to what is shown in . Additional information regarding suggested edits may be found in copending commonly assigned U.S. application Ser. No. 14 060 059 entitled SYSTEMS AND METHODS FOR PROVIDING JUST IN TIME PREVIEW OF SUGGESTION RESOLUTIONS which is hereby incorporated by reference in its entirety.

Suggested edits may be used by reviewers or editors to propose improvements to a document while allowing the user to retain control over which suggested edits to incorporate into the document. While it is very useful to have human reviewers review a document it may be difficult for a user to find someone to review the document and do so within a certain time frame. The systems and methods described herein provide a way for users to obtain suggested edits from an automated reviewer. A cloud computing service provides a number of programs or scripts that scan the document and generate suggested edits for the user to review. These programs are called suggestion robots. Each suggestion robot has an editing objective so that each suggested edit made by a suggestion robot is related to the same objective. For example the editing objective of one suggestion robot may be to suggest edits for converting verbs into present tense while the editing objective of another suggestion robot may be to suggest edits for converting verbs into past tense. Other examples of editing objectives of suggestion robots may include spelling and grammar in various languages improvement of wording consistency within the document creating shortcuts in a document adding web links to a document formatting visual style color schemes inserting images associated with words fact checking bibliography checking inviting additional human reviewers based on mention of their names suggestions for particular styles of prose or poetry and humorous suggestions. Suggestion robots may be divided into categories based on their editing objectives and some robots may have varying or opposing editing objectives within the same category. The editing objective of a suggestion robot is usually subjective in nature i.e. suggesting improvements for a user to consider rather than correcting obvious or likely errors which may be corrected automatically without the use of a suggestion robot. However suggestion robots may also make objective suggested edits to correct errors.

Suggestion robots may consult external sources such as a dictionary or database to generate edits. The suggested edits may be based on hard coded heuristics in the suggestion robot or may be based on machine learning on a corpus of high quality documents and other written content. Suggestion robots may also adjust suggestions based on previous user acceptance rejection patterns. For example if a user repeatedly rejects a certain type of suggested edit the suggestion robot may stop presenting the same type of suggested edit to the user. Past user acceptance rejection patterns may be stored in document metadata on the cloud computing service. The suggestion robot uses this information when generating suggested edits for that user. A user may apply one or more suggestion robots to a document according to the user s preference of editing objectives that the user believes will improve the document.

A user may apply a suggestion robot to all or a part of a document or to multiple documents at the same time. For example the user may highlight a sentence or a paragraph of text and apply a suggestion robot to review only the highlighted section of text. In another example the user may select several documents and apply a suggestion robot to each one simultaneously. The suggestion robots may be activated on a one time basis to generate suggested edits for the user to review. Alternatively the user may opt to have some suggestion robots continually on as a user edits a document so that the suggestion robots generate suggested edits in real time with an appropriate lag between when the user creates content and when the suggestion robots review that content. Collaborators of the document if they have the requisite permissions on the document may also apply suggestion robots to the document in lieu of or in addition to any suggested edits the collaborators insert. Other collaborators if they have the requisite permissions may view and accept or reject the suggested edits. The suggested edits inserted by the suggestion robots may have the same appearance as suggested edits inserted by any collaborator. The suggested edits generated by each suggestion robot or collaborator may be displayed in different colors fonts or other characteristics to uniquely identify the suggestor but all suggested edits may be displayed in the same format and manner. The same interface and tools such as searching within suggested edits bulk resolution of suggested edits and filtering of suggested edits may be applied to all suggested edits whether by a suggestion robot or a human reviewer. The suggestion robots may be developed by the cloud computing service or by a third party for use within the document editing application provided by the cloud computing service. The suggestion robots may be programmed in Javascript or other browser compatible languages or may be programmed as modules in Java C and any other languages executable on a server. The suggestion robots may also be written in the native code of certain mobile devices. The suggestion robots are considered modular applications or applications that operate within another application which in this case is the document editing application.

The document editing application provided by the cloud computing service has a user interface that allows users to browse search and activate suggestion robots for a document. shows an example of a user interface for a document editing application provided by a cloud computing service. User interface includes a display of the contents of document including suggested edit made by collaborator Bob. User interface also includes menu which has a number of menu categories displaying various functions for the user. Menu includes a Tools menu category that allows a user to search browser and activate suggestion robots. The formatting and layout of user interface is not limited to what is shown in . For example menu category may be labeled with another name or the suggestion robots may be found under another category of menu .

Menu category displays three suggestion robots Grammar Robot Consistency Robot and Fact Checker Robot . These suggestion robots may be displayed because the user has recently used the robots or the user has indicated that these suggestion robots are the user s favorite or may have been suggested to the user by the cloud computing service. Menu category also includes a More Robots option which may open a window overlaying user interface that allows the user to browse and search for more suggestion robots. The suggestion robots in are configured to operate within the document editing application provided by the cloud computing service.

A user may activate a suggestion robot by selecting it from menu category . Alternatively a user may activate a suggestion robot through e mail. A suggestion robot may have an associated e mail address. A user sends the document to the e mail address of the suggestion robot. The suggestion robot inserts suggested edits into the copy of the document stored on the cloud computing service and notifies the user that the suggestion robot has finished. The user may then open the document to view the suggested edits. When the user activates a suggestion robot it executes and inserts a number of suggested edits into document . For example the user decided to activate Consistency Robot and Fact Checker Robot in document . An example of the result is shown in where user interface displays the suggested edits generated by the Consistency Robot and Fact Checker Robot in addition to suggested edit by collaborator Bob. The Consistency Robot generated two suggested edits edit to underline Chapter 2 so that it is consistent with the formatting for Chapter 1 and edit to change Mr. Revere to Paul so that it is consistent with an earlier reference to the same person. The Fact Checker Robot generated one suggested edit edit to change Apr. 8 1774 to Apr. 7 1775 in order to correct the date of an historical event. The suggestion robot may suggest multiple alternatives for the same highlighted section of text and the user may select from those alternatives or reject all of them. Each of suggested edits through identify the person or robot that made the suggestion and give the user the option to either accept or reject the suggested edit. The suggested edits generated by the suggestion robots may have the same appearance as suggested edits made by human collaborators such as Bob. Thus from the user s perspective suggested edits made by a suggestion robot are no different than suggested edits made by human collaborators. The user may search filter by type of suggested edit or identity of the editor resolve suggested edits in bulk and apply other commands to any set of suggested edits regardless of whether they were generated by a human or a suggestion robot.

Suggestion robots may be stored and executed in a number of ways. shows an example of a system that illustrates where the suggestion robots may be stored and executed. System includes cloud computing service in communication with client computer . Cloud computing service and client computer are both in communication with a third party server . All three are in communication over a remote network such as the Internet. Cloud computing service stores a document which is accessible to a user on client computer . Cloud computing service provides document and a document editing application for displaying the document in a web browser executing on client computer .

Cloud computing service stores a number of suggestion robots that may be activated in document . Third party server may also create additional suggestion robots that work in conjunction with the document editing application provided by cloud computing service . Third party server may use a special application programming interface API provided by cloud computing service to design suggestion robots that work within the document editing application provided by cloud computing service . Cloud computing service may store a suggestion robot registry which contains information about suggestion robots developed by third parties such as third party server . The information may include a unique ID for each suggestion robot the name of the suggestion robot the identity of the third party that developed it and in some cases a URL or other type of address e.g. IP for connecting with the third party to initiate the suggestion robot. The suggestion robots designed by third party server may be stored on third party server or a copy may also be stored on cloud computing service . The document editing application provided to client computer allows users to search browse and use suggestion robots developed by both cloud computing service and third party server .

When a user on client computer activates a suggestion robot stored on cloud computing service the suggestion robot may be executed on cloud computing service and the results provided to the document editing application on client computer for display. Alternatively cloud computing service may send a local copy of the suggestion robot to client computer so that the suggestion robot is executed locally on client computer . When the user activates a suggestion robot stored on third party server cloud computing service or client computer may connect with third party server to initiate the execution of the suggestion robots. The suggestion robot is then executed on third party server and the results are sent to client computer for display. Alternatively third party server may send a local copy of the suggestion robot to client computer so that the suggestion robot is executed locally on client computer . Suggestion robots designed by a third party and stored on third party server may utilize the acceptance rejection pattern of users to adjust the suggested edits but may not be able to access the document metadata on cloud computing service directly for this information. Instead cloud computing service sends information to third party server regarding user decisions so that third party server may store this information independently.

Methods for providing automated suggestion robots to users of a cloud computing service are now described. illustrates a method for a cloud computing service to provide automated suggestions in a document stored on the cloud computing service. The method includes storing a document on a cloud computing service and providing one or more collaborators with access to the document where the one or more collaborators may insert suggested edits into the document. The method further includes providing a plurality of suggestion robots for the one or more collaborators to activate within the document where each of the plurality of suggestion robots has an associated editing objective and receiving a request from a first collaborator on a client computer to activate a first suggestion robot within the plurality of suggestion robots. The method further includes activating the first suggestion robot to present to the first collaborator a plurality of suggested edits of the document according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the first collaborator may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators. Method may be performed on a cloud computing service such as cloud computing service in cloud computing service in and cloud computing service in .

Method begins by storing a document on a cloud computing service shown at . The cloud computing service stores many documents that are accessible to client computers through a remote network such as the Internet. The cloud computing service also stores a document editing application that executes within a web browser on the client computer to display the document to users. Alternatively the document editing application may be a stand alone application that executes on the client computer without the need for a web browser. The document stored may be a word processing document spreadsheet presentation or any other electronic file. The cloud computing service then provides one or more collaborators with access to the document shown at . The collaborators may each insert suggested edits into the document. Suggested edits are edits that are not incorporated into the document until a user accepts them. However the user interface may show a preview of how the suggested edit would look like if accepted. An example of a suggested edit generated by a collaborator is shown in and the display of the suggested edit in the document editing application may include the suggested edit the person who suggested the edit and accept and reject options. The document has an access control list that controls the level of access each collaborator has to the document. For example if a collaborator has creator editor or commenter access then the collaborator may insert suggested edits in the document. Collaborators with only viewing access may not insert or view suggested edits.

The cloud computing service also provides a plurality of suggestion robots shown at for the one or more collaborators to activate within the document. Each suggestion robot generates suggested edits for a document according to an associated editing objective. Examples of editing objectives include spelling and grammar in various languages improvement of wording consistency within the document creating shortcuts in a document adding web links to a document formatting visual style color schemes inserting images associated with words fact checking bibliography checking inviting additional human reviewers based on mention of their names suggestions for particular styles of prose or poetry and humorous suggestions. The suggestion robots may be stored on the cloud computing service or stored on a third party server. The suggestion robots may be programmed in Javascript or other browser compatible languages or may be programmed as modules in Java C and any other languages executable on a server. The suggestion robots may also be written in the native code of certain mobile devices. The suggestion robot may be designed with hard coded heuristics to generate suggested edits or may use machine learning to train the robot on a corpus of documents. The suggestion robots may consult external sources to generate the suggested edits and may also keep track of the user s acceptance and rejection patterns. The user interface of the document editing application displays options for the collaborators to activate any of the suggestion robots. An example of a user interface for displaying searching and browsing the suggestion robots to collaborators is shown in . A collaborator may activate a first suggestion robot in the plurality of suggestion robots by selecting it on the user interface. Alternatively a collaborator may activate a suggestion robot through other means such as providing an e mail address for the collaborator to send the document. When a collaborator activates the first suggestion robot the cloud computing service receives a request to activate the first suggestion robot shown at . The collaborator may activate the first suggestion robot to provide suggested edits for all or a portion of a document e.g. only a portion of the document highlighted by the collaborator or for more than one document at the same time. The collaborator selection is communicated from the client computer to the cloud computing service.

After the cloud computing service receives the request to activate the first suggestion robot the cloud computing service activates the first suggestion robot to present to the collaborator a plurality of suggested edits of the document according to the editing objective of the first suggestion robot shown at . For example if the editing objective of the first suggestion robot is to convert all verbs into past tense then the suggested edits may be instances where the suggestion robot has found present and future verb tenses and suggests the past tense for those verbs. A suggested edit may have multiple alternatives that the collaborator selects from. The first suggestion robot may be executed on the cloud computing service and the plurality of suggested edits are sent to the client computer for display or a copy of the suggestion robot may be sent to the client computer for execution. If the first suggestion robot is stored on a third party server it may be executed on the third party server and the plurality of suggested edits are sent to the client computer for display. The plurality of suggested edits generated by the suggestion robot is displayed along with any suggested edits by collaborators. The display of the plurality of suggested edits may have the same appearance as the display of suggested edits by the other collaborators such as shown in . From the collaborator s perspective suggested edits made by a suggestion robot are no different than suggested edits made by human collaborators. In addition the collaborator may accept or reject each of the plurality of suggested edits of the suggestion robot and the other collaborators. A suggested edit is only incorporated into the document once it has been accepted. However the user interface may show a preview of how the suggested edit would look like if accepted. In this manner method describes a way to provide automated suggestions in a document stored on a cloud computing service.

While method describes a method for a cloud computing service to provide automated suggestions in a document method in describes a method for a client computer to request automated suggestions for a document stored on a cloud computing service. Method includes displaying to a first collaborator on a client computer a document stored on a cloud computing service where one or more collaborators may insert suggested edits into the document. The method further includes displaying to the first collaborator a plurality of suggestion robots where each of the plurality of suggestion robots has an associated editing objective and receiving a request from the first collaborator to activate a first suggestion robot within the plurality of suggestion robots. The method further includes displaying a plurality of suggested edits of the document generated by the first suggestion robot according to the editing objective of the first suggestion robot where the plurality of suggested edits by the first suggestion robot are displayed with any suggested edits by the one or more collaborators and the first collaborator may accept or reject each of the plurality of suggested edits of the first suggestion robot and the one or more collaborators. Method may be performed on any client computer such as client computers through in client computer in and client computer in .

Method begins when a client computer displays to a collaborator a document stored on a cloud computing service shown at . The client computer communicates with the cloud computing service through a remote network such as the Internet. The cloud computing service stores a document editing application that executes within a web browser on the client computer to display the document to the collaborator. Alternatively the document editing application may be a stand alone application that executes on the client computer without the need for a web browser. The document stored may be a word processing document spreadsheet presentation or any other electronic file. One or more other collaborators may access the document and insert suggested edits into the document. Suggested edits are edits that are not incorporated into the document until a user accepts them. However the user interface may show a preview of how the suggested edit would look like if accepted. An example of a suggested edit generated by a collaborator is shown in and the display of the suggested edit in the document editing application may include the suggested edit the person who suggested the edit and accept and reject options. The document has an access control list that controls the level of access each collaborator has to the document. For example if a collaborator has creator editor or commenter access then the collaborator may insert suggested edits in the document. Collaborators with only viewing access may not insert or view suggested edits.

A plurality of suggestion robots are displayed to the collaborator on the client computer shown at . Each suggestion robot generates suggested edits for a document according to an associated editing objective. Examples of editing objectives include spelling and grammar in various languages improvement of wording consistency within the document creating shortcuts in a document adding web links to a document formatting visual style color schemes inserting images associated with words fact checking bibliography checking inviting additional human reviewers based on mention of their names suggestions for particular styles of prose or poetry and humorous suggestions. The suggestion robots may be stored on the cloud computing service or stored on a third party server. The suggestion robots may be programmed in Javascript or other browser compatible languages or may be programmed as modules in Java C and any other languages executable on a server. The suggestion robots may also be written in the native code of certain mobile devices. The suggestion robot may be designed with hard coded heuristics to generate suggested edits or may use machine learning to train the robot on a corpus of documents. The suggestion robots may consult external sources to generate the suggested edits and may also keep track of the user s acceptance and rejection patterns. The user interface of the document editing application displays options for the collaborators to activate any of the suggestion robots. An example of a user interface for displaying searching and browsing the suggestion robots to collaborators is shown in .

A collaborator may request the activation of a first suggestion robot in the plurality of suggestion robots by selecting it on the user interface. Alternatively a collaborator may activate a suggestion robot through other means such as sending the document to an e mail address associated with the suggestion robot. The client computer receives the request from collaborator to activate the first suggestion robot shown at . The client computer sends this request to the cloud computing service which activates the suggestion robot in the document. For example if the editing objective of the first suggestion robot is to convert all verbs into present tense then the suggested edits may be instances where the suggestion robot has found past and future verb tenses and suggests the present tense for those verbs. The first suggestion robot may be executed on the cloud computing service and the plurality of suggested edits are sent to the client computer for display or a copy of the suggestion robot may be sent to the client computer for execution. If the first suggestion robot is stored on a third party server it may be executed on the third party server and the plurality of suggested edits are sent to the client computer for display.

After the client computer receives a plurality of suggested edits from the first suggestion robot the client computer displays the suggested edits of the collaborator shown at . The plurality of suggested edits generated by the suggestion robot is displayed along with any suggested edits by collaborators. The display of the plurality of suggested edits may have the same appearance as the display of suggested edits by the other collaborators such as shown in . From the collaborator s perspective suggested edits made by a suggestion robot are no different than suggested edits made by human collaborators. A suggested edit may have multiple alternatives that the collaborator selects from. In addition the collaborator may accept or reject each of the plurality of suggested edits of the suggestion robot and the other collaborators. A suggested edit is only incorporated into the document once it has been accepted. However the user interface may show a preview of how the suggested edit would look like if accepted. In this manner method describes a way to request automated suggestions in a document stored on a cloud computing service.

It will be apparent that aspects of the systems and methods described herein may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the drawings. The actual software code or specialized control hardware used to implement aspects consistent with the principles of the systems and method described herein is not limiting. Thus the operation and behavior of the aspects of the systems and methods were described without reference to the specific software code it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the aspects based on the description herein.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous.

