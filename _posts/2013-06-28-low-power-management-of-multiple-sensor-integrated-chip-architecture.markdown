---

title: Low power management of multiple sensor integrated chip architecture
abstract: A method, device, system, or article of manufacture is provided for low-power management of multiple sensor chip architecture. In one embodiment, a method comprises, at a computing device that includes a first processor, a second processor and a third processor, receiving, by the first processor operating at a first clock rate, first sensor data from a first sensor operating at a first data rate; determining, by the first processor, a movement of the computing device using the first sensor data; in response to determining the movement of the computing device, performing, by the first processor, a first motion state algorithm to determine whether a modality of the computing device is a first motion state; and, in response to determining that the modality of the computing device is not the first motion state, changing, by the first processor, at least one of the first processor to operate at a second clock rate sufficient to perform a second motion state algorithm and changing the first sensor to operate at a second data rate sufficient to perform the second motion state algorithm, wherein the second motion state algorithm is used to determine whether the modality of the computing device is a second motion state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09354722&OS=09354722&RS=09354722
owner: GOOGLE TECHNOLOGY HOLDINGS LLC
number: 09354722
owner_city: Mountain View
owner_country: US
publication_date: 20130628
---
This application claims priority to U.S. Provisional Patent Application No. 61 728 921 filed Nov. 21 2012 entitled LOW POWER MANAGEMENT OF MULTIPLE SENSOR CHIP ARCHITECTURE U.S. Provisional Patent Application No. 61 776 868 filed Mar. 12 2013 entitled LOW POWER MANAGEMENT OF MULTIPLE SENSOR CHIP ARCHITECTURE and U.S. Provisional Patent Application No. 61 827 458 filed May 24 2103 entitled LOW POWER MANAGEMENT OF MULTIPLE SENSOR CHIP ARCHITECTURE all of which the contents are hereby incorporated by reference as if fully set forth below.

The embodiments described herein relate to multiple and varied communication sensors within an integrated chip architecture and more particularly to managing sensor data from the multiple and varied communication sensors.

In today s sophisticated computing devices such as mobile computing devices smartphones tablet computers and wearable computing devices many internal sensors are employed within the computing device. Some of these sensors aid determination of contextual conditions for the computing device. Other sensors aid determination of geographical location for the computing device. In this regard some sensors are better suited for indoor use than outdoor use and vice versa.

Users of these sophisticated computing devices have come to rely heavily on the accuracy robustness and availability of these sensors within their computing devices whether they actively know it or not. There exists a wide range of different sensors and sensory types for example global navigation satellite system GNSS sensors such as global positioning satellite GPS sensors global navigation satellite system GLONASS sensors and the like and short range wireless sensors such as WiFi sensors near field communication NFC sensors Bluetooth sensors radio frequency identification RFID sensors and the like. In addition there can be sensors involving motion such as accelerometers gyroscopes magnetometers as well as other micro electro mechanical system devices MEMS . Imaging sensors microphone sensors and proximity sensors may also be employed within a sophisticated computing device. Further a sensor may include a modem a transceiver a processor and the like.

Furthermore computing devices are typically battery operated and as such power consumption is an important feature in marketing these devices. Many computing devices are capable of entering a low power state to conserve battery power. During the low power state most of the resources of the computing device are powered down resulting in limited capability of the device. Accordingly there is a need for improved techniques to allow for low power management of multiple sensors in an integrated chip architecture for a computing device while for instance the computing device is in a low power state. Furthermore other desirable features and characteristics of the present disclosure will become apparent from the subsequent detailed description and claims taken in conjunction with the accompanying figures and the foregoing technical field and background.

Described herein is a method for managing processor analysis of multiple sensors in a computing device that includes monitoring a first sensor signal that may be coupled to a sensor hub processor and thereafter comparing the first monitored sensor signal with a predetermined signature for establishing a confidence relationship associated with received sensor signaling from multiple sensors. Alternatively the first monitored sensor signal may simply be compared with the predetermined signature.

In addition the efficacy of operation for the multiple sensors may be determined and a second sensor signal that is coupled to a low power core may be monitored. The second monitored sensor signal may be compared with another predetermined signature for establishing a confidence relationship associated with received sensor signaling from multiple sensors. The method confirms that one or more sensors has met a predetermined confidence state.

In one embodiment a short range wireless subsystem may be coupled to a low power core. That is one or more application programming interfaces APIs may exist between the WiFi subsystem and the low power core to monitor and operate on WiFi scan results such as received signal strength indicator RSSI service set identifier SSID basic service set identifier BSSID a trigger that an SSID matches a stored SSID or a trigger that a BSSID matches a stored BSSID. This methodology can provide a low power geofence for points of interest to a mobile computing device user. Additionally the APIs may also comprise means for determining modem connectivity status.

In another embodiment also involving a short range wireless subsystem coupled to a low power core a location manager and location determination engine may reside within the low power core. Such an architecture can be employed to have the location determination engine produce a geolocation based on latitude longitude elevation floor and confidence for example using WiFi AP database including metadata.

Another embodiment couples a satellite positioning sensor such as a GNSS subsystem to the low power core. The GNSS subsystem may include a GPS subsystem or a GLONASS subsystem. Several application programming interfaces APIs may be configured to monitor satellite passing patterns to determine latitude longitude velocity positional accuracy versus uncertainty and scan rate. The scan rates can be either receiver scan rate or a reporting scan rate.

For yet another embodiment an application processor is directly coupled to the low power core to enable programmability of a short range wireless subsystem. The programmability may determine starting and stopping of a short range wireless scan such as a WiFi scan and the rate of the short range wireless scan.

Furthermore this disclosure describes example embodiments of determining a modality of a user s activities while in possession of a computing device. A modality may also be referred to as a context state. The modality of the user s activities may be determined by collecting sensor data on the computing device and inferring activities associated with the user of the computing device by extracting features from the sensor data to determine a modality of the user s activities. The inferred activities may include motion states location states environment states communication states other states or any combination thereof. While a modality may be a motion state an environment state a communication state or another state a modality may also be determined using any combination of these states. Motion states may be associated with a movement or lack thereof of a user in possession of the computing device and may include being stationary walking jogging running driving a vehicle riding on a vehicle such as a car bus or plane riding an escalator or elevator the like or any combination thereof. Motion states may use sensor data from an accelerometer sensor a gyroscope or the like. Location states may be associated with the location of a user in possession of the computing device. Location states may use sensor data from a GNSS sensor such as a GPS sensor or a GLONASS sensor a short range wireless sensor such as a WiFi sensor or the like. Environment states may be associated with the environment surrounding a user in possession of a computing device. Environment states may use sensor data from a microphone or the like. Communication states may be associated with man made sounds such as speech made in the proximity of a user in possession of a computing device. Further this disclosure describes example embodiments of partitioning functions associated with determining a modality of a user s activities amongst various processors of the computing device with the effect of reducing power consumption by the computing device.

According to one example implementation the terms computing device or mobile computing device as used herein may be a central processing unit CPU controller or processor or may be conceptualized as a CPU controller or processor for example the first processor of . In yet other instances a computing device may be a CPU controller or processor combined to one or more additional hardware components. In certain example implementations the computing device operating as a CPU controller or processor may be operatively coupled with one or more peripheral devices such as a display navigation system stereo entertainment center WiFi access point AP or the like. In another example implementation the term computing device as used herein may refer to a mobile computing device such as a smartphone mobile station MS terminal cellular phone cellular handset personal digital assistant PDA smartphone wireless phone organizer handheld computer desktop computer laptop computer tablet computer set top box television appliance game device medical device display device or some other like terminology. In an example embodiment the computing device may output content to its local display or speaker s . In another example implementation the computing device may output content to an external display device e.g. over short range wireless such as WiFi such as a TV or an external computing system.

In the third processor may be operationally coupled to the second processor the first modem processor and the second modem processor . In one example the first modem processor may be configured to receive or transmit data signals associated with a GNSS system such as GPS or GLONASS. In one example the second modem processor may be configured to receive or transmit data signals corresponding to short range wireless signals such as WiFi signals Bluetooth signals FM radio signals another communication protocol or any combination thereof. Other modem processors may be contemplated as being operationally coupled to the third processor or the second processor such as those modem processors capable of sending or receiving data signals for a radio frequency identification RFID communication protocol a near field communication NFC protocol a local area network LAN protocol a wide area network WAN protocol a computer network protocol a wireless network protocol a telecommunications network protocol another like communication protocol signals or any combination thereof. The second processor may be capable of receiving or transmitting sensory data from the peripheral subsystem . The peripheral subsystem may be configured to include an accelerometer a gyroscope a magnetometer a barometer and another sensor such as an ambient light sensor ALS a proximity sensor or an odor sensor or any combination thereof.

In the third processor may be operationally coupled to the first processor the second processor the first modem processor and the second modem processor . In one example the first modem processor may be configured to receive or transmit data signals associated with a GNSS system such as GPS or GLONASS. In one example the second modem processor may be configured to receive or transmit data signals corresponding to short range wireless signals such as WiFi signals Bluetooth signals FM radio signals another communication protocol signals or any combination thereof. Other modem processors may be contemplated as being operationally coupled to the third processor or the second processor such as those modem processors capable of sending or receiving data signals for a radio frequency identification RFID communication protocol a near field communication NFC protocol a local area network LAN protocol a wide area network WAN protocol a computer network protocol a wireless network protocol a telecommunications network protocol another like communication protocol or any combination thereof. The second processor may be coupled to the third processor the first modem processor the second modem processor and the first processor . The peripheral subsystem may be configured to include an accelerometer a gyroscope a magnetometer a barometer another sensor such as an ambient light sensor ALS a proximity sensor or an odor sensor or any combination thereof. The first processor may also be configured to receive input data from a digital signal processor DSP operationally coupled to a microphone for example.

In the first processor may be operationally coupled to the third processor the peripheral subsystem and the second processor . Further the first processor may be operationally coupled to an accelerometer a gyroscope a magnetometer a barometer or another sensor . The architecture may allow for the first processor to receive motion data location data or modality data from the peripheral subsystem while the second processor and the third processor are in a low power state such as a standby mode or a sleep mode. Further the architecture may allow motion data location data or modality data to be received by the second processor while the third processor is in a low power state such as a standby mode or a sleep mode. In one example the first processor may receive motion data from the peripheral subsystem and may determine whether the computing device is moving or stationary. In response to detecting motion the first processor may activate the second processor . In one example a processor may activate another processor or electronic component by providing it with power. In another example a processor may activate another processor or electronic component by initializing or interrupting the other processor or electronic component. In another example a processor may activate another processor or electronic component by changing an operating state of the other processor or electronic component. The second processor may receive location data from the first modem processor such as GNSS location data or from the second modem processor such as short range wireless location data such as WiFi location data to determine a modality of the computing device. In response to determining a particular modality the first processor or the second processor may activate the third processor .

In another embodiment the third processor may only be operatively coupled to the first modem processor or the second modem processor using the second processor . This configuration may allow for example phone calls or data transmission over the Internet without waking the third processor .

In another embodiment any sensors having an active mode current of less than one milliamp 1 mA measured during the determination of one sample are operationally coupled to the first processor . Further any sensors having an active mode current of at least one milliamp 1 mA measured during the determination of one sample are operationally coupled to the second processor .

In another embodiment any sensors having an active mode current of less than ten milliamps 10 mA measured during the determination of one sample are operationally coupled to the first processor . Further any sensors having an active mode current of at least ten milliamps 10 mA measured during the determination of one sample are operationally coupled to the second processor .

In the first processor may be configured to include interface ports to an interrupt controller other elements or any combination thereof. The interface ports to of the first processor may be a serial port a multi master serial single ended computer bus port such as an IC port a serial peripheral interface SPI port a parallel port a general purpose input and output GPIO port a game port a universal serial bus USB a micro USB port a high definition multimedia interface HDMI port a video port an audio port a short range wireless port such as a Bluetooth port an NFC port a WiFi port or the like a GNSS port another like interface port or any combination thereof. The interrupt controller may be used to provide a software interface between the first processor and the interrupt hardware. The interface port may be used to operatively couple the first processor to an accelerometer sensor a gyroscope sensor a magnetometer sensor a barometer sensor an ambient light sensor a proximity sensor another sensor such as an ambient light sensor ALS a proximity sensor or an odor sensor or any combination thereof.

In the current embodiment the interface port may be used to operatively couple the first processor to a display using a display interface . The display interface may be configured as a communication interface and may provide functions for rendering video graphics images text other information or any combination thereof on the display . In one example a communication interface may include a serial port a parallel port a general purpose input and output GPIO port a game port a universal serial bus USB a micro USB port a high definition multimedia interface HDMI port a video port an audio port a Bluetooth port a near field communication NFC port another like communication interface or any combination thereof. In one example the display interface may be operatively coupled to a local display such as a touch screen display associated with the computing device. In another example the display interface may be configured to provide video graphics images text other information or any combination thereof for an external remote display that is not necessarily connected to the computing device. In one example a desktop monitor may be utilized for mirroring or extending graphical information that may be presented on the computing device. In another example the display interface may wirelessly communicate for example using the first modem processor the second modem processor or another modem processor to an external remote display.

In the interface port may be used to operatively couple the first processor to a touch screen using a touch screen interface . The display may be combined with the touch screen to form a touch sensitive display. The interface port may be used to operatively couple the first processor to the second processor . The interface port may be used to operatively couple the first processor to the third processor . The interface port may be used to operatively couple the first processor to a digital signal processor DSP . The DSP may be operatively coupled to a microphone or a speaker. The interface port may be used to operatively couple the first processor to a haptic integrated circuit IC . The power management IC may be used to provide various voltages to elements of the system. Also the power management IC may provide a clock such as thirty two kilohertz 32 KHz to the first processor .

In the current embodiment various components of the architecture may be combined into a single integrated circuit architecture comprised of silicon or some other suitable material for employing high rate chip technology. In one example a single chip architecture may be configured to include the second processor the third processor a first modem processor a second modem processor memory interface ports and an interrupt controller other element or any combination thereof. The third processor may be operatively coupled to the first modem processor the second modem processor and the memory . Further the third processor may be operatively coupled to the second processor using the memory . Also the third processor may be operatively coupled to the first processor using the interface port . The second processor may be operatively coupled to the first modem processor and the second modem processor using the memory . Further the second processor may be operatively coupled to the first processor using the interface port . The interrupt controller may be used to provide a software interface between the second processor and the interrupt hardware. Further the interrupt controller may be used to provide a software interface between the third processor and the interrupt hardware.

In the first modem processor may be configured to receive or transmit data signals associated with a GNSS subsystem such as GPS or GLONASS satellites or with another communication protocol. The second modem processor may be configured to receive or transmit data signals corresponding to short range wireless signals such as WiFi signals Bluetooth signals FM radio signals another communication protocol signals or any combination thereof. Other modem processors may be contemplated as being operationally coupled to the third processor or the second processor . The other modem processors may include modem processors capable of sending or receiving data signals for an RFID an NFC a local area network LAN a wide area network WAN a computer network a wireless network a telecommunications network another like network or any combination thereof. The communication functions of these other modem processors may include data communication voice communication multimedia communication short range communications near field communication another like communication function or any combination thereof. For example another modem processor may include cellular communication.

In this embodiment the memory may provide storage or caching of data or computer instructions during the execution of software programs such as the operating system application programs device drivers and firmware. The memory may be configured to include memory such as random access memory RAM read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM magnetic disks optical disks floppy disks hard disks removable cartridges flash drives. In one example the memory may be configured to include an operating system an application program such as a web browser application a widget or gadget engine or another application a data file and RAM. The memory may also be configured to include a number of physical drive units such as a redundant array of independent disks RAID a floppy disk drive a flash memory a USB flash drive an external hard disk drive thumb drive pen drive key drive a high density digital versatile disc HD DVD optical disc drive an internal hard disk drive a Blu Ray optical disc drive a holographic digital data storage HDDS optical disc drive an external mini dual in line memory module DIMM synchronous dynamic random access memory SDRAM an external micro DIMM SDRAM a smartcard memory such as a subscriber identity module or a removable user identity SIM RUIM module other memory or any combination thereof. The memory may allow the second processor or the third processor to access computer executable instructions application programs or the like stored on transitory or non transitory memory media to off load data or to upload data. An article of manufacture such as one utilizing a communication system may be tangibly embodied in a storage medium which may comprise a computer readable medium.

In the offline processor may be configured to include a preprocessing module a feature extraction module and a machine learning module . The offline processor may perform offline training by processing the sensory data to develop learned parameters used as predetermined signatures for a confidence level for use by the first computing device . In one example the second computing device may be the same as the first computing device . The preprocessing module may be used to extract sensor data specific to a particular activity. The feature extraction module may be used to extract statistical and non statistical information from the sensor data . The machine learning module may be used to determine learned parameters based on the extracted information. The learned parameters may be directly used in a modality determination engine of the computing device . The confidence of sensory data may be developed for greater accuracy based on the machine learning during the training stage. Two or more threshold levels of confidence may be used in the modality determination engine of the computing device . The modality determination engine may be configured to include a preprocessing module a feature extraction module an apply learned parameters module and a determined modality module . In one example a first level of confidence may include the use of the sensory data associated with an accelerometer signal. In another example a second level of confidence may include the use of the sensory data associated with a short range wireless signal such as a WiFi signal or a GNSS signal such as a GPS signal when for instance an application processor is in an idle state. In another example a first second or third level of confidence may include the use of sensory data associated with a microphone an ambient light sensor ALS a proximity sensor another sensor or any combination thereof.

In at block the method may determine whether a second sensor is needed to provide a second level of confidence. In one example the driving state may require the second sensor to provide a second level of confidence. The second sensor may be at least one of a GNSS sensor such as a GPS sensor and a short range wireless sensor such as a WiFi sensor. At block if the second sensor is needed to provide the second level of confidence then the method may determine the motion state using the machine learning based content algorithm and second sensor data from the second sensor. The first processor may send to the second processor a request to provide the second level of confidence. Further the first processor may send to the second processor the first sensor data from the first sensor or information associated with the first level of confidence. Also the first processor may need to activate the second processor .

In the current embodiment at block the method may determine whether the current iteration is the first time to determine the modality. At block the method may determine whether the modality is different from the previous modality. If the modality is different at block the method may send the modality of the computing device to the third processor using for instance a subscriber manager element of the first processor . Otherwise if the modality is the same the method may return to block . At block the method may determine whether there are any other requests for the modality of the computing device by an application or function of the second processor or the third processor. At block the method may unregister the request for the modality of the computing device made by the specific application or feature of the second processor or the third processor.

In at block the method may start or resume the modality detection performed by the first processor . In response to the request to start or resume the modality detection at block the method may start or resume the modality detection performed by the first processor . At block the method may determine a motion state using a machine learning based content algorithm and first sensor data from a first sensor. The first sensor may be at least one of an accelerometer a magnetometer a gyroscope a barometer and the like. In one example the first sensor is an accelerometer. A person of ordinary skill in the art will recognize the structure functions and technology associated with machine learning based content algorithms. The motion state may be for instance still walking running driving or the like.

In at block the method may determine whether a second sensor is needed to provide a second level of confidence. In one example the driving state may require the second sensor to provide a second level of confidence. The second sensor may be at least one of a GNSS sensor such as a GPS sensor and a short range wireless sensor such as a WiFi sensor. At block if the second sensor is needed to provide the second level of confidence then the method may determine the motion state using the machine learning based content algorithm and second sensor data from the second sensor. The first processor may send to the second processor a request to provide the second level of confidence. Further the first processor may send to the second processor the first sensor data from the first sensor or information associated with the first level of confidence. Also the first processor may need to activate the second processor .

In the current embodiment at block the method may determine whether the current iteration is the first time to determine the modality. At block the method may determine whether the modality is different from the previous modality. If the content state is different at block the method may send the modality of the computing device to for instance a subscriber manager element of the second processor . Otherwise if the content state is the same the method may return to block . At block the method may receive the modality of the computing device from the first processor . At block the method may determine whether there are any other requests for the modality of the computing device by an application or function of the third processor. At block the method may unregister the request for the modality of the computing device made by a specific application or feature of the third processor.

In at block the method may initialize a second sensor such as a short range wireless sensor. At block the method may initialize a modality sensor algorithm by setting for instance a modality to a first state such as a null state. At block the method may execute an interaction engine handler. The interaction engine handler may be used to execute algorithms such as the modality sensor algorithm to determine the modality of the computing device or the motion detection algorithm to determine whether the computing device is moving. At block the method may scan for a GNSS signal or a short range wireless signal. The GNSS signal and the short range wireless signal may also be individually or collectively referred to as a sensor signal or sensor data. If a GNSS signal is detected using the first sensor at block method may scan for a GNSS location. Otherwise if a short range wireless signal is detected using the second sensor at block method may scan for a short range wireless location. A GNSS location and a short range wireless location may be individually or collectively referred to as a location. If neither a GNSS signal nor a short range wireless signal is detected then the method may continue to block . At block the method may determine whether a GNSS location is obtained. At block the method may determine whether a short range wireless location is obtained. At block the method may determine whether the modality is a first state such as a stationary state or a state associated with the computing device not moving.

In the current embodiment if the modality is not the first state at block the method may determine whether the modality is a second state such as a driving state or a state associated with the computing device moving at speeds associated with a car a bus a train a plane or the like. If the modality corresponds to the second state at block the method may adjust the location scanning duty cycle based on the velocity of the computing device. The velocity of the computing device may be determined using the sensor data from the GNSS sensor or the WiFi sensor. A person of ordinary skill in the art will recognize various techniques for determining a velocity from sensor data of a GNSS sensor or a short range wireless sensor such as a WiFi sensor. In some instances the faster the speed the lower the duty cycle for scanning. At block the method may determine whether the modality corresponds to a third state such as a walking state or a state associated with the computing device moving at speeds associated with walking. If the modality corresponds to the third state at block the method may adjust the location scanning duty cycle based on a velocity of the computing device. Further a third sensor such as an accelerometer or a gyroscope may be used to determine a heading or direction that the computing device is moving or to perform functions of a pedometer.

In at block the method may determine whether the modality corresponds to a fourth state such as an indoor state or a state associated with the computing device being indoors. In a typical indoor environment a GNSS signal may be difficult to detect whereas an in building short range wireless signal such as a WiFi signal may be easier to detect. If the modality is the fourth state at block the method may decrease a short range wireless scanning duty cycle. For example in an in building WiFi network a lower duty cycle may still allow for the detection of multiple closely spaced access points APs while a user possessing a computing device walks around a building. If the modality is not the fourth state at block the method may determine whether a location scanning timer has expired. At block if the scanning time has not expired then the method may decrease the short range wireless scanning duty cycle or the GNSS scanning duty cycle if a location is not found within a certain time. Otherwise if the scanning time has expired then the method may return to the interaction engine handler at block .

In another embodiment a multiple sensor integrated chip architecture for a computing device may be configured to include additional components or processors for audio multimedia or power management for example.

In another embodiment a multiple sensor integrated chip architecture for a computing device may include a multimode wireless communication integrated circuit or chipset.

In another embodiment a threshold for waking up an application processor may use a receiver signal strength indicator RSSI or a desired confidence level. Other thresholds such as confirming the contextual aware state or providing an acknowledgement of a point of interest for example may be based on a motion sensor an audio level or any other environmental sensory data. Power management may also be performed based on received threshold levels.

In at block the method may determine whether an object is in the proximity of the computing device. In one example an object is in the proximity of the computing device if it is within a distance from the computing device of less than fifty millimeters 50 mm or within a distance sufficient to determine whether the computing device is being stored in a container such as a purse or a wallet. In another example an object is in the proximity of the computing device if it is within a distance from the computing device of less than thirty millimeters 30 mm . If an object is in the proximity of the computing device at block the method may determine whether the ALS data corresponds to being less than a first luminance threshold such as twenty 20 lux or less than a luminance associated with the computing device being in a dimly lighted room. Otherwise if an object is not in the proximity of the computing device at block the method may report that the computing device is not stowed. If the ALS data corresponds to being at least the first luminance threshold at block the method may determine whether the current stowed state is stowed. Otherwise if the ALS data corresponds to being less than the first luminance threshold at block the method may report that the computing device is stowed. If the current state is stowed at block the method may determine whether the ALS data is greater than a second luminance threshold such as fifty 50 lux or greater than a luminance associated with the computing device being in a shadow of a lighted room. If the ALS data is greater than the second luminance threshold at block the method may report that the computing device is not stowed. Otherwise if the ALS data is less than or equal to the second luminance threshold the method may return to block .

In at block the method may determine whether each of an x axis a y axis and a z axis of the computing device is equal to zero which may be associated with insufficient accelerometer data to perform the face up or face down algorithm or the first iteration through the algorithm. If each of the x axis the y axis and the z axis of the computing device is equal to zero at block the method may apply a low pass filter or perform an averaging function on the accelerometer data. Otherwise if each of the x axis the y axis or the z axis of the computing device is not equal to zero the method may return to block . At block the method may determine a magnitude of the filtered accelerometer data. At block the method may determine whether the magnitude of the filtered accelerometer data is less than a predetermined acceleration such as one meter per second squared 1 m s . If the filtered accelerometer data is at least the predetermined acceleration threshold at block the method may determine a tilt angle of the computing device. A person of ordinary skill in the art will recognize various algorithms for determining a tilt angle of an object.

In the current embodiment at block the method may determine whether the tilt angle along the z axis of the computing device is in the range of a first angle threshold such as negative ninety degrees 90 and a second angle threshold such as negative seventy five degrees 75 or less than or equal to a third angle threshold such as negative fifteen degrees 15 relative to a surface perpendicular to a direction of gravity. In one example the first angle threshold may be in the range from negative seventy degrees 70 to negative eighty nine degrees 89 . In another example the third angle threshold may be in the range of negative twenty degrees 20 to negative one degree 1 .

In if the tilt angle of the computing device is in the range of the first angle threshold and the second angle threshold or is less than or equal to the third angle threshold at block the method may report that the computing device is face down. In one example the first processor may report that the computing device is face down to the second processor or the third processor. In another example the first processor may activate the second processor or a third processor prior to or contemporaneous with reporting that the computing device is face down. Otherwise if the tilt angle is outside this range at block the method may determine whether the computing device is between a fourth angle threshold such as seventy five degrees 75 and a fifth angle threshold such as ninety degrees 90 or less than or equal to a sixth angle threshold such as fifteen degrees 15 relative to a surface perpendicular to the direction of gravity. In another example the fourth angle may be in the range from seventy degrees 70 to eighty nine degrees 89 . In another example the sixth angle threshold may be in the range of twenty degrees 20 to negative one degree 1 . If the tilt angle of the computing device is between the third angle and the fourth angle at block the method may report that the computing device is face up. Otherwise if the tilt angle is outside this range at block the method may report that the face up or face down state of the computing device is unknown.

In the method may begin at for instance block where it may determine whether a motion register is set. The motion register may be used to enable or disable a motion detection algorithm which is used to determine whether the computing device is in motion or motionless. If the motion register is set at block the method may initialize an accelerometer sensor. Otherwise if the motion register is not set the method may return to block . Multiple applications or features executed by the second processor or the third processor may request that the first processor provide an interrupt to notify it when motion is detected. Each of the applications or features of the second processor or the third processor may also request a duration of time by which the first processor must interrupt the second processor or the third processor.

In the current embodiment at block the method may determine a minimum duration of time from a set of durations of time requested by applications or features of the second processor or the third processor prior to or contemporaneous with interrupting a processor. At block the method may read an accelerometer sensor to receive accelerometer data. At block the method may determine whether the computing device is moving or stationary using the accelerometer data. If the device is moving at block the method may accumulate an amount of time that the computing device is moving. If the device is stationary at block the method may accumulate a continuous amount of time that the computing device is stationary.

In at block the method may determine whether the accumulated amount of time that the computing device is stationary is at least a minimum stationary time for determining whether the computing device is stationary. In one example the minimum stationary time may be five 5 seconds or an amount of time needed to determine whether an object is stationary. In another example the minimum stationary time may be in the range of one 1 second to ten 10 seconds. If the accumulated amount of time that the computing device is stationary is at least the minimum stationary time at block the method may have the first processor activate the second processor so that the second processor may determine the modality of the computing device using the detection of the computing device as stationary. In one example after the second processor determines the modality of the computing device the second processor may activate the third processor to provide the modality. In another example after the second processor determines the modality of the computing device the second processor may report the modality to the first processor. The first processor may then report the modality to the third processor. The second processor may then enter a low power mode. If the amount of time that the computing device is stationary is less than the minimum stationary time then the method may return to block .

In the current embodiment at block the method may determine whether the accumulated amount of time that the computing device is moving is at least the minimum move time for determining whether the computing device is moving. In one example the minimum move time for determining whether the computing device is moving is ten 10 seconds. In another example the minimum move time may be in the range of one 1 second to ten 10 seconds. If the amount of time that the computing device is moving is at least the minimum move time at block the method may have the first processor activate the second processor so that the second processor may determine the modality of the computing device using the detection of the movement of the computing device. If the accumulated amount of time that the computing device is moving is less than the minimum move time then the method may return to block . At block the method may determine whether the motion register is set. If the motion register is set then the method may return to block . If the motion register is not set then the method may return to block .

In at block the method may determine whether the computing device is stationary or moving. If the computing device is moving at block the method may determine whether a modality determination engine is on. If the modality determination engine is on then the first processor may send a request to the second processor to start the modality determination engine. In one example the first processor may activate the second processor prior to or contemporaneous with requesting the start of the modality determination engine. If the computing device is stationary at block the method may determine whether a modality determination engine is off. If the modality determination engine is on then the first processor may send a request to the second processor to start the modality determination engine. At block the method may receive requests from the first processor to start or stop the modality determination engine controller. Further the modality determination engine controller may start stop or control the modality determination engine.

In the current embodiment at block the method may determine whether the modality determination engine controller is on or off. If the engine is off at block the method may place the second processor into a low power mode or perform another function or task of the second processor . If the engine is on the method may commence the modality determination engine. The method may perform the modality determination engine by performing functions associated with a preprocessing block a feature extraction block an apply learned parameters module and a determine modality block . The preprocessing block may be used to extract sensor data specific to a particular activity. The feature extraction block may be used to extract statistical and non statistical information from the sensor data . The apply learned parameters block may apply learned parameters to the extracted features of the sensor data .

In at block the method may determine the modality. Further the method may provide the determined modality to the modality registration manager as referenced at block . Also the method may return to check whether the modality determination engine is on or off as referenced at block . The confidence of the sensor data may be developed for greater accuracy based on the machine learning during the training stage. One or more levels of confidence may be used in the modality determination engine of the computing device. In one example a first level of confidence may include the use of the sensory data associated with the accelerometer. In another example a second level of confidence may include the use of sensory data associated with a short range wireless signal or a GNSS signal. In another example a first second or third level of confidence may include the use of sensory data associated with a microphone an ambient light sensor ALS a proximity sensor another sensor or any combination thereof.

In this embodiment at a modality registration manager block the method may receive the determined modality. In one example the second processor may activate the first processor prior to or contemporaneous with sending the determined modality to the first processor . At block the method may determine whether the determined modality meets a modality criteria provided by for instance an application or feature of the third processor. The third processor may register the modality criteria with the first processor as referenced at block . If the determined modality meets or exceeds the modality criteria at block the method may send a response to the third processor. In one example the first processor may activate the third processor prior to or contemporaneous with sending the response that the determined modality meets or exceeds the modality criteria.

In at block the method may determine whether the computing device is stationary or moving. If the computing device is moving at block the method may determine a motion state using a machine learning based content algorithm the first sensor data from the first sensor and second sensor data from the second sensor. The second sensor may be for instance a GNSS sensor or a short range wireless sensor. The first processor may need to activate the second processor prior to requesting the second processor to perform the machine learning based content algorithm. If the computing device is stationary at block the method may determine whether the current iteration is the first time for the first processor to determine the modality. At block the method may determine whether the modality is different from the previous modality. At block the method may send the modality of the computing device to the third processor using for instance a subscriber manager element of the first processor . At block the method may determine whether there are any other requests for the modality of the computing device by an application or function of the application processor. At block the method may unregister the request for the modality of the computing device made by the application processor.

In at block the method may determine whether the computing device is stationary or moving. If the computing device is moving at block the method may determine a motion state using a machine learning based content algorithm the first sensor data from the first sensor and second sensor data from the second sensor. The second sensor may be for instance a GNSS sensor or a short range wireless sensor. At block the method may determine whether the current iteration is the first time to determine the modality. At block the method may determine whether the modality is different from the previous modality. At block the method may send the modality of the computing device to for instance a subscriber manager element of the second processor . At block the method may receive the modality of the computing device from the first processor . At block the method may determine whether there are any other requests for the modality of the computing device by an application or function of the application processor. At block the method may unregister the request for the modality of the computing device made by the application processor.

In at block the method may determine whether a second level of confidence is needed. In one example the algorithm may detect whether the computing device is stationary or in motion using the first level of confidence and may detect the modality of the computing device using the second level of confidence. The second level of confidence may be associated with second sensor data from a second sensor. The second sensor may be a sensor associated with a location of the computing device such as a GNSS sensor or a short range wireless sensor a sensor associated with an environment surrounding the computing device such as a microphone sensor or a sensor associated with a communication performed proximate to the computing device such as a microphone sensor. If the second level of confidence is required at block the method may perform the algorithm using the second level of confidence associated with the second sensor data from the second sensor. The first processor may send to the second processor the first sensor data from the first sensor or other information associated with the first level of confidence. Also the first processor may need to activate the second processor .

In the current embodiment at block the method may determine whether the current iteration is the first time to perform the algorithm. At block the method may determine whether a result of the algorithm has changed. If the result is different at block the method may send the result to the third processor using for instance a subscriber manager element of the first processor . Otherwise if the result is the same the method may return to block . At block the method may determine whether there are any other requests to perform the algorithm by an application or function of the second processor or the third processor. At block the method may unregister the request to perform the algorithm made by the specific application or feature of the second processor or the third processor.

In at block the method may determine whether a result of the algorithm requires a second level of confidence associated with second sensor data from a second sensor. The second sensor may be a sensor associated with a location of the computing device such as a GNSS sensor or a short range wireless sensor a sensor associated with an environment surrounding the computing device such as a microphone sensor or a sensor associated with a communication performed proximate to the computing device such as a microphone sensor. If the second level of confidence is required at block the method may perform the algorithm using the second level of confidence associated with the second sensor data from the second sensor. The first processor may send to the second processor the first sensor data from the first sensor or other information associated with the first level of confidence. Also the first processor may need to activate the second processor .

In the current embodiment at block the method may determine whether the current iteration is the first time to perform the algorithm. At block the method may determine whether a result of the algorithm has changed. If the result is different at block the method may send the result to a subscriber manager element of the second processor . Otherwise if the result is the same the method may return to block . At block the method may receive the result of the algorithm from the first processor . At block the method may determine whether there are any other requests to perform the algorithm by an application or function of the third processor. At block the method may unregister the request to perform the algorithm made by a specific application or feature of the third processor.

In the method may begin at for instance block where the first processor may be operating at a first clock rate while waiting for sensor data from a sensor operating at a first data rate. While waiting for the sensor data from the sensor the first processor operating at the first clock rate may operate in a low power state such as a standby mode or a sleep mode. In one example the sensor may be an accelerometer. The sensor data may represent one or more readings of the sensor. At block the method may determine whether the sensor data from the sensor indicates motion of the computing device. In one example the sensor may be used to activate the first processor when the sensor senses motion of the computing device. In another example the sensor data from the sensor may be used by the first processor to determine motion of the computing device.

In the current embodiment at block the method may perform a first motion state algorithm using the sensor data from the sensor. The first motion state algorithm may be used to determine whether the computing device is in a first motion state. In one example the first motion state may be associated with the computing device being stationary. A person of ordinary skill in the art will recognize various algorithms for determining various motion states of an object. If the computing device is in the first motion state then the method may return to block . Otherwise if the computing device is not in the first motion state at block the method may change the first processor to a second clock rate or change the sensor to a second data rate. In one example the second clock rate may be fifty percent 50 greater than the first clock rate or a sufficient clock rate to meet the processing needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the second clock rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first clock rate. In one example the second data rate may be fifty percent 50 greater than the first data rate or a data rate sufficient to meet the data needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the second data rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first data rate.

In at block the method may perform a second motion state algorithm using the sensor data from the sensor. The second motion state algorithm may be used to determine whether the computing device is in a second motion state. In one example the second motion state may be associated with the computing device moving at a walking speed. At block the method may determine whether the computing device is in the second motion state. If the computing device is in the second motion state then the method may return to block . Otherwise if the computing device is not in the second motion state at block the method may change the clock rate of the first processor to a third clock rate or change the data rate of the sensor to a third data rate. In one example the third clock rate may be fifty percent 50 greater than the first or second clock rates or a sufficient clock rate to meet the processing needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the third clock rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first or second clock rates. In one example the third data rate may be fifty percent 50 greater than the first or second data rates or a data rate sufficient to meet the data needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the third data rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first or second data rates.

In the current embodiment at block the method may perform a third motion state algorithm using the sensor data from the sensor. The third motion state algorithm may be used to determine whether the computing device is in a third motion state. In one example the third motion state may be associated with the computing device moving at a running speed. At block the method may determine whether the computing device is in the third motion state. If the computing device is in the third motion state then the method may return to block . Otherwise if the computing device is not in the third motion state at block the method may change the first processor to a fourth clock rate or change the sensor to a fourth data rate. In one example the fourth clock rate may be fifty percent 50 greater than the first second or third clock rates or a sufficient clock rate to meet the processing needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the fourth clock rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first second or third clock rates. In one example the fourth data rate may be fifty percent 50 greater than the first second or third data rates or a data rate sufficient to meet the data needs of an algorithm or function to be performed next by the first processor such as another motion state algorithm. In another example the fourth data rate may be in the range of zero percent 0 to one hundred percent 100 greater than the first second or third data rates.

In at block the method may perform a fourth motion state algorithm using the sensor data from the sensor. The fourth motion state algorithm may be used to determine whether the computing device is in a fourth motion state. In one example the fourth motion state may be associated with the computing device moving at a vehicle speed. At block the method may determine whether the computing device is in the fourth motion state. If the computing device is in the fourth motion state then the method may return to block . Otherwise if the computing device is not in the fourth motion state then the method may return to block .

In the method may begin at for instance block where the first processor may receive from an application or feature of the second or third processor a request to perform an accumulated movement algorithm. At block the method may determine whether the computing device is stationary or in motion. If the computing device is stationary then the method may wait until the computing device is in motion. Otherwise if the computing device is in motion at block the method may determine which type of movement algorithm to use. In one example the type of movement algorithm may be a movement algorithm based on time or a movement algorithm based on distance.

In the current embodiment if the type of movement algorithm is based on time at block the method may accumulate a move time. At block the method may determine whether a move time is at least a move time threshold. The move time threshold may correspond to a certain distance based on an assumed rate. In one example the move time threshold may be set to ten 10 seconds corresponding to the computing device moving thirty meters at an assumed rate of three meters per second 3 m s . In another example the move time threshold may be set to twenty 20 seconds corresponding to the computing device moving one hundred and twenty 120 meters at an assumed rate of three meters per second 6 m s . If the move time is at least the move time threshold at block the method may report the move time or that the move time of the computing device is at least the move time threshold. In one example the first processor may report that the move time of the computing device is at least the move time threshold to the second processor or the third processor. In another example the first processor may activate the second processor or a third processor prior to or contemporaneous with reporting that the move time of the computing device is at least the move time threshold. If the move time is less than the move time threshold at block the method may determine whether a hold off duration has expired. The hold off duration may be used to trigger a response to another processor after the expiration of the hold off duration. In one example the hold off duration may be twenty 20 seconds. If the hold off duration has expired at block the method may report that the hold off duration has expired. Otherwise if the hold off duration has not expired then the method may return to block .

In if the type of movement is based on distance at block the method may determine whether a modality is detected. In one example the modality may include being stationary micro motion walking jogging running driving in vehicle out of vehicle or the like. The modality determination algorithm may be performed in parallel in the first processor or the second processor. If the modality is not detected at block the method may accumulate a first move distance. In one example the first move distance may be determined by accumulating a first predetermined distance. The first predetermined move distance may be a product of a duty cycle of the accumulated movement algorithm and a predetermined movement velocity such as a vehicular velocity. In one example the duty cycle of the movement algorithm may be one Hertz 1 Hz and the predetermined movement velocity may be six meters per second 6 m s . Thus the first predetermined move distance is six meters 6 m . At block the method may determine whether the first move distance is at least a move distance threshold. If the first move distance is at least the move distance threshold at block the method may report the first move distance or that the first move distance is at least the move distance threshold. Otherwise if the first move distance is less than the move distance threshold at block the method may determine whether a hold off duration has expired.

In this embodiment if the modality is detected at block the method may accumulate a second move distance by adding a modality move distance to the first move distance. The modality move distance may be determined using a velocity of the detected modality. Further the modality move distance may be predetermined for each modality. The modality move distance may be a product of a duty cycle of the accumulated movement algorithm and the velocity of the detected modality. In one example a duty cycle of the movement algorithm may be one Hertz 1 Hz the detected modality may be walking and the velocity for walking may be one and one half meters per second 1.5 m s . Thus the modality move distance is one and one half meters 1.5 m . In another example a duty cycle of the movement algorithm may be one Hertz 1 Hz the detected modality may be jogging and the velocity for jogging may be three meters per second 3 m s . Thus the modality move distance is three meters 3 m . In another example a duty cycle of the movement algorithm may be one Hertz 1 Hz the detected modality may be running and the velocity for running may be four meters per second 4 m s . Thus the modality move distance is four meters 4 m . In another example a duty cycle of the movement algorithm may be one Hertz 1 Hz the detected modality may be driving and the velocity for the driving modality may be six meters per second 6 m s . Thus the modality move distance is six meters 6 m .

In at block the method may determine whether the second move distance is at least a move distance threshold. If the second move distance is at least the move distance threshold at block the method may report the second move distance or that the second move distance is at least the move distance threshold. Otherwise if the second move distance is less than the move distance threshold at block the method may determine whether a hold off duration has expired.

In in response to the request the geo fence engine may receive a GNSS position from the GNSS sensor as referenced at block . In response to receiving the GNSS position the geo fence engine may determine a move distance threshold to a geo fence boundary around the GNSS position. Further the geo fence engine may send to the first processor a signal to request to accumulate movement which may also include a move distance threshold such as described in as described by reference number . The geo fence engine may also send to the first processor a hold off duration such as described in . In response to the request to accumulate movement the first processor may perform an accumulated movement algorithm such as described in . After the execution of the accumulated movement algorithm the first processor may send a signal to the geo fence engine reporting the results of the accumulated movement algorithm as described by reference number . In one example in response to the accumulated movement being at least the move distance threshold the first processor may send a signal to the geo fence engine reporting the accumulated movement or that the accumulated movement is at least the move distance threshold. In another example in response to the hold off duration expiring the first processor may send a signal to the geo fence engine reporting that the hold off duration expired. In response to report results of the accumulated movement algorithm the geo fence engine may send a signal to the first processor to remove the request to accumulate movement as described by reference number . In response to the remove the request to accumulate movement the first processor may remove the request to accumulate movement.

In if the computing device is not connected to the static AP at block the method may determine whether a modality is equal to a first predetermined state. In one example the first predetermined state may be in vehicle or a state associated with the computing device moving at a vehicle velocity. It is important to recognize that the modality may be determined independent of the method and may change contemporaneous with the operation of the method . In one example the modality may be determined by for instance a modality determination algorithm performed in the first processor or the second processor. If the computing device is connected to the static AP then the method may return to block . If the modality is equal to the first predetermined state at block the method may determine whether GNSS data has been requested from a GNSS sensor within a first GNSS request time. In one example the first GNSS request time may be such one hundred and twenty 120 seconds. In another example the first GNSS request time may be in the range of thirty 30 seconds to two hundred and forty 240 seconds. Otherwise if the modality is not equal to the first predetermined state then the method may wait for the modality to equal the first state.

In the current embodiment if the GNSS data has been requested from the GNSS sensor at block the method may receive GNSS data from the GNSS sensor. The GNSS data may represent one or more readings of the GNSS sensor. At block the method may determine a first velocity using the GNSS data. In one example the first velocity may be determined from GNSS data associated with three 3 consecutive readings of the GNSS sensor. In another example the first velocity may be determined from GNSS data associated with three 3 readings of the GNSS sensor within a certain period of time such as ten 10 seconds.

In at block the method may determine whether the first velocity is at least a first velocity threshold. In one example the first velocity threshold may be six meters per second 6 m s or faster than a typical person may run. In another example the first velocity threshold may be in the range of five meters per second 5 m s to ten meters per second 10 m s . If the first velocity is at least the first velocity threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is in vehicle. In one example the second processor may report that the modality is in vehicle to an application or a feature of the third processor. In another example the second processor may activate the third processor prior to or contemporaneous with reporting that the modality is in vehicle. In another example the third processor may report that the modality is in vehicle to an application or a feature of the third processor.

In the current embodiment if the first velocity is less than the first velocity threshold at block the method may determine whether the modality is equal to a second predetermined state. In one example the second predetermined state may be a walking state or a state associated with the computing device moving at a walking velocity. In another example the second predetermined state may be a running state or a state associated with the computing device moving at a running velocity. In another example the second predetermined state may be the walking state or the running state. If the modality equals the second predetermined state then the method may return to block . Otherwise if the modality does not equal the second predetermined state at block the method may determine whether the GNSS data indicates that a received GNSS signal from the GNSS sensor is weak. In one example the received GNSS signal may be determined to be weak if the GNSS sensor is not able to acquire three or more satellite vehicles SVs with a carrier to noise ratio C N of greater than twenty decibels 20 dB or equivalent to a moderate signal strength. In another example the received GNSS signal may be determined to be weak if the GNSS sensor is not able to determine a velocity from the received GNSS signal. If the received GNSS signal is weak then the method may return to block . Otherwise if the received GNSS signal is not weak at block the method may deactivate the GNSS sensor for a first delay time and return to block . In one example the first delay time may be one hundred and twenty 120 seconds. In another example the first delay time may be in the range of thirty 30 seconds to two hundred and forty 240 seconds. In another example the first delay time may increase after each iteration starting at for instance thirty 30 seconds.

In at block the method may determine a percentage of time that the modality is equal to the first state over a measurement period such as sixty 60 seconds or one hundred and twenty 120 seconds. In one example the method may determine the percentage of time that the modality is equal to the first state by dividing an accumulated time associated with the computing device being in the first state by a total time of the measurement. In one example the method may reset the accumulated time associated with the computing device being in the first state when a waling state or a running state is detected by a modality determination engine. At block the method may determine whether the percentage of time that the modality is equal to the first state is at least a first modality percentage threshold. In one example the first modality percentage threshold may be about sixty six percent 66 . In another example the first modality percentage threshold may be in the range of about fifty percent 50 to about one hundred percent 100 . If the percentage of time that the modality is equal to the first state is less than the first modality percentage threshold then the method may wait for the percentage of time that the modality is equal to the first state to be at least the first modality percentage threshold. Otherwise if the percentage of time that the modality is equal to the first state is at least the first modality percentage threshold at block the method will wait until the modality is the first predetermined state such as an in vehicle state as reported by a modality determination engine. At block the method may scan for static APs when the computing device is at different locations. Further the method may determine a time duration between successive locations that a scan is performed. The method may obtain AP identification data such as a service set identification SSID a basic service set identification BSSID a received signal strength indication RSSI other AP information or combination of AP information from each scanned static AP at each successive location.

In the current embodiment at block the method may request from a server using a wireless or wired network successive locations of the computing device based on the scanned static APs. As part of the request for the successive locations of the computing device based on the scanned static APs sent to the server the method may provide the SSID BSSID RSSI or other information for each scanned static AP to the server. In one example the server may be associated with a service such as Google Location Service . In response to the request for the successive locations of the computing device based on the scanned static APs at block the method may receive from the server the successive locations of the computing device. At block the method may determine a second velocity using a distance between the successive locations of the computing device and the time duration between successive locations. At block the method may determine whether the second velocity is at least a second velocity threshold. In one example the second velocity threshold may be six meters per second 6 m s or faster than a typical person may run. In another example the second velocity threshold may be in the range of five meters per second 5 m s to ten meters per second 10 m s . If the second velocity is at least the second velocity threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is in vehicle. Otherwise if the second velocity is less than the second velocity threshold then the method may return to block .

In at block the method may determine whether there is any passive GNSS data. In one definition passive GNSS data may be GNSS data derived from a request for GNSS data from other than the in vehicle modality algorithm such as from an application or feature of the second processor or the third processor. If there is passive GNSS data at block the method may determine a third velocity using the passive GNSS data. In one example the third velocity may be determined from the passive GNSS data associated with three 3 consecutive readings of the GNSS sensor. In another example the third velocity may be determined from the passive GNSS data associated with three 3 readings of the GNSS sensor within a certain period of time such as ten 10 seconds. A person of ordinary skill in the art will recognize various algorithms for determining a velocity from GNSS data. If there is no passive GNSS data the method may wait for passive GNSS data. At block the method may determine whether the third velocity is at least a third velocity threshold. In one example the third velocity threshold may be twelve meters per second 12 m s or faster than a typical person may run. In another example the third velocity threshold may be in the range of five meters per second 5 m s to fifteen meters per second 15 m s . If the third velocity is at least the third velocity threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is in vehicle. Otherwise if the third velocity is less than the third velocity threshold then the method may return to block .

In at block the method may determine whether the percentage of time that the modality is equal to the third state over a measurement period such as sixty 60 seconds or one hundred and twenty 120 seconds is at least a second modality percentage threshold. In one example the second modality percentage threshold may be about fifty percent 50 . In another example the second modality percentage threshold may be in the range of about forty percent 40 to about one hundred percent 100 . If the percentage of time that the modality is equal to the third state is at least the second modality percentage threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is out of vehicle. Otherwise if the percentage of time that the modality is equal to the third state is less than the second modality percentage threshold at block the method may determine a fourth state time that the modality of the computing device remains in the fourth state. In one example the fourth state may be associated with the computing device being stationary.

In the current embodiment at block the method may determine whether the fourth state time is at least a fourth state threshold. If the fourth state time is at least the fourth state threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is out of vehicle. Otherwise if the fourth state time is less than the fourth state threshold at block the method may determine a fifth state time that the modality of the computing device remains in the fifth state. In one example the fifth state may be associated with the computing device having micro motion or an unknown state. In one example micro motion may be associated with the computing device having small random movements detected by a sensor. At block the method may determine whether the fifth state time is at least a fifth state threshold. If the fifth state time is at least the fifth state threshold at block the method may report to the requesting application or feature of the second processor or the third processor that the modality of the computing device is out of vehicle. Otherwise if the fifth state time is less than the fifth state threshold the method may return to block .

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may be configured to receive at the first processor first sensor data from a first sensor. The method may determine at the first processor a motion state of the computing device using the first sensor data. In response to determining that the motion state corresponds to a predetermined motion state the method may activate the second processor. Further the method may receive at the second processor second sensor data from a second sensor. The method may determine by the second processor that the motion state corresponds to the predetermined motion state using the second sensor data. In response to determining that the motion state corresponds to the particular motion state using the second sensor data the method may send the motion state to the third processor.

In another embodiment the method may send by the first processor the motion state to the third processor.

In another embodiment the method may send by the second processor the motion state to the third processor.

In another embodiment the method may receive by the first processor from the third processor a request for the motion state.

In another embodiment the method may receive by the second processor from the third processor a request for the motion state.

In another embodiment the method may determine the motion state of the computing device using the first sensor data and a first predetermined signature.

In another embodiment the method may determine the motion state of the computing device using the second sensor data and a second predetermined signature.

In another embodiment the method may determine that the motion state corresponds to the predetermined motion state by using the first sensor data of the first sensor and the second sensor data of the second sensor.

In another embodiment the method may manage by the first processor a current consumption of the second processor using the motion state.

In another embodiment the method may manage by the first processor a current consumption of the third processor using the motion state.

In another embodiment the method may manage by the second processor a current consumption of the first processor using the motion state.

In another embodiment the method may manage by the second processor a current consumption of the third processor using the motion state.

In another embodiment the method may determine by the first processor that the motion state corresponds to the computing device being stationary for at least a minimum stationary time.

In another embodiment the method may determine by the first processor that the motion state corresponds to the computing device being in motion for at least a minimum move time.

In another embodiment the method may designate at the first processor a modality of the computing device using the motion state.

In another embodiment the method may designate at the second processor a modality of the computing device using the motion state.

In another embodiment the first sensor may use less average current consumption than the second sensor.

In another embodiment the method may use a training algorithm and training data to determine the motion state.

In another embodiment a system may be configured to include a first processor operatively coupled to a first sensor. The system may be configured to include a second processor operatively coupled to the first processor and a second sensor. Further the system may be configured to include a third processor operatively coupled to the second processor. The first processor may be configured to receive first sensor data from the first sensor. Further the first processor may determine a motion state of the system using the first sensor data. In response to determining that the motion state corresponds to a predetermined motion state the first processor may activate the second processor. The second processor may be configured to receive second sensor data from the second sensor. Further the second processor may be configured to determine that the motion state corresponds to the predetermined motion state using the second sensor data. In response to determining that the motion state corresponds to the predetermined motion state using the second sensor data the first processor or the second processor may send the motion state to the third processor.

In another embodiment the system may be configured to include a first processor operatively coupled to a third processor. Further the first processor may be configured to activate the third processor.

In another embodiment at a computing device having a first processor a second processor and a third processor a method may receive at the first processor first sensor data from a first sensor. The method may determine at the first processor a motion state of the computing device using the first sensor data. In response to determining that the motion state of the computing device has changed and corresponds to a movement of the computing device activating by the first processor the second processor. The method may determine by the second processor that the motion state corresponds to a predetermined motion state using the first sensor data and a first predetermined signature. In response to determining that the motion state corresponds to the predetermined motion state the method may send the motion state to the third processor.

In another embodiment a computing device having a first processor a second processor a third processor and a first sensor wherein the first processor is operatively coupled to the second processor and the first sensor wherein the second processor is operatively coupled to the third processor wherein the improvement comprises determining by the first processor and the second processor that the computing device is in motion using an average current consumption by the first processor the second processor the third processor and the first sensor of less than eighteen milliamps 18 mA .

In another embodiment a computing device having a first processor a second processor a third processor and a first sensor wherein the first processor is operatively coupled to the second processor and the first sensor wherein the second processor is operatively coupled to the third processor wherein the improvement comprises determining by the first processor and the second processor that the computing device is motionless using an average current consumption by the first processor the second processor the third processor and the first sensor of less than seventy microamps 70 uA .

In another embodiment a computing device having a first processor a second processor a third processor and a first sensor wherein the first processor is operatively coupled to the second processor and the first sensor wherein the second processor is operatively coupled to the third processor wherein the improvement comprises determining by the first processor and the second processor that the computing device is in motion with an average current consumption by the first processor the second processor the third processor and the first sensor of less than eighteen milliamps 18 mA .

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may perform at the first processor an algorithm using a first level of confidence associated with a first sensor. In response to determining that a second level of confidence associated with a second sensor is needed the method may activate the second processor. Further the method may determine by the second processor a result of the algorithm using the second level of confidence associated with the second sensor. In response to determining that the result of the algorithm corresponds to a predetermined result the method may send the result of the algorithm to the third processor.

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may perform by the second processor a first scan at a first scan rate for first location data using a sensor. The method may receive at the second processor from the sensor the first location data. Further the method may determine by the second processor a first location using the first location data. The method may receive by the second processor a modality of the computing device. In response to determining the first location the method may determine by the second processor that the modality corresponds to a predetermined state. In response to determining that the modality corresponds to the predetermined state the method may perform by the second processor a second scan at a second scan rate for second location data using the sensor.

In another embodiment the method may determine by the second processor the velocity of the computing device using the first location data. Further the method may determine by the second processor the second scan rate based on the velocity of the computing device.

In another embodiment the method may decrease by the second processor the second scan rate below the first scan rate.

In another embodiment the method may activate a third sensor. Further the method may receive from the third sensor sensor data associated with a movement of the computing device. Also the method may determine a direction of the movement of the computing device using the sensor data.

In another embodiment the method may activate a third sensor. The method may receive from the third sensor sensor data associated with a movement of the computing device. Further the method may perform functions associated with a pedometer using the sensor data.

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may receive by the first processor operating at a first clock rate first sensor data from a first sensor operating at a first data rate. The method may determine by the first processor a movement of the computing device using the first sensor data. In response to determining the movement of the computing device the method may perform by the first processor a first motion state algorithm to determine whether a modality of the computing device is a first motion state. In response to determining that the modality of the computing device is not the first motion state the method may change by the first processor at least one of the first processor to operate at a second clock rate sufficient to perform a second motion state algorithm and changing the first sensor to operate at a second data rate sufficient to perform the second motion state algorithm. Further the second motion state algorithm may be used to determine whether the modality of the computing device is a second motion state.

In another embodiment at least one of the second processor and the third processor may be in a low power mode.

In another embodiment the method may determine by the first processor that the modality of the computing device is the second motion state. Further the method may send by the first processor the modality to at least one of the second processor and the third processor.

In another embodiment in response to determining that the modality of the computing device is the second motion state the method may activate by the first processor at least one of the second processor and the third processor.

In another embodiment the method may determine by the first processor that the modality of the computing device is not the second motion state. In response to determining that the modality of the computing device is not the second motion state the method may change by the first processor at least one of the first processor to operate at the first clock rate sufficient to perform the first motion state algorithm and changing the first sensor to operate at the first data rate sufficient to perform the first motion state algorithm.

In another embodiment the second clock rate may be about fifty percent 50 greater than the first clock rate.

In another embodiment the second data rate may be about fifty percent 50 greater than the first data rate.

In another embodiment the first motion state may be associated with the computing device being stationary and the second motion state may be associated with the computing device moving at a walking speed.

In another embodiment the first motion state may be associated with the computing device moving at a walking speed and the second motion state may be associated with the computing device moving at a running speed.

In another embodiment the first motion state may be associated with the computing device moving at a running speed and the second motion state may be associated with the computing device moving at a vehicle speed.

In another embodiment in response to determining the movement of the computing device the method may change by the first processor at least one of the first processor to operate at a third clock rate sufficient to perform the first motion state algorithm and the first sensor to operate at a third data rate sufficient to perform the first motion state algorithm.

In another embodiment the third data rate may be greater than the first data rate and less than the second data rate.

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may receive by the first processor sensor data from a first sensor. The method may determine by the first processor a movement by the computing device using the sensor data. Further the method may receive by the first processor a modality of the computing device. In response to determining that the modality corresponds to a predetermined state determining by the first processor a modality move distance associated with the predetermined state. The method may determine by the first processor a move distance of the computing device using the modality move distance. Also the method may determine by the first processor that the move distance of the computing device is at least a move distance threshold. In response to determining that the move distance of the computing device is at least a move distance threshold reporting by the first processor to at least one of the second processor and the third processor that the move distance of the computing device is at least the move distance threshold.

In another embodiment the method may receive by the first processor from at least one of the second processor and the third processor a request to perform an accumulated movement algorithm.

In another embodiment the method may receive the request to perform the accumulated movement algorithm including receiving the move distance threshold.

In another embodiment the modality move distance may be a product of the duty cycle of an accumulated movement algorithm and a velocity of the predetermined state.

In another embodiment the method may request by at least one of the second processor and the third processor a global navigational satellite system GNSS position from a second sensor. The method may receive by at least one of the second processor and the third processor the GNSS position from the second sensor. Further the method may determine by at least one of the second processor and the third processor a move distance threshold from the GNSS position to a geo fence boundary. Also the method may send by at least one of the second processor and the third processor to the first processor a request to perform an accumulated movement algorithm

In another embodiment the method may send the request to perform the accumulated movement algorithm including sending the move distance threshold.

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may determine by the second processor a percentage of time that a modality of the computing device is a first predetermined state. In response to determining that the percentage of time that the modality of the computing device is the first predetermined state is at least a first modality percentage threshold the method may perform by the second processor a first scan at a first time of first available access points APs using a sensor. The method may receive at the second processor first AP identification data for each first available AP using the sensor. Further the method may send from the second processor to a server the first AP identification data. The method may receive at the second processor from the server a first location of the computing device associated with the first time. Also the method may perform by the second processor a second scan at a second time of the second available APs using the sensor. The method may send from the second processor to the server the second AP identification data. The method may receive at the second processor from the server a second location of the computing device associated with the second time. Further the method may determine by the second processor a velocity of the computing device using at least one of the first location the second location the first time and the second time. In response to the velocity of the computing device being at least a predetermined velocity threshold reporting by the second processor to the third processor that the modality is in vehicle.

In another embodiment the first AP identification data may include at least one of a received signal strength indicator RSSI a service set identifier SSID and a basic service set identifier BSSID .

In another embodiment the second AP identification data may include at least one of a received signal strength indicator RSSI a service set identifier SSID and a basic service set identifier BSSID .

In another embodiment the method may determine by the second processor that the computing device is communicatively coupled to the first static AP using the sensor.

In another embodiment the method may perform the first scan at the first time of first available APs while the modality is the first predetermined state.

In another embodiment the method may perform the second scan at the second time of second available APs while the modality is the first predetermined state.

In another embodiment in response to the velocity of the computing device being at least a certain velocity threshold the method may activate by the second processor the third processor.

In another embodiment the first modality percentage threshold may be in the range of about fifty percent 50 to about one hundred percent 100 .

In another embodiment the predetermined velocity threshold may be in the range of five meters per second 5 m s to ten meters per second 10 m s .

In another embodiment at a computing device that includes a first processor a second processor and a third processor a method may determine by the second processor that a modality of the computing device is a first predetermined state. In response to determining that the modality is the first predetermined state the method may receive by the second processor sensor data from a sensor. The method may determine by the second processor a velocity of the computing device using the sensor data. Further the method may determine by the second processor that the velocity of the computing device is at least a predetermined velocity threshold. In response to determining that the velocity of the computing device is at least the predetermined velocity threshold the method may report by the second processor to the third processor that the modality of the computing device is in vehicle.

In the foregoing specification specific embodiments have been described. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of present teachings. The benefits advantages solutions to problems and any element s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential features or elements of any or all the claims. This disclosure is defined solely by the appended claims including any amendments made during the pendency of this application and all equivalents of those claims as issued.

Moreover in this document relational terms such as first and second top and bottom and the like may be used solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions. The terms comprises comprising has having includes including contains containing or any other variation thereof are intended to cover a non exclusive inclusion such that a process method article or apparatus that comprises has includes contains a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. An element proceeded by comprises . . . a has . . . a includes . . . a contains . . . a does not without more constraints preclude the existence of additional identical elements in the process method article or apparatus that comprises has includes contains the element. The terms a and an are defined as one or more unless explicitly stated otherwise herein. The terms substantially essentially approximately about or any other version thereof are defined as being close to as understood by one of ordinary skill in the art and in one non limiting embodiment the term is defined to be within 10 in another embodiment within 5 in another embodiment within 1 and in another embodiment within 0.5 . The term coupled as used herein is defined as connected although not necessarily directly and not necessarily mechanically. A device or structure that is configured in a certain way is configured in at least that way but may also be configured in ways that are not listed.

Furthermore the term connected means that one function feature structure component element or characteristic is directly joined to or in communication with another function feature structure component element or characteristic. The term coupled means that one function feature structure component element or characteristic is directly or indirectly joined to or in communication with another function feature structure component element or characteristic. Relational terms such as first and second and the like may be used solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions. The term or is intended to mean an inclusive or. Further the terms a an and the are intended to mean one or more unless specified otherwise or clear from the modality to be directed to a singular form. References to one embodiment an embodiment example embodiment various embodiments and other like terms indicate that the embodiments of the disclosed technology so described may include a particular function feature structure component element or characteristic but not every embodiment necessarily includes the particular function feature structure component element or characteristic. Further repeated use of the phrase in one embodiment does not necessarily refer to the same embodiment although it may.

It will be appreciated that some embodiments may be comprised of one or more generic or specialized processors or processing devices such as microprocessors digital signal processors customized processors and field programmable gate arrays FPGAs and unique stored program instructions including both software and firmware that control the one or more processors to implement in conjunction with certain non processor circuits some most or all of the functions of the method and or apparatus described herein. Alternatively some or all functions could be implemented by a state machine that has no stored program instructions or in one or more application specific integrated circuits ASICs in which each function or some combinations of certain of the functions are implemented as custom logic. Of course a combination of the two approaches may be used. Further it is expected that one of ordinary skill notwithstanding possibly significant effort and many design choices motivated by for example available time current technology and economic considerations when guided by the concepts and principles disclosed herein will be readily capable of generating such software instructions and programs and ICs with minimal experimentation.

The Abstract of the Disclosure is provided to allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in various embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separately claimed subject matter.

This detailed description is merely illustrative in nature and is not intended to limit the present disclosure or the application and uses of the present disclosure. Furthermore there is no intention to be bound by any expressed or implied theory presented in the preceding field of use background or this detailed description. The present disclosure provides various examples embodiments and the like which may be described herein in terms of functional or logical block elements. Various techniques described herein may be used for low power management of multiple sensor integrated chip architecture for a computing device. The various aspects described herein are presented as methods devices or apparatus systems or articles of manufacture that may include a number of components elements members modules nodes peripherals or the like. Further these methods devices systems or articles of manufacture may include or not include additional components elements members modules nodes peripherals or the like. Furthermore the various aspects described herein may be implemented using standard programming or engineering techniques to produce software firmware hardware or any combination thereof to control a computing device to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computing device carrier or media. For example a non transitory computer readable medium may include a magnetic storage device such as a hard disk a floppy disk or a magnetic strip an optical disk such as a compact disk CD or digital versatile disk DVD a smart card and a flash memory device such as a card stick or key drive. Additionally it should be appreciated that a carrier wave may be employed to carry computer readable electronic data including those used in transmitting and receiving electronic data such as electronic mail e mail or in accessing a computer network such as the Internet or a local area network LAN . Of course a person of ordinary skill in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

