---

title: System and method of active remediation and passive protection against cyber attacks
abstract: A system and method for active remediation and/or passive protection against cyber attacks includes an active remediation and passive protection server computer for monitoring at least a portion of network data between at least one first network and at least one second network to detect one or more attacks and/or unauthorized access to at least one first agent in the at least one first network by at least one second agent in the at least one second network. The active remediation and passive protection server computer executes at least one of (i) one or more active remediation mechanisms to actively respond to the one or more detected attacks and/or unauthorized access and (ii) one or more passive protection mechanisms to passively protect against the one or more detected attacks and/or unauthorized access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09648029&OS=09648029&RS=09648029
owner: NEWEGG INC.
number: 09648029
owner_city: City of Industry
owner_country: US
publication_date: 20130730
---
This application is a nonprovisional application of U.S. Provisional Patent Application No. 61 677 242 filed Jul. 30 2012 entitled System and Method of Active Remediation and Passive Protection Against Cyber Attacks and is hereby incorporated by reference in its entirety.

The presently disclosed system and method relates to network system security and in particular relates to a system and method of active remediation and passive protection against cyber attacks.

Network resources or devices compromised by malicious software have become a modern pandemic. With the ever increasing complexity in software and heavy emphasis on feature driven development instead of security the prevalence of software exploits have created whole industries dedicated to exploiting and commandeering network resources for personal and economic gain. As software become more complex so has the sophistication of exploits Trojans viruses and or malicious software created by hackers malicious entities businesses or even government agencies malware developers .

Moreover with practically almost every network capable computer resource or device connected to the internet malware developers have found new ways to utilize the interdependence of networked computers resources or devices to aggregate their network capacity and computing power into a botnet or a network of compromised resources or devices each individually known as a robot or bot and each executing malicious software that are under the control of one or more entity for a variety of purposes. These botnets can then be remotely controlled for purposes such as for example Distributed Denial of Service DDoS attacks and or rental services relating to DDoS attacks distributed decryption of stolen encrypted data bitcoin mining email spamming and or web crawling.

To combat against botnets and or malicious software installed on network resources or devices antivirus and or antimalware software are generally installed on such resources or devices. However in many cases antivirus and or antimalware may not be sufficient especially when Trojan virus and or malware scans are not executed on a regular basis due to potential downtime it may cause or the entity in possession and or control of the network resource or device may not be aware of the infection on their resources or devices because the current version of the antivirus or antimalware is incapable of detecting this type of malicious software. Additionally while intrusion detection prevention systems and firewalls may offer only limited protection against attacks already in progress it is simply incapable of stopping or preventing attacks at its source. Without the ability to prevent recurring attacks or alert authorities or persons or entities in possession or control of the commandeered resource or device these commandeered resources or devices may be used repeatedly to attack its target or infect new network resources or devices. Accordingly an improved system and method is needed.

The present disclosure relates to a system and method to prevent remediate and deter multi agent cyber attacks through a responsive transmission to all possible initiating or controlled agent machines because the best defense is a good and legally compliant offense.

The present disclosure also relates to a system and method for detecting unauthorized access by an agent preventing unauthorized access by the agent and or notifying an owner an agent operated by the owner and or an entity in lawful possession or control of proprietary data regarding the unauthorized access.

According to a preferred embodiment a method for active remediation and or passive protection against cyber attacks comprises monitoring by an active remediation and passive protection server computer at least a portion of network data between at least one first network and at least one second network to detect one or more attacks and or unauthorized access to at least one first agent in the at least one first network by at least one second agent in the at least one second network. The active remediation and passive protection server computer executes at least one of i one or more active remediation mechanisms to actively respond to the one or more detected attacks and or unauthorized access and ii one or more passive protection mechanisms to passively protect against the one or more detected attacks and or unauthorized access.

According to another preferred embodiment a system for active remediation and or passive protection against cyber attacks comprises an active remediation and passive protection server computer between at least one first network and at least one second network. The active remediation and passive protection server computer is configured to monitor at least a portion of network data between the at least one first network and the at least one second network to detect one or more attacks and or unauthorized access to at least one first agent in the at least one first network by at least one second agent in the at least one second network. The active remediation and passive protection server computer is configured to execute at least one of i one or more active remediation mechanisms to actively respond to the one or more detected attacks and or unauthorized access and ii one or more passive protection mechanisms to passively protect against the one or more detected attacks and or unauthorized access.

Functions of the presently disclosed system and method include but are not limited to the protection of critical infrastructures such as for example Domain Name Servers Web Servers Source Code and or Version Control Servers Database Servers and the like. Additionally functions of the presently disclosed system and method also include protection against theft of confidential and or proprietary information theft of intellectual property protection against web crawlers and screen scrapers protection against hacks and or breaches.

Numerous specific details are set forth to provide a thorough understanding of the embodiments. It will be understood by those skilled in the art however that the embodiments may be practiced without these specific details. In other instances well known operations components and or circuits have not been described in detail so as not to obscure the embodiments. It can be appreciated that the specific structural and functional details disclosed herein may be representative and do not necessarily limit the scope of the embodiments.

Unless specifically stated otherwise references throughout the specification to various embodiments some embodiments one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Thus appearances of the phrases in various embodiments in some embodiments in one embodiment or in an embodiment in places throughout the specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Unless specifically stated otherwise references throughout the specification to network data mean information that is encoded and organized in a computer readable format and transmitted between one or more resources or devices via one or more networks.

Unless specifically stated otherwise references throughout the specification to agents mean physical network devices such as switches routers hubs modems network hosts or any other physical network device that can interconnect and or provide services for one or more network devices. Alternatively the agents can also be virtual devices. Virtual network devices may include but are not limited to servers gateways proxies virtual appliances or any other services daemons or processes executing on one or more physical network devices and or one or more virtual machines.

Unless specifically stated otherwise references throughout the specification to protected agent means an agent that is used in the course of business including but not limited to web servers transaction servers database servers Voice Over IP servers and clients.

Unless specifically stated otherwise references throughout the specification to Rogue Agent means an agent that has been compromised by malware viruses Trojans or any other unauthorized and or unintended executable or interpretable code in physical or virtual network devices. Moreover the Rogue Agents may contain unauthorized unintended executable code and may execute the unauthorized unintended executable code. The unauthorized and or unintended executable code can be implemented in processes daemons dynamic libraries or scripts on the Rogue Agent. It can be appreciated that the Rogue Agent can also be configured to open one or more network connections to perform various attacks or unauthorized access. Additionally it can also be appreciated that the Rogue Agent can be configured to open one or more network connections to connect to other Rogue Agents in a peer to peer network or to one or more controllers in a centralized network. Further the Rogue Agent can also be configured to scrape or crawl one or more resources to automatically retrieve data including public and or confidential data from the one or more resources or agents.

Unless specifically stated otherwise references throughout the specification to Automated Agent means an agent configured by an entity in possession and or control of the Automated Agent to access protected agents in an undesirable manner such as for example access to web scrapers web crawlers and screen scrapers or any other automated executable code for retrieving data including public and or confidential data from a resource. The Automated Agent can be configured to scrape or crawl one or more resources or agents to automatically retrieve data from those resources or agents. Additionally while a Rogue Agent can also be configured to perform similar functionality of Automated Agents the Automated Agents are generally installed on agents under the possession and or control of an entity that approves such practices and or derives some benefit from the use of web scraping or crawling or otherwise hacking the one or more resources or agents for purposes of obtaining public data and or confidential data.

Unless specifically stated otherwise references throughout the specification to controller means an agent configured to establish one or more connections with Rogue Agents and or Automated Agents for the purposes of commanding and controlling one or more Rogue Agents or one or more Automated Agents in a centralized network. The controller can also be configured to establish one or more connections with other controllers to create a larger centralized network. Such configuration can be accomplished by malware viruses Trojans or any other unauthorized and or unintended executable or interpretable code implemented in processes daemons dynamic libraries or scripts on the controller. Alternatively an entity in possession and or control can configure the controller to establish one or more connections with Automated Agents for controlling and directing the one or more Automated Agents to perform web scraping web crawling and screen scraping or any other automated executable code for retrieving data from a protected agent in an undesired or unauthorized manner.

Unless specifically stated otherwise references throughout the specification to Initiators means a hacker a malicious person or entity an unauthorized person or entity or any person or entity who initiates or begins an attack or unauthorized access by connecting to and sending one or more commands to one or more Rogue Agents one or more controllers or one or more Automated Agents.

With continued reference to in an example network the network may contain one or more Agents one or more Rogue Agents one or more Automated Agents one or more Controllers and one or more Initiators . The Internet can communicatively couple one or more Agents through one or more network devices such as for example Routers . The Agents may be one or more agents communicatively coupled to other Agents Rogue Agents Automated Agents Controllers or Initiators via the Internet . The Rogue Agents may be one or more Rogue Agents communicatively coupled to Agents other Rogue Agents Automated Agents Controllers or Initiators via the Internet . The Automated Agents may be one or more Automated Agents communicatively coupled to Agents Rogue Agents other Automated Agents Controllers or Initiators via the Internet . The Controllers may be one or more controllers communicatively coupled to Agents Rogue Agents Automated Agents other Controllers or Initiators via the Internet . The Initiators may be an Initiators communicatively coupled to Agents Rogue Agents Automated Agents or Controllers via the Internet .

With continuing reference to the one or more Rogue Agents may be communicatively coupled to other Rogue Agents Agents Automated Agents Controllers and or Initiators utilizing one or more network protocols in a decentralized or a centralized manner. When the Rogue Agents are connected in a decentralized manner such as for example in a peer to peer model some or all of the Rogue Agents may be initially configured in an idle state and waiting for one or more commands from other Rogue Agents and or Initiators . In a non limiting example when an Initiators transmits a command to a Rogue Agent the Rogue Agent may stop idling and begin executing the command to notify all other Rogue Agents . The Agents can be controlled to execute the command in a substantially synchronized fashion such as for example at a specific time.

If Rogue Agents are interconnected in a centralized manner such as for example in a client server model Controllers may be designated as the command and control agents i.e. the server in the client server model and may be connected to a plurality of other Rogue Agents i.e. the client in the client server model . The Controllers may be initially configured to be in an idle state waiting for one or more commands either from an Initiators or directly input at the Controllers . Similarly the other Rogue Agents connected to the Controllers may also be initially in an idle state waiting for one or more commands from the Controllers . When the Controllers receives a command from the Initiators the Controllers may execute the one or more commands received from the Initiators and may send one or more commands to some or all Rogue Agents for execution in a substantially synchronized manner. It can be appreciated that at least one Rogue Agent can be configured to perform attacks or unauthorized access.

Similarly the one or more Automated Agents may be communicatively coupled to other Automated Agents Agents Rogue Agents Controllers and or Initiators utilizing one or more network protocols in a decentralized or a centralized manner similar to Rogue Agents . Thus when Automated Agents are connected in a centralized manner such as for example in a client server model the Automated Agents i.e. the clients may also be initially in an idle state waiting for one or more commands from a Controller i.e. the server . Alternatively when the Automated Agents are connected in a decentralized manner such as for example in a peer to peer model some or all of the Automated Agents may be initially in an idle state and waiting for one or more commands from other Automated Agents and or an Initiators . It can be appreciated that communications between and among Agents Rogue Agents Automated Agents and or Controller may be encrypted and or obfuscated. In addition it can be appreciated that communications between and among Agents Rogue Agents Automated Agents and or Controller may be accomplished via one or more applicable API s on public networks such as for example Twitter Facebook Internet Relay Chat IRC or encrypted private or anonymous networks such as for example through the use of The Onion Router TOR .

Alternatively the source addresses in the IP headers of the messages may be spoofed i.e. modified with a non existent location by the Rogue Agents which may cause the Protected Agent to respond with acknowledgement messages to non existent destinations. Because the Protected Agent in preparation of establishing a legitimate connection may be configured to allocate memory and or other resources in receipt of each message from Rogue Agents the agent s memory and or other resources may be quickly exhausted by numerous Rogue Agents initiating connections but never connect in a short time period which may impede legitimate connections. This is otherwise known as a flood attack and the ARPPS can be configured to detect these messages used in denial of service flood attacks.

It can be appreciated that the ARPPS can also be configured to detect other types attacks including but not limited to Ping flood attacks User Datagram Protocol UDP flood attacks Internet Control Message Protocol ICMP flood attacks smurf attacks teardrop attacks application layer attacks slowloris attacks or any other type of attacks that would reduce or inhibit the intended functionality of the Protected Agents . Further while the exemplary embodiment illustrates ARPPS detecting an attack from Rogue Agents communicatively coupled in a decentralized peer to peer model it can be appreciated that ARPPS may also detect attacks from Rogue Agents communicatively coupled in a centralized client server model with one or more controllers not shown communicatively coupled to the Rogue Agents not shown . In addition it can be appreciated that the ARPPS can also be configured to detect unauthorized access from Automated Agents communicatively coupled either in a decentralized peer to peer model or centralized client server model with one or more controllers not shown .

To detect attacks and or unauthorized access the ARPPS may utilize signature based detection probabilistic based detection and or state based detection to detect an attack or an unauthorized access. In one non limiting exemplary implementation and with continuing reference to the ARPPS can be programmed for a signature based detection system and may track the number of TCP SYN messages received and stored from Rogue Agents in one or more buffers but do not establish a connection. In a non limiting exemplary implementation the ARPPS can be configured to receive and store messages sent from Rogue Agents with destination set for Protected Agents . Moreover the ARPPS can be further configured to determine if the number of TCP SYN messages received and stored in a buffer without an associated connection from Rogue Agents exceed a threshold value or range within a specific period of time. If the number of TCP SYN messages exceeds the threshold value or range within the specified time period then the ARPPS signature based detection system may conclude that a SYN flood attack is occurring and begin storing the buffered TCP SYN messages in an attack database.

It will be appreciated that ARPPS can also be configured to detect unauthorized access. Moreover in one non limiting exemplary implementation the ARPPS can be configured to determine if access of data or services provided by a protected agent such as for example Protected Agent is a human user or automated or Rogue Agents configured to read and store information in an unauthorized manner such as for example by a price or web crawler. In one non limiting exemplary implementation the ARPPS can be configured to use statistical based methods to analyze access patterns of agents to determine whether the agent requesting the information provided by Protected Agent is an Automated Agent or Rogue Agent.

Moreover the ARPPS can be configured to store and compare access times access frequency and or time spent accessing data or information from at least one service provided by the Protected Agent . If an agent accesses data or service provided by the Protected Agent at a particular time s e.g. 2 am until 6 am every day and with a substantially regular frequency e.g. every 30 minutes accesses the data or service for a relatively short time period e.g. five seconds or less and directly accessing or deep linking a relatively large number of internal data or services directly without navigating or searching for the internal data or services then the ARPPS may conclude that the agent is an Automated Agent or a Rogue Agent configured for purposes of web or price crawling. The ARPPS can be configured to set one or more signals or alerts and or send one or more messages to the Protected Agent .

With continuing reference to the ARPPS can also track access of public and or confidential data of internal data or services such as for example Protected Agents . Moreover ARPPS may contain a list of approved agents that can access specific data or services using specific communication protocols such as for example File Transfer Protocol Secure File Transfer Protocol Secure Shell SSH or third party services at designated ports such as for example Subversion Source Control SVN MySQL database and the like. Thus the ARPPS can determine that access to these services or the use of these protocols is from a Rogue Agent or an Automated Agent such as for example Rogue Agents because the Rogue Agent or Automated Agent is not contained on the approved list or they are not using the appropriate protocol or services.

Once ARPPS detects an attack or unauthorized access the ARPPS can execute or perform active remediation and or passive protection based at least partially on user selection. Active remediation include sending one or more payloads to remove malware or virus infections on the identified source s or sending one or more notification messages to one or more enforcement agencies the entity responsible for the attack and or the rogue or Automated Agent. Passive protection may include one blocking throttling interrupting attack and or unauthorized access or performing or executing any of the one or more types of passive protection or counter measures and or sending one or more alerts to the protected agents.

In one non limiting exemplary implementation ARPPS can also be configured to determine the appropriate type of passive protection based on the detected type of attack or unauthorized access and select the type appropriate type of passive protection or countermeasures from a passive protection database to execute and remediate against attacks. Moreover the passive protection database may contain a list of attacks and at least one appropriate passive protection for each attack. In one non limiting exemplary implementation if the ARPPS detects an unauthorized access from a web crawler or screen scraper the ARPPS can access the passive protect database and select the appropriate type of passive protection or counter measure to execute. Thus in the case screen scrapers or web crawlers on Protected Agent the ARPPS can be configured to block or interrupt access to Protected Agent by suspected Automated Agents and or Rogue Agents screen scraping or web crawling and send a challenge response test to the suspected Automated Agents and or Rogue Agents before allowing access to the Protected Agent . It will be appreciated that the challenge response test can be configured to require an object identification in an image text identification such as those presented in a Completely Automated Public Turing Test to tell Computers and Humans Apart CAPTCHA or a voice prompt requiring input of spoken words by a person to ensure that the access to Protected Agents are generated by persons and not by suspected Automated Agents or Rogue Agents

Optionally it will also be appreciated that if the ARPPS detects unauthorized access to data the ARPPS may first block or interrupt access to the requested data replace the requested data which may be confidential and or proprietary with non proprietary non confidential public data having the same data type as the requested data but with a Protection Module embedded or injected therein such that the unauthorized access of data may be prevented and an evidentiary trail may be created. Alternatively ARPPS can also be configured to send existing confidential and or proprietary data having the Protected Module embedded or injected therein to further create an evidentiary trail for enabling or enhancing the prosecution of the unauthorized access of confidential and or proprietary information. It will be appreciated that the confidential and or proprietary data can be sent in encrypted and or obfuscated form.

Moreover based on the type of the proprietary data and its associated application s a Protection Module may be embedded into the confidential and or proprietary data Protected Data such that when the associated application accesses the Protected Data the Protection Module may also be executed or interpreted. The protection may be implemented by using macros in the associated application s scripting languages in the associated application s or any other interpreted and or executable code or instructions supported by the associated application s for the proprietary data type Protected Data Type .

In a non limiting exemplary embodiment the Protection Module may also be injected in one or more locations in the Protected Data to exploit one or more vulnerabilities of the associated application s that allow remote execution of the Protection Module. These vulnerabilities may be determined by automated fuzz testing of the application s and its associated data type to determine the existence of remote execution vulnerabilities such as for example buffer overruns and determine the location s to inject executable code and or instructions such that when the application s accesses the Protected Data the application also interprets and or executes or causes the Protection Module to be interpreted and or executed. Thus upon access of the Protected Data by the associated application s the Protection Module will be interpreted and or executed by an agent accessing the Protected Data via the application s .

To prevent unauthorized access of the Protected Data the Protection Module can be configured to perform automated authentication by determining whether the agent accessing the Protected Data is an authorized agent authorized owner and or entity in lawful possession or control of the Protected Data. Moreover the Protection Module can retrieve identification data on the agent before enabling access to the Protected Data and analyze the identification data to obtain an agent signature. Additionally it will be appreciated that the Protection Module may also store save and or update the retrieved identification data at a hidden location on an agent with the Protected Data and or on a designated agent such as for example a licensing or authorization agent or ARPPS . The identification data may include but is not limited to software identifiers such as for example the type of application accessing the Protected Data the version number s of the application accessing the Protected Data operating system type hardware identifiers such as Media Access Control MAC address for any network interfaces storage serial numbers processor serial numbers Trusted Platform Module TPM remote attestation hash key personal identifiers such as for example the current user logged into the agent and or metadata of the Protected Data including the users accessing the Protected Data the number of times each have accessed the length of time of access of the Protected Data whether the Protected Data has ever been transformed into another data type the name of the file for the Protected Data the last user to access the Protected Data whether the Protected Data has been modified the number of times the Protected Data has been modified the location of the Protected Data on the agent. It will be appreciated that the Protection Module may also be configured to perform challenge authentication by querying or prompting on a display coupled to the agent accessing the Protected Data to input further authorization information such as for example user name password authentication token with an associated pin a digital certificate and the like.

With respect to automated authentication the Protection Module may further access an internal database of signatures of authorized agents or interface and utilize one or more third party authentication methods such as for example TPM remote attestation or operating system authentication such as for example Windows Logon Authentication. It will be appreciated that the Protection Module can also utilize the designated agent by comparing the agent signature to those signatures of authorized agents stored on the designated agent. Alternatively the Protection Module can transmit the agent signature to the designated agent for comparison by the licensing or authorization agent and the Protection Module may receive authorization back from the designated agent to enable access to the Protected Data by the agent. In addition it will be appreciated that the Protection Module can also be configured to enforce the scope of access such as for example the time of day the Protected Data may be accessed e.g. during only working hours of 9 am 5 pm Eastern Standard Time may only be accessed a specific number of times within a set period whether the Protected Data can be transformed into another data type or printed on paper.

In one non limiting exemplary implementation if the Protection Module determines the agent accessing the Protected Data is an authorized agent then the Protection Module can decrypt unobfuscate or otherwise render accessible the Protected Data by the authorized agent. Optionally if the Protection module determines the agent accessing the Protected Data is an unauthorized agent the Protection Module can encrypt obfuscate delete or otherwise render inaccessible the Protected Data by the unauthorized agent and or any subsequent agents attempting to access the Protected Data. Optionally before encrypting if not already encrypted obfuscating if not already obfuscated deleting or otherwise render inaccessible the Protected Data by the unauthorized agent the Protection Module may also present challenge authentication. It will be appreciated that both automated authentication and challenge authentication can be used to provide further security against unauthorized access of Protected Data. If the user accessing the Protected Data cannot be authenticated on a set number of tries the Protection Module may encrypt if not already encrypted obfuscate if not already obfuscated delete or otherwise render inaccessible the Protected Data by the authorized agent. The Protection Module may also take no action with respect to the Protected Data if the Protected Data has already been encrypted and or obfuscated. It will be appreciated that if the Protection Module determines whether the agent exceeds the scope of the access for a specific number of times. The Protection Module may also optionally render the Protected Data inaccessible permanently or temporarily to the previously authorized agent.

In another non limiting exemplary implementation if the Protection Module determines the agent accessing the Protected Data is an unauthorized agent then the Protection Module can be further configured to contact a designated agent such as for example the licensing and or authentication agent and transmit the identification data to designated agent such that the owner of the Protected Data the agent operated by the owner and or the entity in lawful possession or control of Protected Data can be notified of the unauthorized access by an unauthorized agent. It will also be appreciated that regardless of whether the Protected Data remains accessible or inaccessible to any agent each time the Protected Data is accessed the Protection Module may store save and or update the identification data stored at a hidden location on an agent with the Protected Data or on a licensed or authorized agent such that a evidentiary trail can be created for enabling and or enhancing the prosecution relating to the theft of confidential Information and or Trade Secrets contained in the Protected Data.

Optionally it will be appreciated that the before blocking interrupting throttling and or alerting any agents or performing executing any type of passive protection the ARPPS may attempt to determine the source of the attack or unauthorized access. If the source is found in a trusted agent s database then the ARPPS may ignore the detected attack or unauthorized access. The ARPPS may also be configured to allow user input and removal of the trusted agents from the trusted agent s database such as for example customer and or partner agents. However it will be appreciated that despite the source being trusted the detected attack and or unauthorized access may still store any messages and or data associated with the detected attack and or unauthorized access.

With continuing reference to in another non limiting exemplary implementation once ARPPS detects a spoofed DDoS attack the ARPPS can select an appropriate type of passive protection from the passive protection database and execute an appropriate type of passive protection or counter measure which may impose a throttling policy on messages received from non existent sources. Moreover the ARPPS can be further configured to determine or detect messages from non existent sources by using for example reverse path validation methods further discussed with respect to . ARPPS can also be configured to capture the messages.

In addition the ARPPS can also be configured to drop the messages received from non existent sources or send these messages to a null interface sink holing in order to prevent the messages from reaching the Protected Agents for a specified period of time. In addition after the ARPPS detects a SYN flood attack the ARPPS may select an appropriate type of passive protection which in this case may include sending one or more messages to the one or more Protected Agents to free computing resources on the one or more Protected Agents . ARPPS based on the captured messages can be configured to determine whether the messages were legitimate attempts to establish a connection with the Protected Agent or the messages were sent in connection with a SYN flood attack. If ARPPS determines that the messages were sent in connection with a SYN flood attack then the ARPPS may be configured to select an appropriate type of passive protection which in this case may include sending one or more Reset RST messages to the Protected Agent to reset any connections.

To determine whether the captured messages were part of a flood attack ARPPS can be configured with reverse path validation methods to determine whether the sources are valid. Alternatively ARPPS can also be configured to determine whether the sources are valid by waiting a specified period of time to receive the corresponding response message from the source. If the ARPPS receives no messages from the source within a specified period of time then the captured messages are invalid and the messages are determined to be in connection with a flood attack.

In instead of using passive protection or countermeasures the ARPPS may also use active remediation and countermeasures against Rogue Agents or Automated Agents not shown . In one non limiting implementation upon detecting a SYN flood attack the ARPPS can be configured to initiate an Internet Protocol IP Traceback method to determine the source of the attack. For example the ARPPS may be communicatively coupled to the upstream provider and can be configured to provide data relating to the captured messages in connection with the flood attack. Moreover the provided data may include but is not limited to information stored in data fields such as an IP header TCP header and or contents or hash of the content of data fields to facilitate in the IP Traceback. The IP Traceback methods may include but not limited to hop by hop traceback input debugging and backscatter traceback. Alternatively other techniques can be used such as the use of iTrace messages encapsulated in an ICMP message sent by routers to the protected Agents may enable the ARPPS to determine the source or a range of possible sources of the flood attack without the assistance from one or more upstream Providers.

Once the source or a range of sources is determined ARPPS can be configured to store and save the source or range of sources in a source database. The source or range of sources may be identified by their network address such as for example their IP address Media Access Control MAC address and or Network Service Access Point NSAP address or any other unique identifier assigned to a resource to identify and or locate the resource across one or more networks. It can be appreciated that in some instances the at least one identified source may be in possession and or control of the entity deploying the ARPPS because the identified source is located at a remote location at the same location and or on the same network as the entity deploying the ARPPS . Accordingly the ARPPS can be configured to determine whether such identified sources are in possession and or control of the entity and store an internal status flag with the respective identified source in the source database to indicate that the respective identified source is in possession and or control of the entity utilizing the ARPPS .

In the non limiting exemplary embodiment of the ARPPS may identify the sources as Rogue Agents and determine the responsible entity for an identified source. To determine the responsible entity for the identified source ARPPS can be configured to retrieve the responsible entity s contact information such as the entity s name an email address to report abuse the address of the responsible entity and or any other information identifying the entity by using the WHOIS protocol or any protocol standard and or Application Programming Interface API for retrieving identity information of a resource. Once the contact information has been retrieved the ARPPS can extract the contact information by tokenizing and or parsing the retrieved contact information based on fields such as for example email phone number address name and the like. Moreover the ARPPS can be configured to tokenize or parse the extracted contact information by using for example regular expressions. Additionally if the contact information is in a language other than English ARPPS can be configured to detect the language of the contact information and translate at least a portion of the contact information identifying the fields before tokenizing or parsing the translated extracted contact information. ARPPS can be configured to detect and translate non English languages into English by using a Language Translation Module not shown or interfacing with an existing API not shown such as for example Google Translate API. Once the contact information is tokenized and or parsed ARPPS can then associate the tokenized and or parsed information with their respective source s and store or save the contact information in the source database.

With continuing reference to ARPPS can also be configured to at least one identified source e.g. Rogue Agents to determine at least one Rogue Agent s likely operating system and their open and or closed ports. In one non limiting exemplary implementation the ARPPS can be configured to scan for open ports by sending one or more UDP TCP SYN and or Streaming Control Transmission Protocol SCTP Initialization INIT messages to a list of ports in any specified order on the Rogue Agents . Additionally the ARPPS can be configured to receive one or more TCP SYN ACK TCP RST ICMP SCTP INIT SCTP Initialization Acknowledgement INIT ACK SCTP ABORT from the Rogue Agents and determine one or more open ports on the Rogue Agents based at least partially on the message sent to and received from the Rogue Agents as well as messages that were sent but ignored by Rogue Agents .

With continuing reference to the ARPPS can be configured to analyze and determine the likely operating system and services installed on a particular operating system of the scanned source by sending specialized messages in a particular sequence with a particular interval between each message sent to known open and or closed ports of one or more Rogue Agents . The ARPPS can be configured to receive and capture the messages sent from Rogue Agents in response to the specialized messages and derive a system fingerprint for at least one of the Rogue Agents . The ARPPS can be further configured to a compare system fingerprint of Rogue Agents to a system fingerprints database that contains a list of known operating systems and each operating system in the system fingerprints database that may be associated with one or more system fingerprints. Based on the comparison the ARPPS can determine the likely operating system of the identified source s such as for example Rogue Agents based at least partially on the header of the received messages. After determining the likely operating system for each of the identified source s the ARPPS can associate the determined operating system type with the appropriate identified source s and store the operating system type in the source database.

Additionally ARPPS can also be configured to determine the likely type s of malware or virus infection s based on malware fingerprints which may include but is not limited to open and or closed ports the captured messages in connection with the attack and or unauthorized access and the operating system type of the identified source previously stored in the source database. Thus the ARPPS can compare the malware fingerprint of an identified source such as for example Rogue Agent to a malware fingerprints database that contains a list of known types of malware and each type of malware may be associated with one or more malware fingerprints. Based on the comparison the ARPPS can determine the type s of infection s or the infection type s for at least one identified source e.g. Rogue Agent . After the infection type s are determined the ARPPS can associate the likely infection type s with the appropriate identified source s e.g. Rogue Agents and store the appropriate type s of infection s for the at least one identified source in the source database. The ARPPS can also use the infection type for at least one identified source to further determine a remediation module for at least one identified source e.g. Rogue Agents by comparing the type of infection with a remediation database that contains a list of the types of remediation modules and each type of remediation module may be associated with one or more infection types of the remediation module capable of remediating or removing from one or more identified sources. Once the type of remediation module or remediation module type is determined the ARPPS can associate the remediation module type with the appropriate identified source and store the remediation module type in the source database.

Alternatively the ARPPS can also use the infection type for at least one identified source to further determine preventative instructions for at least one identified source e.g. Rogue Agents by comparing the infection type for an identified source to a list of infection types in a prevention database where each infection type may be associated with one or more preventative instructions. Once the appropriate preventative instructions for an identified source is determined the ARPPS can associate the preventative instruction with the appropriate identified source and store the preventative instruction in the source database.

In order to notify various entities regarding the attack or unauthorized access performed by identified sources e.g. Rogue Agents the ARPPS can be configured to automatically create one or more notification messages for transmission to the various entities. In addition to warning the message recipient regarding the attack or unauthorized access on one or more protected agents e.g. Protected Agents the ARPPS can also incorporate into the notification message the network address of at least one identified source the type of infection the contact information of the at least one identified source the type of remediation module for the at least one identified source and or a Universal Resource Identifier URI associated with the appropriate remediation module. Thus the ARPPS can retrieve from the source database the previously stored or saved identified source s and their associated information such as for example network address associated with the identified source s e.g. Rogue Agents the contact information the type of infection the type of remediation module and or a URI associated with the appropriate remediation module. Additionally the ARPPS can retrieve and incorporate previously stored or saved messages in connection with an attack or unauthorized access. The ARPPS can also be configured to incorporate reconnaissance data received from a reconnaissance payload into the one or more notification messages sent to the various entities. The reconnaissance data is any data gathered by the reconnaissance payload relating to an identified source which may include but is not limited to the type operating system internal and or external network address the current running processes daemons and or services the shared objects or dynamic libraries loaded by each executable process the opened ports associated with each process and their destination address. The reconnaissance data may also include but is not limited to software identifiers for each of the installed software on the identified source version number s of the software installed operating system type hardware identifiers such as Media Access Control MAC address for any network interfaces storage volume drive serial numbers processor serial numbers Trusted Platform Module TPM remote attestation hash key personal identifiers such as for example the current user logged into the agent and the like. Further the ARPPS can also incorporate into the notification message contact information or URI to offer live assistance in the identification and removal of the malware or virus infection to persons in possession and or control of at least one identified source.

In one non limiting embodiment the ARPPS can be configured to retrieve the contact information of the identified source s such as for example Rogue Agents from the source database and send notification messages in an email via a mail server not shown coupled to the ARPPS to the email address associated with an identified source. Accordingly in the context of a notification message sent to entities identified in the contact information associated with an identified source e.g. Rogue Agent the ARPPS can incorporate into the previously identified remediation module type to further customize the notification message sent to the identified source by providing a remediation module that is tailored for the infection type and operating system type of the identified source. Additionally the ARPPS can also incorporate into the notification message the previously identified preventative instructions for the identified source.

With continued reference to ARPPS may also send notification messages to Enforcement Agency such as for example law enforcement agencies or Third Party Entity such as for example the entity identified in possession and or control of one or more Rogue Agents and or Automated Agents regarding the attack or unauthorized access. Thus the ARPPS can retrieve the infection type from the source database to further customize the notification message sent to the law enforcement and provide a remediation module tailored for the particular operating system and malware or virus on the identified source e.g. Rogue Agents . Moreover the remediation module may also be sent to the Enforcement Agency or Third Party Entity via a file attachment or URI identifying a location to obtain the remediation module for the particular operating system and malware or virus on the identified source. ARPPS can also geo locate local Enforcement Agency or Third Party Entity and their respective contact information near at least one identified source by communicating with geo location services via one or more interfaces to determine the nearby Enforcement Agency or Third Party Entity around the identified source within a specified radius such as for example a local FBI office. The ARPPS may also retrieve the local Enforcement Agency or Third Party Entity for the contact information including an email address a physical address and or telephone address by interfacing with a Geo location Module not shown or one or more APIs such as Google Maps API. Thus the ARPPS can send a notification message via email to a local FBI office where the notification message may include contact information of the identified source the information identifying the source infection type on the identified source preventative instructions and captured messages in connection with attack or unauthorized access.

With continued reference to ARPPS may also send provide and or transmit one or more payloads back to at least one identified source e.g. Rogue Agent . These payloads may include but are not limited to a reconnaissance payload notification payload and or a remediation payload. To send one or more payloads to the at least one identified source ARPPS can be configured to identify one or more vulnerabilities present on the at least one identified source that would allow remote execution of executable instructions. Moreover to identify one or more vulnerabilities ARPPS can scan the identified source for one or more remote execution vulnerabilities stored in a vulnerabilities database associate the one or more remote execution vulnerabilities with an appropriate identified source and store the one or more remote execution vulnerabilities in the source database. It can be appreciated that the ARPPS can be configured to interface with one or more APIs and or command line interfaces provided by third party scanning software such as for example Nmap Nessus and the like to scan and identify one or more vulnerabilities.

ARPPS can select at least one of the identified remote execution vulnerabilities that may enable remote execution of executable instructions on the identified source and execute the selected remote execution vulnerability to exploit the identified vulnerability. Moreover the ARPPS can be configured to exploit the identified vulnerability by for example sending one or more malformed messages to one or more ports on an identified source to cause a buffer overflow of a service daemon and or process executing on the identified source. This in turn may allow remote injection of executable instructions that would enable a remote command and control and or file transfer interface. After the remote execution vulnerability is exploited ARPPS or the identified source may establish a connection between ARPPS and the identified source using the remote command and control interface and or file transfer interface of the identified source by ARPPS . ARPPS can transmit one or more payloads to the identified source through the remote command and control interface and or file transfer interface and remotely execute one or more transferred payloads. Optionally it can be appreciated that for purposes of legal compliance across various jurisdictions the ARPPS before scanning the identified source for vulnerabilities or before selecting at least one vulnerability to exploit on identified sources e.g. Rogue Agents may determine whether such identified sources are in possession and or control of the entity using the ARPPS by retrieving the internal status flag previously stored in the source database. Moreover if the internal status flag indicates that an identified source is in possession and or control of the entity using the ARPPS then ARPPS can scan the identified source and or exploit vulnerability on the identified source. It can be appreciated that the ARPPS may also interface with one or more APIs and or command line interfaces such as for example those provided by Metasploit and or Core Impact to exploit one or more identified vulnerabilities on the identified source transmit one or more payloads to the identified source and execute the one or more payloads.

ARPPS can also send a reconnaissance payload to the at least one identified source e.g. Rogue Agent to further determine the operating environment of the at least one identified source. The ARPPS and or the reconnaissance payload can analyze the reconnaissance data and determine which offending process daemon and or service is attacking the protected agents. In order to reinforce the identification of the identified source behind the attack or unauthorized access using services the ARPPS and or the reconnaissance payload can determine the offending process daemon or service on the identified source. Once identified the reconnaissance payload can be configured to modify the network data sent by the offending process daemon and or service determined on the identified source. Moreover the network data may be modified with a hidden encrypted marker before its transmission such that only the system may decrypt the marker upon receipt of the modified network data.

A remedial payload can be sent to the at least one identified source e.g. Rogue Agents . The remediation payload may include the previously identified remediation module for a particular identified source such as for example an anti virus program or a malicious program removal tool to remove malware or the virus that was identified by port scans conducted by ARPPS and or recognizance data gathered by the recognizance payload on the identified source. Using network analyzers the identified operating system open ports daemons processes services malware or virus are used to further customize the remedial payload transmitted to the identified source. Once a remedial payload is sent to the identified source by ARPPS ARPPS can remove one or more identified malwares or viruses using the previously exploited remote command and control interface or file transfer interface on the identified source. If the identified malware or virus cannot be removed the remedial payload may determine the offending process daemon or service on the identified source and modify the network data sent by the offending process daemon or service. Network data can be modified such that all data transmitted by the offending process daemon or service with its destination or source set for protected agents will be redirected to a null interface or a non existent address.

ARPPS may also send a notification payload that notifies the immediate person or entity in possession or control of the identified source with a notification message regarding the attack the unauthorized access and the appropriate prevention methods. The notification message in the context of a notification payload may contain information summarizing the malware or virus and request the immediate person or entity in possession and or control of the identified source to remove the malware and or virus.

In particular the ARPPS may include but is not limited to a Scanner Module an Active Response Module a Database Module a Geo location Module a Detection Module a Control Module a Tracing Module a Language Translation Module and a Passive Protection Module . All modules may be communicatively coupled between and among each other via the link . Additionally the ARPPS may interface with the upstream Provider network devices network resources and or agents via the interface and link and interface with downstream network devices and or agents via link and interface . Moreover it can be appreciated that link and or may be communication links implemented in software via one or more procedural calls and or hardware such as network devices or interfaces backplane bus midplane bus and the like. The Scanner Module can be configured to scan one or more agents to determine open and or closed ports one or more vulnerabilities and interface with the Database Module to store the results in one or more databases. The Detection Module can be configured to detect one or more attacks and or unauthorized access capture any messages in connection with the attack and or unauthorized access and interface with the Database Module to store the results in one or more databases. The Active Response Module can be configured to send one or more notification messages and one or more payloads to one or more agents identified. The Control Module can be configured to create one or more notification messages provide one or more interfaces including user interfaces or programming interfaces and control one or more modules to facilitate in detecting actively responding and or passively protecting against attacks and or unauthorized access. Additionally the Control Module can be configured to interface with the Database Module to retrieve identified sources and their associated information. The Tracing Module can be configured to trace an attack or unauthorized access or interface with upstream network devices network resources and or agents to initiate a trace an attack or unauthorized access. Once the sources have been identified the Tracing Module can determine the contact information for the identified sources and store the identified sources and their associated contact information in one or more databases by interfacing with the Database Module . The Language Translation Module can be configured to interface with and translate any information or data obtained from any of the modules in the ARPPS such as for example contact information in non English language retrieved by the Tracing Module . The Geo location Module can be configured to interface with any of the modules in the ARPPS such as for example the Control Module to geo locate a nearest local law enforcement agency and or third party entity in the vicinity of one or more identified sources and interface with the Database Module to store information associated with local a law enforcement agency and or a third party entity in one or more databases. The one or more databases may include but is not limited to source database system fingerprints database passive protection database trusted agents database attack database malware fingerprints database prevention database remediation database and or vulnerabilities database. The Passive Protection Module can be configured to block or throttle one or more attacks and or unauthorized access and send one or more messages to downstream network devices network resources and or agents such as for example one or more protected agents to protect and mitigate against attacks and or unauthorized access. Finally the Database Module can be configured to interface with any module in the ARPPS to store information sent from any of the modules in the ARPPS . Additionally the Database Module may also be configured to send the previously stored information to any of the modules in response to requests by the respective modules in the ARPPS .

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining providing updating or the like refer to the action and or processes of a computer or computing system or similar electronic computing device that manipulates and or transforms data represented as physical quantities e.g. electronic within registers and or memories into other data similarly represented as physical quantities within the memories registers or other such information storage transmission or display devices.

The system can be implemented as a hardware element a software element executed by a computer a firmware element embedded in hardware or any combination thereof. In various embodiments the logic flow may comprise or be implemented as executable computer program instructions. The executable computer program instructions may be implemented by software firmware a module an application a program a widget a subroutine instructions an instruction set computing code words values symbols or combination thereof. The executable computer program instructions may include any suitable type of code such as source code compiled code interpreted code executable code static code dynamic code and the like. The executable computer program instructions may be implemented according to a predefined computer language manner or syntax for instructing a computer to perform a certain function. The executable computer program instructions may be implemented using any suitable high level low level object oriented visual compiled and or interpreted programming language in accordance with the described embodiments.

In various embodiments a logic flow may comprise or be implemented as executable computer program instructions stored in an article of manufacture and or computer readable storage medium. The article and or computer readable storage medium may store executable computer program instructions that when executed by a computer causes the computer to perform methods and or operations in accordance with the described embodiments. The article and or computer readable storage medium may be implemented by various systems and or devices in accordance with the described embodiments. In such embodiments a computer may include any suitable computer platform device system or the like implemented using any suitable combination of hardware and or software.

The article and or computer readable storage medium may comprise one or more types of computer readable storage media capable of storing data including volatile memory or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. Additionally the article and or computer readable storage medium may be of the non transitory type. Examples of computer readable storage media may include but are not limited to random access memory RAM dynamic RAM DRAM Double Data Rate DRAM DDRAM synchronous DRAM SDRAM static RAM SRAM read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory e.g. NOR or NAND flash memory content addressable memory CAM polymer memory e.g. ferroelectric polymer memory phase change memory ovonic memory ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards or any other suitable type of computer readable storage media in accordance with the described embodiments.

In various embodiments the present invention or portions of the present invention for example ARPPS may be implemented on a variety of computing devices and systems wherein these computing devices include the appropriate processing mechanisms and the article and or the computer readable storage medium for storing and executing computer readable instructions such as programming instructions code and the like. As shown in personal computers in a computing system environment are provided. This computing system environment may include but is not limited to at least one computer having certain components for appropriate operation execution of code and creation and communication of data. For example the computer includes a processing unit typically referred to as a central processing unit or CPU that serves to execute computer based instructions received in the appropriate data form and format. Further this processing unit may be in the form of multiple processors executing code in series in parallel or in any other manner for appropriate implementation of the computer based instructions.

In order to facilitate an appropriate data communication and processing information between the various components of the computer a system bus is utilized. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus or a local bus using any of a variety of bus architectures. In particular the system bus facilitates data and information communication between the various components whether internal or external to the computer through a variety of interfaces as discussed hereinafter.

The computer may include a variety of discrete computer readable media components. For example this computer readable media may include any media that can be accessed by the computer such as volatile media non volatile media removable media non removable media etc. As a further example this computer readable media may include computer storage media such as media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVDs or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Further this computer readable storage medium may include communications media such as computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media wired media such as a wired network and a direct wired connection and wireless media such as acoustic signals radio frequency signals optical signals infrared signals biometric signals bar code signals etc. . Of course combinations of any of the above should also be included within the scope of computer readable media.

The computer may further include a system memory with computer storage media in the form of volatile and non volatile memory such as ROM and RAM. A basic input output system BIOS with appropriate computer based routines assists in transferring information between components within the computer and is normally stored in ROM. The RAM portion of the system memory typically contains data and program modules that are immediately accessible to or presently being operated on by processing unit e.g. an operating system application programming interfaces application programs program modules program data and other instruction based computer readable codes.

With continued reference to the computer may also include other removable or non removable volatile or non volatile computer storage media products. For example the computer may include a non removable memory interface that communicates with and controls a hard disk drive i.e. a non removable non volatile magnetic medium and a removable non volatile memory interface that communicates with and controls a magnetic disk drive unit which reads from and writes to a removable non volatile magnetic disk an optical disk drive unit which reads from and writes to a removable non volatile optical disk such as a CD ROM a Universal Serial Bus USB port for use in connection with a removable memory card etc. However it is envisioned that other removable or non removable volatile or non volatile computer storage media can be used in the exemplary computing system environment including but is not limited to magnetic tape cassettes DVDs digital video tape solid state RAM solid state ROM etc. These various removable or non removable volatile or non volatile magnetic media are in communication with the processing unit and other components of the computer via the system bus . The drives and their associated computer storage media discussed above and illustrated in provide storage of operating systems computer readable instructions application programs data structures program modules program data and other instruction based computer readable code for the computer whether duplicative or not of this information and data in the system memory .

A user may enter commands information and data into the computer through certain attachable or operable input devices such as a keyboard a mouse etc. via a user input interface . Of course a variety of such input devices may be utilized e.g. a microphone a trackball a joystick a touchpad a touch screen a scanner etc. including any arrangement that facilitates the input of data and information into the computer from an outside source. As discussed these and other input devices are often connected to the processing unit through the user input interface coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a USB. Still further data and information can be presented or provided to a user in an intelligible form or format through certain output devices such as a monitor to visually display this information and data in electronic form a printer to physically display this information and data in print form a speaker to audibly present this information and data in audible form etc. All of these devices are in communication with the computer through an output interface coupled to the system bus . It is envisioned that any such peripheral output devices be used to provide information and data to the user.

The computer may operate in a network environment through the use of a communications device which is integral to the computer or remote therefrom. This communications device is operable by and in communication to the other components of the computer through a communications interface . Using such an arrangement the computer may connect with or otherwise communicate with one or more remote computers such as a remote computer which may be a personal computer a server a router a network personal computer a peer device or other common network nodes and typically includes many or all of the components described above in connection with the computer . Using appropriate communication devices e.g. a modem a network interface or adapter etc. the computer may operate within and in communication through a local area network LAN and a wide area network WAN but may also include other networks such as a virtual private network VPN an office network an enterprise network an Intranet the Internet etc. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

As used herein the computer includes or is operable to execute appropriate custom designed or conventional software to perform and implement the processing steps of the method and system of the present invention thereby forming a specialized and particular computing system. Accordingly the presently invented method and system may include one or more computers or similar computing devices having a computer readable storage medium capable of storing computer readable program code or instructions that cause the processing unit to execute configure or otherwise implement the methods processes and transformational data manipulations discussed hereinafter in connection with the present invention. Still further the computer may be in the form of a personal computer a personal digital assistant a portable computer a laptop a palmtop a mobile device a mobile telephone a server or any other type of computing device having the necessary processing hardware to appropriately process data to effectively implement the presently invented computer implemented method and system.

Computer represents one or more work stations appearing outside the local network which may include one or more user computers providing one or more user environments. The one or more users interact with computer which can be an exchange system of logically integrated components including a database server and a web server. In addition secure exchange of information or data can take place through the Internet using the secure World Wide Web. An e mail server can reside on system computer or a component thereof. Electronic data interchanges can be transacted through networks connecting computer and computer .

While certain features of the embodiments have been illustrated as described above many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments.

