---

title: System and method for enabling control of mobile device functional components
abstract: A system is provided including a non-transitory computer readable storage medium that causes a mobile device to store client states indicating statuses of mobile device functional components. Each client state corresponds to a functional component. A client digest of the client state is stored. A server digest corresponding to a server state and the client digest is received from a server. The server state indicates a status of a mobile device functional component. The server digest is compared with the client digest. A state request is transmitted to the server responsive to a determination of a difference between the server digest and client digest. The server state is received from the server. The functional component is enabled or disabled as indicated by the server state. The server state and digest are stored as the client state and digest respectively. Methods for control of mobile device functional components are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407492&OS=09407492&RS=09407492
owner: Location Labs, Inc.
number: 09407492
owner_city: Emeryville
owner_country: US
publication_date: 20131125
---
This application is a continuation in part of U.S. application Ser. No. 13 217 093 filed Aug. 24 2011. This application further claims the benefit of U.S. Provisional Application No. 61 749 904 filed Jan. 7 2013. Application Ser. No. 13 217 093 and 61 749 904 are incorporated by reference as if fully set forth.

The growing ubiquity of locatable mobile devices such as mobile telephones smart phones cellular enabled personal computers and GPS systems has created a demand for applications offering novel content on mobile devices. Known applications exist to provide games social networking navigation assistance locating of points of interest location tracking advertising and consumer and business related services via a user s mobile device.

Developers of applications for mobile devices are often burdened by the complexity in designing applications which function effectively no matter the type of mobile device or the telecommunication carrier servicing the mobile device. An application typically needs to control mobile device functionality and retrieving data from a particular mobile device. However effecting mobile device control and aggregating and maintaining data required for application functionality is often too complex and time consuming to make application development worthwhile and cost effective. It would be desirable to provide a system which facilitates the development and maintenance of applications for mobile devices by addressing issues of complexity in mobile device control and data collection.

Operating systems such as APPLE IOS MICROSOFT WINDOWS and ANDROID make use of badges to store application specific information. Badges are commonly used to relate application information to a user while the application is operating in a background state. For example badge numbers may be displayed in a user interface on an application icon of an email client to convey the number of unread emails while the email client is operating in a background state. Applications typically have less functionality and correspondingly use less system resources operating in a background state in the background than in a foreground state in the foreground .

A system is provided comprising a non transitory computer readable storage medium having encoded thereon instructions that when executed on a processor of a mobile device cause the mobile device to perform a process. The process includes storing a plurality of client states indicating statuses of functional components of the mobile device wherein each of the plurality of client states corresponds to at least one of the functional components. For each of the plurality of client states a client digest of the client state is stored on the mobile device. Periodic transmissions of a particular server digest are received via the network from a server which particular server digest corresponds to a particular one of a plurality of server states maintained by the server and which server states indicate statuses of functional components of the mobile device wherein the particular server digest further corresponds to one of the plurality of client digests. The particular server digest is compared with the corresponding client digest. A state request corresponding to the particular one of a plurality of server states is transmitted to the server via a network responsive to a determination of a difference between the particular server digest and the corresponding client digest. The particular one of the plurality of server states is received from the server via the network. At least one of the functional components is enabled or disabled as indicated by the received particular one of the plurality of server states. The received particular one of the plurality of server states is stored as the corresponding client state and the received particular server digest is stored as the corresponding client digest.

A method is provided for enabling control of mobile device functional components. The method includes storing with a server within the network a plurality of server states and a plurality of server digests respectively corresponding to the plurality of server states wherein the server states and the server digests correspond to a particular mobile device. A plurality of client states are stored with the mobile device indicating statuses of functional components of the mobile device wherein each of the plurality of client states corresponds to at least one of the functional components. For each of the plurality of client states a client digest of the client state is stored with the mobile device. A request to modify the status of at least one of the functional components of the mobile device is received with the server from an application via the network. The method further includes updating with the server at least one of the server states and at least one of the server digests corresponding to the at least one of the functional components of the mobile device responsive to the request from the application to modify the status of the at least one of the functional components. The at least one updated server digest is transmitted from the server to the mobile device via the network. The at least one updated server digest is received with the mobile device via the network from the server wherein the at least one updated server digest corresponds to at least one of the client digests. The at least one updated server digest is compared with the corresponding at least one client digest with the mobile device. A state request corresponding to the at least one updated server state is transmitted from the mobile device to the server via the network responsive to a determination of a difference between the at least one updated server digest and the corresponding at least one client digest. The state request is received with the server from the mobile device. The at least one updated server state is transmitted from the server to the mobile device. The at least one updated server state is received with the mobile device from the server via the network. At least one of the functional components is enabled or disabled with the mobile device as indicated by the received at least one updated server state. The received at least one updated server state is stored with the mobile device as the corresponding at least one client state and the received at least one updated server digest is stored with the mobile device as the corresponding at least one client digest.

Another method is provided for enabling control of mobile device functional components. The method includes providing a server within a network wherein the server comprises at least one computing system within the network. A plurality of server states and a plurality of server digests respectively corresponding to the plurality of server states corresponding to a particular mobile device are stored with the server. A request to modify the status of at least one of the functional components of the particular mobile device is received with the server from an application via the network. At least one server state and at least one server digest corresponding to the at least one of the functional components of the particular mobile device are updated with the server responsive to the request from the application to modify the status of the at least one of the functional components. the at least one updated server digest is transmitted with the server to the particular mobile device. A state request corresponding to the at least one updated server state is received with the server from the particular mobile device and at least one updated server state is transmitted to the to the particular mobile device responsive to the state request.

A method for initiating and performing an action on a computing device is provided. The method includes transmitting by a server via a network a message to an application executable on a computing device the application corresponding to a badge enabled by an operating system of the computing device the message comprising a request to change a status indicator of the badge. The message is received by the computing device and the status indicator of the badge is changed responsive to the message. The application polls to determine a change in the status indicator of the badge and the application determines a change in the status indicator of the badge based on the polling. The application transmits via the computing device a state request to the server for a functional component state corresponding to at least one functional component of the device wherein the state request is transmitted at least based on the determination of the change in the status indicator. The server receives the state request. The server transmits the functional component state to the computing device. The computing device receives from the server the functional component state. The application determines that the functional component state indicates a requirement to perform a particular action and the application performs the particular action.

Another method for initiating and performing an action on a mobile computing device is provided. The method includes receiving by a computing device via a network a message transmitted to an application on the computing device the application corresponding to a badge enabled by an operating system of the computing device the message comprising a request to change a status indicator of the badge. The computing device changes the status indicator of the badge responsive to the message. The application polls to determine a change in the status indicator of the badge. The application determines a change in the status indicator of the badge based on the polling. The application transmits via the computing device a state request to a server for a functional component state corresponding to at least one functional component of the device wherein the state request is transmitted at least based on the determination of the change in the status indicator. The computing device receives from the server the functional component state. The application determines that the functional component state indicates a requirement to perform a particular action and the particular action is performed.

A system for initiating and performing an action on a computing device is provided. The system includes a server and a computing device operable in a network. The server is configured to transmit via the network a message to an application executable on the computing device the application corresponding to a badge enabled by an operating system of the computing device the message comprising a request to change a status indicator of the badge. The computing device is configured to receive the message and change the status indicator of the badge responsive to the message. The computing device is configured to enable polling by the application to determine a change in the status indicator of the badge. The computing device is configured to enable determining by the application a change in the status indicator of the badge based on the polling. The computing device is configured to enable transmitting a state request to the server for a functional component state corresponding to at least one functional component of the device wherein the state request is transmitted at least based on the determination of the change in the status indicator. The server is configured to receive the state request. The server is configured to transmit the functional component state to the computing device. The computing device is configured to receive from the server the functional component state. The computing device is configured to enable determining by the application that the functional component state indicates a requirement to perform a particular action and the computing device is configured to perform the particular action.

Referring to a schematic illustration is shown of an exemplary operating environment in which a server state manager functions in a communications network preferably including one or more wired or wireless networks or a combination thereof. The server state manager and its constituent elements are preferably implemented on a server via hardware components software components sharing one or more processing units or a suitable combination thereof. As described herein a server is a computer system or a plurality of computer systems integrally constructed or connected via a network. The server state manager has a client interface and a third party interface . The client interface interfaces with a client state manager via a synchronous interface and an asynchronous interface . The third party interface is configured to interface with a third party application . The client state manager is preferably implemented via encoded instructions on a mobile device which mobile device preferably functions as a wireless transmitting and receiving device with cellular telephone functionality and which instructions can be hardware or software enabled. The third party application can reside on the mobile device on which the client state manager is implemented. Alternatively the third party application can reside on a separate computer system in communication with the server state manager via the communications network .

The client state manager includes a functional component enablement engine which is configured to enable and disable functional components of a mobile device implementing the client state manager . Functional components of a mobile device preferably include software or hardware driven features settings capabilities and resources. Different mobile devices may correspond to different functional components.

The client interface preferably implements a Representational State Transfer styled application program interface RESTful API for communication with the client state manager . The server state manager further exposes functional components of a mobile device implementing the client state manager to a participating third party application via the third party interface using a another RESTful API. Alternatively other suitable application program interface architecture can be leveraged for server state manager communications.

The server state manager includes a server state database which stores states which indicate statuses of functional components of each mobile device implementing the client state manager . The statuses of the functional components of the mobile device can comprise an indication of whether a particular functional component is enabled or disabled or an indication of one or more scheduled time periods when a particular functional component is enabled or disabled. The statuses of the functional components can further include a particular set of modifiable parameters. A server digest database stores a digest for each of the states. Each digest is preferably determined via a hash function applied to elements of a respective state by a digest generation engine . The client state manager includes a client state database which stores states and a client digest database which stores digests respectively corresponding to the stored states which states and digest are received from the server state manager . For the purpose of clarity states and digests corresponding to a particular mobile device and stored by the server state manager are respectively termed server states and server digests and server states and server digests received from the server state manager and stored by the client state manager are respectively termed client states and client digests .

The server state manager is configured to receive from a third party application via the third party interface a request to modify the status of one or more functional components of a particular mobile device implementing the client state manager . An application s request to modify a functional component status can come in the form of a preference indication for example turn on mobile device location streaming or turn off mobile device location streaming . An application s request can further include modification of one or more parameters of a functional component. The server state manager uses the state update engine to update one or more server states respectively corresponding to the one or more of the functional components responsive to the request from the third party application to modify the status of the functional components. When a particular server state is updated a corresponding server digest is updated via the digest generation engine . Further a particular functional component can be related to other functional components wherein an application s request to modify the status of a particular functional component triggers the update of the state and digest corresponding to the particular functional component and one or more states and digests corresponding to one or more related functional components.

In response to server state and server digest updates updated server digests are transmitted from the server state manager via the client interface to a mobile device implementing the client state manager . The server state manager is configured to transmit updated server digests to the mobile device in asynchronous communications via the asynchronous interface of the client state manager for example using Short Message Service SMS protocol. The client state manager compares each received server digest with its corresponding client digest using the digest comparison engine . If a difference between a particular server digest and the corresponding client digest is detected a state request corresponding to the particular state is generated by a state request engine and the state request is transmitted to the server state manager via the client interface .

State requests are preferably made by the client state manager in a synchronous communication via the synchronous interface for example using Hypertext Transfer Protocol Secure HTTPS . The server state manager transmits via the client interface a particular server state responsive to a corresponding state request in a synchronous communication which is preferably the synchronous communication in which the state request was transmitted. The transmitted server state can be the same updated server state represented by the server digest transmitted to the client state manager in the asynchronous communication indicated above. Alternatively if the updated server state has been re updated since the asynchronous transmission of the corresponding server digest the re updated server state can be transmitted to the client state manager . The server state is preferably transmitted along with the corresponding current digest in the synchronous communication and the received state and digest are stored in the respective client state database and client digest database . Transmitting the most current digest in the synchronous communication is important since it is possible that the particular server state and corresponding server digest may have been re updated by the state update engine of the server state manager since the updated digest was transmitted to the client state manager in the asynchronous communication. Further additional server digests corresponding to functional components related to the particular functional component can be transmitted with the state and digest of the particular functional component responsive to the state request. Thereafter the client state manager s digest comparison engine compares each received additional server digest with its corresponding client digest and transmits another state request if a difference is determined between an additional server digest and its corresponding client digest and the server state manager thereafter returns one or more states corresponding to the new state request.

The client state manager uses the functional component enablement engine to enable or disable a functional component as indicated by the received corresponding server state. The received server state is stored by the client state manager as the corresponding client state in the client state database preferably overwriting the existing corresponding client state. Similarly the received server digest is stored by the client state manager as the corresponding client digest in the client digest database preferably overwriting the existing corresponding client digest.

Referring to an example implementation of the invention is shown in which the third party application resides on a mobile device on which the client state manager is implemented. The server state manager is implemented on a state server . A message aggregation server executing a message aggregator for example a Short Message Service SMS aggregator or Short Message Service Center SMSC disseminates asynchronous communications for example SMS messages from the server state manager to the client state manager for example via a wireless telecommunications network. Synchronous communications for example implementing HTTPS through a data network are initiated between the client state manager and the server state manager and between the third party application and the server state manager respectively.

Referring to in another example implementation of the invention the third party application can alternatively reside away from the mobile device on a separate computer system such as an application server in communication with the server state manager for example via a data network. The message aggregation server disseminates asynchronous communications for example SMS messages from the server state manager to the client state manager . Synchronous communications are initiated between the client state manager and the server state manager and between the third party application and the server state manager respectively.

As indicated above functional components can include a mobile device s software or hardware driven features settings capabilities and resources. Tables 1 4 below respectively show example features capabilities settings and resources with associated component numbers which can be enabled and disabled by the functional component enablement engine of the client state manager on a particular mobile device. Alternatively other suitable functional components can be enabled by the client state manager . Table 5 below shows example parameters which can be set for particular features and capabilities via application request.

Some functional components can be related to the extent that modification of the status of a particular functional component may result in modification in the status of one or more related functional components. Referring to and Tables 1 4 a particular mobile device can be enabled for example with features settings capabilities and resources . Particular features are related to particular capabilities and particular resources wherein modification of the status of a particular capability or particular resource may result in modification of the status of a particular feature or vice versa. Mobile device user specific data subscriber specific data for example mobile device location data is disseminated by a mobile device based on status of the capabilities which data is stored in a subscriber database in the server state manager for dissemination to an authorized third party application .

Referring to capabilities C1 location streaming and C2 on demand location requesting are related to feature F1 location data access wherein a change in status of feature F1 can result in a change in status of capability C1 or C2 or alternatively a change in status of capability C1 or C2 results in a change in status of feature F1. For example a request from a third party application to enable or disable feature F1 immediately or during a scheduled time period causes the server state manager to update the server states and server digests of feature F1 and capabilities C1 and C2 to reflect that features F1 and capabilities C1 and C2 are enabled or disabled. In another example a request from a third party application to the server state manager via the third party interface to disable location streaming capability C1 causes the state update engine to update the server state of capability C1 and causes the digest generation engine to update the server digest of capability C1. The request further causes the server state manager to update the server state and server digest of the location data access feature F1.

Referring to capabilities C13 Locking interface based on time schedule and C14 Locking interface based on driving and resources R1 R7 are related to feature F8 Device interface locking control wherein a change in status of feature F8 can result in a change in status of capability C13 or C14 or alternatively a change in status of capability C13 or C14 results in a change in status of feature F8. For example a request from a third party application to enable or disable the device interface locking control feature F8 immediately or during a scheduled time period causes the server state manager to update the server states and server digests of feature F8 and capabilities C13 and C14 to reflect that feature F8 and capabilities C13 and C14 are enabled or disabled. In another example a request from a third party application to the server state manager via the third party interface to lock the mobile device interface during a particular time period via capability C13 causes the state update engine to update the server state of capability C13 and causes the digest generation engine to update the server digest of capability C13. The request further causes the server state manager to update the server state and server digest of the device interface locking control feature F8.

In view of the above examples capabilities C1 and C2 comprise a capability group which enables feature F1 and capabilities C13 and C14 and resources R1 R7 enable features F8. Referring to Table 3 capabilities C3 and C4 comprise a capability group which enables feature F2 capabilities C5 and C6 comprise a capability group which enables feature F3 capabilities C7 and C8 comprise a capability group which enables feature F4 capabilities C9 and C10 comprise a capability group which enables feature F5 capability C11 enables feature F6 capability C12 enables feature F7 capabilities C13 and C14 and resources R1 R7 enable feature F8 capability C15 and resource R8 enable feature F9.

Referring to Table 5 and particular enabled features and capabilities allow setting of parameters by a third party application. For example as shown in a third party application enabling the locking interface based on driving capability C14 can set 1 parameter P1 to select applications which can run when device interface is locked 2 parameter P2 to select phone numbers which interface locked device can continue to place calls to or receive calls from 3 parameter P3 to select phone numbers from which the interface locked device can continue to receive messages e.g. SMS from 4 parameter P4 to select whether a hands free device connected to the interface locked device e.g. Bluetooth headset can be used to place phone calls and 5 parameter P5 to select whether an auto reply message is sent to a user device sending a message e.g. SMS to the interface locked device. As shown in Table 5 parameters P1 through P5 are also applicable to capability C13 locking interface based on time schedule and feature F8 device interface locking control. As shown in a third party application enabling the screen messaging capability C15 can set 1 parameter P6 to specify message content 2 parameter P7 to specify a URL link associated with a specified message and 3 parameter P8 to select whether to launch a device web browser and connect to a specified URL responsive to user interaction with a specified message e.g. user clicking on message .

Referring to an illustrative communication flow between the client state manager and the server state manager is shown. The communication flow can occur for example responsive to mobile device startup responsive to initiation of the client state manager responsive to other event or at predetermined scheduled time intervals also termed herein as heartbeat communications . In a synchronous communication the client state manager transmits a request for a particular functional component server state. In a synchronous communication the server state manager transmits sends the particular functional component server state and server digest responsive to the state request. The communications can be substantially continuous as a single communication or separated by an interval of time.

Referring to another illustrative communication flow between the client state manager and the server state manager is shown. In an asynchronous communication the server state manager transmits an updated functional component server digest communication and the client state manager receives the updated functional component server digest communication . Communication may be initiated by the server state manager in response to a server state update for example in response to an application request to modify the status of a functional component. In a synchronous communication the client state manager transmits a state request responsive to a determination of a difference between the transmitted server digest and a corresponding client digest. In a synchronous communication the server state manager transmits the particular functional component server state and server digest responsive to the state request. One or more server digests can be sent in the communication wherein the client state manager transmits a state request corresponding to those states for which there is a determined difference between the transmitted server digest and a corresponding client digest communication and the server state manager transmits one or more states and one or more digests corresponding to the state request communication .

Referring to another illustrative communication flow between the client state manager and the server state manager is shown. In a synchronous communication the client state manager transmits a first state request corresponding to a particular state and particular functional component. The first state request can be transmitted by the client state manager for example responsive to a determination of a difference between a received server digest and a corresponding client digest for the particular state which server digest can be received for example in the manner shown in asynchronous communication of . Alternatively the first state request communication can be transmitted by the client state manager for example responsive to mobile device startup responsive to initiation of the client state manager responsive to other event or at predetermined scheduled time intervals as described above with reference to . In a synchronous communication the server state manager transmits the particular functional component server state and server digest responsive to the first state request. In a synchronous communication responsive to the first state request the server state manager transmits another server digest corresponding to a related server state and a related functional component which is related to the particular functional component corresponding to the first state request. The communications can be substantially continuous as a single communication or separated by an interval of time with communication or communication first in time. In a synchronous communication the client state manager transmits a second state request corresponding to the related server state responsive to a determination of a difference between the related server digest and a corresponding client digest. In a synchronous communication the server state manager transmits the related functional component server state and server digest responsive to the second state request. One or more states can be requested by the client state manager in communications and and one or more states or digests can be transmitted by the server state manager in communications and .

A non limiting example pursuant to the communication flows and of follows. A 3party application transmits a request to the server state manager to enable the location streaming capability C1 and on demand location requesting capability C2. Referring to Table 3 the capabilities C1 and C2 are related to the location data access feature F1. Accordingly states and digests corresponding to functional components C1 C2 and F1 are updated by the state update engine and digest generation engine . The server state manager transmits the server digest corresponding to the functional component F1 to the client state manager for example as shown in communication . The client state manager transmits a request to the server state manager for the server state corresponding to functional component F1 responsive to a determination of a difference between the received server digest for component F1 and the corresponding client digest e.g. communication . The server state manager transmits the server state corresponding to feature F1 and the updated server digests corresponding to capabilities C1 and C2 e.g. communications . The client state manager transmits a second state request corresponding to the server states for capabilities C1 and C2 responsive to a determination of a difference between the received server digests for capabilities C1 and C2 and the corresponding client digests e.g. communication stored in the client digest database . The server state manager transmits the component server states and server digests for capabilities C1 and C2 responsive to the second state request e.g. communication which are subsequently stored as the respective client states in the client state database .

Referring to another illustrative communication flow between the client state manager and the server state manager is shown. In an asynchronous communication the server state manager transmits an initial functional component server digest corresponding to a particular functional component communication and the client state manager receives the initial functional component server digest communication . At some point after transmitting the initial server digest the server state manager updates the status of the server state corresponding to the particular functional component for example in response to an application request. Responsive to the update in a second asynchronous communication the server state manager transmits an updated functional component server digest corresponding to the particular functional component communication and the client state manager receives the updated functional component server digest communication . Prior to receiving the updated functional component server digest in a synchronous communication the client state manager transmits a state request responsive to a determination of a difference between the initial server digest and a corresponding client digest. In a synchronous communication the server state manager transmits the updated server state and updated server digest corresponding to the particular functional component responsive to the state request. The client state manager stores the updated server state as the client state for the particular functional component in the client state database for example by caching. Upon later receiving the updated server digest in the asynchronous communication the client state manager compares the updated server digest with the corresponding client digest and determines no difference wherein the client state manager does not transmit an additional state request. The delays in receiving the initial and updated server digests shown in can result for example from network delays. A benefit of the invention illustrated by the communication flow is that storing of digests by the client state manager results in fewer required synchronous requests even when network behavior causes asynchronous communications to arrive out of order or after a delay thereby conserving network bandwidth system resources and mobile device battery charge.

Referring to the third party interface of the server state manager enables a plurality of application program interfaces APIs accessible to a third party application . In an initial provisioning process an application provisioning engine generates an access control list which is stored in an access control list ACL database restricting which features F1 Fn and capabilities C1 Cn can be used by the third party application and credentials are provided to the third party application consistent with the access control list via the provisioning API . Each feature F1 Fn is tied to an API and each capability is tied to an API and . Alternatively APIs corresponding to any suitable functional components can be enabled.

The third party interface receives API requests from the third party application and one or more credentials which are used by the server state manager to identify the application via the credential identification engine and determine its corresponding access control list from the ACL database . An API request from an application for a particular capability API will be rejected unless the application s access control list indicates that the application has use rights for the particular capability C1 Cn. An API request from an application for a particular feature API will be rejected unless the application s access control list indicates that the application has use rights for the particular feature or at least one capability C1 Cn related to the feature.

Using a subscriber discovery API the third party application can query which mobile devices are implementing the client state manager and in communication with the server state manager . Preferably the third party application provides a mobile device phone number or other user subscriber identifier or mobile device identifier via the subscriber discovery API to initiate a query regarding the mobile device. The third party application can also query which functional components e.g. features and capabilities are enabled or available on a particular mobile device. The third party application can use this information to determine whether a client state manager needs to be installed or upgraded on a particular mobile device.

A third party application which requires access or control of a particular mobile device via the client state manager is preferably required to obtain consent from a user with authority to make privacy decisions for the particular mobile device. Before accessing controls of a functional component API such as the feature APIs or capability APIs for example to modify status of a functional component a third party application must record the user consent with the particular functional component API. The consent is verified by a consent verification engine . In the absence of user consent access to the particular functional component API will be rejected by the consent verification engine .

Because the server state manager supports more than one third party application controlling a particular mobile device running the client state manager the server state manager is configured to resolve conflicts and ambiguities among application requests. The server state manager can set priorities for the third party applications wherein for a particular mobile device the request of an application with a higher priority can override the request of an application with a lower priority. For example a request from a higher priority application to enable location streaming capability C1 can override a request from a lower priority application to disable location streaming.

In a registration process when the client state manager is initially executed on a mobile device the client state manager communicates identifying information and which functional components e.g. features capabilities settings and resources it supports to the server state manager . A client provisioning engine generates a unique token which the server state manager transmits to the client state manager via the synchronous interface to be used by the client state manager in subsequent communications with the server state manager ensuring that the mobile device running the client state manager can be reliably authenticated. During the registration process the server state manager also preferably transmits a cryptographically secure code to the client state manager via SMS or other telephone number specific protocol. The client state manager transmits this code back to the server state manager to prove the validity of the mobile device s phone number and allow the server state manager to use the client state manager to interact with functional components associated with the phone number.

The client state manager preferably periodically sends notification messages to the server state manager . These messages can indicate that the mobile device is operational and that the client state manager is active and enabled. Messages can also include updates regarding which functional components are currently supported on the mobile device.

Given appropriate access control permissions mobile device user consent and functional component status a third party application can cause the client state manager to send notifications with subscriber specific data to the server state manager . The subscriber specific data preferably includes mobile device use data gathered by the mobile device during use. Referring to the capabilities shown in Table 3 data transmitted from the client state manager to the server state manager can include for example mobile device location data capabilities C1 and C2 and SMS MMS and voice call activity data capabilities C3 C8 application installation activity capability C11 and contact activity capability C12 . Other capabilities for example forcing GPS on if off C10 locking a mobile device interface based on time schedule or driving capabilities C13 and C14 and mobile device screen messaging capability C15 enable an application to control a mobile device without causing transmission of subscriber specific data from the client state manager to the server state manager .

The server state manager stores received subscriber specific data in the subscriber database for a predetermined time period to permit gathering by an authorized application . The server state manager is configured to stream mobile device location to an application per capability C1 and to transmit on demand location requests from an application to a mobile device per capability C2. The server state manager is further configured to enable an authorized application to gather mobile device incoming and outgoing messaging activity per capabilities C3 C6. The server state manager is further configured to enable an authorized application to gather mobile device incoming and outgoing voice call activity per capabilities C7 and C8. The server state manager is further configured to enable an authorized application to gather indications of applications installed on a mobile device per capability C11 and to gather indications of mobile device subscriber contacts per capability C12. The server state manager is further configured to enable an authorized application to gather an indication of whether GPS functionality is enabled or disabled on the mobile device per capability C9 and to transmit instructions from the application to the client state manager to enable if off GPS functionality on the mobile device per capability C10.

An authorized third party application can query the subscriber database via the third party interface for example via a RESTful API enabled by the server state manager . The server state manager can further implement Simple Update Protocol SUP or other suitable protocol for notifying an authorized third party application when updates to subscriber specific data are available. The third party interface is further preferably configured to receive preference indications from a third party application regarding what subscriber specific data it requires and at what frequency or under what circumstances. In such manner the server state manager preferably supports a publish subscribe model in which an application subscribes to a particular type of subscriber specific data and receives notifications from the server state manager when such data becomes available.

In another embodiment a method is provided for obtaining via a network the location of a wireless mobile communication device mobile device for example an IPHONE brand mobile communication device. The method includes the following steps referring for example to the systems shown in 

Changing the icon badge number with the push message is required because when running in the background the application may not have access to incoming push messages e.g. APN messages . However the state of the application icon badge number is accessible when the application is running in the background. By polling for changes to this badge number while the application is running in the background it is possible to determine that the server system has requested the user s location.

Referring to a method for initiating and performing an action on a computing device for example the mobile device is shown. The method includes receiving by a computing device via a network a message transmitted to an application on the computing device the application corresponding to a badge enabled by an operating system of the computing device the message comprising a request to change a status indicator of the badge step . The application can enable for example a client state manager on the mobile device and the message can be received for example from a network connectable server such as the state server which implements the server state manager . The status indicator of the badge can include an icon badge number wherein changing the status indicator involves changing the icon badge number.

The status indicator of the badge is changed by the computing device responsive to the message step . The application polls to determine a change in the status indicator of the badge step and the application determines a change in the status indicator of the badge based on the polling step . The application via the computing device transmits a state request to the server for a functional component state corresponding to at least one functional component of the device wherein the state request is transmitted at least based on the determination of the change in the status indicator step . The computing device receives the functional component state from the server step . The application determines that the functional component state indicates a requirement to perform a particular action step and the particular action is performed by the computing device step . Functional components of a mobile device preferably include software or hardware driven features settings capabilities and resources. Different devices may correspond to different functional components.

The requirement to perform a particular action can include a requirement to determine the location of the computing device for example when the computing device is embodied as a mobile device wherein the application determines a location of the mobile device and transmits the location of the mobile device to a server system . The application can be executing in a background state corresponding to a reduced use of resources of the mobile device as compared to a foreground state in which the application is also executable wherein the status indicator of the badge is changed while the application is executing in the background state.

Referring to a method shows server side operations corresponding to the above described method for initiating and performing an action on a computing device. In a step a message for example a push message is transmitted from a server system to an application on a computing device the message requesting a change in a status indicator of a badge associated with the application. The computing device receives the message step and transmits a state request to the server for a functional component state step as described above. The server receives the state request step and transmits the corresponding functional component state to the device step which device receives the functional component state in step as described above.

While embodiments of the invention have been described in detail above the invention is not limited to the specific embodiments described above which should be considered as merely exemplary. Further modifications and extensions of the invention may be developed and all such modifications are deemed to be within the scope of the invention as defined by the appended claims.

