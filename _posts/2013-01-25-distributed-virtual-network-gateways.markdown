---

title: Distributed virtual network gateways
abstract: Computerized methods, systems, and computer-readable media are provided for distributing virtualized gateway functionality to multiple nodes within a physical network. Initially, drivers that carry out the gateway functionality are provisioned to cooperate with endpoints instantiated on the network nodes, while a directory service is implemented to maintain a mapping between virtual internet protocol (IP) addresses and location-dependent addresses, as well as a table enumerating transformation actions according to known pathways connecting the endpoints within a network. In operation, the directory service replies to requests from the driver (carrying source and destination IP addresses of data packets) with the appropriate location-dependent addresses (utilizing the mapping) and the appropriate transformation action(s) (utilizing the table). The transformation action(s) include rewriting headers of the data packets to include the location-dependent addresses, encapsulating the data packets as inner data packets within respective outer data packets, or configuring the data packets with a tunneling protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08982890&OS=08982890&RS=08982890
owner: Microsoft Technology Licensing, LLC
number: 08982890
owner_city: Redmond
owner_country: US
publication_date: 20130125
---
This application is a continuation of U.S. application Ser. No. 12 820 896 filed Jun. 22 2010 now pending entitled Distributed Virtual Network Gateways which is herein incorporated by reference.

Large scale networked systems are commonplace platforms employed in a variety of settings for running service applications and maintaining data for business and operational functions. For instance a data center e.g. physical cloud computing infrastructure may provide a variety of services e.g. web applications email services search engine services etc. for a plurality of customers simultaneously. These large scale networked systems typically include a large number of resources distributed throughout the data center in which each resource resembles a physical machine or a virtual machine VM running on a physical host. When the data center hosts multiple tenants e.g. customer programs these resources are allocated from the data center to the different tenants to meet their usage requirements. The set of resources allocated to a tenant can be grouped in a logical or virtual subnet for ease of management and security isolation.

Customers of the data center often require service applications running in an enterprise private network e.g. server managed by a customer that is geographically remote from the data center or other third party network to interact with the software being run on the resources in the data center. To implement this interaction while separating the resources allocated to a tenant securely from resources allocated to other tenants a hosting service provider may employ a single centralized routing mechanism to serve as a network gateway among all machines belonging to a tenant within a virtual subnet or resources managed by a host hypervisor and the tenant s remote resources. However this architecture of employing the centralized routing mechanism is ineffective because operation depends on the mechanism s physical proximity to the machines resources it is serving. For instance if the machines resources are in different parts of the data center or in different locations e.g. spanning the data center and enterprise private network then at least some machines resources will be faced with higher latency and a lower bandwidth connection with the driver while being utilized by other machines resources. Thus the centralized routing mechanism becomes a common congestion point for communications entering and exiting a particular virtual subnet. Further the machines resources will be forced to transmit data packets over suboptimal routes when confined to passing all communications through this centralized routing mechanism.

As such employing emerging technologies to distribute virtual network gateways or drivers throughout a data center by embedding the drivers within physical machines incorporating into the local machine network stack or virtual machines incorporating into the virtual switch network stack will enhance the transmission of data packets by discovering and utilizing optimal network pathways reduce network congestion by distributing gateway functionality and serve to further isolate the communications of the data center customers.

This Summary is provided to introduce concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments of the present invention provide an architecture of distributed virtual network gateways that addresses the issues described above. These gateways may take the form of drivers that can be provisioned throughout a data center by embedding the drivers within physical machines incorporating into the local machine network stack or virtual machines incorporating into the virtual switch network stack . As will be described in detail below the drivers enhance the transmission of data packets by discovering and utilizing optimal network pathways reduce network congestion by distributing gateway functionality and serve to further isolate the communications of the data center customers. Further the drivers protect the integrity of a customer s service application running in a cloud computing platform which is configured to allow multiple tenants e.g. tens of thousands per cloud to share the computing resources in a cloud service data center.

Generally the drivers support selecting a most appropriate format and pathway of a communication between endpoints that are allocated to the service application while virtually partitioning the allocated network adapters from other resources in a data center. By way of clarification the endpoints may comprise network adapters instantiated on virtual machines VMs and or physical machines. To achieve selection of the format and the pathway of data packets within the communication in embodiments the drivers reach out to directory services that assist the drivers in making routing decisions for their respective source and destination endpoints. Bolstered by information returned from the directory service the drivers function to properly manage the routing of data packets therefrom and at the same time prevent unauthorized communications by properly transforming the data packets.

In an exemplary embodiment the drivers serve to disperse virtualized gateway functionality to multiple virtualized endpoints of nodes within a physical network. Initially the drivers are provisioned to cooperate with endpoints instantiated on the network nodes. Further the directory service is implemented to maintain a mapping between virtual internet protocol IP addresses and location dependent addresses as well as a table enumerating transformation actions according to known pathways connecting the endpoints within a network. Each of the drivers is capable of communication with the directory service when removed from the drivers at a central location or locally accessing the directory service when incorporated within the drivers internally.

In operation a recipient endpoint which is linked to a particular driver may receive one or more data packets. The driver may read a header of the data packets to ascertain a source IP address and a destination IP address. The driver may further package the source and destination IP addresses within a request for routing information and convey the request to the directory service either internally or externally. The directory service may reply to the request from the driver with appropriate location dependent addresses of a forwarding path by inspecting the mapping with source and destination IP addresses. In addition the directory service may reply to the request with appropriate transformation action s by inspecting the table with the forwarding path. The transformation action s may include one or more of the following rewriting headers of the data packets to include the location dependent addresses encapsulating the data packets as inner data packets within respective outer data packets that are structured with headers carrying the location dependent addresses or configuring the data packets with a tunneling protocol e.g. per security policies of the data center or a service model established by a customer .

Upon receiving the routing information at the driver the driver may deliver the forwarding path and the transformation action to the recipient endpoint. In turn the recipient endpoint implements the forwarding path and applies the transformation action when transmitting the data packets therefrom. In other embodiments the driver may perform the appropriate transformation action directly to the data packets rather than relying on an endpoint e.g. the recipient endpoint to perform that functionality.

Accordingly upon the driver and directory service acting in concert to make an informed routing decision the recipient endpoint linked to the driver may be provided with an optimal choice of network pathways thereby reducing network congestion and an appropriate transformation action thereby enforcing isolation of transmissions outside the data center.

The subject matter of embodiments of the present invention is described with specificity herein to meet statutory requirements. However the description itself is not intended to limit the scope of this patent. Rather the inventors have contemplated that the claimed subject matter might also be embodied in other ways to include different steps or combinations of steps similar to the ones described in this document in conjunction with other present or future technologies. Moreover although the terms step and or block may be used herein to connote different elements of methods employed the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.

Embodiments of the present invention relate to methods computer systems and computer readable media for making informed routing decisions at distributed drivers that provide virtualized gateway functionality in a localized fashion.

In one aspect embodiments of the present invention relate to one or more computer readable media having computer executable instructions embodied thereon that when executed perform a method for managing distribution of data packets between endpoints. In embodiments the method includes the step of detecting one or more data packets at a first endpoint. Typically each of the data packets includes a header comprising a source address and a destination address. A driver which is associated with the first endpoint may send a request to a directory service. In an exemplary embodiment the request carries the source address and the destination address or some indicia thereof. Upon receiving the request the directory service performs a lookup to translate the source address and the destination address into a forwarding path and a transformation action. The forwarding path and the transformation action may be sent from directory service within a response to the driver. However the driver and or the endpoints also maintain the ability to drop one or more of the data packets that fail to match a rule in the directory service related to origination recipient and target endpoints. This ability to drop data packets provides the driver with the authority to enforce isolation within the network.

Upon receipt of the response the driver may perform a routing decision that is based in part on whether the first endpoint is an origination endpoint of the data packets a recipient endpoint that acts to forward the data packets onto a target endpoint or the target endpoint. When the first endpoint represents the origination endpoint identified by the source address the routing decision may result in one or more of the following transformation actions a rewriting the header of the data packets to include the location dependent addresses b encapsulating the data packets as inner data packets within respective outer data packets where the outer data packets each include a header that carries the location dependent addresses or c configuring the data packets with a tunneling protocol. When the first endpoint represents the recipient endpoint the routing decision may result in one or more of the following transformation actions a forwarding the encapsulated data packets or data packets with the rewritten header over another network pathway b redirecting the encapsulated data packets or data packets with the rewritten header through a tunnel or c removing the tunneling protocol from the data packets. When the first endpoint represents the target endpoint identified by the destination address the routing decision may result in one or more of the following transformation actions a decapsulating the encapsulated data packets b restoring the headers of data packets that were rewritten or c removing the tunneling protocol from the data packets to prepare for consumption.

In another aspect embodiments of the present invention relate to a computer system for supporting and isolating communications between endpoints. Initially the computer system includes a directory service a first endpoint a second endpoint and a driver that is provisioned locally to first endpoint. Generally the directory service maintains a mapping between virtual internet protocol IP addresses and location dependent addresses of a physical network. In operation first endpoint may commence generating one or more data packets structured with headers that include a source IP address and a destination IP address. In this instance the source IP address points to the first origination endpoint and the destination IP address points to the second target endpoint.

Upon detecting that the first endpoint is attempting to transmit the data packets from a node e.g. physical machine or virtual machine to the second endpoint the driver performs a routing decision. In an exemplary embodiment a distinct routing decision is invoked and carried out by the driver for each connection made by the first endpoint. In embodiments performing the routing decision involves but is not limited to the following steps communicating with the directory service to determine a forwarding path and a transformation action based on in part the source IP address and the destination IP address determining whether the first endpoint and the second endpoint reside within a common data center and determining whether the second endpoint is unable to translate the headers of the data packets if the source IP address and the destination IP address are removed.

When it is determined that the first endpoint and the second endpoint reside within a common data center the driver may rewrite the source IP address and the destination IP address with respective location dependent addresses of the forwarding path. In another embodiment the driver may encapsulate the data packets as inner data packets within respective outer data packets which each include a header that exposes the location dependent addresses of the forwarding path. There are several scenarios that invoke the transformation action of encapsulation. In one instance encapsulation is triggered when it is determined that the second endpoint is unable to translate the headers of the data packets if the source address and the destination address are removed. Other potential scenarios where encapsulation may be required include a detecting some form of network translation NAT exists between the source and destination IP addresses and or b recognizing from the source and destination IP addresses that the first and second endpoints e.g. origination and target network adapters span multiple virtual networks such that there is no longer a one to one mapping from their location dependent addresses and their virtual IP addresses.

When it is determined that the transformation action dictates a layer of protection to secure connectivity between the first endpoint and the second endpoint be provided the driver may transform the data packets based on the received transformation action. In one instance the transformation action involves applying tunneling protocol e.g. secure socket tunneling protocol SSTP or internet protocol security IPsec to the data packets.

In yet another aspect embodiments of the present invention relate to a computerized method for identifying a network pathway and transformation action in response to a request from a distributed virtual network gateway. Initially the method involves providing a directory service that maintains a mapping between virtual IP addresses and location dependent addresses. The directory service may also maintain a table that recognizes an appropriate transformation action. In one instance the table is designed according to communication policies that govern data packet traffic across pathways that connect endpoints within a network. In another instance the table is based upon a service model e.g. service level agreement SLA established for a customer of a data center hosting the customer s service application.

The method may further involve the step of receiving a request from a virtual network gateway in communication with a recipient endpoint. Typically the request includes indicia of a source IP address and a destination IP address carried via a header of one or more data packets accepted by the recipient endpoint. Upon receipt of the request the directory service may perform at least one of the following lookup procedures inspect the mapping with the source IP address and the destination IP address to identify corresponding location dependent addresses constituting a forwarding path of the data packets through a physical network or inspect the table with the forwarding path to identify a corresponding transformation action. As more fully discussed below the transformation action may involve but is not limited to one or more of the following rewriting the header of the data packets to include the location dependent addresses encapsulating the data packets as inner data packets within respective outer data packets which each include a header that carries the location dependent addresses or configuring the data packets with a tunneling protocol. Eventually the directory service may return a response that delivers to the virtual network gateway indicia of the identified forwarding path and the identified transformation action.

Having briefly described an overview of embodiments of the present invention an exemplary operating environment suitable for implementing embodiments of the present invention is described below.

Referring to the drawings in general and initially to in particular an exemplary operating environment for implementing embodiments of the present invention is shown and designated generally as computing device . Computing device is but one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the present invention. Neither should the computing environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated.

Embodiments of the present invention may be described in the general context of computer code or machine usable instructions including computer executable instructions such as program components being executed by a computer or other machine such as a personal data assistant or other handheld device. Generally program components including routines programs objects components data structures and the like refer to code that performs particular tasks or implements particular abstract data types. Embodiments of the present invention may be practiced in a variety of system configurations including handheld devices consumer electronics general purpose computers specialty computing devices etc. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network.

With continued reference to computing device includes a bus that directly or indirectly couples the following devices memory one or more processors one or more presentation components input output I O ports I O components and an illustrative power supply . Bus represents what may be one or more busses such as an address bus data bus or combination thereof . Although the various blocks of are shown with lines for the sake of clarity in reality delineating various components is not so clear and metaphorically the lines would more accurately be grey and fuzzy. For example one may consider a presentation component such as a display device to be an I O component. Also processors have memory. The inventors hereof recognize that such is the nature of the art and reiterate that the diagram of is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the present invention. Distinction is not made between such categories as workstation server laptop handheld device etc. as all are contemplated within the scope of and reference to computer or computing device. 

Computing device typically includes a variety of computer readable media. By way of example and not limitation computer readable media may comprise Random Access Memory RAM Read Only Memory ROM Electronically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technologies CDROM digital versatile disks DVDs or other optical or holographic media magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to encode desired information and be accessed by computing device .

Memory includes computer storage media in the form of volatile and or nonvolatile memory. The memory may be removable nonremovable or a combination thereof. Exemplary hardware devices include solid state memory hard drives optical disc drives etc. Computing device includes one or more processors that read data from various entities such as memory or I O components . Presentation component s present data indications to a user or other device. Exemplary presentation components include a display device speaker printing component vibrating component etc. I O ports allow computing device to be logically coupled to other devices including I O components some of which may be built in. Illustrative components include a microphone joystick game pad satellite dish scanner printer wireless device etc.

With reference to a node and a node may be implemented by the exemplary computing device of . Further endpoints and may access portions of the memory of and run on portions of the processors of . Similarly drivers and which embed the local gateway functionality within the virtual switch network stack of VM switch supporting the endpoints and on virtualized machines and and or within the local machine network stack for physical machine s supporting the endpoint may access portions of the memory of and run on portions of the processors of .

Turning now to a block diagram is illustrated in accordance with an embodiment of the present invention showing an exemplary cloud computing platform that is configured to perform routing decisions at the drivers and by employing routing information gathered from a directory service using various forms of transformation. In embodiments although illustrated as operable coupled to one cloud computing platform the directory service may exist outside the scope of a particular cloud i.e. the directory service may represent a cloud service shared across public and private cloud s . This ability to operate with various clouds allows the directory service to enable networks that span multiple clouds.

It will be understood and appreciated that the cloud computing platform shown in is merely an example of one suitable computing system environment and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the present invention. For instance the cloud computing platform may be a public cloud a private cloud or a dedicated cloud. Neither should the cloud computing platform be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein. Further although the various blocks of are shown with lines for the sake of clarity in reality delineating various components is not so clear and metaphorically the lines would more accurately be grey and fuzzy. In addition any number of physical machines virtual machines data centers endpoints or combinations thereof may be employed to achieve the desired functionality within the scope of embodiments of the present invention.

The cloud computing platform may include one or more data centers e.g. data center that comprise nodes e.g. nodes and for hosting service applications and other software. Per embodiments of the present invention the nodes and or may represent physical machines comprising any form of computing device such as for example a personal computer a desktop computer a laptop computer a mobile device a consumer electronic device server s the computing device of and the like. In another embodiment the nodes and or may represent virtual machines or may provide the underlying support for operations of virtual machines such as virtual machines and . In operation the virtual machines and support operation of tenants of the data center . As used herein the term tenants generally refers to component programs e.g. instances of various roles of service applications owned by a customer of the cloud computing platform .

Generally virtual machines and are allocated to the endpoints and of the service application based on demands e.g. amount of processing load placed on the service application. As used herein the phrase virtual machine is not meant to be limiting and may refer to any software application operating system or program that is executed by a processing unit to underlie the functionality of the endpoints and . In another embodiment virtual machines refers to processing capabilities and memory resources carved out of a node for supporting tenants of the data center . In this way the node hosts and supports the operations of the virtual machines and while simultaneously hosting other virtual machines carved out for supporting other tenants of the data center where the tenants include endpoints of other service applications owned by different customers. Accordingly the virtual machines and may include processing capacity storage locations and other assets within the data center to properly support the endpoints and .

In operation the virtual machines and are dynamically allocated within resources e.g. node of the data center and endpoints e.g. the endpoints and are dynamically placed on the allocated virtual machines and to satisfy the current processing load. In one instance a fabric controller is responsible for automatically allocating the virtual machines and and for placing the endpoints and within the data center . By way of example the fabric controller may rely on a service model e.g. designed by a customer that owns the service application to provide guidance on how and when to allocate the virtual machines and and to place the endpoints and thereon.

In one instance the nodes and host support the operations of the endpoints and . The term endpoints is not meant to be limiting but may encompass a program component of a service application i.e. tenant of the data center or network adapter running on a node physical machine or VM. In one aspect the endpoints and operate within the context of the cloud computing platform and accordingly communicate internally through connections dynamically made therebetween. In another aspect the endpoints and communicate externally through a physical network topology to resources of a remote network e.g. resource of the enterprise private network of . The external connections may further involve interconnecting to endpoints distributed across physical resources of the data center via a network not shown . In one embodiment as illustrated by endpoint the network directly interconnects these resources such that an origination endpoint for generating data packets may recognize a location of a recipient endpoint for forwarding data packets to a target endpoint or a location of the target endpoint for consuming the data packets in order to establish a communication therebetween. In another embodiment the network indirectly interconnects the resources such that a packet of data addressed to endpoints or which are hosted on virtual machines and respectively may be rerouted via the network and delivered to the VM switch prior to being locally distributed to an appropriate endpoint residing on the same node. In addition the network may establish a communication over channels e.g. secure tunnel thereby implementing an additional layer of protection or employing standard security measures to connections between the endpoints of the service application s . By way of example the channels may include without limitation one or more local area networks LANs and or wide area networks WANs . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. Accordingly the network is not further described herein.

The cloud computing platform includes the data center configured to host and support operation of the endpoints and allocated to a particular service application. The phrase service application as used herein broadly refers to any software or portions of software that runs on top of or accesses storage locations within the data center another data center within the cloud computing platform resources in an enterprise private network e.g. resource of the enterprise private network of located on a customer s premise and or resources in a third party network e.g. resource of the third party network of . As discussed above the endpoints and may represent portions of software component programs or instances of roles that participate in the service application s . In another embodiment the endpoints and may represent stored data that is accessible to the service application. It will be understood and appreciated that the endpoints and shown in are merely an example of suitable parts to support the service application and are not intended to suggest any limitation as to the number scope of use or functionality of embodiments of the present invention.

Although one service application is described as being distributed over the two nodes and in a single data center it should be understood and appreciated that any number of service applications residing on any number of nodes within various data centers or other suitable devices may be used and that embodiments of the present invention are not limited to those nodes service applications and data center s described herein. Further any number of endpoints may be instantiated within the nodes and or allocated to the service application s and the endpoints illustrated in are shown for description purposes only.

In one instance the architecture of the data center allows a management system e.g. fabric controller or administrators of the cloud computing platform to instantiate new endpoints or reallocate present endpoints to support a service application. The fabric controller may also build up and take down network pathways and tunnels to connect the endpoints and . Further the fabric controller may periodically take snapshots of a topology of the data center . These snapshots may record presently established network pathways and tunnels through the data center network and addresses of the endpoints. These snapshots may be relayed to a directory service for storage therein. In embodiments the directory service may be configured to store the virtual IP addresses in association with location dependent addresses of a physical network. Further the directory service may be configured to store transformation actions that are associated with respective network pathways and tunnels of the data center network. In this way the security policies of the service application s service model are enforced by the directory server on data packets transmitted between tenants of the service application.

As discussed above embodiments of the instant invention introduce an architecture that allow for communication between endpoints across a virtual layer dashed lines by utilizing network pathways and tunnels within the physical layer solid lines . Within the physical layer the endpoints are reachable via a network of links. Generally it is preferable to intelligently select appropriate links of the network based on a location of interacting endpoints in order to avoid passing all communications through a centralized routing mechanism thus avoiding network congestion. To achieve intelligent selection of physical layer links as well as appropriate transformation of data packets traversing the selected links in embodiments the architecture is supported by two different technologies operating in concert the drivers and and the directory service .

The drivers and are associated with one or more endpoints and are embedded within the data center as a function of a type of endpoint the driver is assisting. If endpoint e.g. endpoint is hosted on a physical machine e.g. node the driver is implemented within the host switch not shown that places data packets directly into traffic between endpoints. In this embodiment upon detecting one or more data packets reaching or leaving the endpoint the driver may solicit routing information by sending to the directory service a request that carries the source IP address and the destination IP address incorporated within a header of the data packets. Upon receiving the request for routing information the directory service may reply with a response that carries a forwarding path for the data packets and a transformation action appropriate for the forwarding path.

If the endpoint e.g. endpoints and is hosted on a virtual machine e.g. virtual machines and the driver e.g. driver is implemented within the network stack hides all existing adaptors and presents a single virtualized interface of the network. In this embodiment the driver may represent an independent VM switch or may be incorporated within an existing VM switch e.g. VM switch . The VM switch in embodiments is provided to offer isolated connectivity between endpoints internal to and external of the data center as more fully discussed with reference to . As used herein the phase virtual machine switch or VM switch is not meant to be limiting but may encompass any software based component that resides within a data center enterprise private network third party network etc. and that is responsible for securely routing data packets across a network between endpoints of a service application. By way of example the VM switch may be any network edge device s e.g. top rack switches physical network interface cards in nodes virtual interface cards in VMs or a networking stack in non virtualized hosts that expose some application programming interface API for network management. In other examples all or a portion of the operations carried out by the VM switch e.g. communication with the directory service encapsulation decapsulation modification of packets and other actions may be performed by a routing module. As such the VM switch may embody one or more of routing module s network edge device s physical switch es routing device s and the like.

Similar to the driver the driver may upon detecting one or more data packets reaching or leaving either of the endpoints or the driver may solicit routing information by sending to the directory service a request that carries the source IP address and the destination IP address carried within a header of the data packets. Upon receiving the request for routing information the directory service may reply with a response that carries a forwarding path for the data packets and a transformation action appropriate for the forwarding path.

Referring now to additional interactions between the drivers and and the directory service will now be discussed. As discussed above drivers may be distributed on a multitude of nodes of the data center and on resources outside the data center . The drivers and may be dynamically instantiated on or torn down from a node within the data center as a function of one or more factors such as a rate of IP traffic a computing load consumed by tenants of the data center and whether a node is being brought online or taken offline. In one embodiment the fabric controller is responsible for instantiating or tearing down VM switches.

In operation the drivers and represent a virtual network adaptor for their respective nodes and serve as a gateway to a particular endpoint within a service application or subnet. In this embodiment a topology is provided where gateways make routing decisions regarding where how and what physical layer links to use when transmitting data packet. By distributing the drivers across internal and external nodes this gateway functionally is now virtualized and spread across the network.

In an exemplary embodiment routing decisions help to determine a forwarding path that does not always require sending data packets through the centralized server. Further the routing decisions can be specialized on a per connection per machine basis. In one instance a routing decision might determine to apply a highly protective transformation action to data packets that employs secure tunnels linking endpoints spanning remote data centers. In another instance a routing decision might determine to employ more lightweight transformation actions such as encapsulation or rewriting headers of data packets when endpoints co exist on a common secure network. In this instance the endpoints may reside within the same subnet and may be visible to each other via a direct path between servers of a data center network. Accordingly the routing decision may leverage the ability of endpoints within the same subnet to use routes over physical layer links that have no common congestion point in order to optimize their mutual connectivity. These and other routing decisions are described more fully with reference to .

In embodiments routing rewriting components RCs and are provided within the drivers and respectively. In operation the RCs and are able to accept each data packet originated from an operating system of a node or endpoint or transferred via a secure tunnel or network pathway and to determine based on contents e.g. information carried within the header of the data packets a correct forwarding path and transformation action if any. In one instance the RCs and examine the source IP address and or the destination IP address of each data packet it accepts and queries the directory service for routing information e.g. via the requests and . The directory service may answer the requests and with responses and respectively that may include various types of routing information. Accordingly the RCs and are provisioned with the capability of managing multiple tunneling rewriting protocols that are responsive to the routing information and that to support different forwarding processes for data packets.

Generally the directory service retains knowledge of the network as well as the network pathways and secure tunnels therein. By way of example this knowledge includes information about the endpoints what networks the endpoints reside within what network pathways are established within those networks what transformation actions are appropriate for specific forwarding paths across the network pathways and how the transformation actions are performed. In operation incident to the RCs and soliciting routing information the directory service may apply this network knowledge to inform a first endpoint how to reach a second endpoint within the network . To this end the directory service maintains a mapping between virtual IP addresses and location dependent addresses. In an exemplary embodiment the mapping maintains one or more logical associations between interconnected endpoints and enforces access control associated with the endpoints in order to achieve network reachability. In one instance the logical associations pertain to an association between endpoints that are members of a subnet.

The directory service may also maintain a table that recognizes an appropriate transformation action. In one instance the table is designed to enforce a communication policy which is typically set in place by a customer via a service level agreement SLA . In another instance the communication policy is specifically designed for a service application and or subnet and may include a list of permissions that governs which system processes are granted access to member endpoints of the subnet and whether the endpoints can be directly connected without involving a centralized routing device. In yet another instance the communication policy may articulate what security levels are to be enforced for certain endpoints. In another instance the communication policy serves as a security model that scans the mapping for applicable entries upon receiving the request from the driver and determines whether the raw data transmission is authorized based on information within the applicable entries. In yet another instance the communication policies may represent rules applied to a port number or a network adapter which are available within a node of the data center in order to ascertain whether the port number or network adapter is permitted to perform some operation.

Upon the directory service receiving the request from a driver the directory service may perform the following lookup procedures inspect the mapping with the source IP address and the destination IP address to identify corresponding location dependent addresses constituting a forwarding path of the data packets through a physical network or inspect the table with the forwarding path to identify a corresponding transformation action. In other words the directory service receives a data set Source IP address Destination IP address and via translation against the mapping and table returns the data set Forwarding path Transformation Action . The return data set supports the routing decision making process within the requesting driver.

As more fully discussed below the transformation action may involve but is not limited to one or more of the following rewriting the header of the data packets to include the location dependent addresses encapsulating the data packets as inner data packets within respective outer data packets which each include a header that carries the location dependent addresses or configuring the data packets with a tunneling protocol. Eventually the directory service may return a response that delivers to the requesting driver virtual network gateway indicia of the identified forwarding path and the identified transformation action.

Although depicted in as a single centralized server that pushes information to a requesting driver the functionality of the directory service may be implemented via local files federated and saved to a set of machines. Or the functionality of the directory service may be cached ahead of time at the requesting driver if pushed out previously eliminating the step of sending an external request.

Referring now to a schematic depiction of an exemplary architecture of a distributed computing environment that resolves virtual network addresses into physical network pathways and transformation actions is shown in accordance with an embodiment of the present invention. Initially the distributed computing environment includes a physical network that includes an enterprise private network a third party network and a cloud computing platform as discussed with reference to . As used herein the phrase physical network is not meant to be limiting but may encompass tangible mechanisms and equipment e.g. fiber lines circuit boxes switches antennas IP routers and the like as well as intangible communications and carrier waves that facilitate communication between endpoints at geographically remote locations. By way of example the physical network may include any wired or wireless technology utilized within the Internet or available for promoting communication between disparate networks.

Generally the enterprise private network includes resources such as resource that are managed by a customer of the cloud computing platform . Often these resources host and support operations of components of the service application owned by the customer. Endpoint B represents one or more of the components of the service application. In embodiments resources such as the virtual machine of are allocated within the data center of to host and support operations of remotely distributed components of the service application. Endpoints A and C represent two of these remotely distributed components of the service application. In operation the endpoints A B and C work in concert with each other to ensure the service application runs properly. In one instance working in concert involves transmitting between the endpoints A B and C data packets across the network of the physical network .

The third party network is also provided within the physical network . In embodiments the third party network may refer to any other network that is not the enterprise private network of or the cloud computing platform . By way of example the third party network may include a data store that holds information used by the service application or a vendor that provides software to support one or more operations of the service application. In embodiments the third party network represents a network of resources including the resource with an endpoint D installed thereon that is available to the cloud computing platform of .

Typically the resources and and the data center include or are linked to some form of a computing unit e.g. central processing unit microprocessor etc. to support operations of the endpoint s and or component s running thereon. As utilized herein the phrase computing unit generally refers to a dedicated computing device with processing power and storage memory which supports one or more operating systems or other underlying software. In one instance the computing unit is configured with tangible hardware elements or machines that are integral or operably coupled to the resources and and the data center to enable each device to perform a variety of processes and operations. In another instance the computing unit may encompass a processor not shown coupled to the computer readable medium accommodated by each of the resources and and the data center . Generally the computer readable medium stores at least temporarily a plurality of computer software components e.g. the endpoints A B C and D that are executable by the processor. As utilized herein the term processor is not meant to be limiting and may encompass any elements of the computing unit that act in a computational capacity. In such capacity the processor may be configured as a tangible article that processes instructions. In an exemplary embodiment processing may involve fetching decoding interpreting executing and writing back instructions.

The virtual network overlay overlay is typically established for a single service application such as the service application that includes the endpoints A B C and D in order to promote and secure communication between the endpoints of the service application. Generally the overlay represents a layer of virtual IP addresses instead of physical IP addresses that virtually represents the endpoints of the service application and connects the virtual representations. In other embodiments the overlay is a virtual network built on top of the physical network that includes the resources allocated to the customer controlling the service application. In operation the overlay maintains one or more logical associations of the interconnected end points A B C and D and may enforce the access control security associated with the end points A B C and D in order to achieve physical network reachability e.g. using a physical transport .

Referring now to various possible routing decisions will now be described. In particular shows a schematic depiction of an exemplary decision tree for applying routing information distributed from the directory service to a routing decision in accordance with an embodiment of the present invention. As discussed above a driver may perform a routing decision based in part on whether a subject endpoint linked to the driver represents an origination endpoint of the data packets a recipient endpoint that acts to forward the data packets onto a target endpoint or the target endpoint. In a first instance when the subject endpoint represents the origination endpoint e.g. endpoint C the driver associated with the origination endpoint may detect the origination endpoint attempting to transmit one or more data packets generated therefrom as depicted at block . The driver may then solicit the directory service to perform a lookup procedure by sending a request comprising indicia of a source IP address that points to the subject endpoint and a destination IP address as depicted at block .

The routing decision is carried out based on in part routing information transferred to the driver from the directory service as depicted at block . The routing decision may result in but is not limited to one or more of the following transformation actions rewriting the header of the data packets to include the location dependent addresses see block configuring the data packets with a tunneling protocol and redirecting the data packets via a secure tunnel see block or encapsulating the data packets as inner data packets within respective outer data packets see block where the outer data packets each include a header that carries the location dependent addresses.

In an exemplary embodiment upon the driver determining that the origination endpoint and the target endpoint both reside within a common data center or subnet the routing may result in the transformation action of rewriting the source IP address and the destination IP address with respective location dependent addresses. However when the driver determines that recipient endpoint or the target endpoint is unable to translate the headers of data packets if the source IP address and the destination IP address are removed e.g. the recipient target endpoint is in a data center or subnet that differs from the data center or subnet in which the origination endpoint resides the routing decision may result in encapsulating the data packets as inner data packets within respective outer data packets in order to preserve the source and destination IP addresses within a payload of the data packets. In this embodiment immediately above the driver may also recognize that a network pathway between the endpoints is substantially protected enough to satisfy the security policies of a governing service model. In contrast when the driver recognizes that the network pathway connecting one or more of the endpoints lacks a level of protection or secure connectivity that is dictated by the governing service model the routing decision may result in the transformation action of transforming the data packets to include secure tunneling protocol thereby attempting to avoid interception of the data packets by nefarious actors.

Upon executing the routing decision the origination endpoint may commence transmitting the processed data packets to either a recipient endpoint e.g. endpoints A or D or a target endpoint e.g. endpoint B as depicted at block . Although the recipient endpoint is described herein as a single network hop it will be appreciated and understood that there may be more than one intermediate hop in the network which would allow the recipient endpoint to be able to forward to another one or more recipient endpoints. In a second instance when the subject endpoint represents the recipient endpoint the driver associated with the recipient endpoint may detect the processed data packets arriving thereto as depicted at block . The driver may then solicit the directory service to perform a lookup procedure by sending a request comprising indicia of the source IP address and the destination IP address as depicted at block .

The routing decision is carried out based on in part routing information transferred to the driver from the directory service as depicted at block . The routing decision may result in one or more of the following transformation actions redirecting the encapsulated data packets or data packets with the rewritten header through a tunnel see block e.g. see endpoint D removing the tunneling protocol from the data packets see block or forwarding the encapsulated data packets or data packets with the rewritten header over another network pathway see block e.g. see endpoint A . Again the routing decision of whether to invoke the transformation action of forwarding the data packets over a network pathway or the transformation action of redirecting the data packets via a tunnel involves identifying that the endpoints are linked over secure connections or linked over connections that span unprotected networks e.g. Internet respectively.

Upon executing the routing decision the recipient endpoint may commence transmitting the processed data packets to the target endpoint e.g. endpoint B as depicted at block . In a third instance when the subject endpoint represents the target endpoint the driver associated with the target endpoint may detect the processed data packets arriving thereto as depicted at block . The driver may then solicit the directory service to perform a lookup procedure by sending a request comprising indicia of the source IP address and the destination IP address pointing to the target endpoint as depicted at block .

The routing decision is carried out based on in part routing information transferred to the driver from the directory service as depicted at block . When the subject endpoint represents the target endpoint the routing decision may result in one or more of the following transformation actions restoring the headers of data packets that were rewritten see block removing the tunneling protocol from the data packets to prepare for consumption see block or decapsulating the encapsulated data packets see block .

Turning now to a flow diagram is illustrated that shows a method for identifying the appropriate physical network pathway and transformation action in response to a request from the driver in accordance with an embodiment of the present invention. As may be gleaned from the discussion above the steps of the method are written from the perspective of the directory service of . Initially the method involves providing the directory service that maintains a mapping between virtual IP addresses and location dependent addresses as depicted at block . The directory service may also maintain a table that recognizes an appropriate transformation action. In one instance the table is designed according to communication policies that govern data packet traffic across pathways that connect endpoints within a network. In another instance the table is based upon a service model e.g. service level agreement SLA established for a customer of a data center hosting the customer s service application.

The method may further involve the step of receiving a request from a virtual network gateway or driver that is associated with or established for locally communicating with a subject endpoint as depicted at block . Typically the request includes indicia of a source IP address and a destination IP address carried via a header of one or more data packets accepted by the recipient endpoint. Upon receipt of the request the directory service may perform the following lookup procedures see block inspect the mapping with the source IP address and the destination IP address to identify corresponding location dependent addresses constituting a forwarding path of the data packets through a physical network see block and or inspect the table with the forwarding path to identify a corresponding transformation action see block . The transformation action may involve but is not limited to one or more of the following rewriting the header of the data packets to include the location dependent addresses restoring the rewriting encapsulating the data packets as inner data packets within respective outer data packets which each include a header that carries the location dependent addresses decapsulating the encapsulated data packets configuring the data packets with a tunneling protocol or removing the tunneling protocol. As depicted at block the directory service may return a response that delivers to the virtual network gateway indicia of the identified forwarding path and the identified transformation action.

Embodiments of the present invention have been described in relation to particular embodiments which are intended in all respects to be illustrative rather than restrictive. Alternative embodiments will become apparent to those of ordinary skill in the art to which embodiments of the present invention pertain without departing from its scope.

From the foregoing it will be seen that this invention is one well adapted to attain all the ends and objects set forth above together with other advantages which are obvious and inherent to the system and method. It will be understood that certain features and sub combinations are of utility and may be employed without reference to other features and sub combinations. This is contemplated by and is within the scope of the claims.

