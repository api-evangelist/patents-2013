---

title: Object filtering in a computing network
abstract: Presented herein are object filtering techniques that optimize the communication of information over an infrastructure that supports publish-subscribe (pub-sub) and direct query (synchronization) communication. In the object filtering techniques, a single information publisher can share that information in an associated object graph with many different consumers over the infrastructure without sharing the entire object graph.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09378274&OS=09378274&RS=09378274
owner: Cisco Technology, Inc.
number: 09378274
owner_city: San Jose
owner_country: US
publication_date: 20130610
---
There are many different networking devices applications services servers etc. collectively referred to herein as network components available from different vendors that perform various operations within a computing network. In order for these various network components to perform their operations the components often obtain information data from one or more other sources e.g. other networking devices applications services servers mobile devices etc. .

Different types of information may be produced or used by different network components. In one example this information includes security information. Security information may include but is not limited to raw security events network flow information identity information security configuration information security intelligence information reputation information correlated security analysis and security reports. Security information may also include indexes of information policy configuration settings topology physical layer 2 and or layer 3 network flow information deep packet inspection of data and control plane traffic control plane events content security events policy e.g. network control endpoint posture assessment information compliance rules and assessment profiling assessment information statistical counts and analysis of the statistics on traffic patterns etc.

Presented herein are object filtering techniques that optimize the communication of information over an infrastructure that supports publish subscribe pub sub and direct query synchronization communication. In the object filtering techniques a single information publisher can share information in an associated object graph with many different consumers over the infrastructure without sharing the entire object graph.

The object filtering techniques presented herein enable a publisher of an object graph to support multiple consumer views filters of that published object graph in a way that allows those multiple consumer views to be supported by a single object graph. Instead of a publisher constructing and distributing different versions of the same object graph and associated attributes from the published source to each consumer that requires a different object view the object filtering techniques allow the infrastructure that connects the publisher to the consumers to become aware of the object filters in use and filter those object graphs based on where the consumers are connected to the grid. Additionally the object filters requested by consumers from a published object graph are authorized by a policy system such that only allowed object attributes and relationships are accessible by authorized consumers. This authorization is enforced by the intervening infrastructure implementing the consumer s object filter rather than the publisher having to understand policy that gets applied everywhere.

In accordance with examples presented herein the object filtering techniques may be implementable across any communication protocol that supports pub sub and or direct query patterns between a source of information publisher and a destination of the information consumer where the protocol exchanges between source and destination are controlled by a separate control plane entity referred to herein as a grid controller. The communication fabric can be any network connection infrastructure where the messages sent over that communication fabric are first authorized by the associated controller. Object filtering enables the publisher to maintain a single object graph while allowed views of that object graph are provided to different consumers based on policy as well as desired subsets of the object graph.

In the example of network components are components that are configured to generate data information that is useable by other network components. As such these network components are collectively and generally referred to as publishers or producers . Additionally network components are components that are configured to use consume data information generated by other network components. As such these network components are collectively and generally referred to as consumers .

The computing network also comprises a communication fabric that enables the publishers to share information in a comprehensive manner with the consumers . The communication fabric which is sometimes referred to herein as a grid infrastructure or simply grid is a logical arrangement of hardware software elements implemented in one or more interconnected computing devices e.g. servers controllers switches routers firewalls access points etc. that collectively function as a logical communication bus linking the discrete network components and .

All of the hardware software elements in the grid connect abstractly to a control plane entity referred to herein as a grid controller . The grid controller may comprise a software application executed by one or more servers e.g. Xen Cloud Platform XCP servers . In general the grid controller provides the control plane of the grid . The grid controller is also configured to authenticate and authorize network components and to the grid . Furthermore the grid controller is configured to enable the exchange of information between publishers and consumers . These exchanges may include multicast e.g. publication subscription pub sub and unicast query i.e. peer to peer information exchanges across the grid .

In computing networks objects are in essence data structures coupled with their associated processing routines. An object can be a variable function data etc. For example a file is an object because it is a collection of data that is coupled with read and write routines for that data. A class describes a group of objects instances with for example similar properties attributes common behavior operations common relationships to other objects and or common meaning semantics . An object graph is a tree of objects and their attributes. Each node in the object graph is connected by a relationship. Whereas a normal data model e.g. a Unified Modeling Language UML Class diagram details the relationships between classes the object graph relates their instances and may include a plurality of objects. In certain cases a fairly large connected object graph of object relationships may occur where each object is related to other objects either by a parent child containment relationship or a reference refers to or is referred to by relationship. In certain circumstances an information consumer may only be interested in certain aspects of the object graph of a publisher rather than the complete graph and all objects the publisher has to offer. This is particularly the case when contextual information from a single network component is shared with many different consumers of that information in different ways and for different purposes.

For example a user may be represented by 1 a set of attributes and a set of session object instances 2 a set of network flows associated with the user 3 the set of interfaces a user is on etc. all of which belong to an object graph on a first networking component. Another networking component may only be interested in the user s immediate attributes and not all related objects in the object graph. Additionally the usefulness of some attributes decreases with time. As such it is beneficial to relay those types of attributes with priority while other attributes can be archived and retrieved at a later time without consequences. Presented herein are object filtering techniques that optimize the communication of information over grid such that a single publisher can share an object graph with many different consumers without sharing the entire published object graph. The object filtering functionality is embodied in an object filtering module of the grid that operates in conjunction with object filtering agents of publishers and object filtering agents of consumers . The object filtering functionality of object filtering module may span multiple entities forming the grid .

In examples presented herein a publisher such as publisher in defines an object graph and exposes data based on that object graph i.e. the publisher has a set of objects that allows consumers to access via subscription or query . The object graph may be defined in any schema based language including for example Extensible Markup Language XML JavaScript Object Notation JSON Structured Query Language SQL Access Service Network ASN etc.

In operation a first consumer such as network component requests to obtain information based on an object filter F . A second consumer such as network component requests to obtain information based on an object filter F . In other words the consumers subscribe to or query the information based on object filters. An object filter may be defined in XML schema and can be used for both pub sub as well as query messages. The object filter can also define which relationships to traverse or not. If the relationship is traversed then it can also specify whether to return the object contents themselves or an object reference rather than the object itself.

For a consumer to request information from an object graph the consumer should be first authorized to access that relationship between two nodes in the graph. This authorization policy is defined at the grid controller but referred to by each intervening node i.e. the distribution network in the case of a pub sub event or directly by the publisher if it is a directed query from consumer to the publisher directly .

Authorization refers to the allowance or denial of a consumer to access part of the object graph. For example Obj1 Child1 Obj1 Peer1 is an object graph with two relationships from a single Obj1. A first consumer is allowed to access Obj1 Child1 relationship but not Obj1 Peer1 relationship. A second consumer is allowed to access all relationships from Obj1. As such in this example when the first consumer submits an object filter that allows all relationships to be accessed from the publisher the grid infrastructure checks that all relationships are accessible by the first consumer. This is implemented by the node transmitting the event matching the object filter and it knows that the first consumer is only allowed to access the Obj1 Child1 relationship. As such the node will construct a version of the object only containing that allowed relationship s and not the other relationship s .

In general the grid controller also has the opportunity through provisioned policy to set which aspects of the object graph are exposed by a publisher to which consumers. More specifically the grid controller is where the object graph access rules are defined. When a consumer subscribes to a publisher the publisher can consult the policy defined at the grid controller for what that consumer is allowed to access when the object graph is published based on the object filter. Therefore if the filter the consumer requested identifies broader access than allowed by the grid controller s policy the publisher can restrict the publication to only include the object s attribute that are allowed by policy.

Object filtering may occur by attributes syntax or filtering by value of the object attributes. Filtering by value means that an object s attributes are matched based on value of the attributes. Filtering by value allows the system to filter events based on the content of the event. For example there may be 10 VLAN objects and a consumer only wants to get notifications for a first VLAN VLAN1 instead of all 10. The object filter would be specified by the consumer to request notifications only for VLAN1.

Filtering by syntax means that an objects attributes are matched based on the relationship meta model of the object and not the actual value. Filtering by syntax allows the system to filter event structure. For example there may be an object with two attributes object.attr1 and object.attr2 . The filter by syntax from a consumer that is only interested in attr1 would request that one attribute so when it gets the object it only gets object.attr1 instead of both attributes belonging to the object. This filter operates based on the structure of the object rather than the value of the attributes themselves.

In accordance with examples presented herein the object filters and object graphs can also help in the routing and caching of information along the path between the publisher and the consumer. In particular object filtering may occur within the grid for improved scalability. In one example the original publisher might publish only one full version of the object graph but three layers into the distribution of pub sub the object filter gets applied. Therefore instead of the publisher publishing different portions of the object graph for different consumers the object filtering within the grid results in different portions of the object graph being provided to different interested consumers. Object filtering may accordingly occur throughout the grid and may be based on where the consumer is in the logical topology of the network.

In one example a publisher receives a subscription for an object graph from a consumer. The publisher requests the policy for the consumer and the object graph requested from the grid controller . The grid controller returns the policy policies and the publisher generates events. Each event is matched against a policy for the consumer to which the event is sent. The publisher may filter object events based on what portions of the object graph the consumer is allowed to receive. In this example the publisher performs the object filtering. The grid controller acts as the policy repository and the publisher looks up the policy from the controller.

In another example a publisher receives a subscription for an object graph from a consumer. The publisher generates events and sends to nodes within the grid e.g. XMPP nodes . An intermediate node within the grid may receive the event s and identify what consumers are connected thereto. The intermediate node may look up policy policies associated with the object graph and the consumers receiving events. The intermediate nodes then filter the object events based for example on what portions of the object graph the consumer is allowed to receive. In this example the grid i.e. intermediate nodes perform the object filtering. The grid controller acts as the policy repository and the intermediate nodes look up the policy from the controller.

In certain circumstances a publisher may send a pointer rather than actual information to a consumer. When the consumer receives such a pointer the consumer may decide to do a direct query for that content pointed to by the pointer or lookup a cache of the content. In certain examples the reason for the pointer is that it indicates content that doesn t change much over events so events may repeat the same pointer instead of repeating longer content at each event. In certain examples a publisher may publish an event with a pointer. The consumer receives the event and pointer and looks up a local cache for the content matching the pointer i.e. a cache with the grid . If the content is already available it may be used or a direct query to get the content may be initiated. The content may be saved in a local cache for use after the next event.

In accordance with examples presented herein object filters are used so that the publisher can efficiently provide data to interested consumers e.g. one or more of consumers . As described above the object filters can be used for both pub sub communications as well as query peer to peer communications. The object filtering may in certain circumstances be performed at the publisher or performed within the grid . In accordance with certain examples presented herein an object filter may define which relationships or attributes to traverse or not. If a relationship is traversed then it can also specify whether to return the object contents themselves or an object reference rather than the object itself.

Initially a firewall or other physical security application may be interested in learning that JChambers has been authenticated at the office as fulfilling a prerequisite for his subsequent access to network resources and doors. These gating applications would filter specifically for events pertaining to JChambers. As such method of begins at where one or more consumers in this case information consumers and attempt to consume interested data based on a predefined object filter. More specifically the information consumers and will generate information orders and respectively that each indicates a subscription query i.e. requested information and an object filter. These information orders are then transmitted to the grid controller . The transmission of information orders by consumers and to grid controller is schematically shown in by references .

Network components that consume user information may be interested in different types of information i.e. different parts of a data object depending on the role function of the consuming component. For example certain network components manage the network infrastructure. Such components consume information that assists in management of service capacity and overall network experience e.g. information indicating how physically the users sessions are connected to the network the port or SSID but are not interested in other information such as for example authentication mechanism information. Other network components that protect the network and physical resources e.g. Firewalls and physical security applications consumer authentication authorization information regarding the sessions to make traffic forwarding or dropping decisions but may not be interested in how the session is connected onto the network. Additionally network threat defense applications consume information regarding how the user is authenticated as well as how the physical connection is made. In general the information order includes information that specifies the specific information via for example an object filter identifier.

Returning to at the grid controller collects the information orders and as well as any other information orders transmitted from other consumers. This is done before data is provided to the grid by publishers or any data is consumed. The collection of the information orders is shown in by reference .

At the grid controller may assemble received information orders and into an order batch. More specifically the grid controller is configured to create an order batch and make a list of the multiple consumers that are interested in the same information. The generation of an order batch is shown by reference in . Since different consumers may be interested in the same or different information the grid controller may generate multiple order batches shown in as order batches . The order batches include object filters so the publishers of the information will only return the items requested by consumers.

At of the grid controller consolidates order batches into acquisition batches for transmission to publishers. The generation of an acquisition batch is shown in by reference . In general a single request operation is used to fetch all of requested information. This differs from existing client server models where a server would respond to uncoordinated individual requests from multiple clients such as web services e.g. Representational State Transfer REST Simple Object Access Protocol SOAP etc. that heavily load the database. This approach eliminates the wastefulness in duplicated requests and improves scalability. This optimization produces significant cumulative savings as data is repeatedly published or queried.

At the grid controller also sends the previously generated order batches to the XMPP service transport . This operation is shown in by reference . The XMPP service transport is the delivery infrastructure that will edit and reassemble the data sent by the publishers into versions according to the order batches. The XMPP service transport pushes the information to the consumers through the XMPP routing fabric . In general the information is routed and multicast such that the main trunk or station will have the entire object graph. As the information fans out and gets closer to the end consumer the delivery content becomes more specific for the route and consumer where only content that will be consumed will be delivered on the leaf route. A routing table of what content is designated along the path is maintained to route the data in a similar fashion as in network traffic routing.

As such in examples presented herein different portions of shared object graphs may be cached at different devices sometimes referred to as intermediate nodes within the XMPP routing fabric . Instead of sending all information in an object graph to each consumer publisher may provide using object filters various pieces portions of the object graph to different intermediary nodes. Alternatively the grid i.e. intermediate nodes perform the object filtering. The consumers may then retrieve the object graph portions from intermediate nodes. Additionally when the unique information changes in an object graph changes the publisher is configured to only send those unique changes to the intermediate node.

In the example of when the user JChambers logs in shown in by reference an Identity Service Engine ISE authenticates JChambers on to the wireless network. As such in the method of the ISE which is publisher adds information about JChambers login event to the object graph of the publisher .

In the example of JChambers login event results in at the fetching of jchambers auth wirelessintf information from the object graph of publisher and filtering for information pertaining to the log in event. Next at a filtered portion or portions of the object graph is sent to the grid . The fetching and filtering of the object graph is shown in by reference while the sending of the object graph portion to the XMPP route fabric is shown by reference .

At the received portion of the object graph e.g. jchambers auth that is specific for consumers may be sent to those consumers. In the example of the authentication of JChambers may be relevant for for example firewalls and and these firewalls receive object graph portions. This is shown in by references .

As noted in accordance with examples presented herein the object filtering can also enable caching of information along the path between a publisher and the consumer s . In one example if JChambers has a new session but the new session is using the same SSID as before there is no need to resend the full details. If JChambers logs in again with the authentication method changed from a full authentication to lookup i.e. fast resume or from Protected Extensible Authentication Protocol EAP PEAP to Extensible Authentication Protocol Transport Layer Security EAP TLS after a certificate provisioning there is no need to resend the entire graph. Rather only a changed or delta portion is transmitted.

Relating to the optimization by using filters above objects and attributes that are of immediate interest and timeliness needs to a consumer may be cached closer to the consumer. Change sets that update the cache are propagated from the publisher to the consumer. Only objects and attributes that are marked for fast track priority are cached in the above manner. Objects and attributes that have no immediate need may be archived and transmitted on demand.

Memory may comprise read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible memory storage devices. The processor is for example a microprocessor or microcontroller that executes instructions for the object filtering logic . Thus in general the memory may comprise one or more tangible i.e. non transitory computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the object filtering operations described herein.

Memory may comprise read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible memory storage devices. The processor is for example a microprocessor or microcontroller that executes instructions for the grid object filtering agent logic . Thus in general the memory may comprise one or more tangible i.e. non transitory computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the object filtering operations described herein.

As noted presented herein are techniques that optimize the communication of the information over a communication fabric such that a single publisher of information can share that information with many different consumers without sharing the entire object graph. The techniques presented herein are useable to share relationships but also which attributes are included in the object therefore providing full flexibility as to what level of object detail is transmitted over the communication fabric. The techniques may use XML schema to communicate object graph filtering schemes without requiring different models of the same objects just to allow different traversal of those objects by different consumers. The techniques also enable a single publication of information into the communication fabric that may be consumed by different end network components. The communication fabric is also used to manage the subscriptions queries for optimized data communication. In certain examples it is possible to have authorization of particular elements of the object graph for different consumers so that not only does filtering get done based on the requestor but also policy can be applied to set which consumer sees the objects e.g. when used with a controller which is in the path of the request subscription .

