---

title: Demographic and media preference prediction using media content data analysis
abstract: Methods, systems and computer program products are provided for predicting data. A name or title is obtained from a taste profile. There is an index into a data set based on the name or title, and a set of terms and corresponding term weights associated with the name or title are retrieved. A sparse vector is constructed based on the set of terms and term weights. The sparse vector is input to a training model including target data. The target data includes a subset of test data which has a correspondence to a predetermined target metric of data. A respective binary value and confidence level is output for each term, corresponding to an association between the term and the target metric.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09547679&OS=09547679&RS=09547679
owner: SPOTIFY AB
number: 09547679
owner_city: Stockholm
owner_country: SE
publication_date: 20130322
---
This application claims priority to U.S. Provisional Application No. 61 617 553 filed Mar. 29 2012 the contents of which are incorporated herein by reference.

Example aspects of the present invention generally relate to predicting demographics and or taste preferences from music or other media data.

In business communications it is useful to direct communications to specific groups of recipients. For example an advertiser may wish to direct targeted advertisements to customers whose demographics male elderly etc. indicate that they are more receptive to such advertisements. To that end it is helpful to identify demographics of customers or other recipients from available source data.

However existing approaches tend to rely on a relatively small set of source data such as a web browsing history. Such approaches generally lead to predictions which have less accuracy than desired.

The example embodiments described herein address the above identified needs by providing methods systems and computer program products for predicting data. A name or title is obtained from a taste profile. There is an index into a data set based on the name or title and a set of terms and corresponding term weights associated with the name or title are retrieved. A sparse vector is constructed based on the set of terms and term weights. The sparse vector is input to a training model including target data. The target data includes a subset of test data which has a correspondence to a predetermined target metric of data e.g. demographic data . A respective binary value and confidence level is output for each term corresponding to an association between the term and the target metric.

The example embodiments of the invention presented herein are directed to methods systems and computer program products for predicting demographic data. This description is not intended to limit the application of the example embodiments presented herein. In fact after reading the following description it will be apparent to one skilled in the relevant art s how to implement the following example embodiments in alternative embodiments such as such as a services based environment a web media based environment etc.

As shown in the system includes management modules which control processing including taste profile analysis. In response to a query management modules retrieve terms and weights associated with an artist song title or other preference of a user and use the terms and weights to predict demographic data or other taste preferences as described more fully below.

Taste profiles contains records indicating the music taste or other tastes of users. In one example embodiment each taste profile is a representation of musical activity and may include a wide range of information such as artist plays song plays skips dates of listen by the user songs per day playlists play counts start stop skip data for portions of a song or album contents of collections user rankings preferences or other mentions received via a client device or other media plays such as websites visited book titles movies watched playing activity during a movie or other presentations ratings or terms corresponding to the media such as comedy sexy etc. Further details of the taste profile are described below with respect to .

Data source contains records as inverted indices in which terms are indexes to documents for artist names or song titles. For example the terms Sexy R B and Dance might index to a document for artist Beyonce as described more fully below with respect to . Of course records can be implemented in any other way that allows fast retrieval of desired information.

Data source is a data set which contains 1 documents over various domains such as artists and titles and 2 terms and weights associated with each artist and or each title. illustrates an example document according to such a data set. The document contains a document ID which uniquely identifies the document. In one embodiment the domain concerns musical artists. In accordance with such a domain document contains an artist ID an artist name and a list of descriptions related to a subject of the domain under consideration in this case the artist. Each description is a term weight pair where the term describes the subject and the weight indicates how closely the term describes the subject. Data source may store a wide range of terms associated with each artist name or song title and may be updated at regular intervals e.g. once per week or month.

For example one example embodiment might include a data set including over 10 000 terms for each artist from various sources of data about music or other media such as books movies or games along with associated weights. The terms may be weighted based on how important how often mentioned or how closely related the term is to the artist. The terms may contain information about location genre style marketing classifications sales predictions reviews chat room dialogue transcriptions biographies recent news articles time dependent popularity and familiarity data cultural analysis data and the like. For example the artist Beyonce might be associated with a vector of terms including R B sexy dance etc. with corresponding weights of 0.8 0.6 and 0.5. In another example Aphex Twin might be represented not by a single entity but rather by a vector of terms with probabilities e.g. idm 0.9 glitch 0.5 hardcore 0.2 etc. Additional information regarding generation of terms and weights can be found in U.S. Pat. No. 7 772 478 entitled Understanding Music the contents of which are incorporated by reference herein. By utilizing a larger amount of data associated with the artist or song names it is possible to predict demographics and or taste preferences more accurately than just using a single attribute such as the song title alone. Put another way the usage of a song artist movie etc. in a taste profile to determine predictive qualities can be enhanced by expanding these media items into descriptive terms and using those terms as the inputs to the predictive model.

API is an application programming interface used to communicate with a client device to receive or transmit information. For example API receives a query seeking a prediction of demographic data and returns a query result. To that end API may perform user authentication or other user related activities. In addition API may present a user interface to a client device or interact with a client device to receive input and display output.

User database contains records having identification information of users. In this example user may correspond to a customer such as an advertising entity who submits a query via a client device regarding which demographics are associated with particular musical tastes. On the other hand user may also correspond to a person or group whose musical tastes are being examined as described more fully below. In either case a user may or may not be required to register and or input other data to the database.

A taste profile can represent a single user or multiple users. Conversely a single user or entity can have multiple taste profiles. For example one taste profile could be generated in connection with a user s song play activity whereas another separate taste profile could be generated for the same user based the user s selection of songs artists for a playlist.

In addition taste profile data can also contain third party data about users anonymous or otherwise via the use of key value information. For example social media sites can be examined to create anonymous users and anonymous taste profiles based on mentions of a song title or an artist. In another example a third party audio streaming service can update taste profiles based on song events such as streaming of a new song.

Users or entities need not be aware what the taste profile is being used for. For example statistics in a taste profile can be used with statistics from other taste profiles to predict demographic groups corresponding to song plays without requiring any active submission from a user or client device regarding the user s demographics. Moreover publicly available data can be included in the taste profile providing an additional source of easily obtained data which can be used for more robust predictions.

An artist name or song title in a taste profile may be resolved from multiple different textual representations in a taste profile. For example an artist or song might be commonly represented by multiple nicknames abbreviations formats misspellings aliases and the like. Accordingly the system may take raw text which might include these abnormalities and resolve them to a formal artist or song title. Such resolution could be performed in a server performing other aspects of the invention or could be performed off site in another device.

In addition priority or preference values for a particular song or artist can be stored in the taste profile and can be weighted more heavily if for example an artists or song is listened to more frequently or if a user has identified favorite artists or songs.

While the disclosure refers mainly to using musical data such as artist name or song title for purposes of clarity it should be understood that the disclosure is not limited thereto. In particular demographic data could be predicted based on another media preference e.g. book movie or game preference instead of musical data. For example mentions from social media networks user settings playlists or favorites lists can be obtained by crawling or mining this information from the web or other user data to determine preferences related to types of content other than music for example book movie or game titles. Thus according to the invention the data set and corresponding terms and weights can be one of a musical data set a book data set a movie data set a game data set or some combination thereof.

In one embodiment user preference data is independent of a taste profile and is simply be gathered based on generic data analysis e.g. number of mentions etc. . Thus in such an embodiment a prediction is based on the book movie or game data.

In one example the taste profile database is updated continuously. For example a record is added when a user listens to a new song and the record is updated when an update of the user preference for the song is received via a client device. In one embodiment the information received from the client device is stored in the database the correct matched metadata is added and a play count is initialized. For example a taste profile update with Britney Spears Oops gets resolved to the actual song ID and metadata for Britney Spears and Oops I Did It Again with a play count of 1. If a fingerprint code e.g. an audio fingerprint code is sent to initialize a taste profile item the system can resolve the fingerprint code to metadata and discard the fingerprint code.

Referring back to taste profiles contains records indicating the music taste or other tastes of users. Each taste profile is a representation of musical activity and may include a wide range of information. Taste profiles can be implemented as one or more relational databases or in any other way that allows fast query processing and scaling.

Returning to a record in taste profiles contains a taste profile ID corresponding to a user. The record may further contain various fields identifying a song such as an artist ID identifying the performer of the song a play count and an album number or track number identifying the medium of the song not shown . In addition the record may contain various fields indicating a user s affinity for the song such as a play count and a review.

Each record in the taste profile is used to produce for each taste profile ID a list of terms where the length of the list generally ranges between 1 and 100 000. Each record can be implemented as a covering index residing in RAM for fast random access by management modules .

Referring to illustrates a representative view of inverted indices stored in data source which is an index database containing records as inverted indices in which terms are indexes to documents. Of course records can be implemented in any other way that allows fast retrieval of desired information. An inverted index can be generated for any term that appears in the documents in the document database . The term is then mapped to the list of documents that contain the term. The inverted indices in data source allow the artists songs or other subjects in music domains that might be associated with terms corresponding to a user s music experience to be identified quickly.

As discussed above the system also contains an application programming interface API . Functionally the API takes a request from a client device and authenticates users included in the request against the user database . Upon successful authentication the request is passed to the management module . After the management module performs processing to fulfill the request and sends the processing result back to the network the API outputs the processing result to the client device.

Other databases not shown may be communicatively linked to management modules . Such additional databases may store music requests each corresponding to one or more users each representing a list of documents over a specific domain that is associated with specific users. Still other databases may contain records mapping a user to the list of records in the taste profile database .

As described more fully below a wide range of terms and weights associated with each artist or song can be accessed in connection with a wide range of data in the taste profiles. This combination provides for a more robust prediction of demographic data from the taste profile data.

In more detail in step an artist or song title is obtained from a taste profile. While the disclosure herein may refer to a single artist or song title for purposes of conciseness it should be understood that the demographic prediction might often be from multiple artists or song titles. For example in one embodiment the demographic data may be predicted for all of the artists or song titles in a taste profile or across multiple taste profiles.

A taste profile is a representation of musical activity and includes a wide range of information such as playlists play counts start stop skip data for portions of a song or album contents of collections user rankings preferences or mentions etc. A taste profile can represent a single user or a multiple users. Conversely a single user or entity can have multiple taste profiles. For example one profile could be generated in connection with a user s song play activity whereas another separate profile for the same user could be generated based on the user s selection of songs artists for a playlist among others. Moreover publicly available data can be tied to the taste profile. For example social media sites can be examined to create anonymous users and anonymous taste profiles.

Returning to in step terms and weights associated with each artist or title in the taste profile are retrieved. A database may store a wide range of terms associated with each artist name or song title. For example one example embodiment might include over 10 000 terms for each artist and associated weights based on how important how often mentioned or how closely related the term is to the artist including location genre and style biography recent news articles time dependent popularity and familiarity data cultural analysis data and son on. For example the artist Beyonce might be associated with a vector of terms including fast tempo R B sexy etc. with corresponding weights of 4.5 4.2 and 2.5. Additional information regarding generation of terms and weights can be found in U.S. Pat. No. 7 772 478 entitled Understanding Music the contents of which are incorporated by reference herein. By tapping into a larger amount of data associated with the artist or song names it is ordinarily possible to predict more accurately than just using for example the song title alone. In particular as discussed above the usage of a song artist movie etc. in a taste profile to determine predictive qualities can be enhanced by expanding these media items into descriptive terms and using those terms as the inputs to the predictive model.

In step a sparse vector is constructed based on the obtained terms and weights. In particular each non zero term corresponding to the artist or song title or each artist or song title if there are multiple is combined to form a vector with each dimension of the vector being a retrieved term e.g. sexy . Thus in one aspect the taste profile includes multiple artists or song titles and the sparse vector is constructed from all of the terms in the musical data set corresponding to all artists or songs in the taste profile. As such from one perspective the sparse vector represents an entity s e.g. a user s musical identity. All non zero terms across all artists in the taste profile are combined to form the vector. In one embodiment if terms overlap between artists e.g. both Beyonce and Michael Jackson correspond to R B the weight of that term can be increased by for example adding the individual weights together for that term by multiplying the probabilities or by placing them in a Gaussian or other distribution and normalizing them among other methods.

In step the sparse vector is input to a training model for example by a support vector machine SVM . The training model is based on machine learning from ground truths from a random selection of data where target demographic data has been filled in and is held back during evaluation so that the evaluation task has never seen the input data before. For example a training model might use a database of one million taste profiles which as mentioned above include snapshots of detailed listening activity and artist preference alongside other demographic data and media preference data from various publicly available sources. One half of the one million might be test data for which certain ground truths are known i.e. person x likes classical and country music and falls under the demographic categories of male and 25 40 years of age. In an exemplary embodiment the test data has an even distribution of false and positive examples e.g. half of each.

Exemplary data found in a training model is shown below with the artist and song plays as the source data and the remaining fields listing target demographic metrics.

Many more fields can be collected or generated as training data such as for example sports affinity food and beverage brand types mentioned e.g. in a social media profile video game console or game preference college university and so on. For these taste profiles used in the learning model there is ordinarily little or no need to collect names or any other directly identifiable information. Thus for example each taste profile may be anonymized and given an ID and any other demographic or media preference data can be stored elsewhere linked to the taste profile.

Of course depending on the taste profiles used as the test data not every taste profile need have a full complement of target data. For example while almost all taste profiles may include some locale data perhaps only 90 might include gender only 40 might include media preference only 10 might include music service only 20 might include political and only 60 might include age. As discussed below therefore the F1 measure for accuracy can be used for evaluation whereas sampling bias can be reduced in the classifier by choosing an equal amount of pro con positive negative examples during training. For example if only 10 include a music service the test data can use 20 of usual.

Thus the test data can comprise a set of data determined to be associated with the target metric as a ground truth for the learning model. The learning model trains on these ground truths and then predicts demographics for new input taste profiles based on the model. Each target metric e.g. male gender is treated as a binary classification with multiple buckets each being a separate classifier although regression is possible for certain classes age location to get mean absolute error MAE instead of an F1 measure. The training model may use support vector machines SVM to train a model of profiles to a class output. For example multiple instances of a taste profile can be used and a non linear distance function e.g. the kernel method can be used as a target function. The value of the evaluation kernel for new data is the score for the affinity between a new taste profile and the target. In the learning model a linear SVM can be used for Vector A and a Gaussian RBF kernel SVM can be used for Vector B. Automatic regularization detection can also be used as described in U.S. Pat. No. 7 772 478.

In step the training model may give an output class of 0 or 1 positive or negative for each input sparse vector along with a confidence interval from the SVM classifier expressed as an absolute value. A positive output class indicates that this taste profile is part of the class predetermined in the ground truth e.g. male gender and the absolute value is the amount of confidence in that relation between the taste profile and the class. In some aspects the confidence value associated with the SVM classifier could be used to filter results. For example results or output could be filtered to only those terms with a confidence level above a set threshold. In such a case a tradeoff between accuracy and coverage can be managed by varying the threshold.

In step the artist or title or all of the artists or titles in the sparse vector can be evaluated as a classifier based on the output. For example the system may examine the predictions using for example an F1 measure or false positive negative rates etc. to determine the accuracy of the prediction for a given song title or album name. The F1 measure computes a single blended measure of precision how often the prediction was relevant and recall how much of the relevant data was correctly predicted . Therefore if very few of the test set is over the age of 80 a dumb classifier could simply never predict that age bracket and get very high scores F1 counters this by figuring in the statistics of the dataset. An F1 score of 1 in the evaluation of a predictive model indicates a perfect classifier or accuracy whereas an F1 of 0 is always incorrect. It can be interpreted as a probability of getting the prediction right taking sampling bias into account and is defined as F1 2 precision recall precision recall .

The above embodiments have been generally described with respect to prediction using a learning model trained on taste profiles with at least some ground truths.

Nevertheless the invention is not limited to prediction based on ground truths or predetermined labels. In particular the machine learning can also be conducted without ground truths. In such a case clusterings or latent clusters are produced instead of predictions. For example the system may find that people that listen frequently to classical music also tend to listen earlier in the morning people who listen for less than a minute to each song tend to not pay bills etc. Accordingly in such an embodiment the output is generally a clustering of behavioral data. Put another way it is ordinarily possible to cluster a taste profile representative of all the music activity of one or more users into for example taste groups e.g. 80s country R B or affinity groups e.g. influencer hipster mainstream .

Taste profiles can be clustered into useful buckets using an unsupervised method i.e. one without predetermined ground truths. This method inputs a large set of taste profile data and uses an unsupervised clustering approach that creates k new buckets to place new data in with k being chosen beforehand . Unsupervised clustering finds latent variables in data and may show new ways of categorizing an audience although the buckets are not labeled in any necessarily understandable way.

Thus in another example embodiment latent taste clusters are generated from taste profile data corresponding to one or more anonymous users and including at least an artist name or a song title. An artist name or a song title is obtained from a taste profile stored in taste profile data corresponding to one or more anonymous users. There is an index into a musical data set based on the artist name or the song title and a set of terms and corresponding weights associated with the artist name or the song title are retrieved. A sparse vector is constructed based on the terms and term weights. The sparse vector is input to a clustering procedure and one or more latent taste clusters are output based on the clustering.

A taste clustering prediction procedure such as that mentioned above could operate on the same data as for the demographic prediction procedure with the exception that there is no ground truth i.e. no training data is required . The clustering procedure could comprise for example K means or Latent Dirichlet Allocation LDA clustering trained on taste profile data to represent hidden variables in the group of profile data. The results can be evaluated for example by seeing how cleanly the generated clusters maintain divisions such as whether folk music and rock music remained neatly segregated between clusters.

In Vector A is a vector based merely on the words making up the names of artists or songs that a user has listened to and is shown for comparison with the more robust Vector B. Vector B corresponds to the more robust sparse vector discussed above namely based on a database storing e.g. over 10 000 terms for each artist and or song along with associated weights.

More specifically depict the differences between two vectors of each taste profile representing the music listening as the input to the training model. Vector A is a bag of words term approach where every song or artist either exists or does not exist. For example anonymous user X is represented as Aerosmith 1 Beyonce 1 Barbra Streisand 1 . Any artist the user did not mention or listen to is not included and assumed to be 0.

Meanwhile Vector B takes far more data for all of those artists and songs and arranges it in a far more descriptive set of musical data including genre descriptors similar artists words used to describe the artists and songs popularity and so on. The vector B data is composed of a combination of artist data with weights with term data from cultural analysis as described above and in U.S. Pat. No. 7 772 478.

As mentioned above in the learning model a linear SVM can be used for Vector A and a Gaussian RBF kernel SVM can be used for Vector B. Automatic regularization detection can also be used as described in U.S. Pat. No. 7 772 478.

For each target type age gender etc depict accuracy on the vector A approach and the vector B approach alongside in some cases other methods. Some target types such as movie and book preference require bucketing into genre style specific clusters.

For gender with more music data a significant boost in prediction quality can be seen. For example according to this example gender can be predicted with an F1 of 0.84 using the extended musical features.

Age predictions were bracketed into 25 and under and then 25 to 35. While simple music listen data handily beats a log data analyzer the extended data does even better at an F1 of 0.88.

For the film preference task movies were bucketed into genre and chose to predict the top 3 movie genres found in the set comedy romance and crime. The F1 score shows the accuracy of preference prediction for that genre of movie based on simple music data alone Vector A and then with extra music data Vector B. It can be observed that music is a relatively good predictor of comedy movie preference good at romance movie prediction and not so good at crime movie prediction. On the other hand the extra musical data may not help the crime movie prediction task as much in this example possibly because distribution of crime movie preference bridges across music taste.

The music service task looked at anonymous users who listed a preference for a music service like Spotify Rdio Rhapsody or MOG vs. not mentioning one or having any activity related to such a service and then the same for radio services such as iHeartRadio or Pandora. Music preference seems to be a reliable predictor for subscribing to a radio service but perhaps not yet for a streaming service. The Vector A approach on streaming received an F1 of 0.

For prediction of political leaning preferences were examined for political figures or parties e.g. if a user s taste profile listed Barack Obama the profile is placed in the democratic bucket or if they listed the Democratic party as a membership or social media like or mention. Likewise mention of prominent Republican figures or the party placed them in the republican bucket. This experiment was set up as a binary decision tree so the score represents accuracy of predicting a self selected party affinity in the reductive case of having to choose between two parties. The system achieved a respectable F1 of 0.351 predicting this purely on our extended musical data and 0.237 on the Vector A artist data.

Relationship status ordinarily comes from a lot of messy data from various sources. This data was cleaned as best as possible and three major buckets were identified single married and in a relationship. For example seeing someone or engaged went to in a relationship alone forever went to single domestic partnership went to married and so on. It can be seen that while it is difficult accurately predicting married vs. not or in a relationship there is better performance at predicting single again note that the score does take into account the very high bias of our test set mostly self reporting as single. . In this case additional music data being gathered may help.

The computer may include without limitation a processor device a main memory and an interconnect bus . The processor device may include without limitation a single microprocessor or may include a plurality of microprocessors for configuring the computer as a multi processor system. The main memory stores among other things instructions and or data for execution by the processor device . The main memory may include banks of dynamic random access memory DRAM as well as cache memory.

The computer may further include a mass storage device peripheral device s portable non transitory storage medium device s input control device s a graphics subsystem and or an output display interface . For explanatory purposes all components in the computer are shown in as being coupled via the bus . However the computer is not so limited. Devices of the computer may be coupled via one or more data transport means. For example the processor device and or the main memory may be coupled via a local microprocessor bus. The mass storage device peripheral device s portable storage medium device s and or graphics subsystem may be coupled via one or more input output I O buses. The mass storage device may be a nonvolatile storage device for storing data and or instructions for use by the processor device . The mass storage device may be implemented for example with a magnetic disk drive or an optical disk drive. In a software embodiment the mass storage device is configured for loading contents of the mass storage device into the main memory .

The portable storage medium device operates in conjunction with a nonvolatile portable storage medium such as for example a compact disc read only memory CD ROM to input and output data and code to and from the computer . In some embodiments the software for storing information may be stored on a portable storage medium and may be inputted into the computer via the portable storage medium device . The peripheral device s may include any type of computer support device such as for example an input output I O interface configured to add additional functionality to the computer . For example the peripheral device s may include a network interface card for interfacing the computer with a network .

The input control device s provide a portion of the user interface for a user of the computer . The input control device s may include a keypad and or a cursor control device. The keypad may be configured for inputting alphanumeric characters and or other key information. The cursor control device may include for example a handheld controller or mouse a trackball a stylus and or cursor direction keys. In order to display textual and graphical information the computer may include the graphics subsystem and the output display . The output display may include a cathode ray tube CRT display and or a liquid crystal display LCD . The graphics subsystem receives textual and graphical information and processes the information for output to the output display .

Each component of the computer may represent a broad category of a computer component of a general and or special purpose computer. Components of the computer are not limited to the specific implementations provided here.

Software embodiments of the example embodiments presented herein may be provided as a computer program product or software that may include an article of manufacture on a machine accessible or machine readable medium having instructions. The instructions on the non transitory machine accessible machine readable or computer readable medium may be used to program a computer system or other electronic device. The machine or computer readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks or other type of media machine readable medium suitable for storing or transmitting electronic instructions. The techniques described herein are not limited to any particular software configuration. They may find applicability in any computing or processing environment. The terms computer readable machine accessible medium or machine readable medium used herein shall include any medium that is capable of storing encoding or transmitting a sequence of instructions for execution by the machine and that cause the machine to perform any one of the methods described herein. Furthermore it is common in the art to speak of software in one form or another e.g. program procedure process application module unit logic and so on as taking an action or causing a result. Such expressions are merely a shorthand way of stating that the execution of the software by a processing system causes the processor to perform an action to produce a result.

Portions of the example embodiments of the invention may be conveniently implemented by using a conventional general purpose computer a specialized digital computer and or a microprocessor programmed according to the teachings of the present disclosure as is apparent to those skilled in the computer art. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure.

Some embodiments may also be implemented by the preparation of application specific integrated circuits field programmable gate arrays or by interconnecting an appropriate network of conventional component circuits.

Some embodiments include a computer program product. The computer program product may be a storage medium or media having instructions stored thereon or therein which can be used to control or cause a computer to perform any of the procedures of the example embodiments of the invention. The storage medium may include without limitation a floppy disk a mini disk an optical disc a Blu ray Disc a DVD a CD or CD ROM a micro drive a magneto optical disk a ROM a RAM an EPROM an EEPROM a DRAM a VRAM a flash memory a flash card a magnetic card an optical card nanosystems a molecular memory integrated circuit a RAID remote data storage archive warehousing and or any other type of device suitable for storing instructions and or data.

Stored on any one of the computer readable medium or media some implementations include software for controlling both the hardware of the general and or special computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the example embodiments of the invention. Such software may include without limitation device drivers operating systems and user applications. Ultimately such computer readable media further includes software for performing example aspects of the invention as described above.

Included in the programming and or software of the general and or special purpose computer or microprocessor are software modules for implementing the procedures described above.

While various example embodiments of the present invention have been described above it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art s that various changes in form and detail can be made therein. Thus the present invention should not be limited by any of the above described example embodiments but should be defined only in accordance with the following claims and their equivalents.

In addition it should be understood that the are presented for example purposes only. The architecture of the example embodiments presented herein is sufficiently flexible and configurable such that it may be utilized and navigated in ways other than that shown in the accompanying figures.

Further the purpose of the foregoing Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The Abstract is not intended to be limiting as to the scope of the example embodiments presented herein in any way. It is also to be understood that the procedures recited in the claims need not be performed in the order presented.

