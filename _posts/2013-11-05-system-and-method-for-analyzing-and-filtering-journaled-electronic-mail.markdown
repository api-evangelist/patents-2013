---

title: System and method for analyzing and filtering journaled electronic mail
abstract: A system, method, and program for the processing of large amounts of email based on user-configurable criteria in close to real-time. The invention enables filtering of all journaled emails in an organization for the duration of a regulatory proceeding, or for audit purposes, thus greatly reducing the manual effort required to produce a targeted set of emails. The journaling feature copies all unique emails coming through the distributed email server farm to a smaller set of email mailboxes. The filtering application could run as a batch operation on each of those “journaling” mailboxes at periodic intervals or could run interactively. The user-defined filter criteria are applied to the emails filling up the “journaling” mailboxes, and matches are separated from the non-matches for analysis. The invention can be executed on offline data, such as personal message stores or individual compound message files.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09515973&OS=09515973&RS=09515973
owner: Open Invention Network, LLC
number: 09515973
owner_city: Durham
owner_country: US
publication_date: 20131105
---
This application is a continuation of and claims priority from U.S. patent application Ser. No. 11 561 051 filed on Nov. 17 2006 entitled SYSTEM AND METHOD FOR ANALYZING AND FILTERING JOURNALED ELECTRONIC MAIL now issued U.S. Pat. No. 8 583 731 issued on Nov. 12 2013 which is incorporated by reference herein in its entirety.

The present invention relates generally to electronic mail processing for audits and regulatory compliance and more specifically to analysis and filtering of electronic mail from various input data sources.

Large corporations having thousands of employees communicate with each other using standard commercial electronic mail software applications such as Microsoft Outlook and IBM Lotus Notes that are processed through Microsoft Exchange or Lotus Domino in a client server relationship. A large volume of electronic mail messages is sent and received daily using these and other commercial electronic mail email applications.

As the growth of electronic mail communications in all types of businesses has increased dramatically over the past decade so has the need to journal and archive these electronic communications for audits regulatory compliance and potential legal discovery. Governmental requirements for storing electronic communications has significantly affected operation of messaging systems. Many companies are implementing solutions to archive all sent and received electronic mail for long periods of time.

When a company is under an audit or other regulatory proceeding it may be required to provide electronic mail communications pertaining to certain criteria. Manually processing archived electronic mail could take several months depending on the scope of the search that is required. A number of vendors provide software and solutions to address the needs of the electronic discovery market but are generally very expensive and may require that archived data be sent to the vendor s site for processing.

There is a need for a system and method that enable filtering of all electronic mail company wide for the duration of a regulatory proceeding or for increased responsiveness to audit requests or electronic discovery requests. The present invention is directed to such a filtering solution that works in conjunction with journaling of electronic mail by electronic mail servers.

The present invention is directed to a method system and program product for analyzing and filtering large volumes of email based on user configurable criteria in near real time. The analysis and filtering system is also referred to herein as the mail analyzer system. The present invention provides a system that filters all emails company wide thus greatly reducing the manual effort required to produce a targeted set of emails. The invention also significantly increases responsiveness to an audit request.

There are two main components of the mail analyzer solution a backend journaling feature of electronic mail servers and a filtering application. The filtering application is applied to journaled email. The journaling feature of electronic mail server copies all unique emails coming through the distributed electronic mail server farm to a smaller set of electronic mail server mailboxes. The filtering application can be run as a batch operation on each of the journaling mailboxes at some specific time interval e.g. every fifteen minutes. User defined filter criteria are applied to the emails filling up the journaling mailboxes and matches can be separated from the non matches for further analysis. Matches are copied to an output mailbox non matches are discarded.

The steps involved in the mail analyzer process include 1 loading a job configuration file and initializing job settings 2 initializing a personal store PST and or mailbox outputs 3 analyzing PST and or mailbox inputs 4 removing duplicates from the mailbox outputs and 5 generating reports and writing them to disk or email.

In one aspect of the invention a method system and program product are provided for analyzing and filtering a plurality of electronic mail messages. Each electronic mail message from an input source is copied to a journal mailbox. A plurality of electronic mail messages are then moved to a local store for analysis where a plurality of filter criteria are applied to each electronic mail message in the local store. Each electronic mail message that matches the filter criteria is determined. A corresponding predefined action is applied to each electronic mail message that matches the filter criteria.

The following description of the invention is provided as an enabling teaching of the invention and its best currently known embodiment. Those skilled in the art will recognize that many changes can be made to the embodiments described while still obtaining the beneficial results of the present invention. It will also be apparent that some of the desired benefits of the present invention can be obtained by selecting some of the features of the present invention without utilizing other features. Accordingly those who work in the art will recognize that many modifications and adaptations of the invention are possible and may even be desirable in certain circumstances and are part of the present invention. Thus the following description is provided as illustrative of the principles of the invention and not in limitation thereof since the scope of the present invention is defined by the claims.

An exemplary embodiment of the present invention will be described in the context of an electronic mail server environment. The concepts are applicable to electronic mail servers such as Microsoft Exchange or Lotus Domino. The Mail Analyzer system performs searches on email sources and performs a set of actions on the search results. The email sources can include email server mailboxes personal store PST files and compound message MSG files. Messages stored in PST files are easily overlooked during email backup and retention processes. PST files increase storage and backup overhead and are very difficult to audit.

There are three types of journaling that can be enabled in a Microsoft Exchange Server 2003 environment. Message only journaling creates a copy of all messages and the corresponding message header data to and from users on a mailbox database and sends the message copy to a specified mailbox. BCC journaling is message only journaling with the added ability to capture the BCC recipients. Envelope journaling differs from the other two types in that it permits archiving transport envelope information. This includes information about the recipients who actually received the message including BCC recipients and recipients from distribution groups. Envelope journaling is most commonly used for compliance purposes. Journaling cannot be enabled on public folder stores.

Journaling is enabled at the mailbox storage level by the administrator entering a mailbox where the journalized messages are sent. The message is delivered to the journal recipient mailbox and journalized using MAPI message format. Journalized messages can be retrieved from the journal recipient mailbox by using Post Office Protocol version 3 POP3 or Internet Message Access Protocol version 4.1 IMAP4 . This also provides a Multipurpose Internet Mail Extensions MIME format for the message.

Each rule is examined against the input as indicated in logic block . First the rule s input name is checked to determine if it references the input currently being examined. The status of the rule against this input is determined next. If the rule has been completed then processing advances to the next rule. It is also determined if any rules that the currently examined rule depends on have completed successfully. The next step in rule processing is to determine if there is an action to be performed for the rule and if the action is valid. Then a check is made to determine if the output specified in the action exists and if the output is valid.

The folder specified by the rule is searched as indicated in logic block . If the specified folder contains sub folders the sub folders are searched as well. The results for each folder are merged into a single collection of matched emails as indicated in logic block . In decision block a determination is made as to whether email matches were found in the input. If matches were found the rule s action is applied as indicated in logic block . Since this step is the most expensive except for searching it can be divided into several concurrent actions to increase throughput. Typically the number of concurrent actions depends on the number of allowable connections to the output mailbox. This value is configurable at the application level.

In decision block a test is made to determine if there is an additional rule to examine for the input. If there is the processing logic returns to logic block to process the next rule. After all rules have been applied to all inputs and if configured to do so each output is analyzed to remove duplicates as indicated in logic block . Duplicates are identified through their Internet message ID which should be globally unique. This will not account for the same email being sent to many people if each recipient s email is found to be a match since they will have different ID s. Temporary files such as PST files used for moving emails from the Exchange server for local processing are deleted if the journaled electronic mail analysis and filtering application is configured to do so. The analysis and filtering process is exited in logic block .

There are some settings of the application that can be controlled by command line parameters. By default when no command line parameters are supplied the application starts up in silent mode and runs the default job specified by the application configuration file. For example 

There are two application configuration files located in the same directory as the application itself CoolMAPI.dll.config and MailAnalyzer.exe.config. The names of these files are arbitrary for purposes of the present description. A MAPI.dll dynamic link library contains various programming functions for using the Microsoft Messaging Application Programming Interface MAPI . MAPI is used by Microsoft email applications to share email functionality and is required for email applications to operate correctly.

The CoolMAPI.dll.config file contains settings pertaining to the inner workings of a core library and the MailAnalyzer.exe.config file contains settings pertaining to operation of the mail analyzer application. The settings are contained in the appSettings section of an XML file in a format similar to the following 

The settings in the MailAnalyzer.dll.config file include but are not necessarily limited to the following 

The default mode for the mail analyzer application is interactive mode. At start up the mail analyzer application loads the default job file as determined in the mail analyzer application configuration file or by a file name specified via the command line. As illustrated in this results in the property grid in the Job Settings tab of the mail analyzer user interface being populated with the data from that file.

To run the loaded job the user administrator clicks the Run button causing the application mail analyzer to run the job. The mail analyzer application will examine the job settings to determine if they are valid displaying a list of validation errors and warnings if there are any or just proceeding to run the job if not. At this point the Job Progress tab of the mail analyzer user interface as illustrated in becomes active and begins displaying statistics and event notifications.

Below the property grid on the left side of the window illustrated in are two buttons Refresh Job Settings and Validate Settings. Clicking on the Refresh Job Settings button will update the property grid to reflect the current state of the job settings. Sometimes the property grid can get out of synchronization with the job settings. For example this could occur when the Inputs property is expanded and then a new input is added. Clicking on the Validate Settings button examines the settings and displays a list of validation warnings and errors if there are any.

Once the job is running the job can be cancelled by clicking the Cancel button on the mail analyzer user interface. Depending on the current operation it could take a few seconds to fully stop the job.

Alternatively an existing job file can be opened or a new one created through the file pull down menu illustrated in . If files had been opened previously they will appear in the Recent Files sub menu. Also the values in the property grid on the Job Settings tab can be saved to a file by selecting Save from the File menu. Additional information about editing jobs is described below.

Next to the File menu is the Tools menu illustrated in . The tools menu contains items for opening a message store editor and for browsing the local cache folder. The message store editor allows the user to edit the properties of emails and some other entities in a PST file and can be useful for testing purposes. The local cache folder is the location in which the mail analyzer application stores files for local processing such as when using an Exchange mailbox as an input source.

The Help menu illustrated in contains an item to access information about the mail analyzer application.

In background or silent mode typically run as a scheduled or batch operation the mail analyzer application loads the default job or one specified via the command line and then runs the job. The job can only be cancelled in this mode by terminating the process.

Most attributes and operations of a job can be customized in the Job Settings tab of the user interface. These are customized with the property grid in the user interface.

When the mail analyzer application first loads or when a new or existing job file is opened through the File menu the Job Settings tab depicted in becomes visible and the property grid within it populates with that job s settings. There are six properties of a job that can be edited through this interface the job Name Inputs Outputs Rules Status and Reports . All except the job name property expand to reveal additional properties. For properties that accept file names the paths for those files can be referential with the root being the mail analyzer application directory. Furthermore job variables can be used to customize property values. Property names marked with an asterisk in the tables below can accept job variables.

Each cell in the property grid e.g. Name has contextual help which is displayed at the bottom of the property grid. When a property like Inputs is expanded and a new input is added to the list that addition may not be represented in the property grid. When this happens clicking the Refresh Job Settings button at the bottom of the mail analyzer user interface screen will repopulate the property grid with the correct values.

Certain properties of the job settings can contain job variables which are substituted with the values they represent. Some of these variables are only valid within a certain scope such as the variable representing the rule name being only valid for properties related directly to a rule.

The sole purpose of the job name is to identify the job. This value can be used in other properties accessed via a job variable.

Inputs are sources of emails either from an email server e.g. Exchange mailbox one or more PST files or one or more MSG files. Table 2 indicates the parameters for the input cell . illustrates an exemplary expansion of the Inputs property.

Outputs are for storing the filtered results either in an email server e.g. Exchange mailbox or a PST file. Table 3 indicates parameters for the Outputs cell. illustrates an exemplary expansion of the Outputs property.

Rules define how the mail analyzer application should filter emails from input sources and the action that should be performed with the results. Table 4 indicates parameters for the Rules cell. illustrates an exemplary expansion of the Rules property for an Attorney rule. illustrates a context menu that provides options to view the XML representation of the filter as it will be written to the job XML file.

Job Status defines where the application maintains the status of its progress and whether to resume a previous job if incomplete. Table 5 indicates the parameters for the Status cell. illustrates an exemplary expansion of the Status property.

Job Reports provide notification about the results of the job once it is finished. Reports can be either emails or text files and can be set to be written only under certain conditions. Table 6 illustrates the parameters for the Reports cell. illustrates an exemplary expansion of the Reports property.

The system and method of the present invention have been described as computer implemented processes. It is important to note however that those skilled in the art will appreciate that the mechanisms of the present invention are capable of being distributed as a program product in a variety of forms and that the present invention applies regardless of the particular type of signal bearing media utilized to carry out the distribution. Examples of signal bearing media include without limitation recordable type media such as diskettes or CD ROMs and transmission type media such as analog or digital communications links.

The corresponding structures materials acts and equivalents of all means plus function elements in any claims below are intended to include any structure material or acts for performing the function in combination with other claim elements as specifically claimed. Those skilled in the art will appreciate that many modifications to the exemplary embodiment are possible without departing from the spirit and scope of the present invention.

In addition it is possible to use some of the features of the present invention without the corresponding use of the other features. Accordingly the foregoing description of the exemplary embodiment is provided for the purpose of illustrating the principles of the present invention and not in limitation thereof since the scope of the present invention is defined solely by the appended claims.

