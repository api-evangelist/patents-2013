---

title: NETCONF/DMI-based secure network device discovery
abstract: A system receives discovery rule inputs that include addresses, verifies one or more device identifiers for one or more addresses, obtains device information from each verified device associated with the one or more verified device identifiers, determines whether each verified device is a discovered device based on the device information, and automatically adds each verified device as a discovered device to a management system without human intervention when it is determined that the verified device is discovered. The system further creates device configuration information, creates an identifier and password, provides device configuration information, the identifier, and the password, to each of the discovered devices based on the NETCONF or the Device Management Interface standards, waits for a connection from the discovered devices, imports device configuration information from the discovered devices when the connection has been established, and indicates that the discovered devices are managed devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09100296&OS=09100296&RS=09100296
owner: Juniper Networks, Inc.
number: 09100296
owner_city: Sunnyvale
owner_country: US
publication_date: 20131223
---
Operations administration and management OAM refers to the processes tools standards etc. involved in operating administrating and maintaining a system. In a network environment there may exist a large number of networking devices e.g. switches routers security devices etc. . However without up to date information it can be challenging to perform any type of network administration.

Network device discovery is a process in which an inventory of devices associated with a network may be determined. Network administrators may utilize various protocols to facilitate the network discovery process.

According to one aspect a method may include receiving discovery rule inputs that include addresses verifying one or more device identifiers for one or more addresses obtaining device information from each verified device associated with the one or more verified device identifiers determining whether each verified device is a discoverable device based on the device information and automatically adding each verified device as a discovered device to a management system without human intervention when it is determined that the verified device is discoverable.

According to another aspect a device may include one or more components that may be configured to receive inputs that includes addresses of devices and public key parameters verify one or more device identifiers for one or more addresses perform public key verification for one or more addresses based on the public key parameters obtain device information for public key verified devices determine whether each public key verified device is a discoverable device based on the device information and automatically add to the device each public key verified device as a discovered device when it is determined that the public key verified device is discoverable.

According to another aspect a computer readable memory device may have stored thereon instructions which may be executable by at least one processor. The computer readable memory device may include one or more instructions for receiving discovery rule inputs that include a range of addresses or subnet masks one or more instructions for verifying one or more device identifiers associated with the range of addresses or subnet masks one or more instructions for performing public key verification for one or more devices corresponding to the one or more verified device identifiers one or more instructions for obtaining device information from the one or more devices that have been public key verified one or more instructions for determining whether the one or more devices that have been public key verified are discoverable devices based on their device information and automatically identifying one or more of the one or more devices as one or more discovered devices when it is determined that the one or more of the one or more devices are discoverable.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following description does not limit the invention.

The concepts described herein relate to a device discovery and management scheme based on NETCONF Device Management Interface DMI standards. Unlike other device discovery and management schemes the device discovery and management scheme described herein permits the adding of managed devices automatically without administrator intervention. That is typically in existing device discovery and management schemes devices are discovered and then the network administrator will manually add the discovered devices to the network management system. However in the device discovery and management scheme described herein the network management system e.g. NetScreen Security Manager NSM may automatically perform this task.

The device discovery and management scheme may employ Simple Network Management Protocol version 3 SNMP v3 which supports authentication and password privacy and provides enhanced security over previous versions of SNMP or other comparable protocols. Additionally SNMP v3 may be used to filter out specific Internet Protocol IP addresses associated with network devices so that such network devices may be automatically added by the NSM. Further the device discovery and management scheme may employ Secure Shell version 2 SSH v2 which also provides enhanced security e.g. fingerprint verification compared to other protocols such as for example Telnet or even SSH v1.5. Further the device discovery and management scheme may be implemented without seed device information e.g. names and or addresses of key devices in a network such as routers .

User terminal may include a computational device having communication capability. For example user terminal may include a computer e.g. a desktop computer a laptop computer or a handheld computer .

Network may include any type of network such as for example a local area network LAN a wide area network WAN a telephone network e.g. a public switched telephone network PSTN or a wireless network the Internet a private network etc. or a combination of networks. Network may include various devices that permit communication to take place via a wired and or wireless media.

Management system may include a device having communication capability. For example management system may include a router a bridge a switch a gateway a computer and or some other type of device. As will be described below management system may perform various operations associated with device discovery and management. In one embodiment a client server management system may reside on user terminal and management system respectively to permit device discovery and management. In other embodiments the management system may reside on a single device.

Network devices through may each include a device having communication capability. For example network devices through may each include a router a bridge a switch a gateway a computer a security device e.g. a firewall and or some other type of network device. Network devices through may include various interfaces and or support various protocols e.g. NETCONF DMI SNMP etc. in accordance with the discovery and management scheme described herein. For purposes of illustration network device may correspond to a computer network devices and may correspond to a switch and network device may correspond to a router.

Although illustrates an exemplary environment in other implementations environment may include additional different or fewer devices than those illustrated in . Thus it will be appreciated that environment is exemplary in terms of among other things the number of devices the connections between the devices etc. Additionally or alternatively in other implementations one or more operations described as being performed by a specific device may be performed by for example one or more other devices or in combination with the specific device and the one or more other devices. Further it will be appreciated that operations and or processes described herein may be performed in a distributed environment where such operations and or processes may be performed by remote processing devices that are communicatively coupled to environment .

Bus may permit communication among the other components. For example bus may include a system bus an address bus a data bus and or a control bus. Bus may also include bus drivers bus arbiters bus interfaces and or clocks.

Processor may interpret and or execute instructions and or data. For example processor may include a general purpose processor a microprocessor a data processor a co processor a network processor an application specific integrated circuit ASIC a controller a programmable logic device a chipset a field programmable gate array FPGA or some other logic device or component that may interpret and or execute instructions. Processor may control one or more other components.

Memory may store data and or instructions. For example memory may include a random access memory RAM a dynamic random access memory DRAM a static random access memory SRAM a synchronous dynamic random access memory SDRAM a ferroelectric random access memory FRAM a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM and or a flash memory.

Storage may store data and or software applications. For example storage may include a hard disk e.g. a magnetic disk an optical disk a magneto optic disk etc. a compact disc CD a digital versatile disc DVD a floppy disk a cartridge a magnetic tape another type of storage medium or another type of computer readable medium along with a corresponding drive. The term computer readable medium is intended to be broadly interpreted to include a physical or a logical memory device.

Memory and or storage may also include a storing device external to and or removable from device such as a Universal Serial Bus USB memory stick a hard disk etc.

Input component may permit input to device . For example input component may permit a user and or a device to input information. Input component may include for example a keyboard a keypad a mouse a button a switch a microphone voice recognition logic a pen a port etc. Output component may permit output from device . For example output component may output information to a user and or a device. Output component may include for example a display a speaker one or more light emitting diodes LEDs a printer a port a vibrator etc.

Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems. For example communication interface may include an Ethernet interface an optical interface a coaxial interface a wireless interface or the like.

Although illustrates exemplary components of device in other implementations device may include fewer additional and or different components than those depicted in . In still other implementations one or more components may perform one or more other operations described as being performed by one or more other components.

NSM client may provide a graphical user interface GUI for administrator . As will be described below NSM client may receive input information from administrator and provide state and or status information to administrator during a device discovery and management process.

NSM server may communicate with network devices through according to the device discovery and management scheme described herein. NSM server may utilize various protocols e.g. NETCONF DMI SSH v2 SNMP v3 etc. and automatically perform various operations according to the device discovery and management scheme.

The IP range may include subnet masks e.g. an IP subnet . The SSH v2 parameters may include for example a user name and password. The SSH v2 parameters may be applicable to each device in the IP range. The SNMP v3 parameters may include parameters related to privacy and authentication. is a diagram illustrating an exemplary graphical user interface GUI provide by NSM . Administrator may input the discovery rule into user terminal i.e. NSM client . For example the GUI may permit administrator to input an IP range of addresses SSH v2 parameters and SNMP v3 parameters into fields and respectively.

All of the IP addresses with the IP subnet range may be determined block . NSM server may generate all of the possible IP addresses with the IP subnet range. NSM server may utilize these IP addresses for performing discovery for each of the IP addresses. NSM server may filter broadcast addresses multicast addresses and or loop back addresses from the IP address range and or the IP subnet. NSM server may also filter any addresses known to correspond to devices already discovered and or managed.

A device ID for each IP address may be verified block . NSM server may ping each device associated with an IP address to determine if the device is active. For example NSM server may connect to a device using SNMP v3 and retrieve a device ID e.g. sysObjectlD from the device. NSM server may compare the retrieved device ID to a management information base MIB that includes device IDs belonging to a particular enterprise provider network etc. If the device ID is not found in the MIB NSM server may determine that the device is not to be discovered and or managed and proceed to the next IP address. Further if a ping is non responsive NSM server may proceed to the next IP address.

SSH fingerprint verification may be performed block . NSM server may retrieve the SSH v2 fingerprint i.e. public key from the device. The retrieved SSH v2 fingerprint may be verified by administrator for authentication purposes. For example the retrieved fingerprint may be compared to a saved fingerprint accessible to NSM . is a diagram illustrating an exemplary GUI of NSM . NSM client may display fingerprint information to administrator to permit acceptance or rejection of the fingerprint information such as for example in field .

Device information from verified devices may be obtained block . NSM server may automatically login to each device using SSH v2 credentials. For example NSM server may utilize NETCONF or DMI e.g. a GET system information application programming interface API to obtain device information. The device information may include for example device family e.g. router switch device platform device model and or device operation system name and version.

A determination may be made whether verified devices are discoverable devices based on device information block . NSM server may determine whether a verified device is a discoverable device based on device information. For example NSM server may be capable of managing only a subset of devices belonging to an enterprise provider and or network . NSM server may identify these devices based on the device information and device ID . If the device information does not correspond to a discoverable device NSM server may determine that the device is not capable of being managed.

Automatically add discoverable devices to management system block . NSM server may automatically add these devices as discovered. As will be described below NSM server may subsequently manage these devices by obtaining device configuration information and or other inventory information e.g. hardware software etc. .

Although illustrates an exemplary process in other implementations fewer additional or different operations may be performed. For example in other implementations SNMP version 1 SNMP v1 or community based SNMP version 2 SNMP v2c may be employed. In such instances a community string may be utilized as a discovery rule input.

A process for managing discovered devices is described below with respect to . Although this process is presented as a separate process it will be appreciated that the management of the discovered devices is a continuation of process and may be performed as a single process flow. It will be appreciated under the NETCONF or DMI standards devices are required to establish connection with the management system e.g. NSM .

An ID and password for the device may be created block . For example NSM server may generate an ID and a password for the devices to utilize when logging into NSM server . Devices may be logged into using SSH block . For example NSM server may login to the devices using SSH v2 credentials. Device configuration ID and password may be provided to the devices block . For example NSM server may provide device configuration ID and password information to the devices. The devices may utilize the ID and password when logging into NSM server . NSM server may automatically logoff from the devices once the device configuration ID and password information have been provided.

Wait for the establishment of a connection using the ID and password from the devices block . For example NSM server may wait for a connection to be established by the devices. As previously described the NETCONF and DMI standards are structured such that the devices are to initiate a connection. When a device initiates a connection NSM server may authenticate the login based on the ID and password.

Device configuration information may be imported block . The devices may provide NSM server with device configuration information so that NSM server can manage the devices. The device configuration information may include for example hardware inventory software inventory license inventory device state and configuration information etc.

The status of the devices may be stored block . NSM server may store device configuration information and indicate that a device is managed and configurations in sync. is a diagram illustrating an exemplary GUI of NSM client . As illustrated device configuration status field indicates that a device is managed and in sync.

Although illustrates an exemplary process in other implementations fewer additional or different operations may be performed.

It will be appreciated that discovery and management operations may proceed on multiple concurrent threads. The maximum number of concurrent threads for each phase and the time outs that apply in different phases may be configurable through a configuration file in NSM . In addition the administrator may be able to monitor the progress of the discovery and management process via a GUI of NSM client .

The foregoing description of implementations provides an illustration but is not intended to be exhaustive or to limit the implementations to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the teachings. For example discovery and or management operations may be re used as schedulable tools to keep configuration and deployment information updated in the management system. Discovery operations may be performed on a scheduled basis and or based on external events e.g. an SNMP trap such as when a new device is added from a device already being managed. Further device discovery may be expanded into topology discovery since various devices may be discovered and their relationships e.g. interconnectivity routing tables etc. may be discovered based on for example SNMP MIBs DMI and or Link Layer Discovery Protocol LLDP specifications.

In addition while series of blocks have been described with regard to the processes illustrated in the order of the blocks may be modified in other implementations. Further non dependent blocks may be performed in parallel. Further it may be possible to omit blocks within processes and or .

It will be apparent that aspects described herein may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects does not limit the embodiments. Thus the operation and behavior of the aspects were described without reference to the specific software code it being understood that software and control hardware can be designed to implement the aspects based on the description herein.

The term may is used throughout this application and is intended to be interpreted for example as having the potential to configured to or being able and not in a mandatory sense e.g. as must . The terms a an and the are intended to be interpreted to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to be interpreted as based at least in part on unless explicitly stated otherwise. The term and or is intended to be interpreted to include any and all combinations of one or more of the associated list items.

Even though particular combination of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification.

No element block or instruction used in the present application should be construed as critical or essential to the implementations described herein unless explicitly described as such.

