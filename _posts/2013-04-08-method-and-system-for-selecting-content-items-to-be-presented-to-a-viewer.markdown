---

title: Method and system for selecting content items to be presented to a viewer
abstract: Systems and methods are provided for determining eligible content items. In one example, the determination is based, at least in part, on information about at least one previously presented content item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08745046&OS=08745046&RS=08745046
owner: Jericho Systems Corporation
number: 08745046
owner_city: Dallas
owner_country: US
publication_date: 20130408
---
This application is a continuation of U.S. patent application Ser. No. 13 245 737 filed Sep. 26 2011 which is a continuation of U.S. patent application Ser. No. 12 855 308 filed Aug. 12 2010 which is a continuation of U.S. patent application Ser. No. 10 852 406 filed on May 24 2004 which is incorporated herein by reference in its entirety and claims the benefit of priority to U.S. Provisional Patent Application No. 60 482 487 filed on Jun. 25 2003 which is incorporated herein by reference in its entirety. This application is related to and incorporates by reference U.S. Provisional Patent Application No. 60 438 972 filed Jan. 9 2003 entitled Method and System for Dynamically Implementing an Enterprise Resource Policy and U.S. patent application Ser. No. 10 755 173 filed Jan. 9 2004 entitled System and Method for Dynamically Implementing an Enterprise Resource Policy. 

The invention relates to a system operable to select optimal content to be presented to a viewer based upon both the characteristics of the viewer and the viewing situation.

The present invention relates generally to marketing systems and methods and more particularly a system and method for dynamically segmenting and targeting marketing.

Over the last decade technology has drastically improved the effectiveness of technology based marketing. CRM systems have brought businesses back to their ancestral roots by providing organizations with a collective memory of every customer and their interactions. Previously this was cost prohibitive.

However providing the optimal message to a customer is still a very cumbersome and time consuming process. As a result corporations have not fully benefited from the promise of real time customized and personalized marketing. Many customized content and personalization initiatives remain undeveloped because of their prohibitive human and financial costs of implementation.

With the traditional targeted marketing paradigm the seller initiates an interaction with the customer by analyzing historical data to segment customers offline and then pushes a message out to the customer. The seller then hopes for a response. However other more proactive methods are desired.

The present invention provides a system and method to select from a predefined palette of content items those items which are best suited for an individual. This selection is based both on the attributes of the viewer and the context in which the contents is viewed. i.e. at that precise moment in time . The content may involve advertisements articles or multimedia such as animated images movies or audio clips.

More specifically the present invention provides a centralized system that defines and manages business rules to identify what content is most relevant to the individual viewer s context. Then upon receipt of the content selection request a centralized system evaluates the viewer s characteristics the situational characteristics context and the viewer s personal history against the coded rules in order to select an optimal content set for display. Then the selected content is returned to a local system that serves the selected content to the viewer. Essentially a number of diverse content items can be managed by the system wherein each content item may have one or more coded rules which define the viewer and content in which content would be presented to the viewer.

In effect each item of content has a rule which describes a profile of what an ideal viewer or presentation opportunity. When the content selection request is made the coded rules associated with each relevant item are evaluated to determine if an appropriate viewing opportunity exists. If the rule is satisfied the system then adds the content item within a prioritized queue to an aggregated body of content items for this presentation opportunity. The items are then sorted by descending priority with the most significant items being returned for presentation. The prioritized list is returned based on the results of evaluating the individual content items against various business rules. This produces a prioritized list of items most suitable for presentation to the viewer in the viewer s current viewing context.

Several advantages are provided. First the ability to perform the evaluation process in real time at the moment of the request is a significant advantage over existing systems. This allows the content selected to be sensitive to the current presentation opportunity rather than the data warehouse intensive traditional model which selects content days and even weeks beforehand. The present invention may also couple to enterprise data sources customer care systems and external data sources such as credit scoring bureaus etc. to provide a very rich palette of information on which to base the content selection rules.

A detailed log of each request made along with any all content items selected for presentation provides for auditability and effectiveness metrics as well as inputs for a feedback loop in which future presentation opportunities can be made based on prior decisions. For example a rule could be constructed such that an individual item of content would be highly prioritized under default conditions but would be deprioritized in favor of other content items after the original item had been presented to a viewer. One implementation may reduce an item s priority after the item has been viewed three times in a 24 hour period.

An advantage of the present invention is that the rules defining the optimal presentation opportunity do not need to be maintained in executable code by the administrator or user. The rules are captured in a representative notational format via a rule builder GUI application and then stored in an XML encoded structure within repository. As they are not a part of the presentation engine such as a web server they can be changed at will without the need to update or test the web server or HTML source for the web pages the content is to be presented in. The items of content are managed in a hierarchical model with each item inheriting characteristics from its parent to determine who may manipulate or change the rules which determine the rule s behavior unless a specific rule is established for the individual item. Ultimately this allows the rules to be administered in a distributed fashion throughout an enterprise or even to clients usually advertisers and business partners if the situation warrants such.

The invention can be invoked via a number of methods including a J2EE compliant API library a procedural interface suitable for linking into legacy applications written in C COBOL FORTRAN etc. a Web Services interface a C interface or even a custom developed API for an individual customer s needs.

Preferred embodiments of the present invention are illustrated in the Figures like numerals being used to refer to like and corresponding parts of the various drawings.

One potential architecture for the use with the invention is depicted in . Here user or viewer requests a page of content from web server . Viewer may have previously established his identity by authenticating in some fashion with web server . Alternatively viewer may be treated as having a default or anonymous identity.

Web server loads page from web page repository . Then web server executes java servlets or other like instructions that are contained within page . The servlets invoke services application programming interface API which places a remote procedure call RPC into policy manager . This RPC requests content specifically chosen for viewer . Request contains both the identity of viewer and information that defines the set of rules and content items to be selected from a campaign or set of related content items.

Policy manager uses a name associated with the campaign or set of related content item to retrieve a set of rules from rules repository . Policy manager then examines rules to determine what additional information or data elements are required to evaluate rules .

Policy manager invokes any all connectors required including but not limited to LDAP connector SQL DB connector and custom connector to retrieve the information or data elements required to evaluate rules . These data elements may be within directory database HR system database and other data sources . These data sources return the data elements needed to policy manager .

Policy manager enriches the decision context with the information retrieved. Policy manager then evaluates the rules and creates an aggregated list of the content items associated with any all rules whose criteria are met. Policy manager then sorts the aggregated list in order of descending priority. The top n items of content n being a number of items parameter passed on the ESAPI request are selected and returned to web server as the resultant of the ESAPI request. The web server then inserts those return content items into page which may take the form of an HTML document. The customized page is then presented to viewer via a web browser or other like application.

Event log may track every transaction created and stored within repository . The information within event log can provide the basis of metrics determining system usage and effectiveness as well as providing the inputs and capability on which to modify rules . For example upon such information may include how many times a particular item has been presented to a specific viewer in a defined time interval.

In step the document source is retrieved from the source repository whereupon the web server executes instructions embedded within the document. Those instructions then invoke a services API in step to request content from server . Optimal content is returned to web server in step . Instructions within the document are then replaced with content. Then in step web server delivers the customized page to the user s browser for display.

In GUI allows administrative users to access rules stored within repository . GUI also facilitates the ability of administrative users to create and modify coded rules based on business rules. GUI interacts with repository through server . The coded rules corresponding to the business rules are stored within repository . These rules determine what content will be eligible to be presented to a viewer as previously described in .

Rules are retrieved from repository following receipt of a content selection request that corresponds to query that is received via web server via input from user through web server . Rules are dynamically loaded and interpretively evaluated within process wherein the results of this evaluation are returned to web server or other requesting application in order to present the optimum content to a viewer.

The concept of dynamic enrichment of the data is available within the decision context depicted in . The dynamic enrichment process involves receiving a request in step . In step in response to the request a policy set is loaded from repository in step . The policy set is analyzed to determine the required data elements in step . In step metadata is consulted and data elements are grouped by connector. For each connector a determination is made in step for data for each data element within the connector. This involves determining whether or not each data element already has a value at decision point . If it does an evaluation is made for the next data element. If not a determination is made a decision point as to whether or not all required key values for this data element are present. If all the required key values for this data element are present the data element is added to the connector request in step otherwise a determination is made for the next data element. In decision point a determination is made as to whether or not additional data elements are required for this data connector. If additional elements are required the next data element is evaluated returning to step . Otherwise at decision point a determination is made as to whether or not any more connectors remain to be processed. Additional connectors are processed as described above. Otherwise the connectors with unresolved elements are invoked at step in order to retrieve identified additional data elements. At decision point a determination is made as to whether or not any new values were retrieved. If there were at decision point a determination is made as to whether any unfilled data elements remain in which case the process is repeated by returning to step until no unfilled data elements remain as indicated at point . Essentially feature allows the rules engine to determine when all the data elements required to evaluate the policy are present. If the answer is no then the rules engine may through connectors map to and retrieve all requisite data elements before evaluating the rule.

A diverse fault tolerant architecture that enables effectively scaling across multiple servers and or platforms while continuously servicing content selection requests is depicted in . This architecture effectively operates even when a multiple server loss occurs.

The current implementation of this concept is built upon a Java infrastructure and utilizes a number of fairly obscure features of the Java language to facilitate the service. The two most prominent of these are the concept of a dynamic class loader and HTTP XML RPC architecture used to manage the interaction between processes.

It is important to note that while one embodiment is implemented in the Java language the concepts that distinguish the present invention are notably not Java specific and in no way should the claims be restricted to the Java language or the platforms on which it runs. In a procedural language such as C C PL l etc. the same concepts could readily be implemented through the use of dynamically shared libraries or through dynamic overlay methods that are well defined and commonplace.

While the embodiments discussed above focus on serving content to a web server the present invention may also service other delivery mechanisms such as a Voice Response Unit VRU a wireless device such as a pager or cell phone etc.

Although the present invention is described in detail it should be understood that various changes substitutions and alterations can be made hereto without departing from the spirit and scope of the invention as described by the appended claims.

The present invention provides a marketing system and method that substantially eliminates or reduces disadvantages and problems associated with previously developed systems and methods used for segmenting and targeting marketing.

More specifically the present solutions offer an alternative approach to addressing the problem of targeted marketing. One embodiment performs the segmentation of the customer and the selection of content targeted at that customer in real time at the moment of the presentation event. This allows the segmentation decision to take into account a great many factors that were traditionally unavailable for inclusion in the segmentation process. In effect real time evaluation of the segmentation policy allows the selection of the most advantageous message content

A specialized high speed rules evaluation framework couples with an adaptive connector infrastructure for retrieving the customer s characteristics when the evaluation request is made. The sequence is as follows 

1. The system is instructed as to how to retrieve on demand the customer characteristics required to evaluate the segmentation rules. The characteristics may not be specifically associated with the customer. For example they may be items such as national security alert status the current Dow Jones index weather within the customer s zip code etc. 2. The segmentation policies are written as rules and stored within a rules repository. Each rule defines a customer segment. For example one such segment might be Unmarried males between the ages of 26 and 31 who own their home drive an SUV and have incomes greater than S87K year. 3. A specifically focused advertising message is crafted and associated with the segmentation rule as a Payload along with a delivery priority. The priority represents the order of importance for each message to be delivered and determines which message should be presented first in the event that the customer is eligible for more than one message. 4. A Campaign is created which associates together all the segmentation rules which compete for the presentation opportunity. This Campaign is then associated with a delivery mechanism such as a particular area within a web page. 5. All the prior steps were preparatory now we focus in on the actual presentation event. In the website example the customer s identity is established by an interaction with either his web browser or the web server there are many many ways in which this can be accomplished. The service is not involved in the establishment of the identity but requires an identity to work with as a prerequisite to operation. 6. The customer instructs his browser to connect to the web server and serve up a specific html dataset of content. 7. The Web server loads the dataset from disk and examines it to determine if there are any required actions to be taken prior to sending it to the customer s browser. In this case it finds a scripted invocation request associated with a specific frame or table on the page. 8. The web server s initiates execution of the scripted action which invokes the rules processing infrastructure and passes along as parameters the identity of the customer the campaign associated with that area of the page any transaction specific values that might be needed in the rules evaluation and the number of responses usually 1 . 9. The rules engine loads the campaign and all the segments referenced by it from the rules repository into memory. 10. A list is compiled of all the variants required to evaluate the campaign s segmentation policies and then is compared against the values passed in on the request. 11. If additional variable values need to be obtained prior to evaluating the rule the rules engine dispatches requests to the connector infrastructure to retrieve all the needed items. 12. The connectors retrieve the missing data and return it to the rules engine. 13. The rules engine now enters evaluation each segment of the campaign is analyzed separately to determine if the customer meets all the criteria to cause it to fire . 14. When a segment fires the payload and priority associated with it are inserted into what is known as the aggregated response set essentially a list of all those payloads and priorities associated with segments the customer matches. 15. The list is then sorted by descending priority. This means that those messages with the highest priority will be at the top of the list. 16. The engine then returns to the web server a response set containing up to the requested number of messages in descending priority. While in most cases this would be only one the architecture allows for as many messages as the web server requests this enables the system to be used for multiply occurring non exclusive. events such as examining the shopping cart and presenting messages associated with each item in it. 17. An event log is updated indicating that the request has been processed and listing the campaigns segments and variable values that were used to evaluate it as well as the aggregated prioritized list of content returned to the web server.

The script in the web page is replaced with the customized content prior to delivering the page to the user s browser. In effect the web page has been tailored with content deemed to be optimal for that customer s segment.

A final specification and perhaps the most revolutionary utilization of the design is the enablement of an auction scenario whereby multiple advertisers can effectively bid against each other in a competition for the presentation event for an individual situation and customer.

In this scenario a campaign would be created and associated with for example a section of the web page used by a content publisher such as Yahoo AOL etc. Each advertiser would then be allowed to utilize the system to create their own segmentation policies and associate payloads and priorities with them. When the customer requested that the web page be served up the campaign would be invoked and the segments would be evaluated. The aggregated response set would be created then sorted and the advertiser with the highest bid stored as a priority would be awarded the presentation event. The priority bid would effectively represent the amount the advertiser was willing to pay in order to have that particular message presented to that particular individual at the time of the presentation event.

Post processing of the event logs which record all of the context information policies and resultants returned would then provide a basis for billing the advertisers for the presentation event at their bid price. This represents a capability that does not at this time exist anywhere else. Note that the segmentation policies for the competing segments do not have to be based upon the same segment definitions or even on the same customer characteristics each segment is evaluated independently and the only points of correspondence between segments are their association with a common campaign and the bid or priority which determines which of the eligible payloads are presented.

The priority itself can either be statically defined within the segmentation policy or can be a retrieved or computed value returned by the connector infrastructure. In this way for example a connector could be constructed to return a correlation coefficient which indicated the customer s similarity to a statistical model of the ideal customer. For a customer who matched the model closely the coefficient would be high and the bid would be correspondingly high. For a marginal customer however the bid would be computed at a lower level.

Use of this model offers a unique opportunity to both the advertiser and the media publisher. The advertiser is given the opportunity to target only those customers who they have identified through the segmentation policies as being good candidates for the particular marketing messages they ve chosen to present. Elimination of unproductive segments and the costs. of presenting messages to those segments allows the advertiser to maximize his return on investment by paying a premium price for a premium opportunity that is highly likely to result in a sale rather than taking a shotgun approach. Even if he spends more on a per presentation basis his effective yield on a sales per advertising dollar basis should improve.

The media publisher meanwhile gains a valuable revenue optimization capability in that each opportunity to present a marketing message to an individual customer will yield the maximum revenue for that event he s effectively auctioning off each presentation opportunity to the highest bidder one customer at a time.

Although the present invention is described in detail it should be understood that various changes substitutions and alterations can be made hereto without departing from the spirit and scope of the invention as described.

