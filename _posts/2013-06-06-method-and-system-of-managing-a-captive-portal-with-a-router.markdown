---

title: Method and system of managing a captive portal with a router
abstract: In one exemplary embodiment, a computer-implemented method of a providing a captive portal with a router includes implementing a hotspot managed by a router. The hotspot comprises an Internet-access over a WLAN through a router communicatively coupled to an Internet service provider. The WLAN is identified with a service set identifier (SSID). A connection with a client device is initiated. An HTTP request to a web server from the client device is detected. An internet communication is restricted, with a firewall rule, to a Transmission Control Protocol (TCP) port used by a HTTP or a TCP port used by an alternative HTTP Secure port. The HTTP request is transparently routed to an internal HTTP proxy server running on an alternative HTTP TCP port in the router. The internal HTTP proxy server determines a requested web site's uniform resource locator (URL) and determines whether the requested web site's URL is allowed into a walled garden maintained by the router.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09166949&OS=09166949&RS=09166949
owner: QLICKET INC.
number: 09166949
owner_city: Murrysville
owner_country: US
publication_date: 20130606
---
This application claims priority from U.S. Provisional Application No. 61 656 942 filed Jun. 7 2012. This application claims priority from U.S. Provisional Application No. 61 825 087 filed May 19 2013. These applications are hereby incorporated by reference in their entirety for all purposes.

This application relates generally to computer networking and more particularly to a method and system of managing a captive portal with a router.

A captive portal technique can cause a client on a network e.g. a public hot spot to view a special web page e.g. for user authentication purposes for user identification purposes etc. before accessing the Internet. Captive portals can be implemented in a variety of contexts. For example a proprietor of a public space e.g. an airport a restaurant a caf etc. may desire to provide Internet services to the public. The proprietor can utilize a captive portal to ensure proper use of the Internet by the public. The proprietor can utilize a captive portal to maintain a record of users that have utilized the captive portal for statistical and or legal purposes. Consequently captive portal techniques have increased in popularity. Thus additional methods and systems are desired for improving current captive portal techniques.

In one exemplary embodiment a computer implemented method of providing a captive portal with a router includes implementing a hotspot managed by a router. The hotspot comprises an Internet access over a WLAN through a router communicatively coupled to an Internet service provider. The WLAN is identified with a service set identifier SSID . A connection with a client device is initiated. An HTTP request to a web server from the client device is detected. An internet communication is restricted with a firewall rule to a Transmission Control Protocol TCP port used by a Hypertext Transfer Protocol HTTP or a TCP port used by an alternative HTTP Secure port. The HTTP request is transparently routed to an internal HTTP proxy server running on an alternative HTTP TCP port in the router. The internal HTTP proxy server determines a requested web site s uniform resource locator URL and determines whether the requested web site s URL is allowed into a walled garden maintained by the router wherein the router serves a light Hypertext Markup Language HTML web page that redirects a web browser of the client device to an internal web server where a captive portal is hosted when the requested web site s URL is not allowed into the walled garden and wherein the router routes a request for the requested web site s URL by the web browser of the client device to an internal web server associated with the requested web site s URL when the requested web site s URL is allowed into the walled garden. The web browser of the client device is connected with the internal webserver. The HTML page served by the internal HTTP proxy server is obtained with the internal web server. A screenshot of a requested web site is generated by retrieving the requested website. A captive portal s welcome page over the screenshot is served with the internal webserver.

Optionally it can be periodically determined with a timed thread implemented in the router that an active session between the roister and the client device is less than an allowed session time. It can be determined that the client device is associated to the SSID when the active session between the router and the client device is less than the allowed session time. The active session can be closed when the client device is not associated to the SSID. A permission in a router firewall provided for the client device can also be removed. The router can automatically resolve the requested web site s URL to the internal address of the WLAN using an internal Domain Name System DNS server acting as a master server for a domain party providing the WLAN. The TCP port used by the HTTP can be the TCP port 80. The TCP port used by an alternative HTTP Secure port can be the TCP port 8443.

The Figures described above are a representative set and are not an exhaustive with respect to embodying the invention.

Disclosed are a system method and article of manufacture of managing a captive portal with a router according to some embodiments. Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the particular example embodiment.

References throughout this specification to one embodiment an embodiment or similar language mean that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment.

Furthermore the described features structures or characteristics of the invention may be combined in any suitable manner in one or more embodiments. In the following description numerous specific details are provided such as examples of programming software modules user selections network transactions database queries database structures hardware modules hardware circuits hardware chips etc. to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention may be practiced without one or more of the specific details or with other methods components materials and so forth. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

The schematic flow chart diagrams included herein are generally set forth as logical flow chart diagrams. As such the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function logic or effect to one or more steps or portions thereof of the illustrated method. Additionally the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams they are understood not to limit the scope of the corresponding method. Indeed some arrows or other connectors may be used to indicate only the logical flow of the method. For instance an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of live depicted method. Additionally the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.

An example of a captive portal can include an implementation of a captive portal technique e.g. utilizing various redirection techniques such as rewriting the address bar s value to a new URL etc. with an IEEE 802.11 wireless local area network WLAN e.g. a hotspot . Generally a captive portal technique can cause an HTTP client on the network to complete an authentication process provided by an authentication web page before accessing the rest of the Internet. An authentication page can be a web page presented by a captive portal for authentication and or payment purposes such as a login page. For example the authentication web page can implement a variety of functions such as require authentication payment display an acceptable use policy and or require the user to agree to specified terms. The captive portal technique can be implemented at the router level. Various embodiments of example implementations of a captive portal are provided in greater detail infra.

In step of process the authentication web page can be provided to the HTTP client. It is noted that the authentication web page can include instructions to be implemented prior to allowing a user access to an authentication process. For example in step of process instructions can cause an advertisement to be displayed with the web browser. An advertisement can be selected by an advertisement management server according to various parameters such as the category of the hotspot e.g. airport hotspot in a caf etc. if an advertisement campaign is currently active the type of client device e.g. desktop or mobile etc.

The authentication web page may not be accessible until a specified condition is satisfied. A specified condition can include actions such as playing a video of an advertisement e.g. with an HTML5 video tag requiring a user to engage with an advertisement in some manner e.g. click a button play the advertisement for a specified period input information download an application etc. . In step the authentication web page is displayed and accessible when the specified condition is satisfied.

It is noted that other types of action based solutions can be implemented in lien of advertisements in other example embodiments. Various examples of action based solutions can include displaying an advertisement completing a survey providing additional verification of identity using a game or Captcha and the like.

In step of process a captive portal technique such as a redirection operation is implemented to provide an authentication webpage to the user s web browser. The authentication web page can include Instructions to redirect e.g. with client side URL re writing in the address bar the user s web browser to an advertisement. A more detailed screen shot of this step is provided in . depicts the authentication web page overlapped by an interpolating element such as an interstitial web page a popup box e.g. a new web browser window on top of the authentication web page s window that includes an inline frame or other display element. The screenshot depicts the interstitial web page in the process of growing over the authentication page window. An example of an interpolating element is provided in as an interstitial web page that has taken over the web browser window. In step of process the interpolating element can display an advertisement in various formats such as an HTML5 video an interactive web page an image sprite a flash object a Java applet etc. In the particular example of an interstitial advertisement video is displayed. In one example the web browser may not be able to access other information until the interstitial advertisement video is completed. depict various versions of the interstitial advertisement according to a particular example sequence. A user may click through the interstitial advertisement of to the advertiser s web site presented in . The advertiser s web site can be whitelisted such that it can be accessed prior to authentication of a client with the captive portal see infra for further explanation of whitelisting techniques in a captive portal .

It is noted that a user may not be able to return to the authentication web page until some specified condition such as completion of viewing the interstitial advertisement video and or clicking through to the advertiser s web site has been completed. For example the authentication web page can be configured to continuously serve an interstitial advertisement video until confirmation is received that the Interstitial advertisement video has been played to completion or some other specified amount period of time .

In process the web browser can be redirected to the authentication web page after completion of the specified condition on step of process . A more detailed screen shot of this step is provided in . Additionally in process the web browser can be redirected to a landing page upon successful completion of the authentication process. It is noted that a plurality of landing pages can be provided. A more detailed screen shot of one example of step is provided in .

In some examples the redirections can be performed from the client side. For example on coming back to a captive portal s authentication web page a client side JavaScript i.e. ECMAScript library can search for an indication as to whether the user agent has satisfied a specified condition e.g. played an interstitial advertisement video and the like . Example indications can include a cookie in a desktop s inline frame a cookie in a mobile device s view set and or a query parameter that indicates whether the specified condition has been satisfied. If an indication is located then the web browser can access the authentication web page. However if no indication is located then the interstitial advertisement video or other interpolating element can be displayed again.

It is noted that process can include an additional step not shown for determining the type of user agent used to access the authentication page. For example if the user agent is a web browser of a desktop type device e.g. a laptop computer then process can be implemented. However if it is determined that the user agent is a web browser of a mobile device e.g. a smart phone a tablet computer and the like another process optimized for the display parameters of a mobile device can be implemented e.g. process provided infra . One example method of determining the type of user agent can include implementing process of .

In step of process the JavaScript code integrated into the mobile oriented authentication web page can then redirect the mobile web browser to an advertiser s custom web page as designed for the particular advertiser as shown in . depicts a mobile version of the advertiser s custom web page prior to playing the advertisement video to the user. In the mobile context the advertisement video can be accessed using RTSP. Accordingly the user can press the virtual play button and the advertising video is played as shown by step of process depicted in . It is noted as well that the advertiser s custom web page can be whitelisted. In this way a user can also choose to access the advertiser s application download page in step of process depicted in . illustrates the advertiser s custom web page after the video has been played in step of process . It is noted that the user is presented with an option to download the advertiser s application and or navigate back to the captive portal s authentication web page. In step of process as depicted in a user can navigate or be redirected to other whitelisted advertiser web pages such as a mobile version of the advertiser s website. In step of process as depicted in the captive portal s authentication webpage is accessed after the video advertisement has been played and the user has navigated or been redirected to other whitelisted advertiser webpages. The user is then provided an opportunity to log into the hotspot service and reach a landing page as provided in step of process as depicted in . It is noted that the redirection to the advertiser s webpage can happen on a pre authorized basis as depicted in this instance . For example at the bottom right of two window frames have been opened. The advertiser s mobile webpage was open per a pre authorization as it is whitelisted. However if an advertiser doesn t pay for pre authorization then alternatively a plurality of open multiple landing pages can be accessed on a post authorization basis. It is noted that the redirection to the advertiser s webpage can happen on a pre authorized basis in this instance. For example at the bottom right of two window frames have been opened. The advertiser s mobile webpage was opened per a pre authorization at it is whitelisted. However if an advertiser doesn t pay for pre authorization then alternatively a plurality of open multiple landing pages can be accessed on a post authorization basis.

In step the authentication web page document is provided to a captive portal client s web browser. For example a client device can connect with a local hotspot. The hotspot can implement a captive portal technique such that the client device s web browser is redirected to a web server that provides an authentication web page in order to log into the Internet service assuming the user agent s MAC address does not appear on a list of authenticated MAC addresses . In step it is determined whether the captive portal client s web browser has already displayed the interstitial advertisement e.g. the JavaScript library can locate the cookie . If the determination is yes then an authentication process can be implemented in step . The authentication process can include a payment option using credit card PayPal iPass or other payment service.

If the determination is no then the client can be redirected to the interstitial advertisement. In step the redirect instructions in the JavaScript library can rewrite the address bar s URL to that of an interstitial advertisement. The web browser can then implement a fresh request for a new web page when it detects a change in the URL value of the address bar. In one example the interstitial advertisement can lock the client s web browser until an advertisement video is completely played. The client s web browser can receive a cookie upon completion of the advertisement. Process then returns the client s web browser to step . For example the interstitial web page e.g. whether an inline frame for desktop laptop devices or a separate mobile page for mobile devices can then implement a redirection back to the URL designated in the JavaScript snippet code integrated in the captive portal s authentication web page. This URL can be that of the authentication page.

Thus process can ensure that an advertisement is displayed to a user before the user can access an authentication web page of a hotspot. It is noted that the JavaScript library can provide various parameters obtained about the device to an advertisement management server. The advertisement management server can select an advertisement according to the received parameters e.g. match with display screen parameters according to IP address location hotspot category etc. and communicate relevant information to the JavaScript client e.g. a URL associated with the advertisement and or the identity of the selected advertisement etc. .

Local server can implement caching of advertisement media content from within the WLAN. For example local server can serve video advertisements via HTTP and or RTSP locally from within the WLAN. Local server can synchronize and download its media content from advertisement management server . This process can occur during periods when the WLAN s user traffic is ascertained to be low. The media content can be determined by the categorization of the WLAN and categorization of the campaigns e.g. by location and or local business entities who provide advertisements . For example certain advertisements can be associated with certain IP addresses. Advertisement management server can match the incoming WLAN IP address with an advertisement associated with it. Advertisement management server can then replace the URL of the interstitial advertisement with the IP address of local server so that the video can be served locally.

In one example local server can be a local caching device that can have a small form factor computer e.g. ITX such as Mini ITX Nano ITX Pico ITX Mobile ITX with an x86 based microprocessor 32 or 64 bit at least about 2 GB of RAM and a solid state drive of at least 60 GB or greater. The local caching device can also include at least one Ethernet port through which it can connect to the Wi Fi router directly and or to a computer network to which the Wi Fi router is connected. The local caching device can cache multimedia objects such as video audio flash files and the like locally. To achieve this the local caching device can be on the same subnet as the WLAN network. In one example advertisement management server can include information about which hotspots have such a local caching device deployed locally e.g. by IP address . As soon as an advertisement management server receives a request for an advertisement from such a hotspot it can serve the relevant page with the URL of such files set to the local NAT IP address of this device. For example if a hotspot s IP address is 118.75.200.118 as known to an advertisement management server and the internal network address translation NAT IP address of the local caching device is 192.168.1.254 then instead of serving the advertisement page with the resource s URL as advertisement management server can serve the URL as .

In some embodiments system can be included and or be utilized by the various systems and or methods described herein to implement processes and system .

At least some values based on the results of the above described processes can be saved for subsequent use. Additionally a computer readable medium can be used to store e.g. tangibly embody one or more computer programs for performing any one of the above described processes by means of a computer. The computer program may be written for example in a general purpose programming language e.g. Pascal C C Java Python and or some specialized application specific language PHP JavaScript XML . It is noted that JavaScript has been used as an example in several embodiments. However in other embodiments another scripting language and or JavaScript variants can be utilized as well.

Although the present embodiments have been described with reference to specific example embodiments various modifications and changes can be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example the various devices modules etc. described herein can be enabled and operated using hardware circuitry firmware software or any combination of hardware firmware and software e.g. embodied in a machine readable medium .

In addition it will be appreciated that the various operations processes and methods disclosed herein can be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer system and can be performed in any order e.g. including using means for achieving the various operations . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. In some embodiments the machine readable medium can be a non transitory form of machine readable medium.

