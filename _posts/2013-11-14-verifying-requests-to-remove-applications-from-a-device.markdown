---

title: Verifying requests to remove applications from a device
abstract: A method comprises receiving a request to remove a given application from a first device, identifying one or more verification rules previously established by a user of the first device for processing of the removal request, sending a notification regarding said one or more verification rules, receiving verification input responsive to the notification, and granting or denying the removal request based at least in part on the received verification input. Denying the removal request comprises removing protected application data from the first device. Receiving the removal request, identifying one or more verification rules, sending the notification, receiving the verification input, and granting or denying the removal request may be implemented in a verification platform adapted for communication with the first device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09323911&OS=09323911&RS=09323911
owner: EMC Corporation
number: 09323911
owner_city: Hopkinton
owner_country: US
publication_date: 20131114
---
The present application claims the priority of U.S. Provisional Patent Application Ser. Nos. 61 726 778 61 726 788 and 61 726 908 filed Nov. 15 2012 which are incorporated by reference herein. The present application is also a continuation in part of U.S. patent application Ser. Nos. 14 025 333 and 14 025 377 filed Sep. 12 2013 which are incorporated by reference herein. The present application is also related to commonly assigned U.S. patent application Ser. Nos. 14 080 290 and 14 080 327 filed concurrently herewith and incorporated by reference herein.

The field relates generally to user verification and more particularly to techniques for verifying the identity of a user of an electronic device.

As technology grows and more information is stored electronically it is necessary to protect the stored information. Security applications have been developed in order to verify the identity of a user. These security applications prevent a user from accessing a user account or electronic device without first providing certain user credentials. If a user cannot enter the required credentials then the user is denied access to the application or device being protected. The security application itself however may not be secured. If a user attempts to remove the security application and is successful the user can then access locally and possible remotely stored information.

Illustrative embodiments of the present invention provide improved techniques for verification of user identity and protecting secured application data. Embodiments provide techniques for removing protected application data when an unauthorized attempt to remove a verification application or other secure application is made.

In one embodiment a method comprises receiving a request to remove a given application from a first device identifying one or more verification rules previously established by a user of the first device for processing of the removal request sending a notification regarding said one or more verification rules receiving verification input responsive to the notification and granting or denying the removal request based at least in part on the received verification input. Denying the removal request comprises removing protected application data from the first device.

Receiving the removal request identifying one or more verification rules sending the notification receiving the verification input and granting or denying the removal request may be implemented in a verification platform adapted for communication with the first device.

In another embodiment a method comprises receiving a request from a user to remove a given application from a first device sending the removal request to a verification platform removing the given application responsive to the verification platform granting the removal request and removing protected application data from the first device responsive to the verification platform denying the removal request. The verification platform grants or denies the removal request based at least in part on verification input the verification input being based on one or more verification rules previously established by a user of the first device for processing of the removal request.

All illustrations of the drawings are for the purpose of describing exemplary embodiments of the present invention and are not intended to limit the scope of the present invention in any way.

Illustrative embodiments of the present invention will be described herein with reference to exemplary systems and associated verification platforms user devices and other processing devices. It is to be appreciated however that the invention is not restricted to use with the particular illustrative system and device configurations shown. Accordingly the term communication system as used herein is intended to be broadly construed so as to encompass for example systems in which a single user device communicates with another processing device associated with a verification platform systems in which at least two user devices each communicate with another processing device associated with a verification platform and other types of systems.

Embodiments provide means for removing protected application data when an unauthorized attempt to remove a verification application is made. The verification application and one or more watcher applications are run on one or more electronic devices. When an attempt is made to remove the verification application the watcher application notifies another watcher application or a verification platform. Alternatively an attempt to remove one watcher application causes that watcher application to notify another watcher application or verification platform. A user is then required to perform rules based verification in order to continue with the application removal. If verification fails then all locally stored protected application data is removed from the electronic device. The rules based verification is also use to verify the identity of a user when a protected application is launched.

The term watcher application as used herein refers to an application that is configured to monitor the status of another application. A watcher application detects user attempts to remove or stop another application and notifies another watcher application to determine whether to grant or deny an attempt to remove or stop the application. In some embodiments only a single watcher application capable of both detecting attempts to remove and stop applications and taking remedial action such as notifying a verification platform to determine whether to grant or deny such attempts.

A number of embodiments of the invention will be described with reference to the flow diagrams of and the communication system diagram of . A given such embodiment implements rules based multi factor verification of user identity using a verification service that is supported by a verification platform. The verification service interacts with a verification application installed on at least one user device. In some embodiments the rules based multi factor verification utilizes only a single user device while in other embodiments the rules based multi factor verification utilizes first and second user devices also referred to herein as primary and secondary devices. Such devices in arrangements of the latter type may be considered examples of what are more generally referred to herein as simply first and second devices. Also other embodiments can be adapted to utilize three or more user devices to perform identity verification.

Except otherwise noted it will be assumed for description of the flowcharts of that the rules based multi factor verification utilizes two user devices also referred to as first and second devices. The first and second devices may be viewed as the primary and secondary devices denoted in the exemplary system of . However it will be apparent to those skilled in the art that the described arrangements can be adapted in a straightforward manner for use with only a single device or with three or more devices.

The verification service is implemented using a verification platform that illustratively includes a verification platform application programming interface API and a verification platform server. The verification platform API supports communication with a verification agent implemented on the primary and secondary devices.

In the present embodiment the primary and secondary devices must be enrolled with a verification service in order to utilize the method to monitor and verify user attempted removal stoppage or uninstallation of secure applications verification applications and or watcher applications from electronic devices. The user or administrator of a system chooses or provisions a secondary electronic device on which to perform rules based verification. As noted above however in some embodiments only a single device is used.

An exemplary enrollment process for the secondary device is shown in . This process includes steps through . In step a verification application is installed on the secondary device. Once the verification application has been installed the user registers an email address and goes through an email verification process in step . When the email address has been verified the secondary electronic device is enrolled with the verification service and the verification application is launched in step . More generally a user may register with the verification service using a user identification. In some embodiments the user identification may be the same as or different from the user s email address.

The verification application then searches for any other user enrolled electronic devices. A determination is made in step whether any other device is enrolled. If no other electronic device is enrolled the verification application prompts the user to enroll another electronic device in step . Next both watcher applications and a verification application are installed on the other electronic device is step .

If a determination is made in step that another device is enrolled the user is prompted to select a desired set of verification rules as well as the order in which modes of verification are carried out in step . It is possible for verification modes to be used in conjunction with one another or for a verification mode to act as a failsafe when another verification mode cannot be completed. For example a user could choose to require both face and voice verification. In this case both modes of verification must be satisfied in order to gain access to the protected application. Alternatively a user could require face or voice verification. In this case face verification would be attempted first and in the event that verification fails or cannot be performed the device would attempt to authorize access using voice verification.

The number of verification modes the sequence of verification modes used and the types of verification can be selected based on the desired level of protection. The methods used for verification include by way of example voice verification face verification live verification location verification and motion verification. Various other modes of verification may be used in addition to or as an alternative to these modes of verification.

These verification methods are more generally referred to herein as distinct types of verification. By way of example the user can select the types of verification he or she would like to use from a displayed list and can also configure the particular manner in which the different types of verification are to be applied. The latter may involve the user specifying logic functions such as AND and OR between selected verification types that indicate the manner in which the selected verification types should be applied.

For example a user could choose to require both face and voice verification to access a given secure application. In this case the user selects the two verification types and specifies that they are to be applied in accordance with a logic AND function such that both verification types must be satisfied in order to gain access to the secure application. Alternatively the user could require face or voice verification. In this case the user selects the two verification types and specifies that they are to be applied in accordance with a logic OR function such that face verification would be attempted first and in the event that face verification fails the device would attempt to authorize access using voice verification.

Such specifications are examples of what are more generally referred to herein as one or more verification rules established by a user. A given such verification rule or set of verification rules generally specifies multiple distinct types of verification selected by the user and a sequence in which the selected verification types are to be applied in processing the verification request. Thus the selection step in the exemplary process may be viewed as a user establishing one or more verification rules for rules based multi factor verification.

After selecting the verification rules and the order in which the verification rules are performed in step the secondary device is enrolled in the verification service in step . In some embodiments alternative enrollment processes may be used. For example the selection of particular verification types and the sequence in which those types should be applied can be managed through a web based administrative interface. Such management can be used to generate verification rules for a given user or for groups of multiple users and may further involve adding or removing users from particular groups or otherwise updating verification rules responsive to user input or designated policies. These and other provisioning functions may therefore be performed by a user or a system administrator.

In step the first verification application first watcher application and second watcher application are launched. The user is then prompted in step to select the electronic device on which the user would like to perform rules based verification for the primary device. In step a determination is made as to whether any other electronic device is enrolled for that user. If no other devices are enrolled the user is prompted to enroll another device in step . Then in step the verification application is installed on the other device.

If a determination is made in step that one or more other devices are enrolled the user is prompted to select one of the other electronic devices to perform rules based verification on in step . For example the user may select the secondary device enrolled via the enrollment process described above with respect to . In other embodiments the user selects the primary device for performing the rules based verification. The primary device is then enrolled in the verification service in step .

Although enrollment was described above where the secondary device was enrolled prior to the primary device embodiments of the invention are not limited to this arrangement. For example a primary device may be enrolled prior to the secondary device. In other embodiments only a single device associated with a user is enrolled in the verification service.

The verification applications are installed on both the primary and secondary devices and run in the background on the devices. Protected applications are run on the primary device while the secondary device is used to submit verification credentials for the protected applications. When a user attempts to launch a protected application on the primary device the verification agent of the primary device intercepts the protected application launch. The verification agent of the primary device encrypts and invokes the verification platform API to determine the secondary device and the rules that control the launch of the protected application in step .

The verification agent may also intercept events and transactions on the primary device other than the launch of a protected application. For example the verification agent may intercept an attempt to perform a particular action within a secure application rather than on attempted launch of the secure application. While described herein primarily with respect to intercepting the launch of protected applications embodiments are not limited solely to this context. Instead a verification agent may more generally intercept or require verification for various other events transactions etc.

In step the verification platform API invokes a verification platform server session to determine if the user of the primary device has a secondary device that is registered as well as the verification rules. If the user has a secondary device the verification platform server informs the verification platform API and returns the verification rules in step . The verification rules are forwarded to the secondary device to perform the rules based verification. In step the verification platform API sends an event notification to the verification agent on the secondary device requesting verification credentials. The requested verification credentials are based on the rules based verification selected by the user.

The user then performs rules based verification on the second device by submitting the verification credentials in step . The user performs the required methods of verification on the secondary device to submit the verification credentials. The verification agent of the secondary device encrypts and invokes the verification platform API to submit the user verification credentials in step . In step the verification platform API invokes the verification platform server session to determine the validity of the user submitted verification credentials. The server compares the submitted verification credentials to stored verification data to determine the authenticity of the submitted verification credentials. The verification platform server then informs the verification platform API of the verification results in step .

The verification platform API then sends an event notification to the primary device verification agent in step . In step the primary device verification agent authorizes or denies access to the protected application according to the verification results.

The second watcher application then checks for user validation status. In step the verification agent on the primary device encrypts and invokes the verification platform API to validate user status. The verification platform API in step invokes a verification platform server session to determine the user verification rules. The verification platform server retrieves the verification rules for the user and returns the user verification rules to the verification platform API in step .

Next the verification platform API sends an event notification to the secondary device verification agent requesting the verification credentials for the user verification rules in step . The user is then prompted to perform the required methods of verification on the secondary device. The user performs rules based verification on the second device by submitting the required verification credentials in step . The verification agent of the secondary device then sends the submitted verification credentials to the verification platform server by encrypting and invoking the verification platform API to submit the user verification credentials in step .

In step the verification platform API invokes the verification platform server session to determine the validity of the user submitted verification credentials. The verification platform server compares the submitted verification credentials to stored verification data for the user. The verification platform server then informs the verification platform API of the verification results in step . The verification platform API in turn forwards the verification results to the verification agent on the primary device in step .

If the user is successfully validated in step then the first watcher application is removed or uninstalled from the primary device in step . If the user is not successfully validated in step protected application data is removed from the primary device in step . In some embodiments when the user is not successfully validated in step further action is taken on the primary device. For example a password for the primary device may be changed or reset. As another example the primary device may be locked or rebooted.

While describes the attempted removal or uninstallation of the first watcher application similar processes are used on an attempted removal or uninstallation of the second watcher application and or the verification application on the primary device. It is also possible for only the primary device to be used. In such embodiments the rules based verification is performed on the primary device as opposed to a secondary device.

The first and second watcher applications can also provide automatic restart services. If an attempt is made to stop the first watcher application then the primary device s operating system is instructed to restart the first watcher application. In the event that the primary device operating system cannot restart the first watcher application the second watcher application will restart the first watcher application. Similarly if an attempt is made to stop the second watcher application then the primary device s operating system will attempt to restart the second watcher application. In the event that the primary device s operating system cannot restart the second watcher application the first watcher application will restart the second watcher application.

In step it is determined that the protected application requires face OR voice verification AND location verification. Thus the process has two levels of security. The first level is face or voice verification and the second level is location verification. Face verification is performed in step . In step a determination is made as to whether the face verification was successful. If the face verification was not successful the process proceeds to step where voice verification is performed. In step a determination is made as to whether the voice verification was successful. If the voice verification was not successful then verification fails in step .

If the face verification is determined to be successful in step or if the voice verification is determined to be successful in step location verification is performed in step . Next a determination is made as to whether the location verification was successful in step . If the location verification is not successful then verification fails in step . If the location verification is successful then the verification succeeds and the protected application is launched in step .

Location verification is performed in step . In step a determination is made as to whether the location verification was successful. If the location verification is not successful then verification fails in step . If the location verification is successful voice verification is performed in step . Next a determination is made in step as to whether the voice verification was successful. If the voice verification fails then face verification is performed in step .

In step a determination is made as to whether the face verification was successful. If the face verification is not successful then third party verification is performed in step . A determination is then made in step as to whether the third party verification was successful. If the third party verification is not successful then verification fails in step . If voice verification face verification or third party verification is successful then the protected application is launched in step .

Communications between the verification agent and the verification platform API may utilize one or more of JavaScript Object Notation syntax REpresentational State Transfer REST based client server architecture and mutual client server certificate based encryption and authentication.

As a more particular example of communications of the latter type a verification application acting as a client provides a certificate to the verification platform server and the server provides its certificate to the client. Both certificates are verified using a certificate authority which has signed both the client and server certificates. The information is transmitted between the client and server over a Secure Socket Layer SSL using 128 bit or 256 bit Advanced Encryption Standard AES cipher encryption. The cipher encryption strength may be selected at least in part as a function of parameters such as device operating system type and transport capabilities as well as other factors influencing the ability of a given device to support the desired encryption level.

It should be understood that the above noted communication types are only examples and numerous other communications may be used in other embodiments. Additional details regarding the above noted AES techniques as well as examples of other cryptographic techniques suitable for use in providing secure communications in embodiments of the invention can be found in A. J. Menezes et al. Handbook of Applied Cryptography CRC Press 1997 which is incorporated by reference herein.

As indicated above a wide variety of different verification types may be made available for user selection as part of one or more verification rules in a given embodiment of the invention.

It is to be appreciated that processing operations and other system functionality such as that described in conjunction with can be implemented at least in part in the form of one or more software programs stored in memory and executed by a processor of a processing device such as a computer or server. As will be described below a memory or other storage device having such program code embodied therein is an example of what is more generally referred to herein as a processor readable storage medium. 

Also the particular processing operations and other system functionality described in conjunction with the flowcharts of are presented by way of illustrative example only and should not be construed as limiting the scope of the invention in any way. Alternative embodiments can use other types of processing operations for rules based multi factor verification or other types of verification of user identity implemented using one or more user devices and a verification platform. For example the ordering of the process steps may be varied in other embodiments or certain steps may be performed concurrently with one another rather than serially.

It was noted above that in some embodiments two or more user devices are utilized. If two devices are used for verification then the two devices need not communicate with one another directly but instead can communicate through a verification platform.

An exemplary communication system in an embodiment of this type is shown in . In this embodiment a communication system comprises a primary device a secondary device and a verification platform arranged between the primary and secondary devices. The verification platform communicates with the primary and secondary devices and via respective communication channels and . In the present embodiment there is no pairing or other direct communication required between the primary and secondary devices. The primary device is illustratively shown as comprising one of a mobile telephone A or a laptop computer B. Similarly the secondary device is illustratively shown as comprising one of a mobile telephone A or a laptop computer B. A wide variety of other types of electronic devices may be used in other embodiments including by way of example tablets smart watches desktops and various other processing and computing devices.

The primary device and the secondary device are both configured to run the rules based multi factor verification application and watcher applications.

The verification platform is configured to include a verification platform API and a verification platform server as noted above but may comprise additional or alternative components in other embodiments.

In the embodiment a verification request is sent from the primary device and processed by the verification platform to determine an appropriate notification to send to the secondary device . The secondary device is used to provide verification input to the verification platform responsive to the notification and in accordance with the selected verification types so as to thereby control access to an application on the primary device. It is assumed that verification agents of the type previously described run on both the primary and secondary devices and information is sent from a given such verification agent to the verification platform API in encrypted form. The verification platform API communicates with the verification platform server to determine one or more verification rules and to process verification input in the manner previously described.

The use of the verification platform as an intermediary between the primary and secondary devices allows for enhanced communication security thereby reducing vulnerability to hacking.

In other embodiments the primary and secondary devices pair with one another locally rather than through the verification platform. In such embodiments the primary and secondary devices connect to one another using Bluetooth or a Near Field Communication NFC interface. For example a user may have a smartphone which connects to a wearable verification device. The wearable verification device includes firmware and provides key management and cryptography making the wearable verification device suitable for use as a secure element for user verification. The wearable verification device may take a number of physical form factors such as an adhesive label a credit card or smartcard key fob tag smartwatch or other wearable device with an embedded processing device.

The primary device in the embodiment may be viewed as the first user device in other embodiments described herein.

In some embodiments other types of verification in addition to or in place of the above described voice face location motion and third party verification can be used. For example numeric token verification or approve decline verification may be used. Numeric token verification can be implemented by sending digits to the secondary device. The digits must then be entered into the primary device within a predetermined length of time to determine verification. Approve decline verification can be implemented by sending a message with the option to either approve or decline to the secondary device. From the secondary device a user can allow verification by selecting approve or can deny verification by selecting decline. Other types of verification based on behavioral knowledge gestures colors or other types of information may be used in any combination.

The communication system or portions thereof may be implemented using one or more processing platforms. For example verification platform may be implemented on a processing platform comprising a plurality of networked processing devices. An example of such a processing platform is processing platform shown in .

The processing platform in this embodiment comprises a portion of system and includes a plurality of processing devices denoted . . . K which communicate with one another over a network .

The network may comprise any type of network including by way of example a global computer network such as the Internet a wide area network WAN a local area network LAN a satellite network a telephone or cable network a cellular network a wireless network such as WiFi or WiMAX or various portions or combinations of these and other types of networks.

The processing device in the processing platform comprises a processor coupled to a memory . The processor may comprise a microprocessor a microcontroller an application specific integrated circuit ASIC a field programmable gate array FPGA or other type of processing circuitry as well as portions or combinations of such circuitry elements and the memory which may be viewed as an example of a processor readable storage medium having executable computer program code embodied therein may comprise random access memory RAM read only memory ROM or other types of memory in any combination.

Also included in the processing device is network interface circuitry which is used to interface the processing device with the network and other system components and may comprise one or more conventional transceivers.

The other processing devices of the processing platform are assumed to be configured in a manner similar to that shown for processing device in the figure.

Again the particular processing platform shown in the figure is presented by way of example only and communication system may include additional or alternative processing platforms as well as numerous distinct processing platforms in any combination with each such platform comprising one or more computers servers storage devices or other processing devices.

It should therefore be understood that in other embodiments different arrangements of additional or alternative elements may be used. At least a subset of these elements may be collectively implemented on a common processing platform or each such element may be implemented on a separate processing platform.

Also numerous other arrangements of computers servers storage devices or other components are possible in the communication system . Such components can communicate with other elements of the communication system over any type of network or other communication media.

As indicated previously components of a communication system as disclosed herein can be implemented at least in part in the form of one or more software programs stored in memory and executed by a processor of a processing device such as one of the processing devices . As noted above a memory or other storage device having such program code embodied therein is an example of what is more generally referred to herein as a processor readable storage medium.

Articles of manufacture comprising such processor readable storage media are considered embodiments of the present invention. A given such article of manufacture may comprise for example a storage device such as a storage disk a storage array or an integrated circuit containing memory. The term article of manufacture as used herein should be understood to exclude transitory propagating signals.

It should again be emphasized that the above described embodiments of the invention are presented for purposes of illustration only. Many variations and other alternative embodiments may be used. For example the particular types and arrangements of user devices verification platforms and applications used in a given embodiment can be varied as can the particular types of messaging or other communications exchanged between system components. Also a wide variety of different types of verification rules verification types sequences and security levels may be used other than those explicitly described herein. Moreover the various assumptions made above in the course of describing the illustrative embodiments should also be viewed as exemplary rather than as requirements or limitations of the invention. Numerous other alternative embodiments within the scope of the appended claims will be readily apparent to those skilled in the art.

