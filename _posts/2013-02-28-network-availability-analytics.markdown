---

title: Network availability analytics
abstract: In one embodiment, a method includes receiving at a network device, route convergence measurements and traffic demand measurements from a plurality of routers, and computing network availability based on the measurements at the network device. The route convergence measurements are associated with route computations at the routers and the traffic demand measurements include portions of a demand matrix associated with the routers. An apparatus and logic are also disclosed herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479403&OS=09479403&RS=09479403
owner: Cisco Technology, Inc.
number: 09479403
owner_city: San Jose
owner_country: US
publication_date: 20130228
---
The present application claims priority from U.S. Provisional Application No. 61 621 811 entitled NETWORK AVAILABILITY ANALYTICS filed on Apr. 9 2012. The contents of this provisional application are incorporated herein by reference in its entirety.

The present disclosure relates generally to communication networks and more particularly to network availability measurements and computations.

Network availability is becoming increasingly important for networks such as those offering advanced services. A highly available network is needed to meet quality goals provide a competitive service and minimize ongoing operating expenses. In conventional networks measurement of network convergence and availability often involves injecting probes throughout the network. Such techniques do not scale well and suffer from accuracy and completeness issues.

Corresponding reference characters indicate corresponding parts throughout the several views of the drawings.

In one embodiment a method generally comprises receiving at a network device route convergence measurements and traffic demand measurements from a plurality of routers and computing network availability based on the measurements. The route convergence measurements are associated with route computations at the router and the traffic demand measurements comprise portions of a demand matrix associated with the routers.

In another embodiment an apparatus generally comprises a processor for generating at a router route convergence measurements and traffic demand measurements memory for storing the route convergence measurements and traffic demand measurements and an application programming interface for providing the route convergence measurements and the traffic demand measurements to a network device operable to collect a plurality of the route convergence and traffic demand measurements from a plurality of routers in a network and compute network availability based on the measurements.

In yet another embodiment logic is encoded on one or more tangible computer readable media for execution and when executed operable to generate route convergence measurements and provide the route convergence measurements to a network device operable to collect a plurality of the route convergence measurements and traffic demand measurements from a plurality of routers in a network and compute network availability based on the measurements. The route convergence measurements are associated with route computations at the routers and the demand measurements comprise portions of a demand matrix associated with the routers.

The following description is presented to enable one of ordinary skill in the art to make and use the embodiments. Descriptions of specific embodiments and applications are provided only as examples and various modifications will be readily apparent to those skilled in the art. The general principles described herein may be applied to other applications without departing from the scope of the embodiments. Thus the embodiments are not to be limited to those shown but are to be accorded the widest scope consistent with the principles and features described herein. For purpose of clarity details relating to technical material that is known in the technical fields related to the embodiments have not been described in detail.

High network availability and faster convergence requirements have resulted in a need for monitoring and assessment of network performance. Difficulties in monitoring network convergence arise due to large network size smallness of measured parameters non predictability of convergence events and level of details needed to correctly assess convergence performance. Conventional systems often inject probes through the network to measure key metrics. However this technique does not scale well and suffers from accuracy issues. For example not enough probes may be provided to measure at a millisecond timescale. There are also completeness issues since probes cannot be sent on all of the possible paths through the network. Another drawback is that probes may simply report a problem without the ability to identify its location or provide details needed to analyze the cause of the problem. Moreover applications needing network availability information would have to interface with multiple systems which may not even provide the data needed to properly compute network availability.

The embodiments described herein utilize route convergence and traffic demand measurements provided by routers to compute network availability. As described in detail below an offline tool application may be used to gather route convergence and traffic demand measurements. In one embodiment the information is provided via an application programming interface API . A network availability API may be used to abstract network availability information from one or more sources in the network. Operational statistics that were not previously available with conventional systems are provided in a clearly organized database with well defined APIs to allow for third party application development. For example a network availability API may allow other applications to register their interest for the availability data for specified locations e.g. specific customer ports or destinations or services. This allows various applications to be informed of the availability of network services and take any necessary measure to improve it. The uniform programming interface facilitates the development and implementation of multiple applications that can take advantage of accurate network availability information.

Referring now to the drawings and first to an example of a network in which embodiments described herein may be implemented is shown. For simplification only a small number of nodes are shown. The embodiments operate in the context of a data communication network including multiple network devices. The network may include any number of network devices in communication via any number of nodes e.g. routers switches or other network devices which facilitate passage of data within the network.

Network shown in the example of includes a source destination and plurality of routers R R R R R R connected by links . The routers may be any network device e.g. router switch router configured to perform routing functions. The routers may route traffic including for example unicast or multicast data. The routers may be located for example in a service provider network or any other network. The source and destination nodes may be edge routers or any other network device. In one embodiment a Network Availability NA API is located at one or more of the routers. In the example shown in each router is configured for network availability analytics NAA however there may be one or more routers in the network that are not configured for NAA.

An offline planning tool OT may be located at a network device management station server or other network device in the same network as the routers or another network. The offline tool may also be distributed among two or more network devices. As described below with respect to the offline tool may comprise a network availability analytics application or other application located at the network device . The offline tool uses route convergence and traffic demand measurements in network availability computations. Network availability computations may be used for example to identify network convergence and network availability in an operational network in an end to end manner for any flow at an accuracy of a few milliseconds.

In one embodiment the network availability is calculated using route convergence monitoring and diagnostics RCMD and distributed demand matrix DDM data. Examples of collection and computation of RCMD and DDM data are described further below. In one example network availability is computed based on the amount of traffic lost due to all routing convergence events and the amount of traffic ingressing the network over a specified period of time. An example of a routing convergence event is described below with respect to .

In the example shown in prior to a network failure packets e.g. traffic or subset of traffic from source to destination follow a first path . At time T a link failure occurs between router R and the destination . One or more of the routers in the network identifies the link failure and notifies the rerouting router or routers of the failure at time T. At time T the network converges and all traffic reaches the destination . End to end network convergence refers to the time it takes for all routers in the network to adapt to a change in topology. In one example router R reroutes traffic from path onto path . In this example the loss of connectivity for demand S D ends as soon as a router within the topology reroutes traffic from path onto path .

As shown in the example of the network may include any number of alternate paths for transmitting data from source to destination . The network may converge upon one or more paths based on bandwidth or link costs for example. As described in detail below the offline tool may use an iterative process to find when end to end paths become valid. The offline tool may pick a specific event e.g. failure of the link between router R and the destination and a specific demand e.g. traffic from source to destination and compute the end to end convergence for a flow from source to destination and hence derive the network availability for destination as seen from source . The same process is then repeated for each demand for each event. The offline tool may be used to periodically compute network availability as described below.

It is to be understood that the network shown in is only an example and that networks comprising a different number or type of network devices or topology may be used without departing from the scope of the embodiments.

Memory may be a volatile memory or non volatile storage which stores various applications operating systems modules and data for execution and use by the processor . The NA API module RCMD module and DDM module may include for example software or code stored in memory .

Logic may be encoded in one or more tangible media for execution by the processor . For example the processor may execute codes stored in a computer readable medium such as memory . The computer readable medium may be for example electronic e.g. RAM random access memory ROM read only memory EPROM erasable programmable read only memory magnetic optical e.g. CD DVD electromagnetic semiconductor technology or any other suitable medium.

The network interfaces may comprise any number of interfaces linecards ports for receiving data or transmitting data to other devices. The network interfaces may include for example an Ethernet interface for connection to a computer or network.

It is to be understood that the network device shown in and described above is only an example and that different configurations of network devices may be used. For example the network device may further include any suitable combination of hardware software algorithms processors devices components or elements operable to facilitate the capabilities described herein.

The network device comprising offline tool may also include a processor memory and network interfaces as described above.

The network device computes network availability at step . The network availability may include availability of network services network convergence times or any other network availability statistics. For example the network device may pick a specific event and demand and compute end to end convergence for a flow from source to destination and repeat this process for each demand for each event. The network device may request network availability data for specific resources services or demands and compute network wide availability on a periodic basis.

Referring again to the following example describes how the offline tool computes an end to end convergence time for a flow from source to destination and derives the network availability for the destination as seen from the source.

The offline tool sets T as the time when the link between router R and the destination failed. As described below this information may be obtained from route convergence measurements e.g. RCMD data . The offline tool sets Top as the topology just before T. The shortest path from source to destination in the topology Top just before the failure is identified as SPT SD Top . In this example SPT SD Top is the path from source R R R destination.

The loss of connectivity for demand S D ends as soon as a router within SPT SD Top reroutes traffic destined for destination originally on route e.g. path onto a valid path route e.g. path . The offline tool finds route in the collected RCMD data. As soon as R R or R individually reroutes their path to the destination an end to end path to the destination via the node is valid. This is because each of their respective neighbors uses a path to the destination that is independent from the status of the link between router R and the destination. For example R s path to the destination is R R R destination and R s path to the destination is R R destination . In this case the validity of the new path is straightforward.

The offline tool s verification of route may require an iterative process. In one example the link between router R and the destination has a cost of 30 and the other links have a cost of 8. In this case the respective paths to the destination from R and R are R R R destination and R R destination. It is no longer sufficient for R or R to reroute via R or R to reroute via R. In this example there would be an end to end convergence when R R R have all converged when R R R have all converged or when R R have all converged. Thus the offline tool s verification of the validity of the new path is a recursive process. The offline tool needs to check whether or not the new path depends on the failed link. As long as there is a dependency the offline tool needs to keep using the route convergence data to find when the related end to end path becomes valid. This process stops as soon as a neighbor has rerouted on a path to the destination that does not depend on the failed link.

The following describes a recursive process used to derive a network wide availability in accordance with one embodiment. In one example the offline tool computes on a monthly basis or another time period the network availability as Traffic Loss Traffic 

On a per routing event the offline tool computes the Loss as the sum of lost traffic across all demands of the demand matrix collected during the event. On a per demand per routing event basis the offline tool computes the lost traffic for the demand as demand convergence time for the destination of the demand The computation of convergence time for the destination of the demand is computed as described in the above example for computing end to end convergence.

When a node or SRLG Shared Risk Link Group fails multiple elements of the topology change. The offline tool s computation process of the convergence time for a destination is extended to take into account all of these failures. The start of the convergence is defined as when a link on the path to the destination fails and the end of the convergence is when a router on that path reroutes onto a valid path where the validity takes into account all of the failed elements of the node or SRLG event.

When a link node or SRLG comes up loops uloops may occur. The offline tool can leverage the route convergence and demand matrix measurements to compute how much loss occurred due to the loop.

There are multiple methods e.g. SNMP Simple Network Management Protocol NetFlow BGP Border Gateway Protocol XML Extensible Markup Language etc. that may be used by an application to ask for and retrieve network data from the routers in the network. However it is inefficient and complex for individual applications to choose and implement a specific method. It also makes porting of different applications e.g. third party applications to new platforms difficult and places an additional burden on the application developer who must be concerned with communicating between the entities hosting their applications and the routers in the network.

In one embodiment the Network Availability Application Programming Interface NA API is used to abstract one or more of the aforementioned methods into a programming interface that application developers can use to register their interest in network availability data request network availability data for specific resources e.g. prefixes in a topology and to receive network availability data feeds from the routers in the network. The API also hides the methods for transporting the network availability data between the applications and the routers. An application developer need only comply with the semantics of the NA API.

The network devices may be configured to setup the collection of NA data automatically without the need for input from external devices so that the network device can provide network availability analytics data to a device requesting the data.

The NA API may be used with third party applications that offer a standardized API which allows other applications to register their interest for the availability state of some customer ports e.g. all demands originating from a specified port of a specific edge router or specified destinations or services. Through use of the NA API applications are informed of the availability of the network service and can therefore take any necessary measure to improve the availability. Actions may include for example switching service provider or using other data centers to host a portion of their services. Service requests are met based on computation of network availability analytics described herein.

The uniform programming interface facilitates the development and implementation of multiple applications that can take advantage of accurate network availability information. For example planning application can periodically compute network wide availability and use that as one factor when engineering the optimal use of network resources or improved services. Monitoring and troubleshooting application may use the network availability information to examine network availability in near real time or in playback mode to pinpoint the root cause of a problem. Analytics application may process multiple information feeds such as routing protocols SNMP NetFlow and network availability data and use the information to present a precise picture of the network health at different timescales. This rolled up view of network health aids the operator in managing the network and can be used to monetize its value.

It is to be understood that the applications shown in and described above are only examples and that other applications may use the network availability information without departing from the scope of the embodiments.

The network availability API on the router interacts with the one or more subsystems e.g. RCMD module DDM module NetFlow data topology data configured to generate and collect network data. It is to be understood that these are only examples of data that may be monitored or collected and that other data e.g. packet drops may be used to provide an indication of network availability. An application layer protocol may be used to transport network availability information over link path as shown in .

In one embodiment RCMD is implemented at routers in network to measure the convergence behavior of various routing protocols and extensions e.g. ISIS Intermediate System to Intermediate System OSPF Open Shortest Path First BGP Border Gateway Protocol TE Traffic Engineering LDP Label Distribution Protocol LFA Loop Free Alternate PIM Protocol Independent Multicast mLDP multicast Label Distribution Protocol . RCMD is used to collect and report data related to routing convergences. RCMD provides an in router view of convergence events. Data can be exported e.g. via XML Extensible Markup Language and correlated and leveraged by the offline tool . RCMD can operate in a monitoring mode for detecting events and measuring convergence and a diagnostics mode for additional debug information collection for abnormal events. RCMD identifies all of the reasons i.e. triggers that lead to a given routing table recomputation route computation . This identification scheme allows for correlation across all route convergence measurements. In one embodiment RCMD operates as described in U.S. patent application Ser. No. 13 758 501 filed Feb. 4 2013 entitled Route Convergence Monitoring and Diagnostics the contents of which are incorporated herein by reference in its entirety.

RCMD may be used to measure the time it takes from a change in the network to the time for a router to adjust its hardware to the change T T . The embodiments may also be used to measure the time it takes for any router receiving the change information to make a change in its hardware such that the information is now used to forward packets T T . The time period T T is significant in that many components are involved in operations at the router that lead to the change in hardware.

When a link goes down as shown in and discussed above the failure is detected at one of the routers and the detected failure is flooded throughout the network. A flooding measurement identifies the time between when the failure message originated at the detecting router and when it is received at the rerouting router T T . In one embodiment a timestamp is used for marking time T when a change occurs e.g. link down . The routers transmit route information e.g. a link state packet LSP in ISIS or a link state announcement LSA in OSPF . The router adds the timestamp indicating the time T that it originated the new route information. The rerouting router receives the information at T and updates its routing information.

An update measurement identifies the time between when the failure notification is received at the rerouting router T and when a last important prefix is installed across all of its linecards T . In one embodiment convergence time T T at the router is measured using markers. The markers are flags attached to internal routing information associated with topology information received from the network. The markers are tracked as the internal routing information propagates from one routing component to the next within software at the router. When any component receives a marker it saves a timestamp associated with that particular marker. The final component that modifies the hardware saves the timestamp which is time T. In order to provide scalability only select routes are tracked. Routes may be selected based on a policy such as priority levels. The routing components thus act on a limited number of markers rather than each route that is processed. This greatly reduces the work required to track the routes through the routing components and the amount of tracking data that needs to be stored.

A measurement component in the system collects tracking information on the router and by comparing the saved timestamps T and T it can find the end to end convergence. Problems local to the router may be identified by examining the time interval from T through T.

RCMD may be used for ISIS and OSPF convergence measurement and to gather details about SPF Shortest Path First runs and time taken to provision routes and LDP Label Distribution Protocol labels across all linecards on the router. RCMD may also be used to provide information about LFA Loop Free Alternate coverage available at the end of each SPF run and BGP Border Gateway Protocol and TE Traffic Engineering information. Since RCMD is used to monitor various routing convergence events implementation is embedded within routing subsystem components including for example ISIS OSPF RIB Routing Information Base LDP LSD Label Switching Database and FIB Forwarding Information Base .

In one embodiment the traffic demand measurements comprise the router s share of a demand matrix as described in U.S. patent application Ser. No. 13 752 926 filed Jan. 29 2013 entitled Distributed Demand Matrix Computations which is incorporated herein by reference in its entirety. A demand represents traffic flowing between any two edge devices in the network. There may be any number of traffic flows across the network. A demand matrix traffic matrix traffic demand matrix describes the aggregation of flows at the edge of the network. A demand is a single element cell of the demand matrix associated with a source and destination in the network. Each demand is thus a single entry in the demand matrix that identifies the amount of traffic that enters the network at one point and leaves the network at another point. For example traffic may enter a network at router A and traverse the network along a path until it reaches router B where it leaves the network. In order to construct the demand matrix information is collected about all of the traffic and how it enters and exits the network. Traffic measurements are mapped to individual demands.

A demand matrix for four interconnected edge devices A B C D as shown in may be expressed as follows 

Each row of the above demand matrix includes cells corresponding to traffic received at one of the edge devices. For example the first row comprises cells corresponding to traffic received at router A that will egress the network at router A AA router B AB router C AC and router D AD . Similarly the second row comprises cells corresponding to traffic received at router B that will egress the network at router A BA router B BB router C BC and router D BD and the third and fourth rows comprise the cells corresponding to traffic entering the network at routers C and D respectively. Each router computes its own row local demands for the demand matrix. The local demands portions of the demand matrix from each of the routers can be collected at one or more of the routers or another device e.g. offline tool and the complete demand matrix generated.

One or more routers in the network may include DDM module configured to compute all of the X Y cells of the demand matrix where X is the router at which the DDM module is located. The router further includes a demand database maintained by the DDM module. DDM measurements from each linecard are stored in the database for a specified time period. The demands in the database may be retrieved for use by capacity planning applications or other operational applications running on the offline tool . Demands from the database may also be advertised to other routers participating in the DDM process.

Each DDM module is also configured for synchronized periodic measurement archive. For example each database comprises a plurality of demands computed and stored for a time period. All of the time periods used at each edge device have a common multiple. This timing rule makes it possible to combine the distributed measurements of different routers and ensure that it is straightforward to recompose the different cells into matrices that relate to a specific time period. Also while a router can operate at a fine periodicity T 15 minutes for the purpose of maintaining its local DDM database it can send its BGP DDM updates at a lower frequency e.g. every 60 minutes .

It is to be understood that the RCMD and DDM measurements described above are only examples of route convergence measurements and traffic demand measurements that may be used to compute network availability as described herein.

Although the method and apparatus have been described in accordance with the embodiments shown one of ordinary skill in the art will readily recognize that there could be variations made without departing from the scope of the embodiments. Accordingly it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

