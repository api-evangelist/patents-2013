---

title: System and method for determining query intent
abstract: A method for training a system is provided. The method may include storing one or more backend communication logs, each of the one or more backend communication logs including a user query and a corresponding backend query. The method may further include parsing the one or more backend communication logs to extract statistical information and generating a mapping between each user query and a corresponding set of language tags. The method may also include sorting the one or more backend communication logs based upon, at least in part, the extracted statistical information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09373322&OS=09373322&RS=09373322
owner: Nuance Communications, Inc.
number: 09373322
owner_city: Burlington
owner_country: US
publication_date: 20130410
---
This disclosure relates to speech recognition systems and more particularly to a method for training a speech recognition system using backend communication log mining.

Automatic speech recognition may refer to the transcription by a computing device of spoken language into readable text. Some speech recognition SR systems use training where a speaker may read sections of text into the SR system. These systems are often configured to analyze the person s specific voice and use it to fine tune the recognition of that person s speech resulting in more accurate transcription. Further many speech recognition systems may include one or more databases of information that may be searched in accordance with a user s spoken words. Some of these systems may involve an operator who may receive a user s inquiry in real time and may interact with a backend system. This operator may manually tag certain chat dialog transcripts so as to expedite the connection of a user s query with the most appropriate response for that query. However manual tagging of these transcripts is often a time and labor intensive process.

In one implementation a method in accordance with this disclosure may include storing one or more backend communication logs each of the one or more backend communication logs including a user query and a corresponding backend query. The method may further include parsing the one or more backend communication logs to extract statistical information and generating a mapping between each user query and a corresponding set of language tags. The method may also include sorting the one or more backend communication logs based upon at least in part the extracted statistical information.

One or more of the following features may be included. The method may further include receiving using the one or more computing devices a current user query and the corresponding backend query. In some embodiments the extracted statistical information may include at least one of high runner queries and data priors. The method may also include translating the extracted information into a natural language tag. In some embodiments the extracted statistical information may include at least one of mandatory fields optional fields and disambiguation templates. In some embodiments the extracted statistical information may include a disambiguation template configured to group one or more user queries and their corresponding backend queries belonging to the same task context. The method may further include extracting interaction templates from the groups of one or more user queries and their corresponding backend queries. In some embodiments parsing the one or more backend communication logs may include parsing an SQL communication log or a REST communication log.

In some embodiments a computer readable storage medium for refining a search is provided. The computer readable storage medium may have stored thereon instructions that when executed by a machine result in one or more operations. Operations may include storing one or more backend communication logs each of the one or more backend communication logs including a user query and a corresponding backend query. The method may further include parsing the one or more backend communication logs to extract statistical information and generating a mapping between each user query and a corresponding set of language tags. The method may also include sorting the one or more backend communication logs based upon at least in part the extracted statistical information.

One or more of the following features may be included. The method may further include receiving using the one or more computing devices a current user query and the corresponding backend query. In some embodiments the extracted statistical information may include at least one of high runner queries and data priors. The method may also include translating the extracted information into a natural language tag. In some embodiments the extracted statistical information may include at least one of mandatory fields optional fields and disambiguation templates. In some embodiments the extracted statistical information may include a disambiguation template configured to group one or more user queries and their corresponding backend queries belonging to the same task context. The method may further include extracting interaction templates from the groups of one or more user queries and their corresponding backend queries. In some embodiments parsing the one or more backend communication logs may include parsing an SQL communication log or a REST communication log.

In another implementation a system is provided. The system may include one or more processors configured to execute one or more operations. Operations may include storing one or more backend communication logs each of the one or more backend communication logs including a user query and a corresponding backend query. The method may further include parsing the one or more backend communication logs to extract statistical information and generating a mapping between each user query and a corresponding set of language tags. The method may also include sorting the one or more backend communication logs based upon at least in part the extracted statistical information.

One or more of the following features may be included. The one or more processors may be further configured to translate the extracted information into a natural language tag.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description the drawings and the claims.

Embodiments provided herein are directed towards a system and method for determining the intent of a current user query for example a user query associated with a speech recognition application. The current user query may be compared against information pertaining to prior queries which may be stored in one or more databases. Existing systems may require an operator or backend user to manually tag a chat transcript in order to determine the front end user s intent. For example a front end user may interact with a voice recognition system over the phone. In this particular example if the user states I want to fly from Montreal to Boston the back end operator may manually tag the origin city as Montreal and the destination city as Boston. Embodiments of the query intent process described herein may be used to perform these actions previously performed by the back end operator. Embodiments of the query intent process may also be used during training of one or more models for example for speech recognition and natural language understanding.

The use of backend communication logs as discussed with regard to query intent process may provide several advantages over manual data tagging processes. For example query intent process does not require access to user chat dialog transcripts which are not always available. Additionally and or alternatively the backend communication logs may be acquired easily e.g. each query may be represented as a set of natural language tags . For example a customer can enable disable and collect logs easily as it s already part of their infrastructure. Query intent process may also provide a more simplified means of security as the logs may be tokenized.

Embodiments of query intent process may be used with a variety of different types of systems. Some systems may include speech recognition systems speech understanding systems textual input gesture input or other natural input forms. Any reference to speech recognition systems within the present disclosure are provided merely by way of example.

Referring to there is shown a query intent process that may reside on and may be executed by computer which may be connected to network e.g. the Internet or a local area network . Server application may include some or all of the elements of query intent process described herein. Examples of computer may include but are not limited to a single server computer a series of server computers a single personal computer a series of personal computers a mini computer a mainframe computer an electronic mail server a social network server a text message server a photo server a multiprocessor computer one or more virtual machines running on a computing cloud and or a distributed system. The various components of computer may execute one or more operating systems examples of which may include but are not limited to Microsoft Windows Server Novell Netware Redhat Linux Unix or a custom operating system for example.

As will be discussed below in greater detail query intent process may include storing one or more backend communication logs each of the one or more backend communication logs including a user query and a corresponding backend query. Query intent process may further include parsing the one or more backend communication logs to extract statistical information. Query intent process may also include generating a mapping between each user query and a corresponding set of language tags and sorting the one or more backend communication logs based upon at least in part the extracted statistical information

The instruction sets and subroutines of query intent process which may be stored on storage device coupled to computer may be executed by one or more processors not shown and one or more memory architectures not shown included within computer . Storage device may include but is not limited to a hard disk drive a flash drive a tape drive an optical drive a RAID array a random access memory RAM and a read only memory ROM .

Network may be connected to one or more secondary networks e.g. network examples of which may include but are not limited to a local area network a wide area network or an intranet for example.

In some embodiments query intent process may be accessed and or activated via client applications . Examples of client applications may include but are not limited to a standard web browser a customized web browser or a custom application that can display data to a user. The instruction sets and subroutines of client applications which may be stored on storage devices respectively coupled to client electronic devices respectively may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into client electronic devices respectively . In some embodiments one or more of server application and client applications and may include speech recognition applications configured to receive and process an utterance from a user e.g. user .

Storage devices may include but are not limited to hard disk drives flash drives tape drives optical drives RAID arrays random access memories RAM and read only memories ROM . Examples of client electronic devices may include but are not limited to personal computer laptop computer smart phone television notebook computer a server not shown a data enabled cellular telephone not shown and a dedicated network device not shown .

One or more of client applications may be configured to effectuate some or all of the functionality of query intent process . Accordingly query intent process may be a purely server side application a purely client side application or a hybrid server side client side application that is cooperatively executed by one or more of client applications and query intent process .

Client electronic devices may each execute an operating system examples of which may include but are not limited to Apple iOS Microsoft Windows Android Redhat Linux or a custom operating system.

Users may access computer and query intent process directly through network or through secondary network . Further computer may be connected to network through secondary network as illustrated with phantom link line . In some embodiments users may access query intent process through one or more telecommunications network facilities .

The various client electronic devices may be directly or indirectly coupled to network or network . For example personal computer is shown directly coupled to network via a hardwired network connection. Further notebook computer is shown directly coupled to network via a hardwired network connection. Laptop computer is shown wirelessly coupled to network via wireless communication channel established between laptop computer and wireless access point i.e. WAP which is shown directly coupled to network . WAP may be for example an IEEE 802.11a 802.11b 802.11g Wi Fi and or Bluetooth device that is capable of establishing wireless communication channel between laptop computer and WAP . All of the IEEE 802.11x specifications may use Ethernet protocol and carrier sense multiple access with collision avoidance i.e. CSMA CA for path sharing. The various 802.11x specifications may use phase shift keying i.e. PSK modulation or complementary code keying i.e. CCK modulation for example. Bluetooth is a telecommunications industry specification that allows e.g. mobile phones computers and smart phones to be interconnected using a short range wireless connection.

Smart phone is shown wirelessly coupled to network via wireless communication channel established between smart phone and telecommunications network facility which is shown directly coupled to network .

The phrase telecommunications network facility as used herein may refer to a facility configured to transmit and or receive transmissions to from one or more mobile devices e.g. cellphones etc . In the example shown in telecommunications network facility may allow for communication between TV cellphone and server computing device .

In some embodiments query intent process described herein may be used in accordance with various types of applications including but not limited to an interactive voice response IVR application. An interactive voice response application typically allows a computing device such as those described above to interact with one or more human operators through the use of a telephone keypad or speech recognition system. The majority of IVR applications are meant to replace an operator interacting with a backend system e.g. an SQL database REST webservice etc. in which the operator acts as a user proxy. Accordingly very limited data transformation may be performed by the operator. In this way database operations are likely to be highly correlated with user intent queries. This type of backend system may use a query intent syntax that is close to the natural language NL intent representation. For example the following action verbs e.g. INSERT DELETE UPDATE SELECT may be used in accordance with such a system or database. This type of system may also use a standard query syntax from which query parameters e.g. intent object co object can be easily extracted. For example mapping Structured Query Language SQL verb column table to intent object and co object. This type of system may be configured to operate on objects that usually map to natural language concepts easily e.g. the database object structure is usually close to the semantic of the objects . Further this type of system may use a very well defined logging system from which information can be easily extracted and if needed obfuscated e.g. database SQL archive logs Hypertext Transfer Protocol HTTP common log format etc. without impacting the customer solution making information extraction from logs easier than with direct user operator chat dialog transcripts.

Accordingly query intent process described herein may be configured to parse backend communication logs having a known syntax e.g. SQL REST etc . An example of a backend communication log is provided in . In this particular example the output of the log starts after the markers. The queries and the user that initiated them may be logged as shown.

Additionally and or alternatively an example of an HTTP server log for a single query is provided below 

Query intent process may be further configured to allow for log obfuscation of user sensitive data e.g. credit card number masking etc. . In some embodiments query intent process may be configured to sort queries per base intent e.g. insert update delete select and object e.g. table etc. . If available query intent process may cluster queries per transaction user dialog e.g. SQL has a transaction concept that may be used in this way to allow for definitions of dialogs at the backend server e.g. server computing device shown in .

In some embodiments query intent process may utilize a mapping between the natural language meaning representation to translate database queries into natural language tags. Additionally and or alternatively query intent process may be configured to extract various types of information e.g. high runner queries data priors mandatory fields optional fields disambiguation templates etc. . Accordingly detected high runner queries once translated into natural language tags may be used as inputs to a grammar tool e.g. QuickNLU etc. to ensure they are properly covered by the input data. In some embodiments data priors may be used to add weight to grammars automatically generated from samples.

In some embodiments query intent process may be configured to store one or more backend communication logs in a storage device such as storage device shown in . Each backend communication log may include a user query and a corresponding backend query e.g. each of which may be housed within storage device corresponding to the user query.

Using the example provided above a user e.g. user may communicate with an operator who may be located at any point within network using telecommunications network facility . Again using the above example user may state I want to fly from Montreal to Boston and the back end operator may manually tag the origin city as Montreal and the destination city as Boston or may manually translate this as a backend query that may be run and logged on the actual backend system. In this way a rich database of tagged backend communication logs may be stored within storage device .

In some embodiments query intent process may be configured to parse through the backend communication logs within storage device in order to extract statistical information associated with the backend communication logs. For example some types of information may include but are not limited to high runner queries data priors mandatory fields optional fields and disambiguation templates. A disambiguation template may refer to a group of user queries and backend query pairs that may represent a dialog as opposed to a single user query and backend query pair . For example if a user interacted with the system multiple times before obtaining a successful result. In some embodiments this may include extracting interaction templates from the groups of one or more user queries and their corresponding backend queries. User queries and backend query pairs may be grouped using any suitable technique. For example in some embodiments certain user queries that have one or more commonalities may be grouped together.

In some embodiments query intent process may be configured to translate the extracted information into a natural language tag. This is the process to translate backend tags into natural language tags. For example if the user says I want to fly from boston to montreal the operator would translate that into a backend SQL query assuming SQL SELECT FROM DB flight table WHERE DB origin Boston AND DB destination Montreal. This query would be logged. Now if an NLU system uses FLIGHT and SOURCE instead a DB flight and DB origin these may require translation as well.

As discussed above query intent process may be used in accordance with any type of system. In this way query intent process may be used in accordance with numerous different types of programming languages and software architectures. For example some backend communication logs may include but are not limited to Structured Query Language SQL compatible communication logs Representational State Transfer REST compatible communication logs etc. It should be noted that the teachings of the present disclosure is not intended to be limited to any particular communication log format.

In some embodiments query intent process may be configured to generate a mapping between each user query and a corresponding set of language tags. As discussed above query intent process may generate a mapping between the natural language meaning representation to translate database queries into natural language tags. This mapping may be dynamically updated as additional user queries are received as is discussed in further detail below.

In some embodiments query intent process may be configured to sort through the one or more backend communication logs based upon at least in part the extracted statistical information. For example query intent process may be configured to sort through the plurality of groups by determining the most common user queries. Additionally and or alternatively query intent process may be configured to sort the plurality of groups by one or more natural language tags associated with the user query. Any suitable technique using any information associated with a backend communication log may be used to sort in accordance with the teachings of the present disclosure.

In some embodiments query intent process may be configured to generate a statistical model based upon the communication logs and the mapping generated between the user query and natural language tags.

In operation query intent process may receive a current user query. For example user may state I want to fly from Montreal to Boston into smartphone . This query may be transmitted through network via telecommunications network facility to server computing device . Query intent process may be configured to compare the current user query with the plurality of groups of user queries which may be stored within storage device and or accessible by server computing device . In some embodiments this may involve the user query and the associated backend query information. Query intent process may be further configured to identify one of the plurality of groups of user queries that corresponds to the current user query. This identification may be based upon determining a commonality between information associated with the current user query and any information stored regarding the groups of stored user queries.

In some embodiments query intent process may be configured to update the mapping between the database and the each stored user query or grouping of queries based upon the current user query. In this way query intent process may be configured to dynamically update as new queries are received.

Accordingly the query intent process described herein may provide numerous advantages over existing systems. For example in previous systems when building a new domain expertise e.g. banking travel reservations etc. the backend system may be used to bootstrap the ontology. For example from the database schemas for an SQL backend. However this type of arrangement provides only minimal information on the available operations on the data or the priors associated to operations e.g. is it more likely to ask for your checking account balance rather for your savings one . As a result prior systems required the manual tagging of data to detect this type of situation. In contrast the backend log mining approach of query intent process may be configured to provide a list of high runners of user query intents and their prevalence. For example query intent process may be configured to detect that SELECT MEETINGS FROM CALENDAR WHERE DATE today is more likely than SELECT MEETINGS FROM CALENDAR WHERE DATE today AND CONTACT bill AND LOCATION confroom .

Additionally in prior systems in a new domain default concept values are not known without user data. For example if the system assumes that a user query for his her list of meetings is intended for today that may not be a valid assumption e.g. it could be for the week . Accordingly the backend log mining of query intent process described herein may provide the prevalence of queries for such a query parameter e.g. DATE versus DATE without the need for tagged data. In some embodiments the backend log mining of query intent process may provide indications on the mandatory parameters of queries hence collection modes for concepts. Weights on data may also be inferred from their frequency in the database logs e.g. for non obfuscated data .

Often in certain applications e.g. voice text IVR a disambiguation dialog such as those discussed above may be used. For example where a precise item in a list must be selected e.g. a given travel itinerary a particular movie venue etc . The strategy to disambiguate is usually pre defined at the application design stage without a priori knowledge of the best disambiguation algorithm e.g. will a user select the flight by price by flight length etc . Accordingly the backend communication logs associated with query intent process may provide invaluable information in this regard e.g. if each constraint added by the user translates into a new backend query parameter. In this way query intent process may allow for the design of dialogs that are better tailored to the actual application usage.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

As will be appreciated by one skilled in the art the present disclosure may be embodied as a method system or computer program product. Accordingly the present disclosure may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present disclosure may take the form of a computer program product on a computer usable storage medium having computer usable program code embodied in the medium.

Any suitable computer usable or computer readable medium may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a transmission media such as those supporting the Internet or an intranet or a magnetic storage device. Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

Computer program code for carrying out operations of the present disclosure may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present disclosure may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present disclosure is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here may be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

As discussed above the computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network such as those shown in . The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present disclosure. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment was chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the disclosure of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the disclosure defined in the appended claims.

