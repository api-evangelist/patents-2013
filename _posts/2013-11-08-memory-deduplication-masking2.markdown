---

title: Memory deduplication masking
abstract: Technologies are generally described for virtual machine memory deduplication protection through memory deduplication masking. In some examples, a virtual machine manager (VMM) that receives data to be written to memory may initially write the data to entries in a temporary shadow paging table and then subsequently opportunistically update the memory and an associated hardware-assisted paging (HAP) table. Upon receiving a read request for the received data before the data has been written to the memory, the VMM may check the HAP table and determine that the requested data is not available from the memory. Upon determining that the received data is not available from the memory, the VMM may respond to the read request by sending the received data stored in the shadow paging table entries.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619168&OS=09619168&RS=09619168
owner: EMPIRE TECHNOLOGY DEVELOPMENT LLC
number: 09619168
owner_city: Wilmington
owner_country: US
publication_date: 20131108
---
This Application is the U.S. National Stage filing under 35 U.S.C. 371 of PCT Application Ser. No. PCT US13 69238 filed on Nov. 8 2013. The PCT application is hereby incorporated by reference in its entirety.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Data deduplication refers to the practice of using hashes or other semi unique identifiers to identify portions of identical data and replacing those portions with pointers to a single stored master copy of the data portion. By collapsing such duplicated data into a single copy and pointers to that single copy large and even substantial amounts of memory space may be freed. In network or cloud based applications deduplication may allow an operating system or application to be served as multiple instances to multiple customers while using about as much memory as a single instance of the operating system or application. As a result a given amount of memory may serve substantially more customers when data deduplication is used compared to when data deduplication is not used.

According to some examples methods may be provided to mask memory deduplication in a datacenter. An example method may include writing a first data to an entry in a shadow paging table in response to receiving a write request to write the first data and receiving a read request for the first data from a datacenter customer. The method may further include determining that the first data is not available from a memory based on a hardware assisted paging HAP table and sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

According to other examples a virtual machine manager VMM may be provided to mask memory deduplication in a datacenter. The VMM may include a processing module and a memory configured to store a shadow paging table and a hardware assisted paging HAP table and coupled to the processing module. The processing module may be configured to receive a write request to write a first data write the first data to an entry in the shadow paging table receive a read request for the first data from a datacenter customer and determine based on the HAP table that the first data is not available from a memory. The processing module may be further configured to respond to the read request by sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

According to further examples a system may be provided to mask memory deduplication. The system may include at least one virtual machine VM operable to be executed on one or more physical machines a memory configured to store deduplicated data a memory configured to store a shadow paging table and a hardware assisted paging HAP table and a controller. The controller may be configured to receive a write request to write a first data to the memory write the first data to an entry in the shadow paging table receive a read request for the first data from a customer and determine based on the HAP table that the first data is not available from the memory. The controller may further be configured to respond to the read request by sending the first data from the entry in the shadow paging table to the customer in response to determination that the first data is not available from the memory.

According to yet further examples a computer readable medium may store instructions for masking memory duplication in a datacenter. The instructions may include writing a first data to an entry in a shadow paging table in response to receiving a write request to write the first data and receiving a read request for the first data from a datacenter customer. The instructions may further include determining that the first data is not available from a memory based on a hardware assisted paging HAP table and sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the drawings and the following detailed description.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures can be arranged substituted combined separated and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

This disclosure is generally drawn inter alia to methods apparatus systems devices and or computer program products related to protection of virtual machine memory deduplication from side channel attacks through memory deduplication masking at datacenters.

Briefly stated technologies are generally described for virtual machine memory deduplication protection through memory deduplication masking. In some examples a virtual machine manager VMM that receives data to be written to memory may initially write the data to entries in a temporary shadow paging table and then subsequently opportunistically update the memory and an associated hardware assisted paging HAP table. Upon receiving a read request for the received data before the data has been written to the memory the VMM may check the HAP table and determine that the requested data is not available from the memory. Upon determining that the received data is not available from the memory the VMM may respond to the read request by sending the received data stored in the shadow paging table entries.

While some embodiments are discussed herein in conjunction with datacenters for illustration purposes embodiments are not limited to datacenter based applications. Some embodiments may be implemented in single machine configurations such as individual computing devices or even smart phones where virtualization may be employed. For example micro VMs may be employed in individual computing devices for security purposes where embodiments may be implemented to enhance security through memory deduplication masking.

A datacenter as used herein refers to an entity that hosts services and applications for customers through one or more physical server installations and one or more virtual machines executed in those server installations. Customers of the datacenter also referred to as tenants may be organizations that provide access to their services for multiple users. One example configuration may include an online retail service that provides retail sale services to consumers users . The retail service may employ multiple applications e.g. presentation of retail goods purchase management shipping management inventory management etc. which may be hosted by one or more datacenters. Thus a consumer may communicate with those applications of the retail service through a client application such as a browser over one or more networks and receive the provided service without realizing where the individual applications are actually executed. This scenario contrasts with configurations where each service provider would execute their applications and have their users access those applications on the retail service s own servers physically located on retail service premises. One result of the networked approach described herein is that applications and virtual machines on a datacenter may be vulnerable to side channel attacks that take advantage of memory duplication to preserve memory resources.

As shown in a diagram a physical datacenter may include one or more physical servers and each of which may be configured to provide one or more virtual machines . For example the physical servers and may be configured to provide four virtual machines and two virtual machines respectively. In some embodiments one or more virtual machines may be combined into one or more virtual datacenters. For example the four virtual machines provided by the server may be combined into a virtual datacenter . The virtual machines and or the virtual datacenter may be configured to provide cloud related data computing services such as various applications data storage data processing or comparable ones to a group of customers such as individual users or enterprise customers via a cloud .

Network or cloud based applications may use data deduplication to provide multiple instances of an operating system or application to multiple users from a single instance of the operating system and or application thereby serving more users with the same memory. For example an instance of an operating system or application may use a particular file library or application programming interface API but may not modify that data during execution. Multiple instances of the operating system application may then be served using pointers to a single copy of the data. Deduplication may be used for both files i.e. data stored on a hard disk drive solid state drive tape drive and the like and data in memory i.e. data used by currently executing operating systems or applications typically stored in random access memory and the like . In the present disclosure masking of memory deduplication is described in the context of data in memory but the same techniques may be applicable to files.

According to a diagram a physical server similar to the physical servers and includes server hardware and a machine memory for storing deduplicated data and may be configured to execute a first virtual machine VM and a second VM . The VMs and may each execute one or more operating systems and or applications each of which may store or retrieve data from memory e.g. the machine memory . For example the VM may have an associated virtual memory which stores a data and a data each of which may be associated with an operating system or application executing on the VM . Similarly the VM may have an associated virtual memory that stores the data and a data each of which may be associated with an operating system or application executing on the VM . The data and associated with the VM while appearing to be stored in the virtual memory may actually be data pointers that refer to a single copy of the data and the data stored at the machine memory . Similarly the data and in the virtual memory may actually be data pointers that refer to the copies of the data and the data stored at the machine memory . As a result data that is common to both VMs such as the data can be stored as a single copy of the data at the machine memory and pointers to that copy of the data at each of the virtual memories and .

Virtual memory may be supported by operating systems so that an application or process executing on the operating system can access the entire available memory space. For example an operating system may maintain a group of page tables that map virtual memory addresses to memory addresses for each application or process. In a non virtualized environment i.e. where a computer executes a single operating system memory addresses may correspond to actual machine memory addresses i.e. addresses of the memory on the computer hardware .

On the other hand in a virtualized environment as depicted in the diagram each of the VMs and may execute a different guest operating system instance. Each guest operating system instance may maintain a group of page tables that map guest virtual memory addresses to guest memory addresses as described above. However since each guest operating system actually executes in a guest virtual machine e.g. the VMs the guest memory addresses may not correspond to actual machine memory addresses in contrast to the non virtualized example described above. Instead the memory seen by each operating system instance may be virtualized and further mapped to memory addresses at the machine memory . For example the virtual memory associated with the VM may appear to store the data and . An application executing at the VM may access the data and or using guest virtual memory addresses which an operating system executing at the VM may translate to guest memory addresses. Subsequently a virtual machine manager VMM may either translate the guest memory addresses or the original guest virtual memory addresses to machine memory addresses at the machine memory where the data and are actually stored.

As described above memory deduplication may allow an operating system or application to be served as multiple instances to multiple users while using significantly less memory than a system in which deduplication is not used. As such memory deduplication may be desirable for network or cloud service providers such as datacenters. However using memory deduplication may make datacenters susceptible to side channel attacks based on data access timing. For example data that is deduplicated may exist as a single copy that serves multiple VMs. When a particular VM attempts to write to that data another copy of that data may first be generated before the write is performed also known as copy on write . As a result the write access time for deduplicated data may be greater than the write access time for data that is not deduplicated due to the additional time required to generate the copy in the copy on write process. An attacker may then use this write access time difference to determine whether some particular data was deduplicated by another VM. This type of attack may be used for cloud cartography to determine what tasks are running where co location detection to determine if a specific target user is co located with an attacker VM and even for direct side channel attacks. In one specific scenario an attacker may email a corporate target a graphics file with a unique binary representation and use attack VMs scattered through a datacenter to detect deduplication of the image and thus locate machines where the target receives or opens the image allowing a highly targeted attack.

A diagram of shares some similarities with the diagram in with similarly numbered elements behaving similarly. According to the diagram the server hardware may include a memory management unit MMU that manages the mapping of guest virtual memory addresses to machine memory addresses. In some embodiments the MMU may manage this mapping in conjunction with the VMM . The VMM may perform memory virtualization based on techniques such as para virtualization shadow paging based full virtualization and hardware assisted full virtualization. In para virtualization the guest operating system may be modified to be able to communicate directly with the VMM and thereby access machine memory. Para virtualization may need the guest operating system to be modified to be aware of its virtualization and as such may introduce additional difficulties in the virtualization process. In shadow paging based full virtualization the VMM may maintain a shadow page table that maps guest virtual addresses to machine addresses while the guest operating system may maintain its own virtual to physical address translation table. Since the VMM may store what is essentially an additional set of full page tables shadow paging based virtualization may be memory intensive. Moreover in hardware assisted full virtualization the MMU may maintain a guest page table that translates between virtual addresses and physical addresses while specialized hardware at the server hardware maintains page tables that translate between physical addresses and machine addresses. These tables may be collectively known as a hardware assisted paging HAP table and may effectively map virtual addresses to machine addresses. Using hardware assisted virtualization and HAP tables may allow guest VMs to handle their own page faults or errors without triggering VM exits as well as avoid the memory intensive nature of shadow paging based virtualization.

In order to defeat side channel attacks using write access timing as described above the VMM may combine memory virtualization techniques. For example the VMM may maintain a temporary shadow page table and a HAP table . The temporary shadow page table may be used to respond to requests for just written data and the HAP table may be used to respond to other data requests as described below in more detail in .

As depicted in a diagram the physical server may include a machine memory as part of the server hardware a temporary shadow page table maintained by the VMM and a hardware assisted paging HAP table also maintained by the VMM . A VM associated with a customer e.g. of the datacenter may request a write to the machine memory . For example the write may contain a modified version of deduplicated data stored at the machine memory . In some embodiments the deduplicated data may be associated with an operating system and or an application. Upon receiving the write the VMM may create a new entry at the temporary shadow paging table and store the write in the newly created entry. Subsequently the VMM may update the machine memory and the HAP table based on entries in the temporary shadow page table . For example the VMM may create a copy of the original deduplicated data at the machine memory write the modified data to the copy and then update the HAP table based on the copy. In some embodiments the VMM may perform an opportunistic updating of the machine memory and the HAP table . For example the VMM may decide to perform the opportunistic updating upon determination that it has sufficient time or processing capability to perform the updating or if the temporary shadow page table has reached a particular size. After performing the opportunistic updating the VMM may then delete the corresponding entries in the temporary shadow page table thus keeping the size of the temporary shadow page table relatively small.

A VM associated with the same or a different customer may also request a read of data stored at the physical server . Upon receiving the read the VMM may use the HAP table to look up the requested data from the machine memory . In response to determination that the data is present in the machine memory the VMM may then use the HAP table to first retrieve the data and then send it back from the machine memory to the requesting VM in a return .

In some embodiments a VM associated with the same or a different customer may request a read of data that has just been sent to the VMM in a previous write. For example a VM may request the read for the modified version of the data stored at the machine memory written by the write . In this situation the VMM may not have performed the opportunistic updating of the machine memory and the HAP table . As a result the modified data in the write may still reside in an entry in the temporary shadow page table and the machine memory may still only contain the original deduplicated data. When the VMM attempts to use the HAP table to look up and retrieve the modified data in the write the attempt may trigger a fault because the modified data in the write has not yet been written to the machine memory . In response to the fault the VMM may then look up and retrieve the data in the write from its entry in the temporary shadow page table then send the data in the write to the requesting VM in a return . By sending the data from the temporary shadow page table the VMM may not have to create and modify a copy of the original deduplicated data in response to the read and incur the write access delay associated with the copy on write process. As a result a requesting VM may not observe a write access time delay for the data that was just written and any access time delays due to data deduplication may be masked.

For example the computing device may be used to mask memory deduplication in a datacenter as described herein. In an example basic configuration the computing device may include one or more processors and a system memory . A memory bus may be used to communicate between the processor and the system memory . The basic configuration is illustrated in by those components within the inner dashed line.

Depending on the desired configuration the processor may be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. The processor may include one more levels of caching such as a cache memory a processor core and registers . The example processor core may include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. An example memory controller may also be used with the processor or in some implementations the memory controller may be an internal part of the processor .

Depending on the desired configuration the system memory may be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. The system memory may include an operating system a virtual machine manager and program data . The program data may include among other data a shadow paging table a hardware assisted paging table deduplicated data or the like as described herein.

The computing device may have additional features or functionality and additional interfaces to facilitate communications between the basic configuration and any desired devices and interfaces. For example a bus interface controller may be used to facilitate communications between the basic configuration and one or more data storage devices via a storage interface bus . The data storage devices may be one or more removable storage devices one or more non removable storage devices or a combination thereof. Examples of the removable storage and the non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

The system memory the removable storage devices and the non removable storage devices are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD solid state drives or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be used to store the desired information and which may be accessed by the computing device . Any such computer storage media may be part of the computing device .

The computing device may also include an interface bus for facilitating communication from various interface devices e.g. one or more output devices one or more peripheral interfaces and one or more communication devices to the basic configuration via the bus interface controller . Some of the example output devices include a graphics processing unit and an audio processing unit which may be configured to communicate to various external devices such as a display or speakers via one or more A V ports . One or more example peripheral interfaces may include a serial interface controller or a parallel interface controller which may be configured to communicate with external devices such as input devices e.g. keyboard mouse pen voice input device touch input device etc. or other peripheral devices e.g. printer scanner etc. via one or more I O ports . An example communication device includes a network controller which may be arranged to facilitate communications with one or more other computing devices over a network communication link via one or more communication ports . The one or more other computing devices may include servers at a datacenter customer equipment and comparable devices.

The network communication link may be one example of a communication media. Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF microwave infrared IR and other wireless media. The term computer readable media as used herein may include both storage media and communication media.

The computing device may be implemented as a part of a general purpose or specialized server mainframe or similar computer that includes any of the above functions. The computing device may also be implemented as a personal computer including both laptop computer and non laptop computer configurations.

Example methods may include one or more operations functions or actions as illustrated by one or more of blocks and or and may in some embodiments be performed by a computing device such as the computing device in . The operations described in the blocks may also be stored as computer executable instructions in a computer readable medium such as a computer readable medium of a computing device .

An example process for masking memory deduplication at a datacenter may begin with block WRITE A FIRST DATA TO AN ENTRY INA SHADOW PAGING TABLE IN RESPONSE TO RECEIVING A WRITE REQUEST TO WRITE THE FIRST DATA TO A MEMORY where a VMM e.g. the VMM may write a received first data to an entry in a shadow paging table before writing it to a memory as described above. In some embodiments the first data may be a modified version of data already stored in the memory.

Block may be followed by block RECEIVE A READ REQUEST FOR THE FIRST DATA FROM A DATACENTER CUSTOMER where the VMM may receive a read request for the first data from a datacenter customer e.g. a VM at the datacenter . The VMM may receive the read request before the VMM has had a chance to write the first data from the shadow paging table to the memory as described above.

Block may be followed by block DETERMINE BASED ON A HARDWARE ASSISTED PAGING HAP TABLE THAT THE FIRST DATA IS NOT AVAILABLE FROM THE MEMORY where the VMM may use a HAP table to determine whether the first data is available from the memory as described above. For example the VMM may not have had the opportunity to write the first data from the shadow paging table to the memory. As a result the HAP table may not include a reference to the first data and the VMM may determine based on the HAP table that that first data is not available from the memory.

Finally block may be followed by block RESPOND TO THE READ REQUEST BY SENDING THE FIRST DATA FROM THE ENTRY IN THE SHADOW PAGING TABLE TO THE DATACENTER CUSTOMER IN RESPONSE TO DETERMINATION THAT THE FIRST DATA IS NOT AVAILABLE FROM THE MEMORY where the VMM upon the determination that the first data is not available from the memory performed in block instead sends the first data from the entry in the shadow paging table as described above.

In some examples as shown in a computer program product may include a signal bearing medium that may also include one or more machine readable instructions that when executed by for example a processor may provide the functionality described herein. Thus for example referring to the processor in the virtual machine manager may undertake one or more of the tasks shown in in response to the instructions conveyed to the processor by the medium to perform actions associated with masking memory deduplication as described herein. Some of those instructions may include for example to write a first data to an entry in a shadow paging table in response to receiving a write request to write the first data to a memory to receive a read request for the first data from a datacenter customer to determine based on a hardware assisted paging HAP table that the first data is not available from the memory and or to respond to the read request by sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory according to some embodiments described herein.

In some implementations the signal bearing media depicted in may encompass computer readable media such as but not limited to a hard disk drive HDD a solid state drive SSD a Compact Disc CD a Digital Versatile Disk DVD a digital tape memory etc. In some implementations the signal bearing media may encompass recordable media such as but not limited to memory read write R W CDs R W DVDs etc. In some implementations the signal bearing media may encompass communications media such as but not limited to a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. . Thus for example the program product may be conveyed to one or more modules of the processor by an RE signal bearing medium where the signal bearing media is conveyed by the wireless communications media e.g. a wireless communications medium conforming with the IEEE 802.11 standard .

According to some examples method may be provided to mask memory deduplication in a datacenter An example method may include writing a first data to an entry in a shadow paging table in response to receiving a write request to write the first data and receiving a read request for the first data from a datacenter customer. The method may further include determining that the first data is not available from a memory based on a hardware assisted paging HAP table and sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

According to some embodiments the HAP table may be configured to map to the memory and the memory may be configured to store deduplicated data. The method may further include opportunistically updating the HAP table and the memory to include the first data and or deleting the entry in the shadow table after the updating. The method may further include receiving another read request for a second data from another datacenter customer determining that the second data is available from the memory based on the HAP table and responding to the other read request by sending the second data from the memory to the other datacenter customer in response to determination that the second data is available from the memory. The method may further include using the HAP table to retrieve the second data from the memory before sending the second data.

According to other embodiments the first data may be a modified version of deduplicated data available from the memory. Receiving the write request and or receiving the read request may include receiving the write request or the read request from a virtual machine associated with the datacenter customer. Receiving the read request may include receiving the read request following receipt of the write request. The first data may be data associated with an operating system and or data associated with an application.

According to other examples a virtual machine manager VMM may be provided to mask memory deduplication in a datacenter. The VMM may include a processing module and a memory configured to store a shadow paging table and a hardware assisted paging HAP table and coupled to the processing module. The processing module may be configured to receive a write request to write a first data write the first data to an entry in the shadow paging table receive a read request for the first data from a datacenter customer and determine based on the HAP table that the first data is not available from a memory. The processing module may be further configured to respond to the read request by sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

According to some embodiments the HAP table may be configured to map to the memory and the memory may be configured to store deduplicated data. The processing module may be further configured to opportunistically update the HAP table and the memory to include the first data and or delete the entry in the shadow table after the updating.

According to further examples a system may be provided to mask memory deduplication. The system may include at least one virtual machine VM operable to be executed on one or more physical machines a memory configured to store deduplicated data a memory configured to store a shadow paging table and a hardware assisted paging HAP table and a controller. The controller may be configured to receive a write request to write a first data to the memory write the first data to an entry in the shadow paging table receive a read request for the first data from a customer and determine based on the HAP table that the first data is not available from the memory. The controller may further be configured to respond to the read request by sending the first data from the entry in the shadow paging table to the customer in response to determination that the first data is not available from the memory.

According to some embodiments the HAP table may be configured to map to the memory. The controller may be further configured to opportunistically update the HAP table and the memory to include the first data and or delete the entry in the shadow table after the updating. The controller may be further configured to receive another read request for a second data from another customer determine that the second data is available from the memory based on the HAP table and respond to the other read request by sending the second data from the memory to the other customer in response to determination that the second data is available from the memory. The controller may be further configured to use the HAP table to retrieve the second data from the memory before sending the second data.

According to other embodiments the first data may be a modified version of deduplicated data available from the memory. Receiving the write request and or receiving the read request may include receiving the write request or the read request from a virtual machine associated with the customer. Receiving the read request may include receiving the read request following receipt of the write request. The first data may be data associated with an operating system and or data associated with an application.

According to yet further examples a computer readable medium may store instructions for masking memory deduplication in a datacenter. The instructions may include writing a first data to an entry in a shadow paging table in response to receiving a write request to write the first data and receiving a read request for the first data from a datacenter customer. The instructions may further include determining that the first data is not available from a memory based on a hardware assisted paging HAP table and sending the first data from the entry in the shadow paging table to the datacenter customer in response to determination that the first data is not available from the memory.

According to some embodiments the HAP table may be configured to map to the memory and the memory may be configured to store duplicated data. The instructions may further include opportunistically updating the HAP table and the memory to include the first data and or deleting the entry in the shadow table after the updating. The instructions may further include receiving another read request for a second data from another datacenter customer determining that the second data is available from the memory based on the HAP table and responding to the other read request by sending the second data from the memory to the other datacenter customer in response to determination that the second data is available from the memory. The instructions may further include using the HAP table to retrieve the second data from the memory before sending the second data.

According to other embodiments the first data may be a modified version of deduplicated data available from the memory. Receiving the write request and or receiving the read request may include receiving the write request or the read request from a virtual machine associated with the datacenter customer. Receiving the read request may include receiving the read request following receipt of the write request. The first data may be data associated with an operating system and or data associated with an application.

There is little distinction left between hardware and software implementations of aspects of systems the use of hardware or software is generally but not always in that in certain contexts the choice between hardware and software may become significant a design choice representing cost vs. efficiency tradeoffs. There are various vehicles by which processes and or systems and or other technologies described herein may be effected e.g. hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed. For example if an implementer determines that speed and accuracy are paramount the implementer may opt for a mainly hardware and or firmware vehicle if flexibility is paramount the implementer may opt for a mainly software implementation or yet again alternatively the implementer may opt for some combination of hardware software and or firmware.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples may be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part may be equivalently implemented in integrated circuits as one or more computer programs executing on one or more computers e.g. as one or more programs executing on one or more computer systems as one or more programs executing on one or more processors e.g. as one or more programs executing on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure.

The present disclosure is not to be limited in terms of the particular embodiments described in this application which are intended as illustrations of various aspects. Many modifications and variations can be made without departing from its spirit and scope as will be apparent to those skilled in the art. Functionally equivalent methods and apparatuses within the scope of the disclosure in addition to those enumerated herein will be apparent to those skilled in the art from the foregoing descriptions. Such modifications and variations are intended to fall within the scope of the appended claims. The present disclosure is to be limited only by the terms of the appended claims along with the full scope of equivalents to which such claims are entitled. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Versatile Disk DVD a digital tape a computer memory a solid state drive etc. and a transmission type medium such as a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein may be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a data processing system may include one or more of a system unit housing a video display device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors.

A data processing system may be implemented utilizing any suitable commercially available components such as those found in data computing communication and or network computing communication systems. The herein described subject matter sometimes illustrates different components contained within or connected with different other components. It is to be understood that such depicted architectures are merely exemplary and that in fact many other architectures may be implemented which achieve the same functionality. In a conceptual sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality may be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermediate components. Likewise any two components so associated may also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality and any two components capable of being so associated may also be viewed as being operably couplable to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically connectable and or physically interacting components and or wirelessly interactable and or wirelessly interacting components and or logically interacting and or interactable components.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims e.g. bodies of the appended claims are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers means at least two recitations or two or more recitations .

Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

As will be understood by one skilled in the art for any and all purposes such as in terms of providing a written description all ranges disclosed herein also encompass any and all possible subranges and combinations of subranges thereof. Any listed range can be easily recognized as sufficiently describing and enabling the same range being broken down into at least equal halves thirds quarters fifths tenths etc. As a non limiting example each range discussed herein can be readily broken down into a lower third middle third and upper third etc. As will also be understood by one skilled in the art all language such as up to at least. greater than less than and the like include the number recited and refer to ranges which can be subsequently broken down into subranges as discussed above. Finally as will be understood by one skilled in the art a range includes each individual member. Thus for example a group having 1 3 cells refers to groups having 1 2 or 3 cells. Similarly a group having 1 5 cells refers to groups having 1 2 3 4 or 5 cells and so forth.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

