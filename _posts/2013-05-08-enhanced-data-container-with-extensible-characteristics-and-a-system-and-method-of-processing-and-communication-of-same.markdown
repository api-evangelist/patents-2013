---

title: Enhanced data container with extensible characteristics and a system and method of processing and communication of same
abstract: A variety of tools and techniques are disclosed for creating and managing an enhanced data container. The enhanced data container is comprised of extensible characteristics that when processed interact with a variety of computing devices and computing device components. The enhanced data container is communicated to a variety of computing devices in varying ways and processing of the enhanced data container is coupled with additional systems to manage the enhanced data container by as controlling the number of instances in a system, assigning virtual or real monetary value to instances, assign unique identifiers to instances, and allowing the enhanced data container to be modified by inputs and rendered or transmitted to outputs of computing devices. These technologies bring additional functionality and levels of interaction to data in consumer and business applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09454398&OS=09454398&RS=09454398
owner: 
number: 09454398
owner_city: 
owner_country: 
publication_date: 20130508
---
The present invention relates to data use and transmission in a networked environment more specifically to an enhanced data container with extensible characteristics and a system and method for displaying processing and communication of same.

The current data usage paradigm in a computing environment comprises applications having all of the intelligence. Applications that are executed either on a standalone computing device such as a personal computer or mobile device or an Internet resident computing service such as a website or cloud service create store and manipulate simple or unintelligent data such as structured and unstructured data electronic files database elements content such as photos word processing documents files or communications such as email notifications chat or SMS messages. Attempts to provide additional information to raw data include adding simple and static information elements called metadata or metatags such as author created date type of data such as music video photo category or classification terms or more recently GPS coordinates. Metadata is a set of static data that doesn t bring any functionality to the data itself. Any operation on the data must be programmed into the application accessing the data.

Furthermore mobile computing has led to the growth of miniature applications or applets and another trend is that many Internet websites and cloud services provide additional functionality to their own data formats leading to vast numbers of complex competing and non interoperable systems services applications and data formats all managing similar types of data. Furthermore data in prior art systems is typically static with no inherent functionality as part of the data envelope or container requiring extensive application code that is external to the data to perform any functions.

In order to simplify complexity while increasing usefulness of data and content this invention creates a self contained instance of functional intelligent data that brings application intelligence and standalone functionality directly to data and content offering multiple advantages over prior art without limitation including 

The present invention is an enhanced data container and a means of communication and processing said enhanced data container that provides extensible and functional data and interaction in a computing environment.

Referring now to the invention in more detail in there is shown a functional view of the enhanced data container and its functional components. Functional components can be data stores software functions or a combination of both. Enhanced data container is encapsulated with a suitable encryption layer or mechanism with which the encryption strength and mechanism can be varied from 1 and contains two subsections header section and content section . Header subsection contains several functional components including a unique identifier function navigation and communication function container integrity validation function container header and characteristic map function content characteristic extension application programming interface API abstraction layer header extension API abstraction layer and one up to N number N being a number higher than 1 bound by the data size limit of the header subsection of header extensions . Content subsection contains one up to N number N being a number higher than 1 bound by the data size limit of the content subsection of characteristic extensions . All functional components in the header subsection can optionally be achieved as content extensible characteristic extensions .

In more detail still referring to the invention of encryption layer comprises an encryption mechanism that ensures the entire contents of enhanced data container are fully encrypted within the secure envelop of encrypted layer and cannot be decoded or read without the proper decryption method. Enhanced data container contains information such as raw data values of any kind code applications application programming interfaces functions programming objects values variables arrays and content. All functional components within enhanced data container interact with functions in the container processor illustrated in to either execute a function and or store a data value either in enhanced data container or within the data store which is part of the additional elements of the computing device shown in via container processor shown in . Header subsection contains all of the operational functionality and related data values of the enhanced data container . The unique identifier function is responsible for creating and validating the unique identity of the specific enhanced data container in which it is contained using either a centralized or distributed unique identifier data store. The unique identifier function can utilize a flat or hierarchical identifier function to produce unique instances of certain types within nested recursive hierarchies. The container integrity validation function that in conjunction with encryption layer will validate that the data in enhanced data container has not been modified or tampered with and is the same as the originally created enhanced data container unless such modification is authorized by a valid container processor . The navigation and communication function is responsible for providing functionality relevant to the transmitting and receiving of and how enhanced data container moves from computing device to computing device illustrated in via container processor . The container header and characteristic map function contains information that describes relevant information about header extensions contained in header subsection and characteristic extensions contained in content subsection such as identification type of attribute and offset value of the information within the relevant subsection . The content characteristic extension API Abstraction layer provides information about the application layer functions contained in the associated characteristic extensions such as structure of the extension and valid parameters and values. Header extension API abstraction layer provides information about the application layer functions contained in associated header extensions such as structure of the extension and valid parameters and values. Header extension and characteristic extension contain the actual relevant extension data. Header extensions and characteristic extensions can be hierarchical and recursive that is they can contain characteristics of other characteristics or can contain other enhanced data containers . The functionality of any subcomponent of the enhanced data container can be augmented eliminated combined shared or swapped with any other subcomponent as required to provide proper functionality of container processor and enhanced data container .

The construction detail of the invention as shown in is as follows. Enhanced data container and all of its components and can be created using any communication technology protocol programming language data type and or content type with sufficient capabilities to produce the required functionality.

Referring now to the invention in more detail in there is shown a functional view of container processor and its functional components. Container processor contains processor unique identifier function container integrity validation function container navigation and communication peer function processor integrity validation function container header extension enumerator container characteristic extension enumerator container header extension processor container characteristic extension processor user interface abstraction layer data abstraction layer and operating system abstraction layer .

In more detail still referring to the invention of container processor contains processor unique identifier function that is responsible for creating and validating the unique identity of the specific container processor in which it is contained using either a centralized or distributed unique identifier data store. The processor unique identifier function can utilize a flat or hierarchical identifier function to produce unique instances of certain types within nested recursive hierarchies. Container integrity validation function in conjunction with enhanced data container encryption layer and container integrity validation function shown in validates that the data in enhanced data container being processed by container processor has not been modified or tampered with and is the same as the originally created enhanced data container unless such modification is authorized by a valid container processor and new values for validation functions would be issued. The container navigation and communication peer function is responsible for providing functionality relevant to transmitting and receiving of and moving enhanced data container from computing device to computing device illustrated in . Processor integrity validation function validates that the container processor entity as a whole including the program structure and data that comprises the container processor has not been modified or tampered with and is the same as the originally created container processor unless such modification is authorized by a valid container processor software or data update and new values for validation functions would be issued. The container header extension enumerator processes the container header and characteristic map function and reads in header extensions from enhanced data container for use by container processor . The container characteristic extension enumerator processes container header and characteristic map function and reads in characteristic extensions from enhanced data container for use by container processor . The container header extension processor incorporates or executes the instructions contained in header extensions and container characteristic extension processor incorporates or executes the instructions contained in the characteristic extensions . Both extension processors and contain all the relevant data code application or application component application programming interface variables and or content to effectively process the relative header extensions and characteristic extensions contained in enhanced data container . The specific information that is required in the extension processors and to process the relative header extensions and characteristic extensions is extensible can be downloaded on demand by an external source as required. The extension processors and interface with User Interface Abstraction Layer Data Abstraction Layer and Operating System Abstraction Layer to produce the results as encoded in header and characteristic extensions and . All subcomponents within container processor interact with all other components as required and container processor contains instructions that manage all of the subcomponents and overall operation of container processor as required. User interface abstraction layer is responsible for interfacing with the computing device specific user input and output components including but not limited to display devices such as keyboard mouse touch screen voice activated components audio output software or hardware component or process and any other appropriate user interface component supported by computing device . Data abstraction layer is responsible for interfacing with the data storage and retrieval components of computing device including but not limited to memory file systems and or database functions or any other data storage and retrieval component supported by computing device . Operating system abstraction layer is responsible for interfacing with any operating system component including computing device specific functions such as GPS motion sensors vibration output and those included in user interface abstraction layer and data abstraction layer if it is more appropriate to include those in this component and any other operating system component supported by computing device . The functionality of any subcomponent of container processor can be augmented combined shared or swapped with any other subcomponent as required to provide proper functionality of container processor and enhanced data container .

The construction detail of the invention as shown in is as follows. Container processor and all of its components and can be created using any communication technology protocol and or programming language with sufficient capabilities to produce the required functionality.

Referring now to the invention in more detail in there is shown a functional view of the communication of enhanced data container between computing devices and . Computing device and contain container processor and additional elements relevant to the computing device and . Enhanced data container is transmitted from transmitting computing device to a second computing device via secure or unsecured connection over communication network .

In more detail still referring to the invention of container processor is present on a computing device that contains additional elements relevant to the specific computing device that are known or unknown computer hardware and software components such as operating system storage memory user interface components other software services such as database servers web servers or additional applications or services providing known or unknown functionality. Computing device can be any device capable of computation. The secure or unsecured connection between two or more computing devices and is created using a secure or unsecured connection over any suitable communication network . Communication of enhanced data container can be of any communication type such as one to one communication one to many communication or many to many communication. Enhanced data container is transmitted from the transmitting computing device via container processor over secure or unsecured connection to a second or third computing device and which is established over communication network . Enhanced data container is received by receiving computing device and processed by receiving computing device s container processor . The container processor interacts with additional elements of the respective computing devices A B and C as required.

The construction detail of the invention as shown in is as follows. The communication of enhanced data container between computing devices and with secure connection over a communication network can be created using any communication technology protocol and or programming language with sufficient capabilities to produce the required functionality.

Referring now to the invention in more detail in there is shown a functional view of the user interface and display of a processed and rendered manifestation of enhanced data container on user interface of computing device . The computing device contains container processor and additional elements relevant to computing device along with additional user interface elements created by container processor or computing device . The enhanced data container rendering contains elements dictated by the characteristic extensions .

In more detail still referring to the invention of the user interface provides interaction to either a user or a another process or program within the computing device. User interface comprises any input or output or combination input and output function provided by computing device .

Container processor and any required additional functional elements provided by computing device provide the required information to user interface to create the rendering of enhanced data container in the rendered manifestation of enhanced data container on specified user interface . The rendered enhanced data container is rendered according to characteristics present in enhanced data container . Additional user interface elements may be created by container processor or computing device as required for appropriate functioning of user interface . User interface is optional and interaction with container processor and enhanced data container can be achieved programmatically from other functional components or processes from within computing device or a subcomponent of container processor .

The construction detail of the invention as shown in is as follows. The rendering of enhanced data container on user interface with characteristics and all functional components present in can be created using any communication technology protocol and or programming language with sufficient capabilities to produce the required functionality.

Showing an additional embodiment in the enhanced data container is transmitted over secure or unsecured connection over communication network between computing device and cloud computing service that comprises container processor and additional elements .

Showing an additional embodiment in the enhanced data container processor in computing device connects additional elements to systems and which can be internal or external to computing device . Instance control controls the number of instances of enhanced data container that exist on any computing device or on any communication network . Monetary value control assigns monetary or other value to a particular instance of enhanced data container Container designer is used to create the structure and function of the enhanced data container . Storage means and system is a physical or virtual storage apparatus or mechanism or database system to store enhanced data container .

The advantages of the present invention include without limitation the ability to create interesting and unique combinations and or characteristics of data applications content and computer device interactions to create value. Further advantages include without limitation the ability to create abundance or scarcity of certain combinations or characteristics and the ability to adjust the relative value thereof. Further advantages include without limitation the ability to create hierarchical classifications of combinations and or characteristics and to validate the integrity of the data contents and source of an individual instance of the invention.

In broad embodiment the present invention is an enhanced data container and the system and method of processing and communication of the enhanced data container in a computing environment.

While the foregoing written description of the invention enables one of ordinary skill to make and use what is considered presently to be the best mode thereof those of ordinary skill will understand and appreciate the existence of variations combinations and equivalents of the specific embodiment method and examples herein. The invention should therefore not be limited by the above described embodiment method and examples but by all embodiments and methods within the scope and spirit of the invention.

