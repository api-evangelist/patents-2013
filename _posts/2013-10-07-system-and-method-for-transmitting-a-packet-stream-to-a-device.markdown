---

title: System and method for transmitting a packet stream to a device
abstract: Disclosed is a system and method for transmitting a packet stream to a device. An example method involves: a first device recording a packet stream transmitted from a second device to a third device; identifying a first packet having a final portion of a first data block, wherein a second packet is next after the first packet; determining a time period between transmission of the first and second packets; using the recorded packet stream to generate another packet stream; identifying a third packet that includes a final portion of a second data block corresponding to the first data block, wherein a fourth packet is next after the third packet; and transmitting the generated packet stream to the third device, wherein transmitting the generated packet stream to the third device involves: transmitting the third packet and following at least the determined time period after transmitting the third packet, transmitting the fourth packet.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09094284&OS=09094284&RS=09094284
owner: Tribune Broadcasting Company, LLC
number: 09094284
owner_city: Chicago
owner_country: US
publication_date: 20131007
---
The present disclosure claims priority to U.S. Provisional Patent Application No. 61 885 944 entitled SYSTEM AND METHOD FOR TRANSMITTING DATA TO A DEVICE BASED ON AN ENTRY OF A RUNDOWN FOR A NEWS PROGRAM which was filed on Oct. 2 2013 and which is hereby incorporated by reference.

The present disclosure also relates to U.S. patent application No. 61 920 977 entitled SYSTEM AND METHOD FOR TRANSMITTING DATA TO A DEVICE BASED ON AN ENTRY OF A RUNDOWN FOR A NEWS PROGRAM which is assigned to the assignee of the present disclosure which is being filed simultaneously with the present disclosure and which is hereby incorporated by reference herein.

Throughout this application with respect to all reasonable derivatives of such terms and unless otherwise specified and or unless the particular context clearly dictates otherwise each usage of a or an means at least one and each usage of the means the at least one.

This disclosed system and method relate generally to packet based communication such as in a news production system environment.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this disclosure and are not admitted to be prior art by inclusion in this section.

A news production system NPS may facilitate the production of a news program in the form of a media stream. In one example an NPS may include multiple media sources and a production switcher where outputs of the media sources are connected to inputs of the production switcher. This may allow the production switcher to switch between and or combine multiple media streams output by the media sources thereby outputting the news program in the form of another media stream.

There are various types of media including for example audio video or a combination thereof. As such in one example an NPS may output a news program in the form of an audio stream. In this instance the NPS may transmit the audio stream to a radio broadcasting system for broadcast. As another example a media stream may take the form of a video stream or a combined audio and video stream. In such instances the NPS may transmit the video stream or the combined audio and video stream to a television broadcasting system for broadcast.

A media source may take a variety of forms. For example a media source may take the form of a media server. A media server is a device configured for retrieving a media file converting the retrieved media file into a media stream and outputting the converted media stream.

As another example a media source may take the form of a media effect engine. A media effect engine is a device configured for retrieving a media effect sometimes referred to as a page and running the media effect thereby outputting a corresponding media stream. A media effect may be stored as a file that includes instructions and other data e.g. media related to the media effect. By running the media effect the media effect engine may generate and output a media stream based on those instructions. Media effects are commonly used as a means to generate animations graphics or other visual effects in the form of a media stream that can be overlaid on another media stream. For instance in the context of a news program a lower third media effect may be used to overlay a graphic over a lower third portion of a media stream.

As such in one example NPS a media server may output a first media stream while a media effect engine outputs a second media stream and a production switcher may combine the two media streams e.g. by overlaying the second media stream over the first media stream to output the news program in the form of a third media stream. The production switcher may then transmit the third media stream to a broadcasting system e.g. a television broadcasting system for broadcast.

A media effect engine may be controlled in a variety of ways such that it may perform the steps of retrieving a media effect and running the media effect. For instance a user may control a media effect engine by providing it a suitable instruction via a user interface. However for a variety of reasons this manner of controlling the media effect engine may be undesirable. Among other things this process may be time consuming for the user. In addition it may be difficult for the user to ensure that the media effect engine performs such steps at appropriate times during production of the news program.

As another example a controller device may control a media effect engine by providing it a suitable instruction in accordance with one or more application programming interfaces API that may be made publically available by the provider of the media effect engine or another entity. However again for a variety of reasons this manner of controlling the media effect engine may be undesirable. Among other things it may be time consuming for a user to configure the controller device to provide such a suitable instruction.

This approach may be particularly time consuming given that different instructions may need to adhere to different APIs. For instance an instruction requesting the running of one type of media effect may need to adhere to a different API than another instruction requesting the running of another type of media effect. In addition it may be difficult for the user to configure the controller device such that it causes the media effect engine to retrieve and run a particular media effect at an appropriate time during production of the news program.

In one aspect an example method involves i a first device recording a packet stream transmitted from a second device to a third device the recorded packet stream including multiple distinct data blocks ii identifying in the recorded packet stream a first packet having a final portion of a first data block wherein in the recorded packet stream a second packet is next after the first packet iii determining a time period between transmission of the identified first packet and transmission of the second packet iv using the recorded packet stream to generate another packet stream including multiple distinct data blocks v identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block wherein in the generated packet stream a fourth packet is next after the third packet and vi transmitting the generated packet stream to the third device wherein transmitting the generated packet stream to the third device involves a transmitting the third packet b and following at least the determined time period after transmitting the third packet transmitting the fourth packet.

In another aspect an example method involves i a device recording a packet stream transmitted from a media effect designer to a media effect engine the recorded packet stream including multiple distinct data blocks each data block representing at least a portion of a media effect command ii identifying in the recorded packet stream a first packet having a final portion of a first data block wherein in the recorded packet stream a second packet is next after the first packet iii determining a time period between transmission of the identified first packet and transmission of the second packet iv using the recorded packet stream to generate another packet stream including multiple distinct data blocks v identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block wherein in the generated packet stream a fourth packet is next after the third packet and vi transmitting the generated packet stream to the media effect engine wherein transmitting the generated packet stream to the media effect engine involves a transmitting the third packet b and following at least the determined time period after transmitting the third packet transmitting the fourth packet.

In another aspect a system is disclosed. The system includes a non transitory computer readable medium including instructions that when executed by a processor cause performance of a set of steps including i recording a packet stream transmitted from a first device to a second device the recorded packet stream including multiple distinct data blocks ii identifying in the recorded packet stream a first packet having a final portion of a first data block wherein in the recorded packet stream a second packet is next after the first packet iii determining a time period between transmission of the identified first packet and transmission of the second packet iv using the recorded packet stream to generate another packet stream including multiple distinct data blocks v identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block wherein in the generated packet stream a fourth packet is next after the third packet and vi transmitting the generated packet stream to the second device wherein transmitting the generated packet stream to the second device involves a transmitting the third packet b and following at least the determined time period after transmitting the third packet transmitting the fourth packet.

These as well as other aspects advantages and alternatives will become apparent to those of ordinary skill in the art by reading the following detailed description with reference where appropriate to the accompanying drawings.

As noted above a media effect engine may be configured for retrieving a media effect and running the media effect thereby outputting a media stream. However before the media effect engine may retrieve a media effect the media effect must first be designed and stored. A media effect designer may be used for this purpose.

A media effect designer is a device configured for designing and storing a media effect. Like a media effect engine a media effect designer may be controlled in a variety of ways. For instance a user may control a media effect designer by providing it a suitable instruction via a user interface. As such in an instance where a media effect takes the form of a file including instructions and other data the media effect designer may create or edit that file based on instructions received from a user.

In some instances a media effect designer may cause the media effect designer to retrieve and run a media effect on a preview channel of the media effect engine. This may involve the media effect designer transmitting to the media effect engine a packet stream including a suitable instruction that causes the media effect engine to retrieve and run the media effect on the preview channel. Typically such an instruction does not adhere to the APIs discussed above. But instead the instruction typically adheres to a particular protocol that is understood by both the media effect designer and the media effect engine but that is not made publically available by the provider of the media effect engine or another entity.

The packet stream transmitted from the media effect designer to the media effect engine may be leveraged to allow a spoofing device to control the media effect engine at a later time. This may involve the spoofing device recording a packet stream transmitted from the media effect designer to the media effect engine and later transmitting the recorded packet stream to the media effect engine. With this technique a device other than the media effect designer may cause the media effect engine to retrieve and run the media effect all without the device transmitting to the media effect engine an instruction that adheres to one of the APIs as discussed above.

In some instances it may be desired for this other device to cause the media effect engine to retrieve and run a modified version of the media effect that was in the originally recorded packet stream. Performing this process may involve the spoofing device recording a packet stream transmitted from the media effect designer to the media effect engine using the recorded packet stream to generate another packet stream that is a modified version of the recorded packet stream and transmitting the generated packet stream to the media effect engine.

Notably however despite transmitting the generated packet stream to the media effect engine the media effect engine may be unable to properly process the transmitted packet stream. This is because a given packet stream may need to be transmitted to the media effect engine in accordance with one or more timing restrictions in order for the media effect engine to be able to successfully process the packet stream i.e. such that the media effect engine can actually carry out the instructions included in the packet stream .

The disclosed system and method addresses this issue by ensuring that packets in the generated data stream are transmitted according to a timing scheme that allows the media effect engine to successfully process the transmitted packet stream.

More particularly in one example the method may involve a spoofing device recording a packet stream transmitted from a media effect designer to a media effect engine where the recorded packet stream includes multiple distinct data blocks. The method may further involve the spoofing device identifying in the recorded packet stream a first packet having a final portion of a first data block where in the recorded packet stream a second packet is next after the first packet.

The example method may also involve the spoofing device determining a time period between transmission of the identified first packet and transmission of the second packet and using the recorded packet stream to generate another packet stream including multiple distinct data blocks. In addition the method may involve the spoofing device identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block where in the generated packet stream a fourth packet is next after the third packet.

Still further the example method may involve the spoofing device transmitting the generated packet stream to the media effect engine which may involve i transmitting the third packet and ii following at least the determined time period after transmitting the third packet transmitting the fourth packet.

By the spoofing device delaying for at least the determined time period before transmitting the fourth packet the transmission of the third and fourth packets may be separated by a time period that is likely long enough to allow the media effect engine to successfully process them. If the media effect engine is still unable to successfully process them the spoofing device may reattempt transmitting the packet stream but with an ever greater delay between transmission of the third and fourth packets. This process may be repeated in connection with multiple pairs of adjacent packets in the packet stream until the packet stream is successfully transmitted to the media effect engine.

Also in some examples a scheduling system may be configured to cause the spoofing device to perform such functions based on an entry in a rundown. Generally a rundown is a schedule of events and related information that make up a news program. Based on a rundown entry being associated with an assigned identifier the scheduling system may cause the media effect engine to retrieve and run the media effect. This may involve the scheduling system selecting an entry from the rundown the scheduling system making a determination that the selected entry corresponds to an assigned identifier and responsive to the scheduling system making the determination the scheduling system causing the spoofing device to transmit a packet stream generated from a recorded packet stream to the media effect engine.

The scheduling system may also be configured to select and process rundown entries in order. As such a user may control the timing as to when the media effect engine retrieves and runs a particular media effect by ensuring that the corresponding assigned identifier is associated with a particular rundown entry.

The NPS may include one or more devices including for example a media source a media effect designer a media effect engine a data storage a spoofing device a production switcher and a scheduling system .

These devices may be connected with each other and or with external devices via one or more communication paths. For example the media source and the production switcher may be connected via a path the media effect designer and the data storage may be connected via a path and the media effect engine and the data storage may be connected via a path .

In addition the media effect designer and the media effect engine may be connected via a path the media effect engine and the production switcher may be connected via the path and the spoofing device and the path may be connected via a path . Still further the spoofing device and the scheduling system may be connected via a path the scheduling system and the production system may be connected via a path and the production system and an external device e.g. a router of a broadcasting system may be connected via a path .

Though these communication paths a device may transmit various types of data to one or more other devices. For example one device may transmit instructions to a second device to control the second device. As another example one device may transit a media stream to another device. Notably such devices may exchange data according to one or more standards or protocols. For example one device may send data to another device in the form of a packet stream.

Generally the media source is a device configured for outputting a media stream and may take a variety of forms. For example the media source may take the form of a media server which is a device configured for retrieving a media file converting the retrieved media file into a media stream and outputting the converted media stream. An example of a media server is the K2 server provided by Grass Valley of San Francisco Calif. As additional examples the media source may take the form of a satellite receiver or a video camera. As the media source outputs a media stream the media source may transmit the media stream to the production switcher via the path .

Generally the media effect designer is a device configured for designing and storing a media effect. The media effect designer may design a media effect based on input received from a user via a user interface. Then the media effect designer may store the media effect in the data storage such as in the form of a file. An example of a media effect designer is the Viz Artist provided by Vizrt of Bergen Norway.

Generally the media effect engine is a type of media source and is a device configured for retrieving a media effect and running the retrieved media effect thereby outputting a corresponding media stream. The media effect engine may retrieve a media effect from the data storage . And as the media effect engine outputs a media stream the media effect engine may transmit the media stream to the production switcher via the path . An example of a media effect engine is the Viz Video Engine provided by Vizrt of Bergen Norway.

As noted above the media effect designer may be configured for transmitting to the media effect engine instructions that cause the media effect engine to retrieve and run a media effect on a preview channel of the media effect engine . This allows a user to preview the media effect as the user is designing it.

Generally the spoofing device is configured for recording data and transmitting the recorded data or a modified version thereof to another device. For instance the spoofing device may be configured for recording data transmitted from the media effect designer to the media effect engine such as via path the spoofing device may access this data via the path . In one example the path may be a path of a packet based network and the path may provide the spoofing device with access to that network such that the spoofing device may monitor packet transmission over the network. Further the spoofing device may be configured for transmitting the recorded data or a variation thereof to the media effect engine such as via the paths and . In one example the spoofing device may provide such functionality by running a network protocol analyzer and or packet generator application such as Sniffer Portable Professional Analyzer provided by NetScout of Westford Mass.

Generally the production switcher is a device configured for performing functions related to input to output mapping. For instance the production switcher may be configured for switching between and or combining multiple media streams output by the media sources and and transmitted to the production switcher via paths and respectively so the production switcher may output a news program in the form of a media stream. The production switcher may transmit this media stream to an external device such as a router of a broadcasting system via the path . Note that this media stream may be subjected to additional processing before being broadcast. For example the media stream may be modified with a digital video effect DVE before being broadcast. An example of a production switcher is the Vision switcher provided by Ross Video of Iroquois Ontario in Canada.

Generally the scheduling system is a device configured for performing functions related to scheduling and managing the production of a news program and for controlling one or more other devices in the NPS . For example the scheduling system may be configured for creating or editing a rundown based on input from a user via a user interface. Further the scheduling system may be configured for traversing and processing entries in a rundown. Yet further the scheduling system may be configured for controlling the spoofing device via path and the production switcher via path .

The device may include various components including for example a user interface a communication interface a processor and a data storage all of which may be electronically connected to each other via a system bus or other connection mechanism . Note that the device need not include all of these components and it may include additional components.

The user interface may function to allow the device to interact with a user such as to receive input from a user and to provide output to the user. Thus the user interface may include input components such as a computer mouse a keyboard or a touch sensitive panel. The user interface may also include output components such as a display screen which for example may be combined with a touch sensitive panel or a speaker.

The communication interface may function to allow the device to communicate with one or more other devices e.g. over one or more paths as described above . The communication interface may be configured to transmit and or receive various types of data including for example control data or media stream data. In one example the communication interface may take the form of a wired interface such as an Ethernet port USB port or HD SDI port. As another example the communication interface may take the form of a wireless interface such as a WiFi interface. In either case the communication interface may include communication input and or communication output interfaces.

The processor may include one or more general purpose processors e.g. microprocessors and or one or more special purpose processors e.g. digital signal processors DSPs .

The data storage may include one or more volatile and or non volatile storage components such as magnetic optical flash or organic storage and may be integrated in whole or in part with the processor . The data storage may include removable and or non removable components. In some examples the data storage may include multiple storage drives that store data in a redundant and or stripped configuration.

Generally the processor may be configured to execute program instructions e.g. compiled or non compiled program logic and or machine code stored in the data storage to perform one or more of the steps described herein and or shown in the accompanying drawings. As such the data storage may take the form of a non transitory computer readable storage medium having stored thereon program instructions that upon execution by the processor cause the device to perform one or more of the steps described herein and or shown in the accompanying drawings.

Note that throughout this disclosure numerical modifiers e.g. first or second are used to establish unique terms for ease of reference as opposed to indicating a particular characteristic e.g. position or order of the modified term.

The packet stream may represent various types of information. For example the data may represent an instruction related to a media effect that the media effect designer is previewing. For instance the packet stream may represent an instruction that causes the media effect engine to retrieve and run the media effect thereby outputting a corresponding media stream. Notably in some instances the packet stream may represent other instructions such as instructions that cause the media effect engine to load or mount the media effect. Such instructions may differ depending on the configuration of the media effect designer and or the media effect engine .

Generally an instruction that causes a media effect engine to perform a function is referred to as a media effect command. A media effect command may be divided into multiple data blocks sometimes referred to as synapses .

Returning to in view of the example packet stream the step at block may involve the spoofing device recording the packet stream transmitted from the media effect designer to the media effect engine via path .

At block the method may involve identifying in the recorded packet stream a first packet having a final portion of a first data block where in the recorded packet stream a second packet is sequentially next after the first packet. For instance the method may involve the spoofing device identifying in the recorded packet stream a first packet having a final portion of a first data block where in the recorded packet stream a second packet is sequentially next after the first packet

The spoofing device may identify the first packet based on one or more characteristics relating to the first packet or the packet stream. For instance the step of the spoofing device identifying the first packet may involve the spoofing device determining that the first packet includes a threshold amount of consecutive zero bits. The threshold amount can vary to suit a desired configuration. For example the threshold amount may be a percentage of zero bits in the packet e.g. thirty percent or an absolute number of consecutive zero bits e.g. ten . In one particular example the absolute number may be a value in a range from zero to twelve hundred.

Additionally or alternatively the step of the spoofing device identifying the first packet may involve the spoofing device determining that a difference in time between transmission of the packet e.g. by the media effect designer and transmission of the packet e.g. by the media effect designer exceeds a threshold time period. The threshold time period can vary to suit a desired configuration. For example the threshold time period may be a value in a range from twenty to thirty milliseconds and in a more particular example the value may be twenty five milliseconds. In some instances the identifying techniques described above may be combined to identify the first packet.

Notably the process of recording a packet stream may involve recording not only the data included in the packet stream but also the time at which a packet in the packet stream is transmitted from the media effect designer to the media effect engine .

At block the method may involve determining a time period between transmission of the identified first packet and transmission of the second packet. For instance the method may involve the spoofing device determining a time period between transmission of the identified packet by the media effect designer and transmission of the second packet by the media effect designer .

At block the method may involve using the recorded packet stream to generate another packet stream including multiple distinct data blocks. For instance the method may involve the spoofing device using the recorded packet stream to generate another packet stream. In one example spoofing device may generate the packet stream based on input from a user via a user interface. This may allow the user to facilitate generation of a packet stream that is a modification of the packet stream such as by adding removing or modifying one or more of the parameters associated with the media effect e.g. text used in connection with the media effect .

Returning to at block the method may involve identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block where in the generated packet stream a fourth packet is sequentially next after the third packet. For instance the method may involve the spoofing device identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block where in the generated packet stream a fourth packet is sequentially next after the third packet

In one example the recorded data stream and the generated data stream may have an equal number of data blocks. As such the data blocks may have an ordered one to one correspondence. As such the first data block may correspond to the first data block and the second data block may correspond to the second data block

At block the method may involve transmitting the generated packet stream to the third device where transmitting the generated packet stream to the third device involves i transmitting the third packet and ii following at least the determined time period after transmitting the third packet transmitting the fourth packet. For instance the method may involve the spoofing device transmitting the generated packet stream to the media effect engine where the spoofing device transmitting the generated packet stream to the media effect engine involves i the spoofing device transmitting the third packet to the media effect engine and ii following at least the determined time period after transmitting the spoofing device third packet to the media effect engine the spoofing device transmitting the fourth packet to the media effect engine.

By the spoofing device delaying for at least the determined time period before transmitting the fourth packet the transmission of the third packet and the fourth packet may be separated by time period that is likely long enough to allow the media effect engine to successfully process them. If the media effect engine is still unable to successfully process them the spoofing device may reattempt transmitting the packet stream but with an ever greater delay between transmission of the third packet and the fourth packet . This process may be repeated until the third packet and fourth packet are successfully transmitted to the media effect engine .

It should also be noted that the recorded packet stream and the generated packet stream have been greatly simplified for the purposes of providing examples of the disclosed system and method. In practice packet streams are likely although not required to be divided into more packets and or include more data blocks. As such it is noted that the entire process described above may be repeated for multiple pair of adjacent packets within a packet stream such that a spoofing device may successfully transmit an entire packet stream to a media effect engine.

At block the method may involve identifying in the recorded packet stream a first packet having a final portion of a first data block where in the recorded packet stream a second packet is sequentially next after the first packet. For instance the method may involve the spoofing device identifying in the recorded packet stream a first packet having a final portion of a first data block where in the recorded packet stream a second packet is sequentially next after the first packet

At block the method may involve determining a time period between transmission of the identified first packet and transmission of the second packet. For instance the method may involve the spoofing device determining a time period between transmission of the identified packet and transmission of the second packet .

At block the method may involve using the recorded packet stream to generate another packet stream including multiple distinct data blocks. For instance the method may involve the spoofing device using the recorded packet stream to generate another packet stream .

At block the method may involve identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block where in the generated packet stream a fourth packet is sequentially next after the third packet. For instance the method may involve the spoofing device identifying in the generated packet stream a third packet that includes a final portion of a second data block that corresponds to the first data block where in the generated packet stream a fourth packet is sequentially next after the third packet

At block the method may involve transmitting the generated packet stream to the media effect engine where transmitting the generated packet stream to the media effect engine involves i transmitting the third packet and ii following at least the determined time period after transmitting the third packet transmitting the fourth packet. For instance the method may involve the spoofing device transmitting the generated packet stream to the media effect engine where the spoofing device transmitting the generated packet stream to the media effect engine involves i the spoofing device transmitting the third packet to the media effect engine and ii following at least the determined time period after transmitting the third packet the spoofing device transmitting the fourth packet to the media effect engine .

In some examples a scheduling system may be configured to cause the spoofing device to perform one or more of the steps described above based on an entry in a rundown. Generally a rundown is a schedule of events and related information that make up a news program. Based on a rundown entry being associated with the assigned identifier the scheduling system may cause the media effect engine to retrieve and run the media effect. This may involve the scheduling system selecting an entry from the rundown the scheduling system making a determination that the selected entry corresponds to the assigned identifier and responsive to the scheduling system making the determination the scheduling system causing the spoofing device to transmit data generated from the recorded data to the media effect engine.

The scheduling system may also be configured to select and process rundown entries in order. As such a user may control the timing as to when the media effect engine retrieves and runs a particular media effect by ensuring that the corresponding assigned identifier is associated with a particular rundown entry.

A further description of how a scheduling system may be configured to cause the spoofing device to perform one or more steps relating to a media effect such as the steps described above is provided in the cross referenced disclosure.

While one or more steps have been described as being performed by certain devices or entities e.g. the spoofing device the steps may be performed by any device or entity such as those included in the NPS described above. Further while the disclosed system and method has been described in connection with a news production system the disclosed system and method may be implemented in other environments as well.

Also the steps need not be performed in the disclosed order although in some examples an order may be preferred. And not all steps need to be performed to achieve the desired advantages of the disclosed system and method and therefore not all steps are required.

It should also be noted that the variations described in connection with select examples of the disclosed system and method may be applied to all other examples of the disclosed system or method.

Further while select examples of the disclosed system and method have been described alterations and permutations of these examples will be apparent to those of ordinary skill in the art. Other changes substitutions and alterations are also possible without departing from the disclosed system and method in its broader aspects as set forth in the following claims.

