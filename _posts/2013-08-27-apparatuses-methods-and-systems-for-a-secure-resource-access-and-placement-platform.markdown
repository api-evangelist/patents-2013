---

title: Apparatuses, methods and systems for a secure resource access and placement platform
abstract: The APPARATUSES, METHODS AND SYSTEMS FOR A SECURE RESOURCE ACCESS AND PLACEMENT PLATFORM (“SRAP PLATFORM”) provides a secure supporting infrastructure within a corporate network framework and applications based thereon for use and placement of corporate resources. A non-trusted device may he authorized to access and use corporate resources, and the corporate network server may manage the placement of resources via the SRAP PLATFORM.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09392021&OS=09392021&RS=09392021
owner: Goldman, Sachs & Co.
number: 09392021
owner_city: New York
owner_country: US
publication_date: 20130827
---
This application is a divisional of U.S. patent application Ser. No. 12 574 673 filed on Oct. 6 2009 entitled APPARATUSES METHODS AND SYSTEMS FOR A SECURE RESOURCE ACCESS AND PLACEMENT PLATFORM now allowed which claims priority under 35 USC 119 for U.S. provisional patent application no. 61 103 175 filed on Oct. 6 2008 entitled APPARATUSES METHODS AND SYSTEMS FOR EXTENDED SECURITY PLANE INFRASTRUCTURE and for U.S. provisional patent application no. 61 103 565 filed on Oct. 7 2008 entitled APPARATUSES METHODS AND SYSTEMS FOR EXTENDED SECURITY PLANE INFRASTRUCTURE which are incorporated herein by reference in their entirety.

The present invention is directed generally to an apparatuses methods and systems of remote access management and more particularly to APPARATUSES METHODS AND SYSTEMS FOR A SECURE RESOURCE ACCESS AND PLACEMENT PLATFORM.

Corporate employees may have flexible working environments and thus may demand to access to applications and business data within the corporate network from a non trusted environment. For example the corporate employee may want to operate on a personal laptop to access the corporate email system.

The APPARATUSES METHODS AND SYSTEMS FOR SECURE RESOURCE ACCESS AND PLACEMENT PLATFORM hereinafter SRAP platform provides a secure supporting infrastructure within a corporate network framework and applications based thereon whereby users may access and use corporate resources from a variety of potentially non trusted devices and the corporate network server may manage the placement of resources.

In one embodiment a multi layered processor implemented method for secure access to corporate resources comprising receiving a Payload specific request to access a plurality of corporate resources from at least one user initializing via a processor a uniquely identified Shell based on the received request receiving a set of user authentication credentials from the user sending the set of user authentication credentials to a corporate server controlling the corporate resources receiving an authentication decision from the corporate server and in the authentication decision is affirmative establishing a secure connection between the Shell and the corporate server receiving a plurality of control policies from the corporate server via the secure connection and accessing the plurality of corporate resources via the established secure connection in compliance with the received control policies.

In one embodiment a multi layered processor implemented method for secure access to corporate resources comprising receiving a Payload specific request to access a plurality of corporate resources from at least one non trusted entity receiving via a process or a set of user authentication credentials from the non trusted entity determining whether the non trusted entity is authenticated based on the received user authentication credentials if the non trusted entity is authenticated generating a plurality of control policies establishing a secure connection to the non trusted entity sending the generated plurality of control policies to the non trusted entity via the established secure connection and granting access to the non trusted entity to at least one of the plurality of corporate resources via the established secure connection based on the generated plurality of control policies.

In one embodiment a multi layer processor implemented method for secure access to corporate resources comprising receiving a Payload specific request to access a plurality of corporate resources receiving a set of user authentication credentials from at least one non trusted entity analyzing via a processor format of the received set of user authentication credentials from the non trusted entity determining a validity of the formats of the received user authentication credentials and if the formats of the received user authentication credentials are valid conducting an authentication process based on the received user authentication credentials establishing a first secure connection with the corporate server controlling the plurality of corporate resources providing the received request to access the plurality of corporate resources and the received user authentication credentials to the corporate server via the first secure connection establishing a second secure connection with the non trusted entity receiving a plurality of control policies and a plurality of user data from the corporate server via the first secure connection and providing the plurality of control policies and the plurality of user data to the non trusted entity via the second secure connection.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

This disclosure detailed implementation of apparatuses methods and systems for secure resource access and placement platform hereinafter SRAP PLATFORM . SRAP PLATFORM implements a secure supporting infrastructure within a corporate network framework and applications based thereon whereby users may access and use corporate resources from a variety of potentially non trusted devices and the corporate network server may manage the placement of resources.

For example in one embodiment an employee of the corporation operating a personal mobile device such as but not limited to a laptop a blackberry and or the like may request access corporate resources applications and or data within corporate network through the SRAP PLATFORM. For example in one implementation the employee must request to download a file stored on an internal document system of the corporate network via a corporate document retrieval application e.g. DocsOpen etc. to access corporate email e.g. through Microsoft Outlook Thunderbird etc. and or the like. Such applications involving accessing obtaining and or exchanging with the corporate resources may be processed and delivered by encapsulation with user information and user overhead and are referred to as herein Payload. For instance the corporate document retrieval application and the email application as discussed in the above examples may be examples of Payloads. In one embodiment the SRAP PLATFORM may provide secure transmission and management of Payload Payload contents e.g. overhead data related to the Payload etc. user data e.g. emails user requested documents etc. and or the like through a series of secured interfaces.

It is to be understood that depending on the particular needs and or characteristics of a SRAP PLATFORM user administrator server data monetization structure hardware configuration network framework and or the like various embodiments of the SRAP PLATFORM may be implemented that enable a great deal of flexibility and customization. The instant disclosure discusses embodiments of the SRAP PLATFORM primarily within the context of secured resource access and placement for a corporate network. However it is to be understood that the system described herein may be readily configured customized for wide range of other applications or implementations. For example aspects of the SRAP PLATFORM may be adopted for cryptographic communications remote access management and or the like. It is to be understood that the SRAP PLATFORM may be further adapted to other implementations for general network management applications and network infrastructure designs.

In one embodiment the user may operate with a personal device unauthenticated to access secure networks e.g. corporate resources on a corporate network. In that case the user may access a SRAP PLATFORM via the SRAP PLATFORM User Plane . In one embodiment the SRAP PLATFORM User Plane may be a mechanism residing a trusted corporate logical entity residing in a potential hostile environment e.g. unauthenticated personal device providing host embodiment a SRAP PLATFORM User Plane may include but not limited to an employee owned laptop which operates with its own OS and other applications and also with corporate authenticated software applications.

In one embodiment the SRAP PLATFORM User Plane may send Payload requests to access corporate resources to the SRAP PLATFORM Transfer Plane via a communication network . In one embodiment the SRAP PLATFORM User Plane may receive Payload contents from the SRAP PLATFORM Transfer Plane via the communication network . The communication network may include but not limited to an in house Bluetooth connection a local area network LAN a wide area network WAN a wireless cellular network the Internet and or the like. In one embodiment Payloads may be delivered and processed on a plurality of interfaces of the User Plane and the User Plane may receive policies to control interface activities from the Transfer Plane .

In one embodiment the SRAP PLATFORM Transfer Plane may be an intermediate entity that bridges the SRAP PLATFORM User Plane and the SRAP PLATFORM Control Plane and advertises and deploys Payload content and policies generated by the Control Plane to the User Plane . For example in one implementation a Transfer Plane may include but not limited to the corporate demilitarized zone DMZ corporate hosted infrastructure for non user data transfers and or the like.

In one embodiment the SRAP PLATFORM Control Plane may generate Payload content and policies determining interface behaviors. For example the Control Plane may be but not limited to a corporate network which originates and manages user data and or the like. In one embodiment the Control Plane may generate user data such as but not limited to user login data user profile data and or the like. In one embodiment the SRAP PLATFORM Control Plane may receive Payload requests forwarded from the Transfer Plane and may then generate and deliver Payload contents accordingly.

In one embodiment the SRAP PLATFORM may also communicate with a SRAP PLATFORM database . In some embodiments distributed SRAP PLATFORM databases may be integrated in house with the User Plane the Transfer Plane and or the Control Plane respectively. In other embodiments the SRAP PLATFORM entities may access a remote SRAP PLATFORM database via the communication network . The SRAP PLATFORM may send obtained data to the database for storage such as but not limited to user account information requested Payload policies for interface activities hardware information security protocols and or the like.

In one embodiment a system administrator may communicate with the SRAP PLATFORM User Plane Transfer Plane Control Plane and the SRAP PLATFORM database for regular maintenance service failure system updates database renewal security surveillance and or the like. In one embodiment the system administrator may directly operate with the SRAP PLATFORM and the SRAP PLATFORM database on and in house basis such as but not limited to via an integrated administrator user interface. In another embodiment the system administrator may remotely access the SRAP PLATFORM and the SRAP PLATFORM database and perform its functionality via the communication network . In one embodiment the system administrator may control the management process at the SRAP PLATFORM Control Plane as will be further illustrated in .

In one embodiment the User Plane may process and deliver a variety of Payloads requesting to access corporate resources on the SRAP PLATFORM. For example in one implementation an employee operating a personal laptop may request to access the corporate email through an encrypted email application e.g. Microsoft Outlook etc. In one embodiment there may be at least three different types of Payloads the Environment the Application and the Presentation

A Payload type of Environment may include but not limited to interactive access to full corporate sessions applications and data both online and off line and or the like. For example in one embodiment an Environment may include but not limited to corporate configured hardware corporate managed hypervisor corporate managed OS container and or the like. In one implementation an Environment may retain user data such as but not limited to user authentication information user overhead and or the like and synchronize with the SRAP PLATFORM. An Environment may be employed by corporate laptops corporate blackberries virtual laptops and or the like. In one embodiment an Environment may be constrained from data and applications such as but not limited to authenticated access encrypted data encrypted transport data transfer control and or the like. In one embodiment since the Environment may operate offline the Environment may communicate with the Corporate Connectivity module of Shell Interfaces to synchronize data from the Transfer Plane .

A Payload type of Application may include but not limited to applications running locally accessing corporate data that resides remotely. For example in one implementation an Application may include but not limited to a web browser base client or custom application and or the like. An Application may be employed by institutional portals virtual NDC with soft phone iPhone applications and or the like. In one embodiment an Application may be constrained from data and applications such as authenticated access encrypted transport data transfer control and or the like.

A Payload type of Presentation may include but not limited to access to corporate remote session and may only be available when connected. For example in one implementation a Presentation may include technologies such as but not limited to independent computing architecture ICA client remote desktop protocol RDP and or the like. A Presentation may be employed by iPhone RDP and or the like. In one embodiment a Presentation may be constrained from data and applications such as trusted access client authenticated access encrypted transport and or the like.

In one embodiment the User Plane may backup previous versions of Payload and maintain as Payload backup to facilitate Payload recovery. For example in one implementation a new Payload version introduces a problem the User Plane may resort to Payload backup for quick recovery. In one embodiment Payload may be backup based on different types as Environment backup Application backup and Presentation backup

In one embodiment a Payload may reside in a Bubble and a Shell may further manage and harden the Bubble and the Payload within the Bubble via control of the available Shell Interfaces . In one embodiment a Bubble may be a mechanism that allows the abstraction of a computer system s main components. For example in one implementation a Bubble may be hardware that allows Type I and Type II hardware virtualization. For another example a Bubble may be aspects of the Operating System such as the File System Registry Services COM and or the like which allow OS encapsulation and Application Virtualization aka Type III OS Virtualization .

In one embodiment Payload Bubble and Shell may be separate elements. In another embodiment the SRAP PLATFORM operation may integrate two or all three elements. For example in one implementation an e mail or market data application developed to be installed directly on an iPhone that meets the specification of the SRAP PLATFORM may be the Payload Bubble and Shell all in one. For another example a virtual corporate Laptop implemented via a solution such as Microsoft MEDV Kidaro or MokaFive may have each one of the three elements clearly separated in the SRAP PLATFORM operation. In this example the corporate OS plus applications embedded therein may constitute the Payload the Bubble may be the Type II Hypervisor in use such as VMware Player VirtualPC and or the like and the Shell may be a management agent application that controls all interfaces the Bubble provides such as the Microsoft MEDV Kidaro MokaFive Agents and or the like. Different types and examples of Bubble structure will be further illustrated in .

In one embodiment a Shell may control a number of Shell Interfaces to serve as a controlled single point of entry into the Payload. Shell Interfaces may provide conduits via which all Payload transmissions and other processes related to the Shell are transacted. In one embodiment Shall Interfaces may include modules to perform Authentication Validation Payload Management Data Control Peripherals Corporate Connectivity Shell Management and or the like. In one embodiment the Authentication module may receive user credential s to grant access to the Shell and Payloads the Validation module may verify the integrity of the Shell and Payload the Payload Management module may enable management and protection of the Payload inside the Shell the Data Control module may protect data to prevent data leakage from the Shell and to ensure new data is delivered to valid Shell instances the Peripherals module may control and authorize access to host peripherals the Corporate Connectivity module may synchronize data with the corporate and the Payload inside the Shell the Shell Management module may validate and enforce control policies received from the Control Plane to control interface behaviors.

In one embodiment the behavior of Shell Interfaces may be determined by the policies defined in a Manifest generated by the Control Plane and made available via the Transfer Plane . For example in one implementation the Manifest may determine Shell general policies Authentication policies Payload policies Data policies Peripheral policies and or the like. The Manifest may be generated and stored in a variety of data formats e.g. text xml etc. and may take a form similar to the following 

Auth.DefinePasswdComplexity Rules defining complexity such as min password length letters and numbers etc.

Data.Persist Areas C Documents and Settings User My documents C ImportantAppData HKCU Software AppSettings etc. 

In one embodiment the Shell Interface modules may be implemented for different Payload types based on the policies received from the Control Plane. For example in one implementation the Shell Interface modules may perform in compliance with a plurality of security and manageability requirements and other specifications as illustrated in Appendices A B and A G.

In one embodiment the Shell may securely maintain a locally cached copy of Manifest s received in the User Plane. In one embodiment the Shell may securely maintain a locally cash aid set of user credentials to facilitate Authentication at Shell Interfaces for Shell access.

In one embodiment the User Plane may communicate with the Transfer Plane via a communication network e.g. the Internet. In one embodiment the Transfer Plane may send updated Manifests to the Shell Interfaces and based on the policies in the Manifests deploy updates of Payloads to the Shell Interfaces via a control channel referred to as the Out of Band Channel . For example in one implementation the Transfer Plane may deliver Payload content obtained from the Control Plane onto an Out of Band channel from a DMZ a Hosted infrastructure and or the like. In one embodiment the Out of Band channel may be connected and used by the Shell even if no user is actively engaged with the Payload and or the Payload is not active. In that case online authentication with the Shell may be implemented to receive updates of Manifests and Payloads.

In one embodiment the Payload content may comprises contents of Environment contents of Application contents of Presentation a Shell provider and a Manifest s provider . In one embodiment the Shell provider may provide the Shell components such as but not limited to installers binaries their updates and or the like such that the hosting computing environment of the Shell may establish and or install a trusted Shell environment based on the received components. In one embodiment the Manifest provider may make available the manifest generated in the Control Plane for the Shell of the User Plane to fetch.

In one embodiment a connection between an Data Connection Interface of the Transfer Plane and the Corporate Connectivity module of the Shell Interfaces may be established to facilitate data transfer referred to as an In Band channel . The In Band channel may be authenticated authorized and secure data transfer channel such as but not limited to a Virtual Private Network VPN over which corporate and user data is transmitted. In one implementation the In Band channel may be established when the Payload within the Shell is in use i.e. when a user User Plane Shell attempts to connect to the corporate network Control Plane to access corporate resources.

In one embodiment the Control Plane may generate Payload content including Environment content Application and Presentation and deliver the generated Payload contents to the Transfer Plane . In one embodiment the Control Plane may generate Resultant Manifest using Policy and Payload Management Tool PPMT which is a utility or set of utilities that facilitates the generation of Payload versions and policy bearing Manifests. In one embodiment the PPMT would reference Corporate Directory Services so that policies apply to user or user groups and are tied to certain types or versions of payload. In one implementation the PPMT may facilitate data gathering and reporting.

In one embodiment the Control Plane may obtain data from the corporate Intranet and deliver the data to the Data Connection Interface of the Transfer Plane . For example the delivered data may include but not limited to user requested files from a corporate document system emails voicemails and or the like.

In one embodiment after successful authentication with the Control Plane the Shell may monitor and download updates from the Transfer Control Plane via an Out of Band control channel as will be illustrated in . In one embodiment the Shell may receive Manifest s containing policies that control the interface behaviors of particular user s and Shell s and then validate the received Manifest policies and apply the policies to control behaviors of Shell Interfaces . In one implementation the received updates and applied policies may require the Shell Payload to restart. In that case the user may prompt to restart the Shell Payload . In another implementation the user may request to start use of the Payload associated with the Shell process and the Shell may thus make the Payload available upon user requests. In one embodiment based on the particular Payload the Shell may connect to the corporate intranet via an In Band channel for example for data transfers etc. The Shell may then work conducted on the Payload and receive user data via the In Band channel . In one implementation the Shell may establish a VPN accessing the corporate network and implement the trusted corporate application over the VPN connection. In another implementation the Shell may download User Data from the corporate network through the VPN connection and close the connection to work offline. When the user finishes working on the Payload the Shell may close the Payload . In one embodiment the Shell may continue to function. For example in one implementation the Shell may keep monitoring and downloading updates from the Transfer Control Plane via the Out of Band channel. In one embodiment the user may request to close the Shell and the Shell may then close and end the Shell process .

If the format is valid at the Transfer Plane may determine whether to conduct a multi factor authentication based on the received credential s . If yes the Transfer Plane may retrieve independent authority data and compare it to the received multi factor credential s . For example in one implementation the Transfer Plane may connect to an external network security database to retrieve security data with regard to the received credential s from the user. if the multi factor authentication at the Transfer Plane is unsuccessful the Transfer Plane may reject the Shell requests to access the corporate network. If the multi factor authentication is successful the Transfer Plane may then provide the user authentication to the Control Plane for further authentication and establish a user session with the Control Plane. For example in one implementation a life limited session token may be adopted to establish the user session. In one embodiment the Transfer Plane may download updates from the Control Plane such as but not limited to Manifest updates Payload contents Shell provisions an or the like. Such updates may be made available at the Transfer Plane for the Shell to download via the Out of Band channel as illustrated in . In one embodiment the Transfer Plane may receive User Data from the Control Plane and made available to the Shell. In one embodiment the Shell may send requests via the user session to check for updates from the Control Plane. In one embodiment the Transfer Plane may continue at .

In one embodiment the PPMT may access the Corporate Directory Services database so as to edit policies that apply to particular user s or user groups and are tied to certain types or versions of payload. In another embodiment the PPMT may edit Payloads to add new Payload versions to the Payload Repository database . In one embodiment the edited policy and Payloads may be integrated to generate resultant Manifest s . If the Control Plane receives a request for resultant Manifest for example in one implementation from the established user session the Control Plane may send the generated Manifest s to the Transfer Plane which may make the Manifest available and eventually provide to the Shell. In one embodiment the Control Plane may retrieve Payload contents from the Payload Repository database and deliver to the Transfer Plane . In one embodiment the Control Plane may retrieve the User Data requested by the user from the corporate Intranet and send the User Data to the user via the Transfer Plane .

For example in one implementation a Shell may prompt the user for credentials Shell prompts user for credentials 2 factor . Shell may establish a secure sockets layer SSL tunnel to a DMZ Proxy Server and pass user credentials to the Proxy Server. In one implementation the Proxy server may implement SSL termination input validation on the credentials check of the Public Key Infrastructure PKI certificate of the user credential with an Independent Authority. The Proxy may establish its own SSL tunnel with the Management Server Control Plane of the SRAP PLATFORM and pass the user credentials to the Management Server. In one implementation the Management Server may check authorization and memberships with the stored Directory. If the user is authenticated the Management Server may generate policy Manifest that applies to this user Shell and deliver it to Shell via the Proxy Server. If so directed by the Manifest the Shell may establish a SSL connection to a Payload Distribution Server on DMZ such that the Shell may obtain Payload updates from the Distribution Server. In one implementation the Payload Distribution Server may be kept in synchronization with a Backend Payload Repository where the latest Payload version is internally capped. When requested by the user the Payload may then VPN into the Corporate networks and retrieve synchronize or work with Corporate or may simply work with downloaded User Data offline.

Typically users which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing an or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the SRAP PLATFORM controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network .

Networks are commonly thought to comprise the interconnections and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The SRAP PLATFORM controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeably throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effect communications operations storage etc. Optionally the computer systemization may be connected to an internal power source . Optionally a cryptographic processor and or a Global Positioning System GPS may be connected to the system bus. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. Of course any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to integrated system bus controllers memory management control units floating point units and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s application embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Celeron Core 2 Duo Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code according to conventional data processing techniques. Such instruction passing facilitates communication within the SRAP PLATFORM controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed SRAP PLATFORM mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller Personal Digital Assistants PDAs may be employed.

Depending on the particular implementation features of the SRAP PLATFORM may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the SRAP PLATFORM some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the SRAP PLATFORM component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the SRAP PLATFORM may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example SRAP PLATFORM features discussed herein may be achieved through implementing FPGAs which are a semi conductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the SRAP PLATFORM features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the SRAP PLATFORM system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the function of basic logic gates such as AND and XOR or more complex combinational functions such as decoders or simple mathematical functions. In most FPGAs the logic blocks also include memory elements which may be simple flip flops or more complete blocks of memory. In some circumstances the SRAP PLATFORM may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate SRAP PLATFORM controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the SRAP PLATFORM.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cells is connected to at least one of the interconnected subsequent components of the SRAP PLATFORM thereby providing an electric current to all subsequent components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters conventionally although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via slot architecture. Conventional slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 fiber channel Small Computer Systems Interface SCSI Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the SRAP PLATFORM controller is accessible through remote clients e.g. computers with web browsers by user . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like . Token Bring wireless connections such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed SRAP PLATFORM architectures may similarly be employed to pool load balance and or otherwise increase the communicative and with required by the SRAP PLATFORM controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB IEEE 1394a b cereal universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antenna S Video VGA and or the like wireless 802.11a b g n x Bluetooth code division multiple access CDMA global system for mobile communications GSM WiMax etc. and or the like. One typical output device may include a video display which typically comprises a Cathode Ray Tube CRT or Liquid Crystal Display LCD based monitor with an interface e.g. DVI circuitry and cable that accept signals from a video interface may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accept signals from a video interface. Typically the video interface provides composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector excepting a DVI display cable etc. .

User input devices may be card readers dongles finger print readers gloves graphics tablets joysticks keyboards mouse mice remote controls retina readers trackballs trackpads and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces and or the like. Peripheral devices may be audio devices cameras dongles e.g. for copy protection ensuring secure transactions with the digital signature and or the like external processors for added functionality goggles microphones monitors network interfaces printers scanners storage devices video devices video sources visors and or the like.

It should be noted that although user input devices and peripheral devices may be employed the SRAP PLATFORM controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processor interfaces and or devices may be attached and or communicate with the SRAP PLATFORM controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include Broadcom s CryptoNetX and other Security Processors nCipher s nShield SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the SRAP PLATFORM controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the functionality of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism of course such an embodiment would result in an extremely slow rate of operation. In a typical configuration memory will include ROM RAM. and a storage device . A storage device may be any conventional computer system storage. Storage devices may include a drum a fixed and or removable magnetic disk drive and magneto optical drive and optical drive i.e. Bluray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the SRAP PLATFORM component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection typically are stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executive will program component facilitating the operation of the SRAP PLATFORM controller. Typically the operating system facilitates access of ice O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Plan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkeley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE millennium NT Vista XP Server Palm OS and or the like. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the SRAP PLATFORM controller to communicate with other entities through a communications network . Various communication protocols may be used by the SRAP PLATFORM controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but no limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the SRAP PLATFORM controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the SRAP PLATFORM database operating systems other program components user interfaces Web browsers and or the like.

Access to the SRAP PLATFORM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the SRAP PLATFORM. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The enter terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the SRAP PLATFORM as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The function of computer interfaces in some respects is similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources functionality and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access operation and display of data and computer hardware and operating system resources functionality and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua IBM s OS 2 Microsoft s Windows 2000 2003 3.1 95 98 CE Millennium NT XP Vista 7 i.e. Aero Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by with and or atop operating systems and or operating environment such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. FireFox Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones and or other mobile devices. A web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Of course in place of a Web browser and information server a combined application may be developed to perform similar functions of both. The combined application would similarly affect the obtaining and the provision of information to users user agents and or the like from the SRAP PLATFORM enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as but not limited to sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the SRAP PLATFORM.

Access to the SRAP PLATFORM mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a conventional CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash function passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the SRAP PLATFORM may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across the communications network to enable the SRAP PLATFORM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the SRAP PLATFORM and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The SRAP PLATFORM database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU stored program component portion configuring the CPU to process the stored data. The database may be a conventional fault tolerant relational scalable secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key field act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the SRAP PLATFORM database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of functionality encapsulated within a given object. If the SRAP PLATFORM database is implemented as a data structure the use of the SRAP PLATFORM database may be integrated into another component such as the SRAP PLATFORM component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user ID user name user password contact info hardware ID payload history user evaluation and or the like. A Hardware table may include fields such as but not limited to hardware ID hardware type hardware name data formatting requirements protocols addressing info usage history hardware requirements user ID and or the like. A Directory Service table may include fields such as but not limited to user ID user type payload type payload version policy ID authentication and or the like. A Payload table may include fields such as but not limited to payload ID user ID payload version payload request shell ID shell version policy ID and or the like. A Logs table may include but not limited to policy ID policy type policy version policy history payload ID payload version payload history and or the like. A Manifests table may include fields such as but not limited to manifest ID manifest timestamp manifest signature shell general and or the like.

In one embodiment the SRAP PLATFORM database may interact with other database systems. For example employing a distributed database system queries and data access by search SRAP PLATFORM component may treat the combination of the SRAP PLATFORM database and integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the SRAP PLATFORM. Also various accounts may require custom database tables depending upon the environment and the types of clients the SRAP PLATFORM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The SRAP PLATFORM may be configured to keep track of various settings inputs and parameters via database controllers.

The SRAP PLATFORM database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the SRAP PLATFORM database communicates with the SRAP PLATFORM component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The SRAP PLATFORM component is a stored program component that is executed by a CPU. In one embodiment the SRAP PLATFORM component incorporates any and or all combinations of the aspects of the SRAP PLATFORM that was discussed in the previous figures. As such the SRAP PLATFORM affects accessing obtaining and the provision of information services transactions and or the like across various communications networks.

The SRAP PLATFORM component enables the secure data transmission data storage and or the like and use of the SRAP PLATFORM.

The SRAP PLATFORM component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the SRAP PLATFORM server employs a cryptographic server to encrypt and decrypt communications. The SRAP PLATFORM component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the SRAP PLATFORM component communicates with the SRAP PLATFORM database operating systems other program components and or the like. The SRAP PLATFORM may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the SR AP PLATFORM node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the SRAP PLATFORM controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or other component components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA local and remote application program interfaces Jini Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using standard development tools such as lex yacc XML and or the like which allow for grammar generation and parsing functionality which in turn may form the basis of communication messages within and between components. For example a grammar may be arranged recognized tokens of an HTTP post command e.g. 

where Value1 is concerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file is processed by the lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. the SOAP parser that may be employed to parse communications data. Further the parsing grammar may be used beyond message parsing may also be used parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

The entirety of this application including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures and otherwise shows by way of illustration various embodiments in which the claimed inventions may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed inventions. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the invention or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the invention and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the invention and inapplicable to others. In addition the disclosure includes other inventions not presently claimed. Applicant reserves all rights in those presently unclaimed inventions including the right to claim such inventions file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims.

Required R These are features that must be part of any solution otherwise the solutions cannot be considered further.

Note these specifications were written with the Environment Payload Type in mind as it is the most elaborate. The prior table already breaks down the subset of these Required specifications that apply to each Payload Type.

Enhanced Control with Strong Bias EC These are further security or management controls that although may not be required at first are deemed highly desirable and a noted enhancement to the solution. A solution will be considered without them but failure to introduce these controls at later near term product revisions could lead us to consider discontinuing use. Enhanced Control EC Security or management controls that add further value to the solutions and expected in medium term roadmap. Usability Enhancement with Strong Bias UE These are enhancements to the use experience that make the product more flexible transparent and valuable. A solution may be considered without implementation of all these but failure to introduce them at later product revisions could lead us to consider discontinuing use. Usability Enhancement UE Enhancements to the use experience that make the product more flexible transparent and valuable. They would be expected in medium term roadmap.

