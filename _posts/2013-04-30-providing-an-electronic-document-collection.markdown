---

title: Providing an electronic document collection
abstract: In one implementation, a computer-implemented method includes receiving a request to access an electronic document collection that integrates a plurality of electronic sub-documents that are each of one of a plurality of defined document types. The method also includes retrieving information that is associated with the document collection, wherein the retrieved information identifies a first sub-document of the plurality of sub-documents using a first non-address identifier, and identifying a first software application that is configured to provide access to the first sub-document. The method additionally includes initiating a first connection with a first server that causes execution of the identified first software application and that, using the first non-address identifier, provides access to the first sub-document. The method further includes integrating access to the first sub-document into the document collection through the initiated first connection with the first server that causes execution of the first software application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286271&OS=09286271&RS=09286271
owner: GOOGLE INC.
number: 09286271
owner_city: Mountain View
owner_country: US
publication_date: 20130430
---
This application is a continuation of U.S. patent application Ser. No. 12 787 887 which was filed on May 26 2010.

This document generally describes techniques methods and systems for providing an electronic document collection.

An electronic document can be formatted according to a defined document type. For example a text document can be formatted to contain strings of American Standard Code for Information Interchange ASCII encoded characters that are separated by line breaks. An electronic document can be accessed by a user with various applications that are configured to interpret documents of the electronic document s type. For instance a text editor application can be used to open edit and save text documents e.g. a text document with a .txt extension and a graphics application can be used to open edit and save graphics documents e.g. a portable network graphics document with a .png extension .

Electronic directories and folders can be configured as part of a file system to contain a group of documents of various defined document types. For example an electronic directory can be configured to contain a text document and a graphics document. Documents can be grouped in an electronic directory or folder according to storage locations for the documents. For example a first document with a storage location of usr doc first.txt and a second document with a storage location of usr doc second.txt can be grouped into the same directory usr doc .

This document describes techniques methods and systems for providing a document collection. Generally a document collection can include sub documents of a defined document type that by being part of the document collection are logically grouped together. A document collection can be provided in a single interface that permits a user to interact with each of the sub documents contained in the document collection.

For example assume that a user has several electronic documents of various document types that relate to an upcoming vacation. For instance the user may have a word processing document that includes an itinerary for the vacation a spreadsheet detailing a budget for the vacation electronic maps showing routes to take during the vacation and web page documents containing reservation confirmation numbers for the vacation. The user can include each of these documents word processing document spreadsheet maps web page documents in a document collection such that they are logically grouped together with regard to the upcoming vacation and can be readily accessed in an interface for the document collection.

Document collections can be provided using non address identifiers for the sub documents. For example an address based identifier for a document such as a file path e.g. example file.txt can break if some aspect of the address is changed e.g. directory renamed or the document is moved to a different location. Non address identifiers such as a unique document identifier maintained in a data repository can be used in document collections to provide robust connections between sub documents and the document collection. A non address identifier for a sub document can be used as part of a uniform resource locator URL to request access to the sub document e.g. www.example domain.com sub document non address identifier . In some implementations a sub document that is part of a document collection may lose some of its independence and as a result may not be individually accessible. Instead a request for a sub document may cause the document collection of which the sub document is a part to be returned.

Document collections can be provided in a variety of environments such as in the cloud e.g. client server architecture that distributes processing associated with a document across the client and server . For example processing associated with applications that are configured to interpret sub documents can be performed in part by a client and in part by a server system.

In one implementation a computer implemented method includes receiving at a computer system a request to access an electronic document collection that integrates a plurality of electronic sub documents that are each of one of a plurality of defined document types. The method further includes retrieving information that is associated with the document collection wherein the retrieved information identifies a first sub document of the plurality of sub documents using a first non address identifier that does not provide a storage location for the first sub document. The method also includes identifying a first software application that is configured to provide access to the first sub document and initiating a first connection with a first server that causes execution of the identified first software application and that using the first non address identifier provides access to the first sub document. The method additionally includes integrating access to the first sub document into the document collection through the initiated first connection with the first server that causes execution of the first software application.

In another implementation a system for providing access to an electronic document collection includes an integration server system that is configured to integrate access to a plurality of electronic sub documents that are each of one of a plurality of defined document types into an electronic document collection. The system also includes an interface to the integration server system that is configured to receive a request to access the document collection. The system further includes a document collection data repository that is configured to store information associated with the document collection that identifies each of the plurality of sub documents of the document collection using a non address identifier that does not provide a storage location for a sub document. The system additionally includes a sub document access integrator that is configured to provide integrated access to the plurality of sub documents by initiating connections with one or more of a plurality of application server systems that are each configured to provide access to one or more of the plurality of sub documents using one or more software applications wherein the sub document access integrator is configured to initiate the connections with the one or more of the plurality of application server systems using the non address identifiers.

In another implementation a system for providing access to an electronic document collection includes an integration server system that is configured to integrate access to a plurality of electronic sub documents that are each of one of a plurality of defined document types into an electronic document collection. The system also includes an interface to the integration server system that is configured to receive a request to access the document collection and a document collection data repository that is configured to store information associated with the document collection that identifies each of the plurality of sub documents of the document collection using a non address identifier that does not provide a storage location for a sub document. The system further includes means for providing integrated access to the plurality of sub documents wherein the means for providing integrated access is configured to initiate connections with one or more of a plurality of application server systems that are each configured to provide access to one or more of the plurality of sub documents using one or more software applications wherein the means for providing integrated access is configured to initiate the connections with the one or more of the plurality of application server systems using the non address identifiers.

The details of one or more embodiments are set forth in the accompanying drawings and the description below. Various advantages can be realized with certain implementations such as providing users with the ability to logically group sub documents of various document types together in a document collection. Document collections can make sharing e.g. emailing providing network based access to etc. related documents easier for users by sharing a single document collection each of the sub documents contained in the document collection can also be shared. By providing document collections in the cloud a user can share a document collection with another user without concern for whether the other user has appropriate applications installed on his her computing device and the documents can be accessed from a variety of internet connected devices. Using non address identifiers in a document collection sub documents can be robustly included in a document collection.

Document collections can provide a structure that inherently encourages users to logically organize sub documents as part of document collection. Such organization can be particularly useful with cloud based computing which may provide users less autonomy to organize documents on a server system. Additionally users can readily provide organization associated with a document collection to other users by simply sharing a document collection which can save other users the time it would otherwise take to piece sub documents together.

Document collections can be accessed over a network e.g. the Internet a local area network etc. such that an owner of a document collection can essentially have a site e.g. a website that includes the content of the document collection. Using document collections site creation and management can be simplified for a user. Conventionally site creation involves a user establishing a site e.g. registering a domain name and reserving space on an associated hosting server and then adding content to the site e.g. uploading web accessible files to the hosting server . Instead a document collection can be transitioned into a site such that the site is populated with content from the document collection without the user having to go through the trouble of creating a site first.

Operations between sub documents e.g. copy and paste that are part of a document collection provided in the cloud can be simplified for users. For example when copying and pasting between documents that are provided in the cloud but not as part of a document collection a user can experience difficulty transferring data and various data attributes e.g. data typing data formatting from a first document to a second document as part of the copy and past operations. However with a document collection various entities on the client and or server side e.g. application integrator document collection manager sub document modules etc. can coordinate copying and pasting between sub documents such that data and it attributes are properly transferred between the sub documents.

Document collections can provide additional features that are shared across sub documents. For example documents provided in the cloud can have associated chat e.g. instant messaging logs. Instead of having separate chat logs associated with each sub document a single chat log can be maintained for the entire document collection such that if a user is chatting while accessing a first sub document and then switches to accessing a second sub document then the same chat can continue with the second sub document. As another example an undo redo stack and information regarding revisions can be shared for sub documents of a document collection instead of using individual undo redo stacks and individual revision information for each sub document. This can permit users to more easily track changes over time to the document collection as a whole. In a further example permissions and access control lists can be associated with a document collection and shared across sub documents that are part of the document collection. This can permit simplified management of permissions associated with a document collection and its sub documents.

Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

This document generally describes techniques methods systems and computer program products for providing an electronic document collection. An electronic document collection can include sub documents of various document types e.g. spreadsheet word processing web pages etc. that are provided together in a common interface. A sub document can be a document of a defined document type where the document type is identified by the type of the document it represents and not by the content of a particular document of that document type.

A document collection can allow a user to logically group sub documents together. For example assume a user has prepared a word processing document that provides an agenda for a meeting a presentation document to be displayed during the meeting a map document depicting the location of the meeting and a computer aided design CAD document for a product that is the subject of the meeting. The user can logically group these related documents which are of different document types together as sub documents in a document collection. Instead of having to share each of the individual sub documents with other users attending the meeting the user can share just the document collection.

A document collection can include sub documents of different document types. For instance an example document collection can include a word processing sub document e.g. a WORD document a presentation sub document e.g. a POWERPOINT presentation a spreadsheet sub document e.g. an EXCEL spreadsheet a graphics sub document e.g. a PHOTOSHOP document and a web page sub document e.g. a hypertext markup language HTML document . This example document collection can be displayed in a graphical user interface GUI by an application that interprets the document collection such that a user can interact with each of the different sub documents word processing sub document spreadsheet sub document etc. using the GUI. For instance the user can use the GUI to view edit and save each of the sub documents in the document collection.

A document collection can be configured to include sub documents in the document collection using non address identifiers for the sub documents. A non address identifier identifies the sub document for inclusion in a document collection without relying on a storage location for the sub document. A non address identifier can provide a more robust connection between sub documents and a document collection than can a link that is based upon a storage location. A variety of actions can cause a link based upon a storage location to break such as a linked to document being renamed e.g. change from first.txt to second.txt a linked to document being moved to a different folder e.g. move from My Documents folder to Desktop folder a directory in the storage path of a linked to document being renamed e.g. rename directory test in path Shared Files test first.txt to be test1 etc.

Document collections in certain implementations can further permit dynamic integration of data across sub documents within a document collection. For example assume that a document collection includes a map sub document and a spreadsheet sub document that includes a list of locations. By including the map sub document and the spreadsheet document in the document collection a link can be established between the list of locations in the spreadsheet document and the map document such that the map document displays icons for each of the locations in the list of locations. The list of locations in the spreadsheet sub document can be dynamically accessed to display icons corresponding to the list of locations in the map sub document. Such dynamic accessing can permit changes to the list of locations in the spreadsheet sub document to be automatically reflected to the map sub document without a user having to perform updates on the map sub document.

Non address identifiers can be used to provide robust dynamic links between sub documents in a document collection. Referring to the example from the previous paragraph a link to the list of locations in the spreadsheet sub document can be represented at least in part in the map sub document using a non address identifier for the spreadsheet sub document. By using the non address identifier for the spreadsheet sub document the dynamic link to the list of locations in the spreadsheet sub document can be less susceptible to breaking like a link that is based upon a storage location as described above.

A document collection can be provided in an interface that integrates interfaces for a variety of applications that are configured to execute one or more document data types. For example a document collection that includes a word processing sub document and a spreadsheet sub document can be displayed in a GUI that integrates a GUI for a word processing application and a GUI for a spreadsheet application. An interface for the document collection can include various controls for integrating the sub documents such as a control to permit a user to toggle between interfaces for the sub documents a control to dynamically link data between sub documents etc. For instance a GUI for a document collection can include selectable tabs that allow a user to select which sub documents are displayed and drop down menus for establishing a dynamic data link between sub documents.

Additionally document collections can be provided in the cloud meaning that a distributed server side architecture can be used to provide a client computing device with access to a document collection. For example assume a server system receives a request from a client computing device e.g. a desktop computer a laptop a mobile phone an electronic book e book reader etc. for access to a document collection. The server system can distribute performance of operations related the request such interpreting sub documents of the requested document collection across multiple servers and provide the client computing device with information to display the requested document collection.

In another example assume a first set of servers is responsible for executing a word processing application a second set of servers is responsible for executing a spreadsheet application and a third set of servers is responsible for performing operations related to a document collection and coordinating operations among the first and second set of servers. When a request is received from a client device for access to a document collection containing a word processing type sub document and a spreadsheet type sub document processing of the request can be distributed across the first second and third set of servers. The first second and third set of servers can coordinate their efforts to provide the client device with information to display the requested portion of the document collection. In some implementations a fourth set of servers can be used to provide access to a document collection by coordinating and integrating operations across the first second and third set of servers.

By shifting some processing associated with a document collection to a server system a client computing device that has limited processing capacity e.g. netbooks mobile phones e book readers televisions etc. can access a document collection with less strain on the client s processing and or storage resources. For instance by accessing a document collection in the cloud a client device can display a document collection that contains sub documents of various document types without having corresponding applications installed or running on the client device. Such a client device can use a thin client an application with limited functionality that may rely upon interactions with a server side application to provide additional functionality to interact with a server side system to provide access to a document collection on the client device.

A variety of applications can be integrated to provide access to document collection using the application integrator . For instance in the depicted example the application is a word processor application e.g. MICROSOFT WORD ADOBE ACROBAT the application is a spreadsheet application e.g. APPLE NUMBERS MICROSOFT EXCEL the application is an email application e.g. MICROSOFT OUTLOOK APPLE MAIL and the application is a presentation application e.g. APPLE KEYNOTE MICROSOFT POWERPOINT .

The application integrator provides an interface on the computer system for a document collection that is depicted as including sub documents A N. Sub documents can be of a defined document type such as a text document a graphics document a spreadsheet document etc. In the depicted example the sub document A is a word processor type sub document the sub document B is a spreadsheet type sub document and the sub document N is a presentation type sub document.

In the depicted example interface the application integrator provides selectable tabs on the left side and a sub document display area on the right side. The selectable tabs correspond to the sub documents A N such that user selection e.g. mouse click touchscreen input etc. of one of the selectable tabs causes a corresponding sub document to be displayed in the sub document display area . The interface depicts the tab having been selected and sub document A being displayed in the sub document display area .

Given that the sub document A is a word processor type sub document the application integrator can interact with the word processor application to display sub document A in the sub document display area . For example assume the application integrator receives information through the interface indicating that a user selected the tab e.g. receive an event indicating user selection of the tab . In response the application integrator can access information e.g. configuration files and or data for the document collection to identify that the user selection pertains to sub document A that sub document A is of a word processor document type and that the word processor application is configured to interpret word processor type documents. The application integrator can send a request to the word processor application to provide information for displaying the sub document A. In response the word processor application can interpret the sub document A e.g. read and render sub document A for display as a word processor type document and provide the requested information e.g. display elements text images etc. formatting information events to monitor etc. to the application integrator . The application integrator can use the information received from the word processor application to populate the sub document display area of the interface

A user can toggle between the sub documents A N in the sub document display area for the document collection using the selectable tabs . Interfaces and provide example depictions of interface in response to user selection of tabs and respectively. The interface depicts the sub document display area containing sub document B in response to selection of tab . The interface depicts the sub document display area displaying sub document N in response to selection of tab

Similar to the interactions with the word processor application described above the application integrator can provide the sub documents B and N in the sub document display area through interactions with corresponding applications. Given that the sub document B is a spreadsheet type document the application integrator can interact with the spreadsheet application to provide the sub document B in the sub document display area of the interface . Similarly given that the sub document N is a presentation type document the application integrator can interact with the presentation application to provide the sub document N in the sub document display area of the interface

The sub documents can use non address identifiers to link data contained in one sub document with another sub document. For example a link A is depicted between data regarding prices for wares X Z in sub document B and a portion of sub document A. The link A can be contained in sub document A and can include a non address identifier that identifies the sub document B and information identifying the specific data regarding prices for wares X Z in sub document B. For example the link A can be a tag contained in the sub document A such as . In this example the name field corresponds to the name of the sub document B the type field corresponds to the document type for sub document B the identifier field corresponds to the non address identifier for sub document B and the data field corresponds to the range of cells in sub document B that include the data regarding prices for wares X Z.

When the word processor application interprets the sub document A and encounters the link A the word processor application can provide a request to the application integrator for interpretation of the linked to data cells in sub document B regarding prices for wares X Z by an application that is configured to interpret a spreadsheet type document as specified in the link A . Upon receiving the request the application integrator can reference configuration information for the applications and identify that the spreadsheet application is configured to interpret sub document B. The application integrator can provide a request for interpretation of the link A to the spreadsheet application . The spreadsheet application can interpret the sub document B and provide information regarding the requested data e.g. display elements cell data cell formulas formatting for the cells events to be monitored etc. to the application integrator . The application integrator can provide the information from the spreadsheet application regarding the link A to the word processor application for integration into the sub document A. In some implementations the application integrator can insert the information from the spreadsheet application regarding the link A into the sub document A when providing information for display of sub document A in the sub document display area .

By referencing the data directly from the sub document B using the link A the cells from sub document B regarding prices for wares X Z can be automatically updated to reflect the current values for the corresponding cells in the sub document B. For example assume a user changes the price for ware X from 10 to 15 in sub document B using the interface . When the user selects the tab to display sub document A in the sub document display area as depicted in interface the application integrator can request interpretation of sub document A which in turn can cause interpretation of link A and sub document B as described above . Interpretation of the link A and the sub document B can retrieve the updated price for ware X 15 for display in the sub document A.

Similarly changes made to the data from sub document B regarding prices for wares X Z as displayed in sub document A in interface can be automatically reflected in the sub document B in interface . For instance if the price for ware Y is changed from 12 to 8 in interface the sub document B in interface can automatically reflect the updated price 8 .

Sub documents can include links to data from multiple different sub documents within the document collection of various document types. For example the sub document A also includes link B to slides for wares X Z from sub document N. Similar to providing the linked to cells for link A the linked to slides for link B can be provided through the application integrator and the presentation application an application configured to interpret sub document N . Changes to the slides in the interface for sub document N can be reflected in the corresponding slides linked to by the link B .

In addition to integrating the applications to provide access to the document collection the application integrator can be configured to integrate common operations performed by the applications . For example the application integrator can maintain a common undo redo stack a data structure configured to store an ordered list of operations to follow for undo and or redo features for the document collection such that undo and or redo operations for each of the sub documents are included in the common stack. Using a common stack for undo redo operations a user can accurately undo or redo his her recent changes to the document collection as a whole instead of to individual sub documents. In another example the application integrator can maintain common information regarding revisions e.g. track changes feature for the document collection such that revisions to each of the sub documents are included in the common information. In a further example the application integrator can maintain a common chat log e.g. instant messaging log for the document collection such that a chat performed while accessing a first sub document will continue without interruption if a user switches to accessing a second sub document.

The computer system that provides the document collection can be any of a variety of computer systems such as a stand alone computing device e.g. a desktop computer a laptop a mobile computing device etc. a client server computing system e.g. a client computing device connected to a server over a network etc. In a client server computing system execution of the applications and the application integrator can be provided in the cloud distributed across a client computing device and or one or more servers. An example client server computing system is described in further detail below with regard to .

Although the interfaces are presented as depicting one sub document at a time in the sub document display area a document collection can be provided to display more than one sub document at a time. For example the sub document A and the sub document B can be presented together in the sub document display area .

The server side computer system includes an application integration server system and application server systems . The application integration server system is configured to integrate sub documents provided by the application server system into a document collection. The application integration server system can perform operations similar to those described above with regard to the application integrator . The application integration server system can include one or more computing devices configured to operate as servers.

The application server systems is depicted as including an application A server system an application B server system and an application N server system . The application server systems are configured to execute applications for interpreting sub documents. For example the application A server system is configured to execute an application A e.g. a word processor application a spreadsheet application etc. . The application server systems are further configured to provide information regarding interpretation of sub documents to the application integration server system for integration into a document collection. The application server systems can perform operations similar to those described above with regard to the applications 

Each of the application server systems can include one or more computing devices configured to operate as servers. For example the application A server system can include a first group of servers dedicated to serving requests related to application A and the application B server system can include a second different group of servers dedicated to serving requests related to application B. In some implementations one or more of the application server systems and the application integration server system are provided over common computing devices such as a distributed server system.

The application integration server system is depicted as storing information for a document collection. The information for the document collection includes information identifying sub documents S S as being part of the document collection and an access control list for the document collection. The information is depicted as including a name for the sub document a document type for the sub document and an identifier for the sub document e.g. a non address identifier . For example the information corresponds to sub document S and indicates that sub document S is a type A document and has an identifier of id. The identifiers that are part of the information e.g. id can be non address identifiers.

The access control list for the document collection can identify entities e.g. users user groups organizations etc. that are permitted to access the document collection using the server side computer system . Permissions designated for the document collection using the access control list can be configured to extend to each of the sub documents S S that are part of the document collection. For example a user that is granted permission to view the document collection through the access control list can receive access each of the sub documents S S that are part of the document collection. Permissions can also be designated for sub sets of a document collection such as permission for sub documents e.g. user A has permission to access sub documents S and S portions of sub documents e.g. user B has permission to access cells A B of sub document S etc.

The information for the document collection can be associated with a unique identifier e.g. non address identifier for the document collection such that it can be readily identified and retrieved when requests and or responses related to the document collection are received by the application integration server system .

The application A server system is depicted as storing sub document S and sub document S and the application B server system is depicted as storing sub document S . As provided in the document collection information the sub documents S and S are type A documents which can be interpreted by the application A on the application A server system . Similarly the sub document S is a type B document which can be interpreted by the application B on the application B server system

The application integration server system is depicted as communicating with the application server systems with server requests . The server requests e.g. network transmission packets are depicted as including the document collection id and the sub document id to which the request pertains. For example if the application integration server system receives a request from the client side computer system for access to the sub document S the application integration server system can transmit a request to the application A server system that includes the document collection id and the id for the sub document S. The application A server system can include the same information document id and sub document id in a response provided to the application integration server system .

The client side computer system includes a document collection manager and sub document modules . The document collection manager can act as a client side counterpart to the application integration server system . For example the document collection manager can include instructions and data for displaying an interface for the document collection on the client side computer system that integrates the sub documents of the document collection e.g. instructions for displaying the interface with the selectable tabs .

The sub document modules correspond to the sub documents S S respectively which are part of the example document collection. The sub document modules contain instructions and data for providing an interface for the corresponding the sub document as part of the document collection on the client side computer system . For instance the sub document S module can include instructions to display sub document S based on data received from the server side computer system to monitor events e.g. mouse click event keystroke event selection event etc. related to the sub document S and to transmit received events to the server side computer system for subsequent processing by the application A the application configured to interpret the sub document S . The sub document S module can also include data relating to the sub document S such as content data for the sub document S e.g. ware price data for example sub document B depicted in formatting information for the document e.g. font information text size information etc. etc.

For example assume that the client side computer system is using a web browser e.g. INTERNET EXPLORER MOZILLA FIREFOX to access and display the document collection from the server side computer system . The document collection manager and the sub document modules can be JavaScript objects that are provided as JavaScript code by the server side computer system . When executed on the client side computer system the sub document modules can provide interfaces e.g. iframe elements div elements etc. that display corresponding sub documents S S. The document collection manager can provide an interface that integrates the interfaces of the sub documents in the web browser and that permits a user to perform document collection related tasks e.g. toggle between sub documents link data between sub documents etc. . For instance the interface of the provided by the document collection manager can include selectable tabs e.g. selectable tabs selection of which can cause interfaces corresponding to the sub documents to be displayed or hidden.

The document collection manager includes a document collection identifier document collection data a network multiplexer and common libraries files data etc. . The document collection identifier can be a non address identifier that uniquely identifies the document collection. The document collection identifier can be included in requests that are sent to and or received from the server side computer system regarding the document collection such as request sent to the server side computer system and response received from the server side computer system . The document collection identifier can be the same identifier used to identify the document collection by the server side computer system e.g. used in server requests and responses . As described in more detail below the request and or the response can include a sub document identifier when the subject of the transmission regards a sub document e.g. communication with regard an event generated for one of the sub documents S S .

The document collection data can include data regarding the document collection such as information identifying the sub documents S S as being part of the document collection formatting and configuration data for the document collection data regarding links between the sub documents S S etc. The document collection data can be used to display the document collection on the client side computer system .

The network multiplexer can be configured to intercept network transmissions from the sub document modules that are intended for the server side computer system . Intercepted transmissions can include a sub document identifier e.g. a non address identifier for a sub document . The intercepted transmissions can be modified by the network multiplexer to also include the document collection identifier and can then be transmitted to the server side server system .

The sub document modules can be configured to operate independent of a specific document collection. From the perspective of a sub document module the sub document module may not be aware that it is operating as part of a specific document collection and may not include the document collection identifier . The network multiplexer can ensure that transmissions sent to the server side computer system include the correct identifier for the document collection e.g. the document collection identifier . Such independent sub document modules can permit for sub documents to be easily added and removed from a document collection. For example if a new sub document is added to the document collection a corresponding sub document module can simply be provided to the client side computer system and integrated into the document collection by the document collection manager .

The common libraries files and data for the document collection manager include information that may be common to the document collection manager and or the sub document modules . For example the common libraries files and data can include cascading style sheets CSS JavaScript code for common features e.g. menus objects images etc. The sub document modules can be configured such that references to common libraries files and data resolve to the common libraries files and data that are part of the document collection manager .

The sub document modules include sub document identifiers sub document data and libraries files and data for an application that is configured to interpret the corresponding sub document based upon the sub document s document type . The sub document identifiers can be non address identifiers for each of the sub documents S S corresponding to the sub document modules . The sub document identifiers can be included in requests that are transmitted to the server side computer system by the sub document modules e.g. requests related to events generated for a corresponding sub document displayed on the client computer system . For instance the sub document identifiers can be included in server requests that are provided to the document collection manager by the sub document modules . The sub document identifiers can also be included in responses received from the server side computer system and provided to the sub document modules by the document collection manager .

The sub document data can include a variety of data related to the corresponding sub document S S such as content data for the sub documents S S e.g. ware price data for example sub document B depicted in formatting information for the sub documents S S e.g. font information text size information etc. etc. The libraries files and data for each of the sub document modules can be for an application that is configured to interpret the corresponding sub document S S. For example the libraries files and data of sub document module relate to application A which in this example is the configured to interpret the sub document S which is a document of type A .

The libraries files and data can include a variety of information for providing the corresponding sub document as interpreted by the corresponding application e.g. application A interpreting sub document S as part of the document collection on the client side computer system . For example the libraries files and data can include instructions for interpreting the sub document data for display on the client side computer system and for handling events relating the sub document according to application A. For instance the application A may handle a click and drag event differently than the application B. The libraries files and data can be configured to handle the click and drag event according to application A e.g. select an area of text in a word processor document etc. and the libraries files and data can be configured to handle click and drag events according to application B e.g. select a range of cells in a spreadsheet .

The libraries files and data can be configured to perform some processing associated with some features of applications A and B locally on the client side computer system and to transmit server requests using the document collection manager to the server side computer system for processing related to other features of applications A and B. The split among the features processed locally on the client side computer system and the features processed on the server side computer system can vary depending on a variety of factors e.g. client side computer system processing resources network connection speed server side computer system processing resources etc. . For example as the client side computer system s processing resources e.g. available processor bandwidth available random access memory RAM etc. decrease the sub document modules through the libraries files and data can be configured to use the server side computer system to perform processing associated with a greater number of features for applications A and B.

The document collection manager and the sub document modules can be implemented on the client side computer system in a variety of ways. For instance the document collection manager and the sub document modules can be provided as part of a standalone thin client application e.g. CITRIX client application that is configured for execution on the client side computer system . In another example the document collection manager and the sub document modules can be implemented by a pre existing client application e.g. a web browser application that is adapted to instantiate and execute the document collection manager and the sub document modules . For instance the server side computer system can provide a web browser running on the client side computer system with code e.g. JavaScript code SHOCKWAVE FLASH code etc. that can be executed by client side computer system to instantiate the document collection manager and the sub document modules 

The server side computer system can provide the client side computer system with sub document modules as needed. For example if the sub document is initially displayed on the client side computer system for the document collection of the sub document modules the client side computer system may include only an instance of the corresponding sub document module . As the other sub documents S are accessed as part of the document collection the other sub document modules can be provided to the client side computer system by the server side computer system . Such modularity among the sub documents can allow for document collections to be initially loaded and executed more quickly on the client side computer system e.g. the client side computer system can be ready to process user input for the document collection once the sub document module has been received and executed instead of having to wait for the other sub document modules to have also been received and executed .

The application integration server system can communicate with application server systems similar to application server systems described above with regard to through various networks e.g. fiber optic network wireless network LAN wide area network WAN combinations thereof etc. . The application server systems can each execute one or more applications that are configured to interpret sub documents in whole or in part that are of a defined document type. For example the application server system can be configured to execute a spreadsheet application and a word processor application that are configured to interpret spreadsheet type sub documents and word processor type sub documents respectively.

A variety of clients e.g. desktop computer laptop computer mobile phone smart phone netbook etc. can receive access to document collections through the integration server system through network . The clients can be similar to the client side computer system as described above with regard to and can be provided with access to document collections in a manner similar to the client side computer system as described above with regard to . The network can be similar to and or part of the networks used to connect the integration server system with the application server systems 

In the example system the client can request access to a document collection from the integration server system through the network . The integration server system can receive the request at an input output I O interface e.g. Ethernet card wireless modem etc. that is part of the integration server system . The I O interface can provide the request to a client request component that is configured to route the request to an appropriate component of the integration server system and or the application server systems . For example for an initial request to access a document collection the integration server system can provide the request to a document collection access controller that is configured to authenticate a client and or a user of the client to access the requested document collection.

The document collection access controller can be configured to restrict access to a document collection and or its sub documents based upon associated permissions stored in a permission data repository e.g. a database a file system etc. that is accessible by the integration server system . The permission data repository can provide permissions associated with document collections and a variety of sub units of document collections e.g. sub documents data within sub documents etc. . The permission data repository can store information related to entities that are permitted to access a document collection such as users clients internet domains associated with the clients etc. Using the permission data repository the document collection access controller can authenticate a request to access a document collection e.g. verify a username and password for a user that is permitted to access the document collection .

Once authenticated the integration server system can provide the received request to a document collection retrieval module that is configured to retrieve information associated with a document collection such as the document collection information described above with regard to . The document collection retrieval module can retrieve document collection information from a document collection data repository e.g. a database a file system etc. that is accessible by the integration server system . As illustrated by example document collection information the document collection information can include a variety of information regarding a document collection such as information regarding sub documents that are part of the document collection e.g. non address identifiers defined document type name of sub document etc. information regarding the document collection e.g. default sub document to display information regarding links between sub documents configuration settings for the document collection etc. etc.

Using the retrieved document collection information an application identification component that is part of the integration server system can identify applications that are configured to interpret sub documents that are part of the requested document collection. For example for a sub document that is of a word processor document type the application identification component can identify an application that is configured to interpret a word processor document type e.g. a word processor application . Using document types for the sub documents provided in the retrieved document collection information and associations between applications and defined document types to identify applications that are configured to interpret the sub documents the application identification component can identify applications that are configured to interpret the sub documents of the document collection.

In implementations where the document collection information does not contain information regarding defined document types for the sub documents the application identification component can use a non address resolution module to retrieve additional information for sub documents e.g. defined document type based upon their non address identifiers. The non address resolution module can access a non address identifier repository e.g. a database a file system etc. that is configured to store information regarding sub documents that is retrievable using a sub documents non address identifier.

A sub document access integrator of the integration server system is configured to use the retrieved document collection information and identified applications for interpreting sub documents of a document collection to interact with the application server systems to provide integrated access to document collections to the clients . The sub document access integrator can be configured to operate similar to the application integrator and or the application integration server system described above with regard to respectively. For instance the sub document access integrator can be configured to provide requests for application related processing from the clients to one or more of the application server systems that are configured to perform the requested application related processing. For instance if the client provides a request related to sorting a list of words e.g. sort feature provided in word processor applications in a first sub document the sub document access integrator can provide the request to one or more of the application server systems that can run an application configured to perform the requested word sort e.g. an application server system configured to execute a word processor application .

The sub document access integrator can also be configured to coordinate the integration of data from a first sub document into a second sub document through links e.g. non address identifier links . For example if a first sub document that is a word processor type document contains a link to cells from a second sub document that is a spreadsheet type document the sub document access integrator can provide a request to one or more of the application server system to interpret at least the linked to portion of the second sub document cells . Further regarding this example the sub document access integrator can receive information regarding the linked to cells as part of the first sub document and can integrate the linked to cells into the first sub document e.g. provide instructions to one or more of the application server systems for including the linked to cells in the first sub documents etc. .

The integration server system can also include a client side information configuration component that is configured to provide information e.g. code to the clients that can be used to provide document collections in conjunction with the integration server system on the clients . For example the client side information configuration component can provide the clients with information that when executed by the clients causes the clients to instantiate a document collection manager e.g. document collection manager and sub document modules e.g. sub document modules . The client side information configuration component can provide such information in conjunction with the application server systems which may be configured to provide information related to sub documents e.g. sub document modules and or applications e.g. application libraries files data .

The client side information configuration component can retrieve and store client side information in a repository of client side information e.g. a database a file system etc. . The time to serve requests from the clients can be decreased by using pre and or partially configured client side information.

The application server systems can include I O interfaces that are communicatively connected to the integration server system through the networks . Through the I O interfaces the application server systems can receive requests from the integration server system that are handled by integration server system interaction modules . The integration server system interaction modules can be configured to interact with the integration server system with regard to requests from the clients . For example the integration server system interaction module of the application server system can transmit requests from the integration server system to an appropriate application e.g. a word processor application a spreadsheet application etc. for processing.

The application server systems can each be configured to execute one or more applications e.g. presentation application graphics application etc. . In some implementations the application server systems can be configured to act as redundant systems whereby each of the application server systems is capable of executing each of the applications . In such implementations requests from the integration server system can be provided to an application server system with available processing bandwidth.

In some implementations each of the application server systems can be configured to execute a limited set of applications. For example the application server system can be configured to execute a word processor application and a spreadsheet application the application server system can be configured to execute a presentation application and the application server system can be configured to execute a spreadsheet application and a graphics application.

The application server systems can be configured to access sub document data repositories e.g. database file system etc. . The sub document data repositories can be configured to store data associated with sub documents such as sub document content e.g. data in the cells of a spreadsheet sub document formatting information e.g. font text size links to data contained in other sub documents e.g. links based on non address identifiers a current state of the sub document e.g. current cursor position recent actions etc. etc.

The application server systems can store the current state of sub documents that are part of a document collection as edited by one or more of the clients . For example when a user of client types in a cell of a spreadsheet sub document the application server system can receive an indication of the typing from the client through the integration server system which can be recorded in the sub document data repository . Were the user to subsequently quit editing the spreadsheet sub document with the client and at a later time resume editing of the spreadsheet sub document with the client the current state of the spreadsheet sub document with the recent typing can be provided to the client so that the user can proceed from where they left off.

The clients each including an I O interface that can be used to communicate with the integration server system through the network . As depicted in the example system various client side implementations can be used. For example client is depicted as including a document collection manager similar to the document collection manager described above with regard to and multiple sub document modules similar to the sub document modules described above with regard to .

In another example the client is depicted as including a document collection application that is used to provide access to a document collection. The document collection application can be any variety of applications configured to interact with the integration server system such as a thin client installed on the client e.g. a CITRIX client .

In a further example the client is depicted as including a browser based application that can be used and configured to interact with the integration server system to provide access to a document collection on the client . For example the browser based application can receive code from the integration server system configured by the client side information configuration component that the browser based application can cause to be executed on the client to display a document collection in the interface of the browser based application . Various combinations of the client implementations are possible e.g. the browser based application can be configured to generate the document collection manager and the sub document modules .

As depicted in the example technique begins at step by receiving a request to access an electronic document collection. For example the integration server system can receive a request from the client to provide the client with access to a document collection.

In some implementations of the technique authorization information e.g. username password session id etc. associated with the request is received step and a determination that a user associated with the request is authorized to access the requested document collection is made step . For example the document collection access controller of the integration server system can cross reference the received authorization information with information stored in the permission data repository to verify that the user is authorized to access the requested document collection. Subsequent requests associated with the user to access the document collection and each of a plurality of sub documents of the document collection can be permitted based upon the authorization step . For example a user authorized to access a document collection can be authorized to access each of the sub documents of the document collection.

Information associated with the document collection can be retrieved step . For example the document collection information can be retrieved by the application integration server system . A first software application that is configured to provide access to a first sub document of the requested document collection can be identified step . For example based upon the retrieved document collection information a spreadsheet application e.g. MICROSOFT EXCEL can be identified to interpret a spreadsheet type sub document of the document collection.

A first connection with a first server that causes execution of the first software application can be initiated step . For example the integration server system can transmit a request to the application server system to interpret a sub document of the document collection using the application . Access to the first sub document of the document collection can be integrated into the document collection through the first connection step . For instance the integration server system can transmit information between the client and the application server system as being associated with the document collection such that the first sub document is displayed on the client as being part of the document collection.

In some implementations information that causes a graphical representation of the document collection to be displayed on the client computing device can be provided to the client computing device step . For example the application integrator server system can provide the client side computer system with information e.g. a data stream an HTML document JavaScript code CSS code SHOCKWAVE FLASH files etc. to display a document collection in an interface on the client side computer system e.g. the interface .

Referring to in some implementation of the technique document collection code can be provided to the client computing device step . For example the client side computer system can be provided with code from the server side computer system that when executed by the client side computer system causes the document collection manager to be instantiated. First code provided to the client computing device can be configured to use a first non address identifier when accessing and submitting requests related to the first sub document step . For example the client side computer system can be provided with code from the server side computer system that when executed by the client side computer system causes the sub document modules to be instantiated with the corresponding sub document identifiers . The first code can be provided to the client computing device at a first time step . For example the code associated with sub document A can be provided to a client computing device by the application integrator in response receiving a request for access to the document collection.

A request to access a second sub document can be received step a second non address identifier for the second sub document can be identified step a second software application configured to provide access to the second sub document is identified step and a second connection with a second server that causes execution of the second sub document can be initiated step . For example user selection of the tab corresponding to sub document B can cause a client device e.g. client side computer system to request access to the sub document B using a non address identifier for the sub document B e.g. non address identifier . The application integration server system can identify the non address identifier from the request and use it to identify and request access from an appropriate application executed by an application server system 

In some implementations second code to use the second non address identifier to access the second sub document can be configured step and at a second time subsequent to the first time the second code can be provided to the client computing device step . For example the code associated with sub document B can be provided to client computing device by the application integrator in response to selection of the tab corresponding to the sub document B in interface which may be after the sub document A of the document collection has already been viewed and edited .

Access to the first sub document and the second sub document can be integrated into the document collection step . For example the integration server system can coordinate interactions with the application server system and provide document collection related information e.g. data code etc. to the clients such that access to the sub documents can be provided in an interface for the document collection.

In some implementations a request to resolve a dynamic link between the first and second sub documents can be received step a determination can be made that the first and second sub documents are provided in a common scope step and access to the linked to data in the first sub document for the second software application can be facilitated step . For example when interpreting the sub document A the word processor application may encounter link A to cells from the sub document B. The word processor application can provide a request to the application integrator for assistance in accessing the linked to cells. The application integrator can determine that the sub document A and B are provided within a common scope of the document collection and in response to the determination submit a request to the spreadsheet application to interpret the linked to cells. In response the spreadsheet application can interpret the linked to cells and provide interpreted data for the linked to cells to the application integrator which can provide the data to the word processor application for integration into the sub document A.

In the example interface depicts expansion of the File menu and expansion of the Add a page menu entry. Options for adding a sub document to the Offsite Planning sub document include word processing type sub documents spreadsheet type sub documents and presentation type sub document. In this example the spreadsheet option is indicated as being selected from the options . In client server implementations such as the systems and described above selection of the spreadsheet option can cause a request for addition of a spreadsheet type sub document to the document collection to be provided from the client device e.g. clients to the server system e.g. integration server system .

Referring to the interface provides the word processing sub document in response to selection of the associated entry for the word processing sub document from the sub document menu . As shown in the menu and features are again displayed in conjunction with the word processing sub document . provides an example of toggling between sub documents in the interface for the Offsite Planning document collection.

In the interface displays the spreadsheet sub document in response to selection of the corresponding entry in the sub document menu . As depicted the selectable menu and feature for the spreadsheet sub document are provided in the interface . Further depicted in a user has entered content into cells of the spreadsheet sub document regarding names and locations. In client server implementations the client device can be configured to provide the content to the server system and in response the server system can be configured to update data corresponding to the spreadsheet sub document to include the content .

Referring to the interface depicts the document collection after selection of the Hotels spreadsheet from the window . The Hotels spreadsheet is provided in the interface with the selectable menus and features for spreadsheet type sub documents and the sub document menu now containing the Hotels sub document . The Hotels spreadsheet sub document is depicted as including content providing information regarding various hotel rates. Similar to the addition of the spreadsheet sub document in client server implementations information e.g. sub document modules for the Hotels spreadsheet sub document can be provided to a client computing device by a server system.

Similar to the depicts expansion of the File menu and selection of the More . . . entry from the sub document options after addition of the Hotels spreadsheet sub document to the document collection. The depicts the Add page window in response to selection of the More . . . entry from the options presented in . Like the window includes the document types that can be selected for a new sub document and preexisting sub documents that can be added to the document collection.

Referring to the interface depicts the document collection after selection of the webdrive presentation from the window . The webdrive presentation sub document is provided in the interface with a first slide and selectable thumbnail slides . The interface is also provided with menu for presentation type sub documents and the sub document menu now including an entry for the webdrive sub document . In client server implementations selection of one of the thumbnails can cause a client device to request information for providing the selected slide in its full size e.g. the first slide from a server system. In response the server system e.g. integrated server system can interpret the requested slide using an application configured to interpret presentation type documents e.g. using the applications on the application server systems and provide the requested information to the client.

After selecting the button the entry for the spreadsheet sub document is selected from the sub document menu and the content of the spreadsheet sub document is highlighted as depicted in . Such a sequence of action can cause the creation of a dynamic link in the map sub document to the highlighted content in the spreadsheet sub document . The dynamic link can be created by referencing a non address identifier for the spreadsheet sub document in the map sub document . In client server implementations information regarding this sequence of actions can be provided by a client device e.g. clients to a server system e.g. integration server system . The server system interface with applications for interpreting the map and spreadsheet sub documents e.g. applications of application server systems to determine that the sequence of actions establishes a dynamic link between the sub documents to generate a link to the highlighted data in the spreadsheet sub document and to modify the map sub document to include the link.

Referring to after highlighting the content in the spreadsheet sub document and returning to the map sub document in the interface the map sub document has been automatically updated to include icons that correspond to the locations indicated in the highlighted content . For example the icon corresponds to Mountain View indicated in the highlighted content for Gabe and Garry icon corresponds to New York indicated in the highlighted content for Joseph Hendrik and Fuzzy and icon corresponds to Zurich indicated in the highlighted content for Simon .

In client server implementations returning to the map sub document in the interface e.g. selection of the map entry in the sub document menu can cause a client e.g. clients to request information from a server system e.g. server system for displaying the map sub document in the interface . The server system can interpret the map sub document using an appropriate application e.g. applications and when the newly created dynamic link to the spreadsheet sub document is encountered the application can request interpretation of the linked to data by a spreadsheet application. The server system can provide the request for interpretation of the linked to data to the spreadsheet application and in response receive the linked to data the content which can then be provided to the application interpreting the map sub document . Using the linked to data the application can generate information for providing the icons as part of the map sub document which can be provided to the client by the server system.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Additionally the processor may be implemented using any of a number of architectures. For example the processor may be a CISC Complex Instruction Set Computers processor a RISC Reduced Instruction Set Computer processor or a MISC Minimal Instruction Set Computer processor. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT Thin Film Transistor Liquid Crystal Display display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec 560 which may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN peer to peer networks having ad hoc or static members grid computing infrastructures and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. Moreover other mechanisms for providing an electronic document collection may be used. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. Other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

