---

title: Modifying search result ranking based on corpus search statistics
abstract: Methods, systems, and apparatus, including computer program products, for ranking search results of a search query using corpus search statistics. In one aspect, a method includes determining a first relevance of a first corpus to a search query, determining a second relevance of a second corpus to the search query, determining a measure of relative relevance of the first corpus and the second corpus to the search query, and providing the measure of relative relevance to a ranking engine for ranking of search results for a new search corresponding to the search query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08756220&OS=08756220&RS=08756220
owner: Google Inc.
number: 08756220
owner_city: Mountain View
owner_country: US
publication_date: 20130114
---
This application is a continuation application of and claims priority to pending U.S. patent application Ser. No. 13 022 366 filed on Feb. 7 2011 entitled Modifying Search Result Ranking Based on Corpus Search Statistics which is a continuation of U.S. patent application Ser. No. 11 752 894 filed on May 23 2007 entitled Modifying Search Result Ranking Based On Corpus Search Statistics now abandoned. The application herein claims the benefit of priority of all of the above listed patent applications and hereby incorporates by reference in their entirety the said patent applications.

Internet search engines aim to identify documents or other items that are relevant to a user s needs and to present the documents or items in a manner that is most useful to the user. Such activity often involves a fair amount of mind reading inferring from various clues what the user wants. Certain clues may be user specific. For example knowledge that a user is making a request from a mobile device and knowledge of the location of the device can result in much better search results for such a user.

Clues about a user s needs may also be more general. For example search results can have an elevated importance or inferred relevance if a number of other search results link to them. If the linking results are themselves highly relevant then the linked to results may have a particularly high relevance. Such an approach to determining relevance is premised on the assumption that if authors of web pages felt that another web site was relevant enough to be linked to then web searchers would also find the site to be particularly relevant. In short the web authors vote up the relevance of the sites.

Other various inputs may be used instead of or in addition to such techniques for determining and ranking search results. For example user reactions to particular search results or search result lists may be gauged so that results on which users often click will receive a higher ranking. The general assumption under such an approach is that searching users are often the best judges of relevance so that if they select a particular search result it is likely to be relevant or at least more relevant than the presented alternatives.

Systems methods and apparatus including computer program products for ranking search results of a search query using corpus search statistics are described. In general in one aspect a computer implemented method a computer program product and a system respectively are provided. The computer implemented method computer program product and system include determining a first relevance of a first corpus to a search query determining a second relevance of a second corpus to the search query determining a measure of relative relevance of the first corpus and the second corpus to the search query and providing the measure of relative relevance to a ranking engine for ranking of search results for a new search corresponding to the search query.

Implementations can include one or more of the following features. Determining a relevance of a corpus to the search query can further include determining a click measure based on a number of selections of search results for the search query from the corpus. Determining a relevance of a corpus to the search query can further include determining a search fraction based on a number of searches for the search query issued in the corpus in view of a number of searches for all queries issued in the corpus. Determining a relevance of a corpus to the search query can further include computing a weighted average of a plurality of search fractions where each search fraction is based on a different subset of searches in the corpus and each subset of searches represents a different time period. Determining a relevance of a corpus to the search query can further include computing a weighted combination of a plurality of search fractions where each search fraction is based on a different subset of searches in the corpus and each subset of searches represents a combination of one or more languages and one or more countries.

Implementations can include one or more of the following features. Determining the measure of relative relevance of the first corpus and the second corpus to the search query can include determining the first relevance of the first corpus as compared to the second relevance of the second corpus. Determining the measure of relative relevance of the first corpus and the second corpus to the search query can include computing a weighted combination of a relative search fraction and a relative click fraction where the relative search fraction is based on a search fraction for the first corpus relative to a search fraction for the second corpus the relative click fraction is based on a click measure for the first corpus relative to a click measure for the second corpus and a click measure for a corpus is based on a number of selections of search results for the search query from the corpus.

Implementations of the system include one or more computers operable to perform instructions where the one or more computers can include a server operable to interact with a user interface device through a data communication network and the user interface device is operable to interact with the server as a client.

In general in one aspect a computer implemented method is provided. The computer implemented method includes presenting a set of search results for a search query the set of search results including one or more search results from a first corpus and one or more search results from a second corpus receiving a selection of a search result in the set of search results the selected search result being a search result from the first corpus determining a measure of relative relevance of the first corpus and the second corpus to the search query the determining being based on the selection and providing the measure of relative relevance to a ranking engine for ranking of search results for a new search corresponding to the search query.

Implementations can include using the selection of the search result from the first corpus to determine a first click measure as a measure of relevance of the first corpus to the search query and determining the first click measure as compared to a second click measure where the second click measure is a measure of relevance of the second corpus to the search query.

In general in one aspect a computer implemented method is provided. The computer implemented method includes for a set of search queries determining a measure of relative relevance of a first corpus and a second corpus to each search query in the set of search queries the measure of relative relevance being based on a plurality of searches for each search query the plurality of searches including one or more searches issued in the first corpus and one or more searches issued in the second corpus and in response to a new search corresponding to a search query in the set of search queries ranking search results from the first corpus where the ranking is based on the measure of relative relevance of the first corpus and the second corpus to the search query.

Implementations can include selecting the set of search queries where the set of search queries is a subset of the set of all possible or actual search queries.

Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. Search log data can be used to predict which corpora provide results that are most relevant for a given query. Statistics for query corpus pairs can be recorded and stored and given a query the system can predict which corpora will have the most relevant content based on statistics of the number of searches and clicks for that query in each of various corpora. The measures of relevance can be used as a signal to modify a baseline ranking function. If the statistics suggest that a corpus does not provide relevant results for a given query the information retrieval system can avoid unnecessarily searching the corpus for new searches of the given query. A large fraction of the query stream can be impacted by considering a relatively small fraction of possible queries. Search and click data for various corpora can be stored in a simple form which allows the data to be filtered or modified more easily than filtering or modifying data from some predictive models based on machine learning.

The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

A user can interact with the system through a client device or other device. For example the client device can be a computer terminal within a local area network LAN or wide area network WAN . The client device can include a random access memory RAM or other memory and or a storage device and a processor . The processor is structured to process instructions within the system . In some implementations the processor is a single threaded processor. In other implementations the processor is a multi threaded processor. The processor can include multiple processing cores and is structured to process instructions stored in the RAM or other memory and or a storage device included with the client device to display graphical information for a user interface.

A user can connect to a search engine within a server system to submit a query . When the user submits the query through an input device attached to a client device a client side query signal is sent into a network and is forwarded to the server system as a server side query signal . Server system can be one or more server devices in one or more locations. A server device includes a memory device which can include the search engine loaded therein. A processor is structured to process instructions within the system . These instructions can implement one or more components of the search engine . The processor can be a single threaded processor or a multi threaded processor and can include multiple processing cores. The processor can process instructions stored in the memory related to the search engine and can send information to the client device through the network to create a graphical presentation in a user interface of the client device e.g. a search results web page displayed in a web browser .

The server side query signal is received by the search engine . The search engine uses the information within the user query e.g. query terms to find relevant documents. The search engine can include an indexing engine that actively searches a corpus e.g. web pages images news articles etc. on the Internet to index the documents found in that corpus and the index information for the documents in the corpus can be stored in an index database . This index database can be accessed to identify documents related to the user query . Note that an electronic document which for brevity will simply be referred to as a document does not necessarily correspond to a file. A document can be stored in a portion of a file that holds other documents in a single file dedicated to the document in question or in multiple coordinated files.

The search engine can include a ranking engine to rank the documents related to the user query . The ranking of the documents can be performed using traditional techniques for determining an information retrieval IR score for indexed documents in view of a given query. The relevance of a particular document with respect to a particular search term or to other provided information may be determined by any appropriate technique. For example the general level of back links to a document that contains matches for a search term may be used to infer a document s relevance. In particular if a document is linked to e.g. is the target of a hyperlink by many other relevant documents e.g. documents that also contain matches for the search terms it can be inferred that the target document is particularly relevant. This inference can be made because the authors of the pointing documents presumably point for the most part to other documents that are relevant to their audience.

If the pointing documents are in turn the targets of links from other relevant documents they can be considered more relevant and the first document can be considered particularly relevant because it is the target of relevant or even highly relevant documents. Such a technique may be the determinant of a document s relevance or one of multiple determinants. Appropriate techniques can also be used to identify and eliminate attempts to cast false votes so as to artificially drive up the relevance of a page.

To further improve such traditional document ranking techniques the ranking engine can receive an additional signal from a rank modifier engine to assist in determining an appropriate ranking for the documents. The rank modifier engine provides one or more prior models or one or more measures of relevance for the documents based on one or more prior models which can be used by the ranking engine to improve the search results ranking provided to the user . In general a prior model represents a background probability of document result selection given the values of multiple selected features as described further below. The rank modifier engine can perform one or more of the operations described below to generate the one or more prior models or the one or more measures of relevance based on one or more prior models.

The search engine can forward the final ranked result list within a server side search results signal through the network . Exiting the network a client side search results signal can be received by the client device where the results can be stored within the RAM and or used by the processor to display the results on an output device for the user

The ranking engine can produce a ranking of document results for display to a user based on IR scores received from the scoring engine and one or more signals from the rank modifier engine . A tracking component can be used to record information regarding individual user selections of the results presented in the ranking . For example the tracking component can be embedded JavaScript code included in a web page ranking that identifies user selections clicks of individual document results and also identifies when the user returns to the results page thus indicating the amount of time the user spent viewing the selected document result. In other implementations the tracking component can be a proxy system through which user selections of the document results are routed or the tracking component can include pre installed software at the client e.g. a toolbar plug in to the client s operating system . Other implementations are also possible such as by using a feature of a web browser that allows a tag directive to be included in a page which requests the browser to connect back to the server with message s regarding link s clicked by the user. In some implementations the tracking component can be used to record the search queries issued to one or more corpora.

The recorded information including result selection information can be stored in session log s . In some implementations search data and result selection information are stored in search logs. In some implementations the recorded information includes log entries that indicate for each user selection the query Q the document D the time T between two successive selections of search results the language L employed by the user and the country C where the user is likely located e.g. based on the server used to access the IR system . In some implementations other information is also recorded regarding user interactions with a presented ranking including negative information such as the fact that a document result was presented to a user but was not clicked position s of click s in the user interface IR scores of clicked results IR scores of all results shown before the clicked result the titles and snippets shown to the user before the clicked result the user s cookie cookie age IP Internet Protocol address user agent of the browser etc. Still further information can be recorded such as the search results returned for a query where the search results are content items categorized into one or more corpora. In some implementations similar information e.g. IR scores position etc. is recorded for an entire session or multiple sessions of a user. In some implementations the recording of similar information is not associated with user sessions. In some implementations such information is recorded for every click that occurs both before and after a current click.

The information stored in the session log s or in search logs can be used by the rank modifier engine in generating the one or more signals to the ranking engine . In general a wide range of information can be collected and used to modify or tune the signal from the user to make the signal and the future search results provided a better fit for the user s needs. Thus user selections of one or more corpora for issuing searches and user interactions with the search results presented to the users of the information retrieval system can be used to improve future rankings.

The components shown in can be combined in various manners and implemented in various system configurations. For example the scoring engine and the ranking engine can be merged into a single ranking engine such as the ranking engine of . The rank modifier engine and the ranking engine can also be merged and in general a ranking engine includes any software component that generates a ranking of document results after a query. Moreover a ranking engine can be included in a client system in addition to or rather than in a server system.

In some implementations a user issues i.e. submits a search query in a particular corpus by entering the query on the search web page for the particular corpus. For example the query can be entered in a search box of an interface for the search web page. A user selection of a particular corpus in which to issue a search is an a priori i.e. prior to receiving results indication of the user preference for a type of result or results with particular properties or characteristics.

In other implementations a user submits a query to a search web page which is not dedicated to a particular corpus. For example the search engine can forward the search query to more than one corpus without the user selecting one or more corpora in which to run the search. Alternatively the search web page can provide advanced search features which allow the user to specify one or more corpora in which to run the search. In some implementations a particular corpus may not have a dedicated web page or cannot be directly searched by a user but the content items in the corpus can still be returned as search results in for example a unified interface providing search results from multiple corpora.

In the example process the number of searches issued for a given search query is tracked according to the corpus in which the query was issued. As an example in the last M days the search query dolphins could have been issued in a web page corpus e.g. a search of web resources 221 523 times and in an image corpus e.g. a search directed specifically to a collection of images for example images.google.com 125 231 times.

For each corpus in which the query was issued a corpus search fraction R Q CP is calculated . The corpus search fraction in the last M days can be defined as where S Q CP is the number of searches issued for query Q in the corpus CP in the last M days and S CP is the number of searches issued for all queries in the corpus CP in the last M days. R Q CP is the fraction of the queries issued in the corpus CP represented by the query Q in the last M days.

In the dolphins example if S dolphins web 221 523 and S web 5 291 041 936 then R dolphins web 221 523 5 291 041 936 0.0000419. Similarly if S dolphins image 125 231 and S image 1 340 285 192 then R dolphins image 125 231 1 340 285 192 0.0000934.

When the query was issued in two or more corpora a relative search fraction RSF Q CP CP is calculated . The relative search fraction in the last M days can be defined as RSF where R Q CP is the corpus search fraction for a first corpus in the last M days and R Q CP is the corpus search fraction for a second corpus in the last M days. In some implementations one corpus of the two or more corpora is chosen as the base corpus and the relative search fractions for the non base corpora are calculated relative to the base corpus i.e. the corpus search fraction for the base corpus is the denominator in the relative search fraction calculation . The relative search fraction can then be expressed as RSF Q CP where CP is the second corpus.

In the dolphins example although the dolphins query issued a greater number of times in the web corpus than in the image corpus over the last M days the corpus search fraction R dolphins image is higher than the corpus search fraction R dolphins web . The relative search fraction RSF dolphins image web R dolphins image R dolphins web 0.0000934 0.0000419 2.3. This relative search fraction can be read to indicate that the dolphins query was 2.3 times more popular in the image corpus than in the web corpus in the last M days. If RSF Q CP CP 

The relative search fraction is used to modify the ranking of search results for a new search corresponding to the search query. In some implementations the relative search fraction is used as a measure of relative relevance to boost or lower the IR score for search results from the CPcorpus or the CPcorpus. The general assumption under such an approach is that if the query was significantly more popular on one corpus relative to another corpus then there is a reasonable incentive to display results from the more popular corpus or to boost the ranking of the results from the more popular corpus for future searches of the same query.

In some implementations the IR score for search results from the base corpus is not modified by the relative search fraction. In the dolphins example with the web corpus chosen as the base corpus if RSF dolphins image web 2.3 and RSF dolphins news web 0.8 the IR score for image search results and news search results for a new dolphins search query can be multiplied by 2.3 and 0.8 respectively while the IR score for web search results remains unmodified.

In some implementations the system tracks the number of search results selected SC Q CP i.e. clicked on when the selected result is from the corpus in which the query was issued. This click data can indicate whether the search results displayed to the user have a high quality i.e. the search results or type of search results returned were what the user wanted. The information provided by the click data differs from the information provided by search fractions. Search fractions provide information about which corpora users are choosing for issuing queries. In other words search data indicate where users expect to see results of high quality while click data indicate whether the results displayed are of high quality.

In some implementations a measure of relative relevance based on the relative search fraction is used to modify the ranking of search results for a new search corresponding to the search query. The measure of relative relevance can be for example a scaled or normalized version of the relative search fraction. The relative search fraction can be scaled or normalized to generate a multiplier which is suitable for boosting the search results i.e. produces boosted IR scores within a desired range . Additionally the relative search fraction can be scaled or normalized to generate a measure of relative relevance which can be combined with other ranking modifier signals. In some implementations the measure of relative relevance is based on both the relative search fraction and the number of clicks on search results from the corpus in which the query was issued.

The relative search fractions can be generated and stored for a set of most popular search queries. The data can be stored in a database or repository. In some implementations the data or some portion of the data can be loaded into memory for fast lookup of the relevant search fractions. Given a search query the information retrieval system can search the database or memory to determine if the search query has associated relative search fractions. If this information is available for the search query the system can determine how popular the query is on the various corpora and can boost or lower the IR for search results from each corpus according to the retrieved relative search fraction or another measure of relative relevance for the query corpus pair.

In some implementations the measure of relative relevance is also based on statistics for particular search results presented for a given query. For example for a given search query issued in a first corpus e.g. web pages on the Internet the information retrieval system can return a set of search results primarily from the first corpus for presentation in a user interface of a client device where one or more of the search results presented is from a second corpus. In some implementations the first corpus is chosen as a base corpus. If a user presented with search results primarily from the first corpus selects a result from the second corpus this can indicate that the user finds results from the second corpus more relevant to the given query than results from the first corpus. The statistics used to calculate the measure of relative relevance can include statistics on the presentation impression and user selection click of these search results from the under represented second corpus.

For example the tracking component of can be used to record the number of impressions OI Q CP CP and clicks OC Q CP CP of these search results from the under represented corpus CP for a given query issued in a base corpus CP . The recorded information can be stored in session log s or in search logs. In some implementations a click through rate CTR is calculated for these search results by dividing the number of clicks by the number of impressions i.e. OCTR Q CP CP OC Q CP CP OI Q CP CP . The CTR can be used as a direct signal of whether users will click on search results from the under represented corpus given the query. When a particular corpus e.g. the web page corpus is chosen as the base corpus the CTR can be expressed as OCTR Q CP where CP is the under represented corpus. In some implementations a click measure can be based on a CTR where the click measure can be used as a measure of relevance of the corpus to the query.

In some implementations before a statistically significant CTR measure can be determined the measure of relative relevance is initially based on the relative search fraction. Once a given search query becomes more popular i.e. more searches for the given query are issued in one or more corpora a statistically significant CTR measure e.g. OCTR Q CP can be computed. The measure of relative relevance can then be based on a combination e.g. a weighted combination of the relative search fraction and the CTR measure for a query corpus pair. In some implementations the OCTR Q CP is weighted more heavily than the RSF Q CP . In other implementations the measure of relative relevance is only based on the OCTR Q CP or other statistics for the search results from the under represented corpus for a given query.

In some implementations for a search issued in a first corpus with results returned primarily from the first corpus results are also returned from two or more different corpora. For example a search issued in a web page corpus can return a large number of results from the web page corpus a small number of results from an image corpus and a small number of results from a video corpus.

In some implementations the measure of relative relevance is based on the number of clicks on search results from a first corpus BaseC Q CP CP when the search was issued in the first corpus CPand the set of results also includes results from one or more under represented corpora including the CPcorpus. For example a user issuing a search in a web page corpus might receive ten results from the web page corpus two results from an image corpus and one result from a video corpus. If the user clicks on one of the ten results from the web page corpus two counters for the web page corpus are incremented BaseC Q image web and BaseC Q video web . If the user clicks on a result from the under represented image corpus or the under represented video corpus OC Q image web or OC Q video web respectively is incremented.

A CTR can be calculated for the clicks on the first corpus i.e. the base corpus results by using the number of impressions i.e. BaseCTR Q CP CP BaseC Q CP CP OI Q CP CP . The CTR for the first corpus BaseCTR Q CP CP and the CTR for a second corpus i.e. an under represented corpus OCTR Q CP CP can be used to generate measures of relevance for boosting or lowering the IR scores for search results from each of the two corpora. When the first corpus is chosen as the base corpus BaseCTR Q CP CP can be expressed as BaseCTR Q CP where CP is the under represented corpus. The IR score for results from the under represented second corpus can be boosted or lowered based on a multiplier calculated relative to the base corpus CTR. For example the multiplier can be the ratio of the under represented corpus CTR OCTR Q CP to the base corpus CTR BaseCTR Q CP . The ratio of the under represented corpus CTR to the base corpus CTR can be used as a measure of relative relevance of the two corpora to the search query. As an example searches for a given query issued in a web page corpus i.e. the base corpus could result in a 30 CTR for image results and a 15 CTR for web page results. For this example the multiplier for the IR score for image results is equal to 2 i.e. the ratio of 30 to 15 . The multiplier for the IR score for web page results is equal to 1 because the web page corpus is also the base corpus. Note in this example that the remaining 100 30 15 55 of impressions is divided between clicks for other corpora i.e. non web and non image corpora and instances where the user did not select any of the search results presented.

In some implementations a click measure can be based on the number of clicks on search results for a given search query from a corpus where the click measure can be used as a measure of relevance of the corpus to the query. In some implementations the measure of relative relevance is based on the number of clicks e.g. SC Q CP or OC Q CP CP on search results for a given search query from one corpus relative to the number of clicks e.g. SC Q CP or BaseC Q CP CP on search results for the given search query from another corpus. That is a relative click fraction RCF Q CP CP can be defined as for example RCF Q CP CP SC Q CP SC Q CP or RCF Q CP CP OC Q CP CP BaseC Q CP CP . If CPis chosen as a base corpus the relative click fraction can be expressed as RCF Q CP where CP is the non base corpus. In some implementations the measure of relative relevance is based on a combination e.g. a weighted combination of the relative search fraction and the relative click fraction for a query corpus pair. In some implementations the RCF Q CP is weighted more heavily than the RSF Q CP . In some implementations the relative click fraction RCF Q CP for a given search query Q is defined as the number of clicks on search results from one corpus CP relative to the number of clicks on search results from all other corpora.

Alternatively when search results from multiple corpora are presented in a unified interface the number of impressions and clicks of search results from each corpus for a given query can be recorded. A user selection of a search result from a particular corpus given a particular query can be read as an indication that users find results from the particular corpus relevant to the particular query. This is a signal that indicates relevance like the a priori indication of preference by a user selecting a particular corpus for issuing a query. CTR statistics can be generated for each query corpus pair using the impression and click data. The measure of relative relevance can be based on these CTR or click statistics alone or in combination with other statistics e.g. the relative search fractions described above .

For a given query corpus pair the number of searches can be subdivided into different levels of granularity. For example in the context of a web based information retrieval system information recorded in search logs or in session logs can include the query Q the language L employed by the user and the country C where the user is likely located e.g. based on the server used to access the IR system . When language and country information is recorded statistics for a query corpus pair can include the number of searches aggregated by language by country by neither i.e. a global statistic or by both.

For example a query search issued in French by a user connected to a server located in Switzerland can be recorded as 1 a global statistic aggregating the number of query corpus searches across all countries and all languages 2 a statistic by language French aggregating the number of query corpus searches across all countries 3 a statistic by country Switzerland aggregating the number of query corpus searches across all languages or 4 a statistic by language French and country Switzerland aggregating the number of query corpus searches across only the given queries issued in French from Switzerland. The global statistic provides the lowest level of granularity while the language country statistic provides the highest level of granularity in this example.

When multiple levels of granularity of search statistics are available it is generally preferable to use or weight more heavily the statistic at the highest granularity e.g. the combined language and country statistic for a given query corpus pair. The general assumption under such an approach is that a user fluent in a particular language and from a particular country will likely find a particular search result more relevant relative to other search results if other users fluent in the same language and from the same country find that particular search result relevant. However if the search query is issued from a country or in a language that represents a small proportion of all query traffic better search results may be generated by weighing more heavily the statistics at the lower levels of granularity e.g. the global statistic or the statistic based on language . Weighting and combining multiple statistics of varying granularity is described in more detail below.

In some implementations the relative search fraction RSF k CP CP for a given query corpus pair is based on statistics from one level of granularity. For example an information retrieval system can retrieve corpus search numbers S k CP and S k CP for a given query and two corpora where k is a key that indicates a set of features e.g. k Q L C for a particular query Q a particular language L and a particular country C. Alternatively the system can use a key of a lower level of granularity such as k Q L or k Q . In some implementations the system retrieves the corpus search numbers for all three keys and selects the number with the highest level of granularity which passes a test e.g. greater than a minimum threshold indicating enough query corpus searches for the set of key features to provide a reliable statistic .

The corpus search fractions R k CP and R k CP are computed by dividing the corpus search numbers S k CP and S k CP by S k CP and S k CP respectively where k is a key for the set of features in key k not including the query Q i.e. if k Q L C k L C . That is R k CP S k CP S k CP and R k CP S k CP S k CP . Based on the corpus search fractions R k CP and R k CP the system can compute the relative search fraction as RSF k CP CP R k CP R k CP .

Similarly the impression click and CTR data for the search results from the under represented corpus or the base corpus as described above can also be stored or retrieved based on the key k set of features. In some implementations this data is stored with other query corpus search data in a database or repository. For a given query from the set of popular search queries with stored statistics the relevant data can be accessed in the database or repository using the applicable key. For example a key k Q L C can be mapped to several statistics described above including S k CP SC k CP R k CP OI k CP OC k CP and BaseC k CP for each corpus CP.

The corpus search fraction R k CP described above can be calculated as the number of searches in corpus CP for key k divided by the total number of searches in corpus CP i.e. R k CP S k CP S k CP . R k CP can be updated at regular time intervals by incrementing S k CP and S k CP as new search log data becomes available for example once per day. In practice there can be many queries where this approach does not capture the desired effect when measured over long time periods.

For example R k olympics news will probably be low prior to the start of the Olympic season assuming that users typically do not search for news about the Olympics before the games happen. If R k olympics news is continually updated over time by dividing the total number of searches aggregated since the beginning of time then it will continue to be low after the first day of the Olympic season because the data from the first day of the Olympics will have the same weight as all the days prior to the Olympic season. In this example it is preferable to provide greater weight to the data on the first day of the Olympics. Presumably there will be a significant amount of data on the first day and this data can be used to predict the immediate future more accurately than the data aggregated across all time. In other words in some instances search result quality can be improved by capturing significant fluctuations in the corpus search fraction R k CP over time.

In some implementations the corpus search fraction R k CP is computed by applying an exponential moving average to give greater weight to more recent search data. The weights can be computed dynamically as a function of the number of recent search instances observed.

For example if S k CP denotes the number of query corpus pair searches on day d and S k CP denotes the number of query corpus pair searches on days d 1 2 . . . d the sequence R k CP can be defined as follows CP CP CP CP CP 1 CP CP where N S k CP . Thus for a key k on day d the database or repository can store the values S k CP and R k CP for each corpus CP. The intuition behind the exponent N is that the number of searches on all corpora in the recent data is a measure of the significance of the recent fluctuation. For example if 0.999 and there were 1000 searches for all corpora on day d a weight of 0.999 0.37 can be applied to the data for days 1 2 . . . d 1 and a weight of 1 0.37 0.63 can be applied to the data for day d.

When multiple levels of granularity of search statistics are available a smoothed corpus search fraction Rcan be computed by weighting and combining the multiple statistics. In particular the smoothed corpus search fraction Rcan employ per language and per country fractions with smoothing therebetween .

For example an information retrieval system can retrieve R k CP or R k CP for a query corpus pair using three keys k Q k Q L and k Q L C . As described above the search statistic with the highest level of granularity i.e. k Q L C generally provides the most relevant statistic. However if there is only a small amount of data for k Q L C then a more reliable composite measure can be computed by weighting statistics for k Q and k Q L in addition to using the data for k Q L C .

A smoothed corpus search fraction R k CP can be defined as CP CP CP where Kis a constant independent of the query Q e.g. 25 and S CP . The intuition is that if the data for k Q L is significant i.e. S k CP is high then the value of R k CP tends towards R k CP and if the data is insignificant it tends towards R k CP . Because S k CP is the number of searches aggregated over all time this smoothing will only make a significant difference for extremely rare queries for which little data have been collected.

Analogously R k CP can be defined as CP CP CP where Kis a constant independent of the query Q e.g. 50 and S S k CP . Similar smoothing can also be applied to OCTR k CP . Different constants can be used for Kand K or Kand Kcan be equal. In some implementations the smoothed corpus search fraction R k CP is calculated using R k CP the corpus search fraction modified by the exponential decay function .

A relative search fraction RSF k CP CP or a measure of relative relevance based on for example the relative search fraction the relative click fraction or a CTR measure can be output to a ranking engine for ranking of search results for a new search corresponding to the search query. In particular for a given query corpus pair the IR score for search results responsive to the query from the particular corpus can be boosted or lowered accordingly. The relative search fraction or measure of relative relevance can be passed through for example a transform to create a boosting factor that can be applied to the IR scores.

One example of a transform to create a boosting factor is a squashing function. In some implementations the measure of relative relevance is a squashed relative search fraction. As described above the relative search fraction can be defined as RSF k CP CP R k CP R k CP . Alternatively R k CP or R k CP can be used to calculate the relative search fraction.

In some implementations the relative search fraction can be transformed into a boosting factor for the IR score according to the following equation RSF CP CP RSF CP CP RSF CP CP 1 where J is a constant e.g. 40. For this squashing function RSF k CP CP 1 for all keys k and RSF k CP CP 

In any event the transform employed can be adjusted based on the specific measure of relative relevance and historical data combined with human generated relevance ratings e.g. employed in a tuning process to select an appropriate boosting transform for a given implementation . Moreover the measure of relative relevance can be used to modify and improve the ranking of search results generated for a given query and the modified ranking can be presented to a user e.g. on a display device in a web browser user interface .

Storing and updating query corpus pair statistics for all possible search queries is generally not feasible. However an inspection of query logs reveals that it is possible to impact a large fraction of the query stream by considering relatively few queries. In some implementations the selection of queries for query corpus pair statistics is made through filtering. For example when session logs or search logs from a single day d are processed counters for S k CP are computed for each key k and corpus CP. If the entry for a particular S k CP is below a threshold T that S k CP can be discarded. The threshold T can be fixed or varying. For example T can be set based on the size of the repository or database used to store the query corpus pair statistics. It should be noted that the number of query corpus pair statistics selected can be greatly reduced by filtering out entries that only contain data for a single corpus.

Updates to the query corpus pair statistics can occur on a regular basis e.g. daily. For example on day d a master database or repository can store the query corpus pair statistics for all corpora aggregated over days 1 2 . . . d 1. The master database can be updated by merging it with another database or repository containing query corpus pair statistics for all corpora for day d generated from session logs or search logs. In some implementations the aggregated query corpus pair statistics can be retrieved directly from the master database. Alternatively the master database can spawn various pruned sub databases which provide reduced sets of query corpus pair statistics to various applications.

The query corpus pair statistics are filtered to remove pair statistics which are below a threshold T. In some implementations the threshold T can vary based on for example the query the corpus or the particular statistic e.g. S k CP versus OCTR k CP .

The remaining query corpus pair statistics are stored 5030 in a recent database or repository where each key k is mapped to a value which can include a list of statistics for one or more corpora.

The query corpus pair statistics aggregated over days 1 2 . . . d 1 in the master database are merged with the query corpus pair statistics for day d in the recent database. The updated master database contains the query corpus pair statistics aggregated over days 1 2 . . . d.

In some implementations the corpus search fractions R k CP are smoothed generating R k CP after the query corpus pair statistics are updated. In some implementations multiple key mapped values which each contain query corpus pair statistics for an individual corpus are merged to generate a unified key mapped value which contains query corpus pair statistics for two or more corpora. In some implementations the master database spawns various pruned sub databases with the updated statistics.

The measure of relative relevance mapped by a key for one or more corpora can be computed and returned using a corpus search boost function. An application programming interface API for the corpus search boost function can be defined as follows.

The memory is a computer readable medium such as volatile or non volatile that stores information within the system . The memory can store processes related to the functionality of the search engine for example. The storage device is capable of providing persistent storage for the system . The storage device can include a floppy disk device a hard disk device an optical disk device or a tape device or other suitable persistent storage mediums. The storage device can store the various databases described above. The input output device provides input output operations for the system . The input output device can include a keyboard a pointing device and a display unit for displaying graphical user interfaces.

The computer system shown in is but one example. In general embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a tangible program carrier for execution by or to control the operation of data processing apparatus. The tangible program carrier can be a propagated signal or a computer readable medium. The propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a computer. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them.

The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a Global Positioning System GPS receiver to name just a few.

Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or of what may be claimed but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular embodiments of the subject matter described in this specification have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. In some implementations one or both of an exponential moving average function and a smoothing function can be applied to the click measure. In some implementations a squashing function can be applied to the relative click fraction. In some implementations the search and click data are used for analyzing search trends. In some implementations the search and click data are used to provide suggestions for corpora other than the corpus in which a search query was issued. For example when a given search query is issued in a base corpus a list of non base corpora can be returned along with search results from the base corpus. If one of the listed non base corpora is selected search results from the selected non base corpus can be displayed where the search results are responsive to the given search query.

