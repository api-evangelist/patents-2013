---

title: Crowd formation based on physical boundaries and other rules
abstract: The present disclosure relates to forming crowds of users taking into account known physical boundaries. In general, current locations of a number of users are obtained. A crowd of users is then formed based on the current locations of the users while taking into account one or more known physical boundaries such that the crowd does not include spatially proximate users on opposite sides of the one or more known physical boundaries. By utilizing known physical boundaries in a spatial crowd formation process, users that are spatially proximate to one another but are separated by a physical boundary are not included in the same crowd. In this manner, the spatial crowd formation process provides accurate and meaningful crowd formation in environments such as, but not limited to, buildings with multiple rooms, shopping malls, or the like. Crowd data representing users in the formed crowd is generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300704&OS=09300704&RS=09300704
owner: WALDECK TECHNOLOGY, LLC
number: 09300704
owner_city: Wilmington
owner_country: US
publication_date: 20130917
---
The present application is a continuation of U.S. patent application Ser. No. 12 941 457 filed on Nov. 8 2010 now U.S. Pat. No. 8 560 608 entitled Crowd Formation Based On Physical Boundaries And Other Rules which claims the benefit of provisional patent application Ser. No. 61 258 838 filed Nov. 6 2009 the disclosures of which are hereby incorporated herein by reference in its entirety.

With the proliferation of location aware mobile devices crowd tracking and services based thereon are starting to emerge. For example an exemplary system for forming and tracking crowds of users is described in U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS and U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS all of which were filed Dec. 23 2009 and are hereby incorporated herein by reference in their entireties.

One issue with existing crowd formation techniques is that they do not account for tangible physical boundaries such as walls that may physically prevent spatially proximate users from being in the same crowd. Similarly existing crowd formation techniques do not account for intangible physical boundaries such as boundaries between departments in a department store that may logically prevent spatially proximate users from being in the same crowd. As such there is a need for a system and method for forming crowds of users in a manner that takes into account known physical boundaries.

The present disclosure relates to forming crowds of users taking into account known physical boundaries. In general current locations of a number of users are obtained. A subset of users from the plurality of users that are located within the one or more known physical boundaries based on a comparison of the current locations of the subset of users and the one or more known physical boundaries is determined. A crowd of users is then formed including the subset of users. Preferably the one or more physical boundaries are taken into account such that the crowd does not include spatially proximate users that are located on opposite sides of the one or more known physical boundaries. Crowd data is generated representing the users included in the crowd. The one or more known physical boundaries preferably include tangible physical boundaries of a Point of Interest POI . As an example the POI may be a store within a shopping mall where the tangible physical boundaries of the store are walls and in some embodiments the floor and ceiling of the store. In addition or alternatively the one or more known physical boundaries of the POI may include one or more intangible physical boundaries for the POI e.g. intangible boundaries between departments in a department store . By utilizing known physical boundaries in a spatial crowd formation process users that are spatially proximate to one another but are separated by a physical boundary are not included in the same crowd. In this manner the spatial crowd formation process provides accurate and meaningful crowd formation in environments such as but not limited to buildings with multiple rooms shopping malls or the like.

Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

As discussed below in detail the MAP server operates to obtain current locations including location updates and user profiles of the users of the mobile devices . The current locations of the users can be expressed as positional geographic coordinates such as latitude longitude pairs and a height vector if applicable or any other similar information capable of identifying a given physical point in space in a two dimensional or three dimensional coordinate system. Using the current locations and user profiles of the users the MAP server is enabled to provide a number of features such as but not limited to forming crowds of users using current locations and or user profiles of the users generating aggregate profiles for crowds of users and tracking crowds. Note that while the MAP server is illustrated as a single server for simplicity and ease of discussion it should be appreciated that the MAP server may be implemented as a single physical server or multiple physical servers operating in a collaborative manner for purposes of redundancy and or load sharing.

In general the one or more profile servers operate to store user profiles for a number of persons including the users of the mobile devices . For example the one or more profile servers may be servers providing social network services such as the Facebook social networking service the MySpace social networking service the LinkediN social networking service or the like. As discussed below using the one or more profile servers the MAP server is enabled to directly or indirectly obtain the user profiles of the users of the mobile devices . The location server generally operates to receive location updates from the mobile devices and make the location updates available to entities such as for instance the MAP server . In one exemplary embodiment the location server is a server operating to provide Yahoo s FireEagle service.

The mobile devices may be mobile smart phones portable media player devices mobile gaming devices or the like. Some exemplary mobile devices that may be programmed or otherwise configured to operate as the mobile devices are the Apple iPhone the Palm Pre the Samsung Rogue the Blackberry Storm the Motorola Droid or similar phone running Google s Android Operating System an Apple iPad and the Apple iPod Touch device. However this list of exemplary mobile devices is not exhaustive and is not intended to limit the scope of the present disclosure.

The mobile devices through N include MAP clients through N generally referred to herein collectively as MAP clients or individually as MAP client MAP applications through N generally referred to herein collectively as MAP applications or individually as MAP application third party applications through N generally referred to herein collectively as third party applications or individually as third party application and location functions through N generally referred to herein collectively as location functions or individually as location function respectively. The MAP client is preferably implemented in software. In general in the preferred embodiment the MAP client is a middleware layer operating to interface an application layer i.e. the MAP application and the third party applications to the MAP server . More specifically the MAP client enables the MAP application and the third party applications to request and receive data from the MAP server . In addition the MAP client enables applications such as the MAP application and the third party applications to access data from the MAP server .

The MAP application is also preferably implemented in software. The MAP application generally provides a user interface component between the user and the MAP server . More specifically among other things the MAP application enables the user to initiate requests for crowd data or crowd tracking data from the MAP server and presents corresponding data returned by the MAP server to the user . The MAP application also enables the user to configure various settings. For example the MAP application may enable the user to select a desired social networking service e.g. Facebook MySpace LinkediN etc. from which to obtain the user profile of the user and provide any necessary credentials e.g. username and password needed to access the user profile from the social networking service.

The third party applications are preferably implemented in software. The third party applications operate to access the MAP server via the MAP client . The third party applications may utilize data obtained from the MAP server in any desired manner. As an example one of the third party applications may be a gaming application that utilizes crowd data to notify the user of Points of Interest POIs or Areas of Interest AOis where crowds of interest are currently located. It should be noted that while the MAP client is illustrated as being separate from the MAP application and the third party applications the present disclosure is not limited thereto. The functionality of the MAP client may alternatively be incorporated into the MAP application and the third party applications .

The location function may be implemented in hardware software or a combination thereof. In general the location function operates to determine or otherwise obtain the location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver. In addition or alternatively the location function may include hardware and or software that enables improved location tracking in indoor environments such as for example shopping malls. For example the location function may be part of or compatible with the InvisiTrack Location System provided by InvisiTrack and described in U.S. Pat. No. 7 423 580 entitled Method and System of Three Dimensional Positional Finding which issued on Sep. 9 2008 U.S. Pat. No. 7 787 886 entitled System and Method for Locating a Target using RFID which issued on Aug. 31 2010 and U.S. Patent Application Publication No. 2007 0075898 entitled Method and System for Positional Finding Using RF Continuous and or Combined Movement which published on Apr. 5 2007 all of which are hereby incorporated herein by reference for their teachings regarding location tracking.

The subscriber device is a physical device such as a personal computer a mobile computer e.g. a notebook computer a netbook computer a tablet computer etc. a mobile smart phone or the like. The subscriber associated with the subscriber device is a person or entity. In general the subscriber device enables the subscriber to access the MAP server via a web browser to obtain various types of data preferably for a fee. For example the subscriber may pay a fee to have access to crowd data such as aggregate profiles for crowds located at one or more POIs and or located in one or more AOis pay a fee to track crowds or the like. Note that the web browser is exemplary. In another embodiment the subscriber device is enabled to access the MAP server via a custom application.

Lastly the third party service is a service that has access to data from the MAP server such as aggregate profiles for one or more crowds at one or more POIs or within one or more AOis. Based on the data from the MAP server the third party service operates to provide a service such as for example targeted advertising. For example the third party service may obtain anonymous aggregate profile data for one or more crowds located at a POI and then provide targeted advertising to known users located at the PoI based on the anonymous aggregate profile data. Note that while targeted advertising is mentioned as an exemplary third party service other types of third party services may additionally or alternatively be provided. Other types of third party services that may be provided will be apparent to one of ordinary skill in the art upon reading this disclosure.

Before proceeding it should be noted that while the system of illustrates an embodiment where the one or more profile servers and the location server are separate from the MAP server the present disclosure is not limited thereto. In an alternative embodiment the functionality of the one or more profile servers and or the location server may be implemented within the MAP server .

The business logic layer includes a profile manager a location manager a history manager a crowd analyzer and an aggregation engine each of which is preferably implemented in software. The profile manager generally operates to obtain the user profiles of the users directly or indirectly from the one or more profile servers and store the user profiles in the persistence layer . The location manager operates to obtain the current locations of the users including location updates. As discussed below the current locations of the users may be obtained directly from the mobile devices and or obtained from the location server .

The history manager generally operates to maintain a historical record of anonymized user profile data by location. Note that while the user profile data stored in the historical record is preferably anonymized it is not limited thereto. The crowd analyzer operates to form crowds of users. In one embodiment the crowd analyzer utilizes a spatial crowd formation algorithm. However the present disclosure is not limited thereto. In addition the crowd analyzer may further characterize crowds to reflect degree of fragmentation best case and worst case degree of separation DOS and or degree of bidirectionality. Still further the crowd analyzer may also operate to track crowds. The aggregation engine generally operates to provide aggregate profile data in response to requests from the mobile devices the subscriber device and the third party service . The aggregate profile data may be historical aggregate profile data for one or more POIs or one or more AOis or aggregate profile data for crowd s currently at one or more POIs or within one or more AOis. For additional information regarding the operation of the profile manager the location manager the history manager the crowd analyzer and the aggregation engine the interested reader is directed to U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS which was filed Dec. 23 2009 and U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS which was filed Dec. 23 2009 all of which have been incorporated herein by reference in their entireties.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the MAP server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as LiveJournal and Facebook . The MAP server may then persist RDF descriptions of the users as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

While the focus of the present disclosure is crowd formation before discussing the crowd formation process a description of an exemplary manner in which the MAP server obtains the user profiles and location updates for the users is beneficial. illustrates the operation of the system of to provide the user profile of one of the users of one of the mobile devices to the MAP server according to one embodiment of the present disclosure. This discussion is equally applicable to the other users of the other mobile devices . First an authentication process is performed step . For authentication in this embodiment the mobile device authenticates with the profile server step A and the MAP server step B . In addition the MAP server authenticates with the profile server step C . Preferably authentication is performed using OpeniD or similar technology. However authentication may alternatively be performed using separate credentials e.g. username and password of the user for access to the MAP server and the profile server . Assuming that authentication is successful the profile server returns an authentication succeeded message to the MAP server step D and the profile server returns an authentication succeeded message to the MAP client of the mobile device step E .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the MAP client of the mobile device sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the mobile device step B . The MAP client of the mobile device then sends the user profile of the user to the MAP server step C . Note that while in this embodiment the MAP client sends the complete user profile of the user to the MAP server in an alternative embodiment the MAP client may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user from the MAP client of the mobile device the profile manager of the MAP server processes the user profile step D . More specifically in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server . Thus for example if the MAP server supports user profiles from Facebook MySpace and LinkediN the profile manager may include a Facebook handler a MySpace handler and a LinkediN handler. The social network handlers process user profiles to generate user profiles for the MAP server that include lists of keywords for each of a number of profile categories. The profile categories may be the same for each of the social network handlers or different for each of the social network handlers. Thus for this example assume that the user profile of the user is from Facebook . The profile manager uses a Facebook handler to process the user profile of the user to map the user profile of the user from Facebook to a user profile for the MAP server including lists of keywords for a number of predefined profile categories. For example for the Facebook handler the profile categories may be a demographic profile category a social interaction profile category a general interests profile category a music interests profile category and a movie interests profile category. As such the user profile of the user from Facebook may be processed by the Facebook handler of the profile manager to create a list of keywords such as for example liberal High School Graduate 35 44 College Graduate etc. for the demographic profile category a list of keywords such as Seeking Friendship for the social interaction profile category a list of keywords such as politics technology photography books etc. for the general interests profile category a list of keywords including music genres artist names album names or the like for the music interests profile category and a list of keywords including movie titles actor or actress names director names movie genres or the like for the movie interests profile category. In one embodiment the profile manager may use natural language processing or semantic analysis. For example if the Facebook user profile of the user states that the user is 20 years old semantic analysis may result in the keyword of 18 24 years old being stored in the user profile of the user for the MAP server .

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step E . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the mobile device to the MAP client and the MAP client then provides the current location of the mobile device to the MAP server step A . Note that step A may be repeated periodically or in response to a change in the current location of the mobile device in order for the MAP application to provide location updates for the user to the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step B . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . As discussed below in detail historical data maintained by the MAP server is preferably anonymized in order to maintain the privacy of the users .

In addition to storing the current location of the user the location manager sends the current location of the user to the location server step C . In this embodiment by providing location updates to the location server the MAP server in return receives location updates for the user from the location server . This is particularly beneficial when the mobile device does not permit background processes. If the mobile device does not permit background processes the MAP application will not be able to provide location updates for the user to the MAP server unless the MAP application is active. Therefore when the MAP application is not active other applications running on the mobile device or some other device of the user may directly or indirectly provide location updates to the location server for the user . This is illustrated in step where the location server receives a location update for the user directly or indirectly from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the profile manager of the MAP server sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the profile manager of the MAP server step B . Note that while in this embodiment the profile server returns the complete user profile of the user to the MAP server in an alternative embodiment the profile server may return a filtered version of the user profile of the user to the MAP server . The profile server may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user the profile manager of the MAP server processes the user profile step C . More specifically as discussed above in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server . The social network handlers process user profiles to generate user profiles for the MAP server that include lists of keywords for each of a number of profile categories. The profile categories may be the same for each of the social network handlers or different for each of the social network handlers.

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the user of the mobile device to the location server step A . Note that step A may be repeated periodically or in response to changes in the location of the mobile device in order to provide location updates for the user to the MAP server . The location server then provides the current location of the user to the MAP server step B . The location server may provide the current location of the user to the MAP server automatically in response to receiving the current location of the user from the mobile device or in response to a request from the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step C . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . As discussed below in detail historical data maintained by the MAP server is preferably anonymized in order to maintain the privacy of the users .

As discussed above the use of the location server is particularly beneficial when the mobile device does not permit background processes. As such if the mobile device does not permit background processes the MAP application will not provide location updates for the user to the location server unless the MAP application is active. However other applications running on the mobile device or some other device of the user may provide location updates to the location server for the user when the MAP application is not active. This is illustrated in step where the location server receives a location update for the user from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

The crowd analyzer then creates a new bounding region that encompasses the new location taking into account physical boundaries of any relevant POI s step and an old bounding region that encompasses the old location taking into account physical boundaries of any relevant POI s step . Note that if the user does not have an old location i.e. the location received in step is the first location received for the user then the old bounding region is essentially null. As used herein a physical boundary is either a tangible physical boundary or an intangible physical boundary. A tangible physical boundary is a tangible structure such as for example a wall a fence or the like. An intangible physical boundary is a conceptual boundary that separates one area from another such as for example a boundary between departments in a department store. A POI is relevant to the new location if the new location is within the physical boundaries defined for the POI or the POI is proximate to the new location. Likewise a POI is relevant to the old location if the old location is within the physical boundaries defined for the POI or the POI is proximate to the old location. Note that while physical boundaries of relevant POIs are referred to in this exemplary embodiment the present disclosure is not limited to physical boundaries of POIs. In addition or alternatively other types of physical boundaries that would prevent users on opposite sides of the physical boundaries from being in the same crowd even though the users are spatially proximate to one another or other types of physical boundaries for which it is desirable for users on opposite sides of the physical boundaries to not be considered part of the same crowd can be used for the crowd formation process.

Next the crowd analyzer determines whether the new and old bounding regions overlap step . If so the crowd analyzer combines the new and old bounding regions to provide a combined bounding region step . The crowd analyzer then determines the individual users and crowds relevant to the combined bounding region created in step step . The crowds relevant to the combined bounding region are crowds that are within or overlap the combined bounding region e.g. have at least one user located within the combined bounding region have all users located within the combined bounding region or have crowd centers located within the combined bounding region . The individual users relevant to the combined bounding region are users that are currently located within the combined bounding region and are not already part of a crowd.

Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density step . In one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is computed based on user density within the combined bounding region. More specifically the optimal inclusion distance for individuals may be computed according to the following equation 

In another embodiment in addition to having defined physical boundaries POIs may have one or more rules defined for crowd formation within the physical boundaries defined for the POIs. The rules for each of the POIs may be independently defined and controlled by for example an owner or administrative user associated with the POI. The rules may include a minimum user density for crowd formation to be used in lieu of average user density i.e. number of users within the bounding region divided by the area of the bounding region . In this embodiment if the combined bounding region is within the physical boundaries of a POI and a minimum user density for crowd formation has been defined for the POI the initial optimal inclusion distance for individuals may be computed based on the minimum user density defined for the POI. More specifically the initial optimal inclusion distance may be computed according to the following equation 

The crowd analyzer then creates a crowd for each individual user within the combined bounding region that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the process proceeds to where the crowd analyzer analyzes the crowds relevant to the combined bounding region to determine whether any of the crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds for the bounding region step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance then the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . In one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . The maximum number of iterations is a predefined number that ensures that the crowd formation process does not indefinitely loop over steps through or loop over steps through more than a desired maximum number of times. If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step and the process ends.

Note that in this example the minimum number of users needed to form a crowd is three. However the present disclosure is not limited thereto. The minimum number of users for a crowd may be any number greater than or equal to 2. Further the minimum number of users for a crowd may be independently defined for each POI having physical boundaries. In this case if the combined bounding region is within the physical boundaries then the minimum number of users needed to form a crowd is the minimum number of users for a crowd defined for the POI if any. Otherwise the system defined minimum number of users needed for a crowd is used as a default.

Returning to step in if the new and old bounding regions do not overlap the process proceeds to and the bounding region to be processed is set to the old bounding region step . In general the crowd analyzer then processes the old bounding region in much the same manner as described above with respect to steps through . More specifically the crowd analyzer determines the individual users and crowds relevant to the bounding region step . Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density step . As discussed above in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is computed based on user density within the combined bounding region. More specifically the optimal inclusion distance for individuals may be computed according to the following equation 

In another embodiment in addition to having defined physical boundaries POIs may have one or more rules defined for crowd formation within the physical boundaries defined for the POIs. The rules for each of the POIs may be independently defined and controlled by for example an owner or administrative user associated with the POI. The rules may include a minimum user density for crowd formation to be used in lieu of average user density i.e. number of users within the bounding region divided by the area of the bounding region . In this embodiment if the bounding region is within the physical boundaries of a POI and a minimum user density for crowd formation has been defined for the POI the initial optimal inclusion distance for individuals may be computed based on the minimum user density defined for the POI. More specifically the initial optimal inclusion distance may be computed according to the following equation 

The crowd analyzer then creates a crowd of one user for each individual user within the bounding region that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the crowd analyzer analyzes the crowds for the bounding region to determine whether any crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds in the bounding region step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same 10 number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . As discussed above in one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step . Again note that in this example the minimum number of users needed to form a crowd is three. However the present disclosure is not limited thereto. The minimum number of users for a crowd may be any number greater than or equal to 2. Further the minimum number of users for a crowd may be independently defined for each POI having physical boundaries. In this case if the combined bounding region is within the physical boundaries then the minimum number of users needed to form a crowd is the minimum number of users for a crowd defined for the POI if any. Otherwise the system defined minimum number of users needed for a crowd is used as a default.

Lastly the crowd analyzer determines whether the crowd formation process for the new and old bounding regions is done step . In other words the crowd analyzer determines whether both the new and old bounding regions have been processed. If not the bounding region is set to the new bounding region step and the process returns to step and is repeated for the new bounding region. Once both the new and old bounding regions have been processed the crowd formation process ends.

Next the crowd analyzer determines whether the new location is within the physical boundaries of a POI step . If so the crowd analyzer limits the initial bounding box to the physical boundaries of the POI to provide the new bounding region step . In this manner only users and existing crowds that are located within the physical boundaries of the same POI will be considered for the crowd formation process with respect to the new bounding region. As a result users located on opposite sides of the physical boundaries of the POI will not be included in the same crowd even if the users are otherwise sufficiently close to one another to be in the same crowd.

More specifically in one embodiment the physical boundaries of a POI may define a perimeter of the POI in 2 0imensional 20 space. For example the physical boundaries of a box shaped POI may be defined by a latitude and longitude pair defining a north west corner of the box shaped POI and a latitude and longitude pair defining a south east corner of the box shaped POI. In this case the initial bounding box would be limited by the physical boundaries of the box shaped POI. In another embodiment the physical boundaries may define a perimeter of the POI in 3 Dimensional 30 space. For example the physical boundaries of a box shaped POI may be defined by a latitude and longitude pair defining a north west corner of the box shaped POI a latitude and longitude pair defining a south east corner of the box shaped POI an altitude of a floor of the box shaped POI and an altitude of a ceiling of the box shaped POI. Three dimensional physical boundaries of a POI may be desired for example for POIs located in a multi level building such as for example a multi level shopping mall. 30. In the case of 30 physical boundaries the initial bounding box is limited to the physical boundaries of the POI.

Returning to step if the new location of the user is not within the physical boundaries of a POI the crowd analyzer then determines whether there are any POI s with defined physical boundaries located within or overlapping the initial bounding box step . If not the new bounding region is set equal to the initial bounding box created in step step . Otherwise the new bounding region is set equal to the initial bounding box created in step minus region s defined by the physical boundaries of the POI s located within or otherwise overlapping the initial bounding box step . In this manner if the new location of the user is outside of known physical boundaries of the POIs then the crowd formation process does not take into account users and existing crowds that are located within the physical boundaries of nearby POIs. As a result users located inside the physical boundaries of nearby POIs cannot be included in crowds outside the physical boundaries of the POIs even if the users would otherwise be located sufficiently close to one another to be included in the same crowd.

Next the crowd analyzer determines whether the old location is within the physical boundaries of a POI step . If so the crowd analyzer limits the initial bounding box to the physical boundaries of the POI to provide the old bounding region step . In this manner only users and existing crowds that are located within the physical boundaries of the same POI will be considered for the crowd formation process with respect to the old bounding region. As a result users located on opposite sides of the physical boundaries of the POI will not be included in the same crowd even if the users are otherwise sufficiently close to one another to be in the same crowd.

Returning to step if the old location of the user is not within the physical boundaries of a POI the crowd analyzer then determines whether there are any POI s with defined physical boundaries located within or overlapping the initial bounding box step . If not the old bounding region is set equal to the initial bounding box created in step step . Otherwise the old bounding region is set equal to the initial bounding box created in step minus region s defined by the physical boundaries of the POI s located within or otherwise overlapping the initial bounding box step . In this manner if the old location of the user is outside of known physical boundaries of the POIs then the crowd formation process does not take into account users and existing crowds that are located within the physical boundaries of nearby POIs. As a result users located inside the physical boundaries of nearby POIs cannot be included in crowds outside the physical boundaries of the POIs even if the users would otherwise be located sufficiently close to one another to be included in the same crowd.

Once the new bounding region is created the crowd formation process proceeds as outlined above. Specifically the crowd analyzer identifies all individual users currently located within the new bounding region and all crowds located within or overlapping the new bounding region as illustrated in . In this example crowd is an existing crowd relevant to the new bounding region . Crowds are indicated by dashed circles crowd centers are indicated by cross hairs and users are indicated as dots. Next as also illustrated in the crowd analyzer creates crowds through of one user for the individual users and the optimal inclusion distances of the crowds through are set to the initial optimal inclusion distance.

The crowd analyzer then identifies the two closest crowds and in the new bounding region and determines a distance between the two closest crowds and . In this example the distance between the two closest crowds and is less than the optimal inclusion distance. As such the two closest crowds and are merged and a new crowd center and new optimal inclusion distance are computed as illustrated in . The crowd analyzer then repeats the process such that the two closest crowds and in the new bounding region are again merged as illustrated in . At this point the distance between the two closest crowds and is greater than the appropriate optimal inclusion distance. As such the crowd formation process is complete.

Once the new bounding region is created the crowd formation process proceeds as outlined above. Specifically the crowd analyzer identifies all individual users currently located within the new bounding region and all crowds located within or overlapping the new bounding region as illustrated in . In this example crowd is an existing crowd relevant to the new bounding region . Crowds are indicated by dashed circles crowd centers are indicated by cross hairs and users are indicated as dots. Next as also illustrated in the crowd analyzer creates crowds through of one user for the individual users and the optimal inclusion distances of the crowds through are set to the initial optimal inclusion distance.

The crowd analyzer then identifies the two closest crowds and in the new bounding region and determines a distance between the two closest crowds and . In this example the distance between the two closest crowds and is less than the optimal inclusion distance. As such the two closest crowds and are merged and a new crowd center and new optimal inclusion distance are computed as illustrated in . The crowd analyzer then repeats the process such that the two closest crowds and in the new bounding region are again merged as illustrated in . At this point the distance between the two closest crowds and is greater than the appropriate optimal inclusion distance. As such crowds having less than the minimum number of users for a crowd are discarded and the crowd formation process is then complete. In this example the minimum number of users for a crowd is 3. As such the crowds through are discarded as illustrated in .

Since the old bounding region and the new bounding region overlap the crowd analyzer combines the new and old bounding regions and to provide a combined bounding region as illustrated in . In addition the crowd analyzer creates crowds through for individual users currently located within the combined bounding region . The optimal inclusion distances of the crowds through are set to the initial optimal inclusion distance computed by the crowd analyzer based on user density.

Next the crowd analyzer analyzes the crowds and through to determine whether any members of the crowds and through violate the optimal inclusion distances of the crowds and through . In this example as a result of the user leaving the crowd and moving to his new location both of the remaining members of the crowd violate the optimal inclusion distance of the crowd . As such the crowd analyzer removes the remaining users from the crowd and creates crowds and of one user each for those users as illustrated in .

The crowd analyzer then identifies the two closest crowds in the combined bounding region which in this example are the crowds and . Next the crowd analyzer computes a distance between the two crowds and . In this example the distance between the two crowds and is less than the initial optimal inclusion distance and as such the two crowds and are combined. In this example crowds are combined by merging the smaller crowd into the larger crowd. Since the two crowds and are of the same size the crowd analyzer merges the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd .

At this point the crowd analyzer repeats the process and determines that the crowds and are now the two closest crowds. In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger of the two crowds and which is the crowd . As such the crowd is merged into the crowd and a new crowd center and optimal inclusion distance are computed for the crowd as illustrated in . At this point there are no two crowds closer than the optimal inclusion distance of the larger of the two crowds. As such the crowd analyzer discards any crowds having less than three members as illustrated in . In this example the crowds and have less than three members and are therefore removed. The crowd has three or more members and as such is not removed. At this point the crowd formation process is complete.

More specifically as illustrated in as a result of the movement of the user from the old location to the new location the remaining users in the crowd no longer satisfy the optimal inclusion distance for the crowd . As such the remaining users in the crowd are removed from the crowd and crowds and of one user each are created for the removed users as shown in . In this example no two crowds in the old bounding region are close enough to be combined. As such crowds having less than three users are removed and processing of the old bounding region is complete as illustrated in and the crowd analyzer proceeds to process the new bounding region .

As illustrated in processing of the new bounding region begins by the crowd analyzer creating a crowd of one user for the user . The crowd analyzer then identifies the crowds and as the two closest crowds in the new bounding region and determines a distance between the two crowds and . In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger crowd which is the crowd . As such the crowd analyzer combines the crowds and by merging the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd . At this point the crowd formation process is complete.

The crowds formed using the process described above may be used to provide any type of desired service. For instance in one embodiment the MAP server may process crowd requests from the mobile devices the subscriber device and or the third party service . Using the mobile device as an example the mobile device may send a crowd data request to the MAP server for a particular POI or AOI. The MAP server then identifies a crowd s at the POI or within the AOI generates crowd data for the identified crowd s and returns the crowd data to the mobile device . The crowd data for a crowd may include an aggregate profile of the crowd created from the user profile of the users in the crowd. However the crowd data is not limited thereto. Further note that snapshots of the crowds may be captured and stored over time to enable a crowd tracking feature. Each crowd snapshot may include for example location information defining the location of the crowd at the corresponding point in time and an aggregate profile of the crowd at the corresponding point in time.

Optionally the MAP server may receive user input from the owner that defines one or more rules for crowd formation to be used when forming crowds within the physical boundaries of the POI step . For example the one or more rules may include a minimum user density for crowd formation a minimum number of users required to be in a crowd or the like. Lastly the MAP server stores or updates a POI record or similar data structure to store the physical boundaries of the POI and the one or more crowd formation rules for the POI if any step . The POI record also includes the name and location of the POI. Note that crowds may be tagged with the name and optionally location of the corresponding POIs while the crowds are located within the physical boundaries of the POIs. These POI tags may then be removed from the crowds once the crowds are no longer located within the physical boundaries of the POIs.

The present disclosure provides substantial opportunity for variation without departing from the scope of the concepts disclosed herein. For example the crowd formation process of is exemplary. Numerous variations to the crowd formation process in which physical boundaries are taken into account will be apparent to one of ordinary skill in the art upon reading this disclosure. For instance rather than modifying the new and old bounding regions as described above with respect to the initial bounding region e.g. the initial bounding box may be used in combination with user and crowd filtering. Specifically user and crowd filtering may be used to remove unwanted users and crowds prior to forming crowds. Thus if the new location of the user is within the physical boundaries of a POI an initial bounding region may be created without regards to the physical boundaries of the POI. Then once users and crowds within the initial bounding region are identified the users and crowds may be filtered prior to crowd formation in order to remove crowds and users that are outside the physical boundaries of the POI. In a similar manner crowd and user filtering may be used when forming crowds in the situation where the new location is not within physical boundaries of a POI but a POI s having defined physical boundaries are nearby.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

