---

title: Apparatus, system and method for providing cryptographic key information with physically unclonable function circuitry
abstract: Techniques and mechanisms for providing a value from physically unclonable function (PUF) circuitry for a cryptographic operation of a security module. In an embodiment, a cryptographic engine receives a value from PUF circuitry and based on the value, outputs a result of a cryptographic operation to a bus of the security module. The bus couples the cryptographic engine to control logic or interface logic of the security module. In another embodiment, the value is provided to the cryptographic engine from the PUF circuitry via a signal line which is distinct from the bus, where any exchange of the value by either of the cryptographic engine and the PUF circuitry is for communication of the first value independent of the bus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208355&OS=09208355&RS=09208355
owner: Sandia Corporation
number: 09208355
owner_city: Albuquerque
owner_country: US
publication_date: 20130528
---
This invention was developed with Government support under Contract No. DE AC04 94AL85000 between Sandia Corporation and the U.S. Department of Energy. The U.S. Government has certain rights in this invention.

This disclosure relates generally to trusted computing and in particular but not exclusively relates to hardware for protection against subversion by substitution.

Trustworthy computing cannot exist without trustworthy hardware to perform such computing. Even if an integrated circuit is produced using rigorous procedures in a Trusted Foundry and certified as trustworthy existing security mechanisms are often subject to wholesale replacement of the component with a separately manufactured but subverted look alike after the point of certification. Without detection of subversion by wholesale component substitution today s information processing systems are vulnerable to sophisticated adversaries that can fabricate look alike components that perform the same function as the intended component but which may contain additional subversion artifices that can be later triggered by an adversary to disrupt or compromise operation.

Using physical system protection schemes to prevent subversive attacks in deployed information processing hardware is technically difficult and expensive. An alternative to resisting subversive attack with physical system protection schemes is to employ robustly authenticated and protected hardware architectures to enable tracing of the origin of these components. Physically Unclonable Function PUF technology may be leveraged to deter adversaries from attempting subversion by insertion of subversive functionality and also by instantiation of counterfeit components subversion via substitution . PUFs are derived from the inherently random physical characteristics of the material component or system from which they are sourced which makes the output of a PUF physically or computationally very difficult to predict. Silicon based microelectronics appear to be a potentially rich source of PUFs because subtle variations in the production processes result in subtle variations in the physical and operational properties of the fabricated devices. Additionally each device can have millions of exploitable transistors circuits and other active and passive components. Accordingly PUFs extracted from microelectronics are of keen interest because of their potential applications to cyber security.

Embodiments of a system and method for providing cryptographic key information are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize however that the techniques described herein can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring certain aspects.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of the phrases in one embodiment or in an embodiment in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Throughout this specification several terms of art are used. These terms are to take on their ordinary meaning in the art from which they come unless specifically defined herein or the context of their use would clearly suggest otherwise.

Embodiments discussed herein include techniques and mechanisms to variously provide enhanced security of electronic devices using Physical Unclonable Function PUF circuitry. The order in which some or all of the process blocks appear in each process should not be deemed limiting. Rather one of ordinary skill in the art having the benefit of the present disclosure will understand that some of the process blocks may be executed in a variety of orders not illustrated.

Certain embodiments include architectures which variously exploit low level fabrication defects and or differences in integrated circuitry to generate a PUF value which is inaccessible to one or more elements e.g. circuit logic a software process etc. of a platform which includes the integrated circuitry. For example the PUF value may be directly accessible e.g. identifiable by at least some logic of a security module but may be unidentifiable by other logic of the security module by logic of the platform which is external to the security module by a manufacturer of the security module and or the like.

Existing methodologies typically store a cryptographic key and other security critical information in nonvolatile storage e.g. read only memory e FUSES and or the like of dedicated security hardware. However such stored keys are included in or otherwise accessible to control circuitry are typically the same within an entire family of devices and may be circumvented for example by replacement of the dedicated security hardware with malicious hardware. In certain embodiments PUF circuitry includes functionality for generating a unique device specific or per device value that can be used for example as a secret symmetrical key. Alternatively or in addition such PUF circuitry may provide a random value which for example may serve as a seed for generating an asymmetric key value pair. Incorporation of PUF functionality with cryptographic logic may provide for protection of sensitive data on a device and or support secure communications between devices.

System may include a security module to provide one or more security mechanisms for a host which for example is included in or coupled to system . By way of illustration and not limitation system may include one or more processor cores to avail of cryptographic functionality of security module . Such cryptographic functionality may include encryption and or decryption of data stored by a computer platform including system data exchanged within the platform data exchanged between platforms and the like. In an illustrative embodiment the one or more processor cores may include a core or cores of a host processor e.g. a CPU which is for general purpose data processing. System may further comprise a memory to store state information such as that for an operating system and one or more applications executing with one or more processor cores . Software executing with one or more processor cores and memory may facilitate data exchanged via I O logic e.g. a bus interface transceiver touchpad touch display mouse keyboard network interface and or the like of system .

In response to execution of such software security module may exchange control and or data signals to facilitate the providing of a cryptography functionality which for example is based on a value provided by PUF circuitry which is included in or coupled to security module . Such a value may in one or more respects be hidden from a host which is included in or coupled to system . For example PUF circuitry may provide to other circuitry of security module a value which is not identifiable to the one or more cores .

Security module may include an interface to couple security module to a host of the platform. By way of illustration and not limitation interface may include one or more contacts or other hardware to couple directly or indirectly with one or more cores of a host processor which is for general purpose computing such as execution of an operating system. Such one or more cores may reside on the same die as that which includes security module although certain embodiments are not limited in this regard.

In an embodiment interface is to perform an exchange of data with the host e.g. for security module to provide cryptographic and or other functionality for protecting information which is communicated stored or otherwise processed by the platform. By way of illustration and not limitation such functionality may include performing one or more of decryption encryption key generation authentication authorization and or the like.

In an embodiment security module includes control circuitry to communicate with the host where based on such communication control circuitry is to signal other circuit logic of security module to implement cryptographic functionality. Control circuitry may communicate with the host via interface e.g. where such control communications are also via a bus coupling control circuitry to interface . Alternatively control circuitry may communicate via a dedicated control interface not shown where interface includes a data input and or a data output which is distinct from such a control interface.

In an embodiment security module includes a cryptographic engine to perform a cryptographic operation under the control of control circuitry where the cryptographic operation is associated with the exchange of data via interface . For example the cryptographic operation may be to process data received by security module and or to generate data to be sent from security module . Cryptographic engine may be coupled to one or both of control circuitry and interface via bus where cryptographic engine outputs a result of the cryptographic operation to bus . Alternatively cryptographic engine may be coupled one of control circuitry and interface via a different bus or other signaling media.

Security module may include PUF circuitry which is to provide a value referred to herein as a PUF value which is generated based on physically unclonable characteristics unique to that particular PUF circuitry . The cryptographic operation may be performed by cryptographic engine based on the PUF value from PUF circuitry . By way of illustration and not limitation the PUF value may serve as a symmetric key as an input for generating such a symmetric key as an input for generating an asymmetric key value pair and or the like.

The PUF circuitry may provide the PUF value to cryptographic engine using a signal line of security module which is distinct from bus . For example communication of the PUF value between PUF circuitry and cryptographic engine may be independent of i.e. exclude any communication of the PUF value via bus . In an embodiment any exchange of the PUF value by either of the cryptographic engine and the PUF circuitry is for communication of the PUF value which is independent of e.g. exclusive of bus . Access to the PUF value may be exclusive of bus and in an embodiment exclusive of one or more elements of security module which are indirectly coupled to PUF circuitry via bus and signal line . By way of illustration and not limitation PUF circuitry may only be coupled to bus via other circuitry e.g. including cryptographic engine which is unable to communicate the PUF value to bus . Alternatively or in addition the structure of PUF circuitry may itself prevent PUF circuitry from outputting at least that particular PUF value to bus .

Security module may operate as a component in a computer or other electronic device platform to provide cryptographic functionality for a host of the platform. Logic such as that of interface may include for example one or more of a data input interface I F for security module to receive data from another component of the platform an input first in first out FIFO buffer to buffer received data a data output I F for security module to send data to another component of the platform and an output FIFO to buffer data which is to be sent from security module . Security module may include any of a variety of additional or alternative data I O logic according to different embodiments.

Control logic such as that of control circuitry may include control registers to store information for controlling the exchange of data with security module and in an embodiment for controlling one or more cryptographic operations associated with the exchange of data. In an embodiment the host accesses control registers via a hardware control interface e.g. where the host variously sends via control interface messages of an application programming interface to read to and or write from control registers . In another embodiment control and data exchanges between security module and other components of the platform may be via the same interface hardware of security module . Any of a variety of conventional memory mapping techniques may be adapted for example to provide addresses for the host to variously perform reads from or writes to control registers .

Security module may further comprise a state machine or other control logic e.g. represented by an illustrative microcontroller to implement data exchanges based on information in control registers . For example information in control registers from the host may cause the microcontroller to signal cryptography circuitry to perform one or more cryptographic operations associated with a data exchange. In an embodiment some or all such cryptography circuitry is coupled to one or both of the control circuitry and the interface circuitry via a bus e.g. where various cryptographic engines and or other security engines are interconnected via bus .

By way of illustration and not limitation the cryptographic circuitry may include one or more of an AES engine a 3DES engine and a RSA engine to variously perform encryption decryption and or other security operations according to respectively an Advanced Encryption Standard AES algorithm a Triple Data Encryption algorithm and a Rivest Shamir Adleman RSA algorithm. Security module may further include other logic for securing data including for example a SHA 1 engine to perform a secure hash operation according to the SHA 1 secure hash algorithm standard a random number generator and or the like. The particular number and variety of cryptographic and other engines shown coupled to bus is merely illustrative of one embodiment and may each vary according to implementation specific details.

In an embodiment security module includes PUF circuitry coupled to at least one cryptographic engine via a signal line which is distinct from bus . By way of illustration and not limitation security module may include one or both of PUF circuit coupled to AES engine via signal line and PUF signal line coupled to RSA engine via signal line . PUF circuits may variously exchange PUF values via signal lines respectively e.g. where the architecture of security module prevents access to at least one such PUF value via bus .

In certain embodiments at least some PUF circuitry is coupled to a bus via a cryptographic engine and a signal line for exchanging a PUF value and further coupled to the bus independent of that cryptographic engine and of the signal line e.g. where the PUF circuitry is also directly coupled to the bus. For example one or both of PUF circuits may be further coupled directly to bus . In such an embodiment some or all such PUF circuitry may be variously switched multiplexed or otherwise configured to transition between different modes e.g. including one mode for a PUF circuit to provide a first PUF value which is to be inaccessible to and via bus and another mode for that PUF circuit to provide another PUF value to bus . Accordingly certain embodiments provide for PUF values and for example cryptographic keys key value pairs random numbers etc. based on such PUF values to be variously made selectively available to the host secret from the host but available to logic of the security module or secret from both the host and a subset of such logic of the security module.

Accordingly PUF circuitry of security module may output one or more other PUF values to bus independent of either or both of signal lines . By way of illustration and not limitation PUF circuit may provide via signal line a PUF value which for example is to serve as a private symmetric key for a cryptographic operation by AES engine . In this example private refers to the PUF value being hidden from bus and at least some logic coupled thereto. Furthermore PUF circuit may provide via signal line another PUF value which is to serve for example as a private asymmetric key for a cryptographic operation by RSA engine or as a seed for generating such a key. In an embodiment PUF circuit includes logic not shown to receive an initial PUF value generated by other logic of PUF circuit and to generate e.g. based in part on conventional techniques an asymmetric key value pair based on that initial PUF value. The keys of such an asymmetric key value pair may themselves each be considered PUF values insofar as their values are based on PUF characteristics of PUF circuit . Alternatively or in addition PUF circuit may further output to bus still another PUF value to serve for example as a comparatively less private in this example accessible to bus and at least some logic coupled thereto asymmetric key or as a seed for generating such an asymmetric key. Alternatively or in addition may further output to bus still another PUF value to serve for example as a comparatively less private symmetric key. A PUF value output directly to bus may be made accessible to any of multiple cryptographic engines and or other logic of security module .

Method may include at performing an exchange of data with the host via an interface of the security module. The exchange may include for example a receipt of the data by the security module from the host and or a communication of the data from the security module to the host. In an embodiment method further includes at generating a first value with PUF circuitry of the security module. Generation of the first value at may include the PUF circuitry performing what is referred to herein as a deterministic generation of the first value e.g. as distinguished from non deterministic generation of a value. As used herein with respect to the generation of a PUF value by PUF circuitry deterministic refers to the ability of one specific hardware implementation of PUF circuitry to consistently generate the same PUF value repeatedly over time e.g. in a variety of instances and or environmental conditions. For example the PUF circuitry may be able to provide such a PUF value for brevity referred to herein as a deterministic PUF value across system reboots wake ups or power state cycles of the platform and or under different temperature voltage or other conditions of the platform. The deterministic PUF value may be provided as a secret key which due to the PUF characteristics of the PUF circuitry is particular to that specific hardware implementation of the security module.

In another embodiment the generation of the first value at may include the PUF circuitry performing a non deterministic generation of the first value. For example a specific hardware implementation of the PUF circuitry may include a circuit of a type which varies in operation not only across different hardware implementations of that same PUF circuitry but across different instances of such operation by that specific hardware implementation of the PUF circuitry. A non deterministic PUF circuit may be highly variable with system voltage temperature and or other environmental conditions for example. In an embodiment such non deterministic generation of a PUF value may be adapted to perform random number generation. By way of illustration and not limitation non deterministic PUF circuitry may include a first circuit to generate a seed value and a second circuit to receive the seed value and to generate e.g. non deterministically a random number based on the seed value. In such an embodiment one or both of the first circuit and the second circuit is a PUF circuit.

Method may further comprise at exchanging the first value from the PUF circuitry to a first cryptographic engine of the security module with a signal line. In response to signaling by control circuitry of the security module method may include at performing with the first cryptographic engine a cryptographic operation associated with the exchange of data at where the cryptographic operation is based on the first value. By way of illustration and not limitation the cryptographic operation may include the first cryptographic engine performing one or more of an encryption of at least part of the data a decryption to generate at least part of the data an authentication of the data the generating of authentication information e.g. signing for future authentication of the data and or the like.

In an embodiment the first value serves as a symmetric key for the cryptographic operation e.g. wherein the cryptographic operation includes a calculation according to an AES algorithm. Alternatively or in addition the cryptographic operation may include the first cryptographic engine generating an asymmetric key value pair based on the first value. For example the cryptographic operation may include a calculation according to a RSA algorithm. Any of a variety of otherwise conventional cryptographic operations may be adapted to be variously performed based on a PUF value which is a secret kept from the host and in certain embodiments from at least some control interface or other circuitry within the security module itself.

Method may further comprise at outputting a result of the cryptographic operation from the first cryptographic engine to a bus of the security module. The bus may be coupling the first cryptographic engine to the control circuitry or the interface or both wherein any exchange of the first value by the first cryptographic engine and any exchange of the first value by the PUF circuitry is for communication of the first value independent of e.g. excludes the bus. For example in an embodiment any exchange of the first value by either of the first cryptographic engine and the PUF circuitry is exclusive of the first value being exchanged via the bus. The limited access to a PUF value within the security module may be due for example to one or more of an absence of any direct connection of a PUF circuit to the bus an absence in the PUF circuit and or in a cryptographic engine of any output which will provide that particular PUF value to the bus the absence of any instruction in an API to cause the PUF value to be output to the bus etc.

With limited access to a PUF value which is a basis for its own cryptography functionality a security module may be adapted according to different embodiments to perform otherwise conventional data encryption data decryption authentication and or other security operations. Additionally or alternatively such a security module may be adapted to provide any of various novel security operations including for example certain new types of software authentication protection.

Various existing methods for securing operating systems e.g. in mobile applications use what is referred to as a trusted execution environment TEE such as that as specified by the GlobalPlatforms group. As used herein trusted execution environment or TEE refers to software which is isolated in one or more respects from security risks to which other executing software is exposed. Such environments operate outside the general purpose or rich operating system for example and are provided a security barrier for certain resources of the platform. Platform hardware may provide a mechanism for switching between the TEE and a general purpose execution environment commonly referred to as a Rich OS Execution Environment REE . A platform hardware architecture may support partitioning of access based upon these two execution environments provide security for data and instructions stored in RAM or other data storage specify which execution environments may access which peripherals and or provide any of various other access control mechanisms. Traditionally a software Application Programmer Interface API is utilized in order for software developers to avail of such platform hardware. Examples of such APIs include the TrustZone API specification of ARM and the TEE Client API released by GlobalPlatform in July 2010.

One of the more broadly accepted conventional techniques for safeguarding a TEE is to use a secure boot process to validate a bootloader prior to execution. Traditionally a secure boot starts by executing from a secure ROM of the platform. Software executing from such a secure ROM may measure and validate a next stage bootloader e.g. prior to transferring execution. This process may continue repeatedly until a kernel is loaded creating a chain of trust from the secure ROM to the kernel. In an embodiment a security module may be adapted to provide cryptography functionality to support the authentication of software which provides or is included in a trusted execution environment of a platform.

Alternatively or in addition trusted resources may include some or all of one or more trusted cores of a processor trusted RAM trusted IO logic and a security module such as security module . Software may further comprise a TEE which executes with trusted resources . Such a TEE may include for example a source kernel which executes with the one or more trusted cores and with trusted RAM . Source kernel may in turn facilitate execution of one or more trusted applications e.g. represented by the illustrative security application which in turn may access cryptography functionality of security module . By way of illustration and not limitation one or both of source kernel and security application may access security module to protect data which is exchanged via trusted IO between trusted hardware resources and public hardware resources . A monitor process may provide for exchanges between TEE processes and REE processes. The trusted hardware resources and TEE software of system is merely illustrative of one embodiment any may vary according to implementation specific details.

Certain embodiments variously avail of PUF circuitry to generate a unique per device secret key that may be used to provide authentication security for TEE and or other code which for example resides in non volatile storage of the platform. The PUF circuitry may tie in directly to a cryptographic engine of a security module e.g. in the same SoC and may be directly accessible by only some logic of the security engine e.g. including the cryptographic engine . Code executing from the secure ROM may then send a command to the security module for the cryptographic engine to decrypt and load a next stage bootloader for example.

In an embodiment security module uses a unique per device PUF value to encrypt some or all TEE code as it resides on disk e.g. including the code for source kernel and or for security application or alternatively to encrypt a key that is used to encrypt such TEE code. In such an embodiment PUF circuitry of security module may be expected to deterministically generate a consistent repeatable value for the device secret key. Multiple secret keys may be generated if needed allowing for redundant copies in the event that one multiple PUF circuits fails.

To support encryption and protection of TEE code certain embodiments may store a TEE code header e.g. at the beginning of a disk drive similar to the Master Boot Record MBR used on many desktop systems. This header may contain information describing the TEE code. An example of such a header is shown in List 1.

During system boot up information from the TEE header may be provided to security module e.g. by an initial boot loader process executing with the one or more trusted cores and trusted RAM . The security module may receive the TEE code and decrypt the TEE code and or evaluate a SHA or other hash for the TEE code to verify whether the TEE was maliciously altered. Such decryption and or hash evaluation may be based on a PUF value which for example is unique to PUF circuitry not shown of security module and which is a secret value only directly available to some e.g. only a subset of logic within security module . Once the TEE code has been located decrypted and verified execution may be passed to the TEE code and the boot process may continue.

The above described embodiment may not prevent the alteration of TEE code. Rather such an embodiment may intentionally allow the TEE code to be updated for example. The platform may receive a new version of TEE code from a source which has been authenticated and authorized e.g. according to conventional techniques. Security module may subsequently receive the new TEE code from the one or more trusted codes for example encrypt the TEE code and calculate a hash value for the encrypted TEE code. In an embodiment such encryption and hash operations may be based on a device specific secret PUF value of security module as discussed herein.

The new TEE code in its encrypted form may then be written to disk and the new hash stored at the proper location in the TEE header. The ability to perform a TEE update may be controlled via TEE code and or boot code in a secure ROM where such code includes functionality for verifying the authenticity of a received TEE update. The architecture illustrated in security module for example allows such a TEE code update to occur while prohibiting an attacker from removing a non volatile storage which stores the TEE code and booting in a non secure fashion or from modifying the TEE code and overwriting the TEE code hash.

Arbiter PUF accepts an n bit input SEL and produces as output a single bit. This generates a challenge response pair wherein the challenge is the input or sequence of inputs and the response is the output or sequence of outputs. As such this PUF has an intrinsic challenge response capability. The PUF output is the response to a particular challenge. To achieve a k bit response one may provide k different inputs to a single arbiter PUF evaluate k instantiations of arbiter PUF or some combination thereof.

The exemplary computer system may include a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT to implement a display. The computer system may also include an alphanumeric input device e.g. a keyboard a user interface UI navigation device e.g. a mouse a disk drive unit and or a network interface device .

The disk drive unit may include a machine readable storage medium on which is stored one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable storage media. The software may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. HTTP . In an embodiment execution of software is to access cryptography functionality of a security module according to an embodiment e.g. where security module is to exchange data with processor for providing such cryptography functionality.

While the machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable storage medium should be taken to include a single storage medium or multiple storage media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable storage medium shall also be taken to include any medium that is capable of storing a group of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention or that is capable of storing data structures utilized by or associated with such a group of instructions. The term machine readable storage medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic storage media etc.

The processes explained above are described in terms of computer software and hardware. The techniques described may constitute machine executable instructions embodied within a machine e.g. computer readable storage medium that when executed by a machine will cause the machine to perform the operations described. Additionally the processes may be embodied within hardware such as an application specific integrated circuit ASIC or the like.

A computer readable storage medium includes any mechanism that provides e.g. stores information in a form accessible by a machine e.g. a computer network device personal digital assistant manufacturing tool any device with a set of one or more processors etc. . For example a computer readable storage medium includes recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. .

The above description of illustrated embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various modifications are possible within the scope of the invention as those skilled in the relevant art will recognize.

These modifications can be made to the invention in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification. Rather the scope of the invention is to be determined entirely by the following claims which are to be construed in accordance with established doctrines of claim interpretation.

