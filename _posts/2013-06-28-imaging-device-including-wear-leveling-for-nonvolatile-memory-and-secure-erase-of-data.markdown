---

title: Imaging device including wear leveling for non-volatile memory and secure erase of data
abstract: Methods and apparatus teach wear leveling non-volatile memory and secure erasure of data. A computing device receives data to be stored. The data is encrypted, including generation of encryption/decryption key(s). The key(s) are stored in either non-volatile or volatile memory according to a plurality of classification schemes. In a first scheme, key(s) are stored in non-volatile memory and will be retained in the event of a power cycle of the computing device. Otherwise, key(s) stored in volatile memory will be lost upon a power cycle. Upon issuance of a key destruction command, key(s) in the non-volatile memory are sanitized or erased, but the underlying encrypted data need not be erased since no key(s) exist that can recover original content. These techniques limit erasure commands to the non-volatile memory which prolongs its service life. Further embodiments note techniques in imaging devices conducting imaging operations, such as printing or scanning.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08964237&OS=08964237&RS=08964237
owner: Lexmark International, Inc.
number: 08964237
owner_city: Lexington
owner_country: US
publication_date: 20130628
---
The present invention relates to computing memory and security of stored data. Schemes for wear leveling non volatile memory and securely erasing data typify the embodiments.

Electromechanical memory devices such as hard disk drives HDD are increasingly yielding to solid state drives SSD and other memory devices in computing environments requiring faster speed quieter noise lower power compact size and cheaper prices. Under various U.S. Federal and State government regulatory schemes however there exist a number of laws rules specifications procedures etc. that dictate standards for the secure destruction of data from memory regardless of type. See e.g. 800 88. Not only must data be erased it must be erased in a manner that masks previous storage states to prevent a hacker s later reconstruction of content. The procedures often call for significant numbers of erasures overwriting to memory locations over the life of devices containing data. While electromechanical memory devices tend to durably withstand these commands over time SSD E EPROM and other flash memory devices do not fare as well. Artisans have noted significant degradation and failure in the latter after a few thousand erasure cycles. The problems range from leaky memory cells to failed bits to failed sectors or blocks.

Artisans have attempted to overcome these problems and prolong service lives of memory with various techniques that level out premature wear known as wear leveling . Some of the techniques track erasure and re write commands in devices in an attempt to disseminate commands evenly amongst all memory sectors or blocks to level out their wear. In other techniques artisans reserve memory space that becomes used only upon the failure of non reserve memory spaces. Checksums are often used to note the failures of blocks or sectors. Upon the failure of just a few sectors the entire memory device often fails. Unfortunately each of these requires sophisticated mapping and tracking of memory that complicates implementation.

What is needed is a simple yet elegant solution to gain the inherent advantages of SSD flash E EPROM etc. The need extends to affording the highest levels of secure destruction according to state and federal mandates but without premature wear. Additional benefits and alternatives are also sought when devising solutions.

The above mentioned and other problems are solved by methods and apparatus that wear level non volatile memory and securely erase data. A computing device receives data to be stored. The data is encrypted including generation of encryption decryption key s . The key s are stored in either non volatile or volatile memory according to a plurality of classification schemes. In the event of a power cycle keys in volatile memory are lost while those in non volatile memory are retained. Upon issuance of a key destruction command the key s in non volatile memory are sanitized or erased but the underlying encrypted data need not be erased since there is no longer any key to reconstruct the content of the data. The technique limits erasure commands to the non volatile memory thereby prolonging its service life.

Further embodiments note techniques in imaging devices for data in imaging jobs. A controller classifies the data as needing to persist or not over a power cycle of the imaging device. Jobs requiring persistence have key s stored in non volatile memory such as embedded Multi Media Card eMMC storage devices otherwise the key s are stored in volatile memory such as dynamic Random Access Memory DRAM . Schemes to place files of encrypted data in memory correspond to files extensions from applications sending imaging jobs to the controller. The designations of temporary permanent or job file extensions at the application programming interface API indicate requirements of data to persist or not beyond the power cycle of the imaging device. Two or more top level directory schemes have the data stored in files folders according to their persistence or not. Upon a destruction command regarding the key s files stored under the temporary file extension have their keys sanitized by promptly writing zeros to memory locations of the key s . As back up sanitization occurs upon a boot up sequence after a power cycle of a computing device. Otherwise the key s for permanent files or job files are promptly destroyed upon issuance of an appropriate sanitize command according to a type of storage medium housing the key s including contemplation of erasure commands set forth by manufacturers of the storage medium. Files and folders may be also removed.

These and other embodiments are set forth in the description below. Their advantages and features will become readily apparent to skilled artisans. The claims set forth particular limitations.

In the following detailed description reference is made to the accompanying drawings where like numerals represent like details. The embodiments are described in sufficient detail to enable those skilled in the art to practice the invention. It is to be understood that other embodiments may be utilized and that changes may be made without departing from the scope of the invention. The following detailed description therefore is not to be taken in a limiting sense and the scope of the invention is defined only by the appended claims and their equivalents. In accordance with the features of the invention methods and apparatus teach wear leveling of non volatile memories and secure erasure of data.

With reference to a computing environment includes a controller in a computing device. The computing device has access to both non volatile and volatile memory . The memory is either internal or external to the computing device having the controller. The memories are also singular memory devices or collections of memory that combine together to represent an entirety of the non volatile or volatile memory made available to the controller during use. The types of memory are any of a variety but the following are anticipated 1 volatile e.g. random access memory RAM dynamic RAM DRAM synchronous RAM SRAM etc. and 2 non volatile e.g. read only memory ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM non volatile RAM NVRAM flash memory solid state drives SSD embedded Multi Media Card eMMC etc. or mechanical devices such as magnetic tapes HDDs optical drives etc.

The controller receives data during the course of operation. The data is any of a variety and the controller receives it externally or internally. Forms of data typify streams of bits bytes that the controller uses to cause an action. In an imaging device for example the data received by the controller is an imaging job. It comes from users interacting on computing devices such as smart phones laptops desktops tablets etc. As users display and engage items on their computing devices such as documents images web pages screen shots messages files photos etc. they request imaging of the devices such as printing scanning copying faxing etc. Users make the requests by sending the imaging job direct to a connected imaging device or indirect by way of a print server and attendant computing network . The imaging job includes description for controllers in the various devices to speak to one another in a same page description language such as Printer Command Language PCL or Postscript and skilled artisans are familiar with their content. In any language the server forwards the imaging job to a specific imaging device so users can claim a hard copy output at any of a variety of imaging devices printers copiers fax machines all in ones multi function printers MFPs etc. of their choosing. The network includes or not a variety of software to send and receive packets of information between computing devices and physical hardware to move the packets such as routers servers switches desktop laptop computers phone transmission towers relay towers satellites fiber optics phone lines cables etc. The connections are wired and wireless between a few or many such devices in an internet intranet or other environment.

Upon receipt of the data the controller classifies it at 40 according to a predetermined identification scheme. Representative schemes will be given below. It then encrypts the data at including the generation of one or more encryption decryption keys . The controller then directs storage of the keys according to their classification scheme. In one instance key is stored in non volatile memory per a first classification scheme of the data while key is stored in volatile memory per a second classification scheme of the data. Meanwhile the encrypted data is stored in a memory location of choice in this instance it resides in the same non volatile memory as key . It fills blocks or sectors of memory according to well known techniques.

With more specificity controllers of imaging devices receive their data in the form of an imaging job . Relevant files and folders are created for storing the data. Relevant encryption decryption key s are also generated at including accessing sources of entropy as is known and assembling a hierarchy of keys corresponding to the hierarchy of the data as it gets assigned to appropriate folders. The key s are used to encrypt the underlying data of the imaging job including encrypting metadata as is necessary . The keys are any of a variety and techniques for their generation are known to artisans as well as their actual encryption decryption of the underlying data . The data and metadata are stored in memory at including storage in volatile or non volatile memory of the system s choice. The key s are also stored in either the volatile or non volatile memory according to commands of the controller of the imaging device .

With reference to if the imaging job data files folders etc. requires persistence over a power cycle of the imaging device the data is so classified . On the other hand if the imaging job does not require persistence over the power cycle the data is classified alternatively. In such a situation the encryption keys are either stored in volatile or non volatile memory as the case may be. In this way imaging jobs requiring persistence over the power cycle of the imaging device are stored in a non volatile memory to avoid being lost during times of power outage or cycling. Otherwise those imaging jobs not needing such persistence are stored in volatile memory and can be lost or left un recovered during a power cycle. Ultimately those imaging jobs having data that is deemed important for one reason or another is made to persist over time. Its key is also made to persist by being stored in a location that allows recovery in the event a power cycle occurs.

With reference to a trigger event eventually occurs that renders obsolete or out of scope the data of the imaging job. Events such as paper exiting a paper tray of an imaging device during printing a user canceling an imaging job a server releasing data of an imaging job etc. are typical of these types of triggers. In turn any and all key s associated with the data are also rendered out of scope and their identities are required to be made known to the controller for eventual erasure as well as the controller learning their precise location in storage . Then upon the call for the secure erasure of data the controller commands the now identified located key s to become sanitized . In the process occurs differently for key s stored in volatile or non volatile memory. At decision an inquiry is made as to the location of the stored key s . If they are stored in non volatile memory the controller issues a sanitize command that is appropriate for the type of storage medium in which the relevant key s are located . The command is also often a function of the preferred guidelines or instructions for erasure issued by a manufacturer of the storage medium. In an EEPROM for example an appropriate sanitize command is typically the writing of zeros to appropriate memory locations that represent the location of the key s . In an eMMC device on the other hand an appropriate command is more complex and may include the issuance of a Secure Trim command sequence or the Trim command sequence followed by a Sanitize Start command. The options here relate to two different command sequences that can be used to sanitize a range of write blocks for eMMC the original Secure Trim sequence was replaced in a later version of the eMMC specification by a newer Sanitize Start command which sanitizes any blocks that had previously had a normal Erase or Trim command applied to them. Devices are only required to support one or the other of these command sequences but many of them actually implement both sets of commands. In any type of non volatile memory erasure sanitizes the key s and the underlying data having been encrypted by the key s is unable to be later reconstructed by hackers or other third parties. A secure wipe of the data can be said to have occurred that meets the secure erasure standards of NIST for example. However since the underlying encrypted data need not be erased or sanitized per se unnecessary erase re write etc. commands to the non volatile memory do not occur and premature wear of the non volatile memory is avoided. The wear of the memory can be described as having been leveled out. 

On the other hand at decision if the key is stored in volatile memory the controller causes sanitizing of the key s by promptly writing zeros to the memory locations storing the key s . Appreciating that a power cycle may have occurred in the imaging device an alternate back up plan for sanitizing the key s includes the controller ridding the relevant key s upon a next power cycle of the imaging device . During boot up of the imaging device after a power failure for example the controller causes erasure of the key s such as by writing zeros to relevant memory locations. Again the underlying data need not be sanitized as it is encrypted and stored but unable to be re constructed without its keys. With reference to the relevant memory acknowledges back to the controller that sanitization has occurred upon the destruction of the key .

In an imaging device a representative way to know whether files need to be stored in volatile or non volatile memory is a by product of an Application Programming Interface API whereby applications creating the imaging job append file extensions to the data of the imaging jobs. With reference to job buffering postscript print service etc. are examples of applications that assign file extensions to data. A custom library at provides the API to the applications making this possible. The extensions are any of a variety but those named permanent perm files temporary temp files and job files are used in an imaging device to denote a plurality of classification schemes. The file extensions are configured to cause the controller to store the encrypted data of the imaging job in one of two directory schemes in memory according to whether the imaging job needs to persist or not over the power cycle of the imaging device.

The permanent files are files of the imaging job that the imaging device needs to preserve over a power cycle of the imaging device. The files are created and stored individually. These files have one key per file and each key is stored on a non volatile memory device available to the controller. It is preferred to be stored in the SSD or another non volatile memory . Each time a file is created a corresponding key is stored and each time a file is erased a key is securely destroyed. Temporary files are also individual files but they need not be preserved across a power cycle. These Temporary files are written to the SSD device and each of these files has one key per file. However since temporary files do not need to be preserved across power cycle the keys are stored in DRAM rather than the SSD device storing the encrypted data. The Job files are still other files that the imaging device needs for processing imaging jobs in general and need to be available to the controller over power cycles of the imaging device. They are a collection of files that are all related to a single job. These files are all related and they can all be securely erased together. Hence one cryptographic key is created to encrypt all job files related to a particular job. When the job is finished printing or scanning for example and all of the files have been erased the cryptographic key is finally destroyed to render inaccessible the underlying user data of the imaging job. Encrypted data is stored at in an eMMC or NAND SSD device. A Linux file system or other may be used to interface between the custom library and the SSD to provide file organization for example. 

Relative advantages of the many embodiments should now be apparent to those skilled in the art. They include but are not limited to 1 meeting secure erase standards of NIST and other regulatory agencies by destroying encryption decryption keys thereby preventing reconstruction of encrypted data 2 minimizing erasure commands to non volatile memory thereby prolonging service life and ameliorating memory wear as only key s require sanitizing but not underlying stored data 3 quickly protecting data of users as secure erasure only involves destruction of key s and not an entire destruction of the contents of data in files which are relatively enormous compared to the size of the key s 4 advancing the state of software beyond cryptographic erase algorithms that regularly erase data in memory but otherwise cannot be effectively utilized with SSD devices where excessive erasing burns out memory blocks and eventually entire devices and 5 implementing secure erasure on various memory devices including HDDs and other electromechanical devices.

The foregoing illustrates various aspects of the invention. It is not intended to be exhaustive. Rather it is chosen to provide the best illustration of the principles of the invention and its practical application to enable one of ordinary skill in the art to utilize the invention. All modifications and variations are contemplated within the scope of the invention as determined by the appended claims. Relatively apparent modifications include combining one or more features of various embodiments with features of other embodiments.

